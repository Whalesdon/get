(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [888], {
        95851: function(e, r, n) {
            "use strict";
            n.d(r, {
                i: function() {
                    return i
                }
            });
            let i = "abi/5.7.0"
        },
        84243: function(e, r, n) {
            "use strict";
            n.d(r, {
                R: function() {
                    return R
                },
                $: function() {
                    return B
                }
            });
            var i = n(16441),
                o = n(6881),
                a = n(1581),
                s = n(95851),
                l = n(61184),
                u = n(19485);
            class c extends l.XI {
                constructor(e) {
                    super("address", "address", e, !1)
                }
                defaultValue() {
                    return "0x0000000000000000000000000000000000000000"
                }
                encode(e, r) {
                    try {
                        r = (0, u.getAddress)(r)
                    } catch (n) {
                        this._throwError(n.message, r)
                    }
                    return e.writeValue(r)
                }
                decode(e) {
                    return (0, u.getAddress)((0, i.hexZeroPad)(e.readValue().toHexString(), 20))
                }
            }
            class d extends l.XI {
                constructor(e) {
                    super(e.name, e.type, void 0, e.dynamic), this.coder = e
                }
                defaultValue() {
                    return this.coder.defaultValue()
                }
                encode(e, r) {
                    return this.coder.encode(e, r)
                }
                decode(e) {
                    return this.coder.decode(e)
                }
            }
            let h = new a.Logger(s.i);

            function f(e, r, n) {
                let i = null;
                if (Array.isArray(n)) i = n;
                else if (n && "object" == typeof n) {
                    let o = {};
                    i = r.map(e => {
                        let r = e.localName;
                        return r || h.throwError("cannot encode object for signature with missing names", a.Logger.errors.INVALID_ARGUMENT, {
                            argument: "values",
                            coder: e,
                            value: n
                        }), o[r] && h.throwError("cannot encode object for signature with duplicate names", a.Logger.errors.INVALID_ARGUMENT, {
                            argument: "values",
                            coder: e,
                            value: n
                        }), o[r] = !0, n[r]
                    })
                } else h.throwArgumentError("invalid tuple value", "tuple", n);
                r.length !== i.length && h.throwArgumentError("types/value length mismatch", "tuple", n);
                let s = new l.QV(e.wordSize),
                    u = new l.QV(e.wordSize),
                    c = [];
                return r.forEach((e, r) => {
                    let n = i[r];
                    if (e.dynamic) {
                        let o = u.length;
                        e.encode(u, n);
                        let a = s.writeUpdatableValue();
                        c.push(e => {
                            a(e + o)
                        })
                    } else e.encode(s, n)
                }), c.forEach(e => {
                    e(s.length)
                }), e.appendWriter(s) + e.appendWriter(u)
            }

            function p(e, r) {
                let n = [],
                    i = e.subReader(0);
                r.forEach(r => {
                    let o = null;
                    if (r.dynamic) {
                        let s = e.readValue(),
                            l = i.subReader(s.toNumber());
                        try {
                            o = r.decode(l)
                        } catch (u) {
                            if (u.code === a.Logger.errors.BUFFER_OVERRUN) throw u;
                            (o = u).baseType = r.name, o.name = r.localName, o.type = r.type
                        }
                    } else try {
                        o = r.decode(e)
                    } catch (c) {
                        if (c.code === a.Logger.errors.BUFFER_OVERRUN) throw c;
                        (o = c).baseType = r.name, o.name = r.localName, o.type = r.type
                    }
                    void 0 != o && n.push(o)
                });
                let o = r.reduce((e, r) => {
                    let n = r.localName;
                    return n && (e[n] || (e[n] = 0), e[n]++), e
                }, {});
                r.forEach((e, r) => {
                    let i = e.localName;
                    if (!i || 1 !== o[i] || ("length" === i && (i = "_length"), null != n[i])) return;
                    let a = n[r];
                    a instanceof Error ? Object.defineProperty(n, i, {
                        enumerable: !0,
                        get: () => {
                            throw a
                        }
                    }) : n[i] = a
                });
                for (let s = 0; s < n.length; s++) {
                    let l = n[s];
                    l instanceof Error && Object.defineProperty(n, s, {
                        enumerable: !0,
                        get: () => {
                            throw l
                        }
                    })
                }
                return Object.freeze(n)
            }
            class m extends l.XI {
                constructor(e, r, n) {
                    let i = e.type + "[" + (r >= 0 ? r : "") + "]",
                        o = -1 === r || e.dynamic;
                    super("array", i, n, o), this.coder = e, this.length = r
                }
                defaultValue() {
                    let e = this.coder.defaultValue(),
                        r = [];
                    for (let n = 0; n < this.length; n++) r.push(e);
                    return r
                }
                encode(e, r) {
                    Array.isArray(r) || this._throwError("expected array value", r);
                    let n = this.length; - 1 === n && (n = r.length, e.writeValue(r.length)), h.checkArgumentCount(r.length, n, "coder array" + (this.localName ? " " + this.localName : ""));
                    let i = [];
                    for (let o = 0; o < r.length; o++) i.push(this.coder);
                    return f(e, i, r)
                }
                decode(e) {
                    let r = this.length; - 1 === r && 32 * (r = e.readValue().toNumber()) > e._data.length && h.throwError("insufficient data length", a.Logger.errors.BUFFER_OVERRUN, {
                        length: e._data.length,
                        count: r
                    });
                    let n = [];
                    for (let i = 0; i < r; i++) n.push(new d(this.coder));
                    return e.coerce(this.name, p(e, n))
                }
            }
            class g extends l.XI {
                constructor(e) {
                    super("bool", "bool", e, !1)
                }
                defaultValue() {
                    return !1
                }
                encode(e, r) {
                    return e.writeValue(r ? 1 : 0)
                }
                decode(e) {
                    return e.coerce(this.type, !e.readValue().isZero())
                }
            }
            class v extends l.XI {
                constructor(e, r) {
                    super(e, e, r, !0)
                }
                defaultValue() {
                    return "0x"
                }
                encode(e, r) {
                    return r = (0, i.arrayify)(r), e.writeValue(r.length) + e.writeBytes(r)
                }
                decode(e) {
                    return e.readBytes(e.readValue().toNumber(), !0)
                }
            }
            class y extends v {
                constructor(e) {
                    super("bytes", e)
                }
                decode(e) {
                    return e.coerce(this.name, (0, i.hexlify)(super.decode(e)))
                }
            }
            class b extends l.XI {
                constructor(e, r) {
                    let n = "bytes" + String(e);
                    super(n, n, r, !1), this.size = e
                }
                defaultValue() {
                    return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size)
                }
                encode(e, r) {
                    let n = (0, i.arrayify)(r);
                    return n.length !== this.size && this._throwError("incorrect data length", r), e.writeBytes(n)
                }
                decode(e) {
                    return e.coerce(this.name, (0, i.hexlify)(e.readBytes(this.size)))
                }
            }
            class w extends l.XI {
                constructor(e) {
                    super("null", "", e, !1)
                }
                defaultValue() {
                    return null
                }
                encode(e, r) {
                    return null != r && this._throwError("not null", r), e.writeBytes([])
                }
                decode(e) {
                    return e.readBytes(0), e.coerce(this.name, null)
                }
            }
            var x = n(2593),
                E = n(21046);
            class C extends l.XI {
                constructor(e, r, n) {
                    let i = (r ? "int" : "uint") + 8 * e;
                    super(i, i, n, !1), this.size = e, this.signed = r
                }
                defaultValue() {
                    return 0
                }
                encode(e, r) {
                    let n = x.O$.from(r),
                        i = E.Bz.mask(8 * e.wordSize);
                    if (this.signed) {
                        let o = i.mask(8 * this.size - 1);
                        (n.gt(o) || n.lt(o.add(E.fh).mul(E.tL))) && this._throwError("value out-of-bounds", r)
                    } else(n.lt(E._Y) || n.gt(i.mask(8 * this.size))) && this._throwError("value out-of-bounds", r);
                    return n = n.toTwos(8 * this.size).mask(8 * this.size), this.signed && (n = n.fromTwos(8 * this.size).toTwos(8 * e.wordSize)), e.writeValue(n)
                }
                decode(e) {
                    let r = e.readValue().mask(8 * this.size);
                    return this.signed && (r = r.fromTwos(8 * this.size)), e.coerce(this.name, r)
                }
            }
            var A = n(29251);
            class k extends v {
                constructor(e) {
                    super("string", e)
                }
                defaultValue() {
                    return ""
                }
                encode(e, r) {
                    return super.encode(e, (0, A.Y0)(r))
                }
                decode(e) {
                    return (0, A.ZN)(super.decode(e))
                }
            }
            class S extends l.XI {
                constructor(e, r) {
                    let n = !1,
                        i = [];
                    e.forEach(e => {
                        e.dynamic && (n = !0), i.push(e.type)
                    });
                    let o = "tuple(" + i.join(",") + ")";
                    super("tuple", o, r, n), this.coders = e
                }
                defaultValue() {
                    let e = [];
                    this.coders.forEach(r => {
                        e.push(r.defaultValue())
                    });
                    let r = this.coders.reduce((e, r) => {
                        let n = r.localName;
                        return n && (e[n] || (e[n] = 0), e[n]++), e
                    }, {});
                    return this.coders.forEach((n, i) => {
                        let o = n.localName;
                        o && 1 === r[o] && ("length" === o && (o = "_length"), null == e[o] && (e[o] = e[i]))
                    }), Object.freeze(e)
                }
                encode(e, r) {
                    return f(e, this.coders, r)
                }
                decode(e) {
                    return e.coerce(this.name, p(e, this.coders))
                }
            }
            var _ = n(11388);
            let P = new a.Logger(s.i),
                j = RegExp(/^bytes([0-9]*)$/),
                T = RegExp(/^(u?int)([0-9]*)$/);
            class R {
                constructor(e) {
                    (0, o.defineReadOnly)(this, "coerceFunc", e || null)
                }
                _getCoder(e) {
                    switch (e.baseType) {
                        case "address":
                            return new c(e.name);
                        case "bool":
                            return new g(e.name);
                        case "string":
                            return new k(e.name);
                        case "bytes":
                            return new y(e.name);
                        case "array":
                            return new m(this._getCoder(e.arrayChildren), e.arrayLength, e.name);
                        case "tuple":
                            return new S((e.components || []).map(e => this._getCoder(e)), e.name);
                        case "":
                            return new w(e.name)
                    }
                    let r = e.type.match(T);
                    if (r) {
                        let n = parseInt(r[2] || "256");
                        return (0 === n || n > 256 || n % 8 != 0) && P.throwArgumentError("invalid " + r[1] + " bit length", "param", e), new C(n / 8, "int" === r[1], e.name)
                    }
                    if (r = e.type.match(j)) {
                        let i = parseInt(r[1]);
                        return (0 === i || i > 32) && P.throwArgumentError("invalid bytes length", "param", e), new b(i, e.name)
                    }
                    return P.throwArgumentError("invalid type", "type", e.type)
                }
                _getWordSize() {
                    return 32
                }
                _getReader(e, r) {
                    return new l.Ej(e, this._getWordSize(), this.coerceFunc, r)
                }
                _getWriter() {
                    return new l.QV(this._getWordSize())
                }
                getDefaultValue(e) {
                    let r = e.map(e => this._getCoder(_._R.from(e))),
                        n = new S(r, "_");
                    return n.defaultValue()
                }
                encode(e, r) {
                    e.length !== r.length && P.throwError("types/values length mismatch", a.Logger.errors.INVALID_ARGUMENT, {
                        count: {
                            types: e.length,
                            values: r.length
                        },
                        value: {
                            types: e,
                            values: r
                        }
                    });
                    let n = e.map(e => this._getCoder(_._R.from(e))),
                        i = new S(n, "_"),
                        o = this._getWriter();
                    return i.encode(o, r), o.data
                }
                decode(e, r, n) {
                    let o = e.map(e => this._getCoder(_._R.from(e))),
                        a = new S(o, "_");
                    return a.decode(this._getReader((0, i.arrayify)(r), n))
                }
            }
            let B = new R
        },
        61184: function(e, r, n) {
            "use strict";
            n.d(r, {
                BR: function() {
                    return c
                },
                Ej: function() {
                    return f
                },
                QV: function() {
                    return h
                },
                XI: function() {
                    return d
                }
            });
            var i = n(16441),
                o = n(2593),
                a = n(6881),
                s = n(1581),
                l = n(95851);
            let u = new s.Logger(l.i);

            function c(e) {
                let r = [],
                    n = function(e, i) {
                        if (Array.isArray(i))
                            for (let o in i) {
                                let a = e.slice();
                                a.push(o);
                                try {
                                    n(a, i[o])
                                } catch (s) {
                                    r.push({
                                        path: a,
                                        error: s
                                    })
                                }
                            }
                    };
                return n([], e), r
            }
            class d {
                constructor(e, r, n, i) {
                    this.name = e, this.type = r, this.localName = n, this.dynamic = i
                }
                _throwError(e, r) {
                    u.throwArgumentError(e, this.localName, r)
                }
            }
            class h {
                constructor(e) {
                    (0, a.defineReadOnly)(this, "wordSize", e || 32), this._data = [], this._dataLength = 0, this._padding = new Uint8Array(e)
                }
                get data() {
                    return (0, i.hexConcat)(this._data)
                }
                get length() {
                    return this._dataLength
                }
                _writeData(e) {
                    return this._data.push(e), this._dataLength += e.length, e.length
                }
                appendWriter(e) {
                    return this._writeData((0, i.concat)(e._data))
                }
                writeBytes(e) {
                    let r = (0, i.arrayify)(e),
                        n = r.length % this.wordSize;
                    return n && (r = (0, i.concat)([r, this._padding.slice(n)])), this._writeData(r)
                }
                _getValue(e) {
                    let r = (0, i.arrayify)(o.O$.from(e));
                    return r.length > this.wordSize && u.throwError("value out-of-bounds", s.Logger.errors.BUFFER_OVERRUN, {
                        length: this.wordSize,
                        offset: r.length
                    }), r.length % this.wordSize && (r = (0, i.concat)([this._padding.slice(r.length % this.wordSize), r])), r
                }
                writeValue(e) {
                    return this._writeData(this._getValue(e))
                }
                writeUpdatableValue() {
                    let e = this._data.length;
                    return this._data.push(this._padding), this._dataLength += this.wordSize, r => {
                        this._data[e] = this._getValue(r)
                    }
                }
            }
            class f {
                constructor(e, r, n, o) {
                    (0, a.defineReadOnly)(this, "_data", (0, i.arrayify)(e)), (0, a.defineReadOnly)(this, "wordSize", r || 32), (0, a.defineReadOnly)(this, "_coerceFunc", n), (0, a.defineReadOnly)(this, "allowLoose", o), this._offset = 0
                }
                get data() {
                    return (0, i.hexlify)(this._data)
                }
                get consumed() {
                    return this._offset
                }
                static coerce(e, r) {
                    let n = e.match("^u?int([0-9]+)$");
                    return n && 48 >= parseInt(n[1]) && (r = r.toNumber()), r
                }
                coerce(e, r) {
                    return this._coerceFunc ? this._coerceFunc(e, r) : f.coerce(e, r)
                }
                _peekBytes(e, r, n) {
                    let i = Math.ceil(r / this.wordSize) * this.wordSize;
                    return this._offset + i > this._data.length && (this.allowLoose && n && this._offset + r <= this._data.length ? i = r : u.throwError("data out-of-bounds", s.Logger.errors.BUFFER_OVERRUN, {
                        length: this._data.length,
                        offset: this._offset + i
                    })), this._data.slice(this._offset, this._offset + i)
                }
                subReader(e) {
                    return new f(this._data.slice(this._offset + e), this.wordSize, this._coerceFunc, this.allowLoose)
                }
                readBytes(e, r) {
                    let n = this._peekBytes(0, e, !!r);
                    return this._offset += n.length, n.slice(0, e)
                }
                readValue() {
                    return o.O$.from(this.readBytes(this.wordSize))
                }
            }
        },
        11388: function(e, r, n) {
            "use strict";
            n.d(r, {
                HY: function() {
                    return y
                },
                IC: function() {
                    return S
                },
                QV: function() {
                    return b
                },
                Xg: function() {
                    return C
                },
                YW: function() {
                    return A
                },
                _R: function() {
                    return g
                },
                pc: function() {
                    return p
                }
            });
            var i = n(2593),
                o = n(6881),
                a = n(1581),
                s = n(95851);
            let l = new a.Logger(s.i),
                u = {},
                c = {
                    calldata: !0,
                    memory: !0,
                    storage: !0
                },
                d = {
                    calldata: !0,
                    memory: !0
                };

            function h(e, r) {
                if ("bytes" === e || "string" === e) {
                    if (c[r]) return !0
                } else if ("address" === e) {
                    if ("payable" === r) return !0
                } else if ((e.indexOf("[") >= 0 || "tuple" === e) && d[r]) return !0;
                return (c[r] || "payable" === r) && l.throwArgumentError("invalid modifier", "name", r), !1
            }

            function f(e, r) {
                for (let n in r)(0, o.defineReadOnly)(e, n, r[n])
            }
            let p = Object.freeze({
                    sighash: "sighash",
                    minimal: "minimal",
                    full: "full",
                    json: "json"
                }),
                m = RegExp(/^(.*)\[([0-9]*)\]$/);
            class g {
                constructor(e, r) {
                    e !== u && l.throwError("use fromString", a.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "new ParamType()"
                    }), f(this, r);
                    let n = this.type.match(m);
                    n ? f(this, {
                        arrayLength: parseInt(n[2] || "-1"),
                        arrayChildren: g.fromObject({
                            type: n[1],
                            components: this.components
                        }),
                        baseType: "array"
                    }) : f(this, {
                        arrayLength: null,
                        arrayChildren: null,
                        baseType: null != this.components ? "tuple" : this.type
                    }), this._isParamType = !0, Object.freeze(this)
                }
                format(e) {
                    if (e || (e = p.sighash), p[e] || l.throwArgumentError("invalid format type", "format", e), e === p.json) {
                        let r = {
                            type: "tuple" === this.baseType ? "tuple" : this.type,
                            name: this.name || void 0
                        };
                        return "boolean" == typeof this.indexed && (r.indexed = this.indexed), this.components && (r.components = this.components.map(r => JSON.parse(r.format(e)))), JSON.stringify(r)
                    }
                    let n = "";
                    return "array" === this.baseType ? n += this.arrayChildren.format(e) + "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]" : "tuple" === this.baseType ? (e !== p.sighash && (n += this.type), n += "(" + this.components.map(r => r.format(e)).join(e === p.full ? ", " : ",") + ")") : n += this.type, e !== p.sighash && (!0 === this.indexed && (n += " indexed"), e === p.full && this.name && (n += " " + this.name)), n
                }
                static from(e, r) {
                    return "string" == typeof e ? g.fromString(e, r) : g.fromObject(e)
                }
                static fromObject(e) {
                    return g.isParamType(e) ? e : new g(u, {
                        name: e.name || null,
                        type: _(e.type),
                        indexed: null == e.indexed ? null : !!e.indexed,
                        components: e.components ? e.components.map(g.fromObject) : null
                    })
                }
                static fromString(e, r) {
                    var n;
                    return n = function(e, r) {
                        let n = e;

                        function i(r) {
                            l.throwArgumentError(`unexpected character at position ${r}`, "param", e)
                        }

                        function o(e) {
                            let n = {
                                type: "",
                                name: "",
                                parent: e,
                                state: {
                                    allowType: !0
                                }
                            };
                            return r && (n.indexed = !1), n
                        }
                        e = e.replace(/\s/g, " ");
                        let a = {
                                type: "",
                                name: "",
                                state: {
                                    allowType: !0
                                }
                            },
                            s = a;
                        for (let u = 0; u < e.length; u++) {
                            let c = e[u];
                            switch (c) {
                                case "(":
                                    s.state.allowType && "" === s.type ? s.type = "tuple" : s.state.allowParams || i(u), s.state.allowType = !1, s.type = _(s.type), s.components = [o(s)], s = s.components[0];
                                    break;
                                case ")":
                                    delete s.state, "indexed" === s.name && (r || i(u), s.indexed = !0, s.name = ""), h(s.type, s.name) && (s.name = ""), s.type = _(s.type);
                                    let d = s;
                                    (s = s.parent) || i(u), delete d.parent, s.state.allowParams = !1, s.state.allowName = !0, s.state.allowArray = !0;
                                    break;
                                case ",":
                                    delete s.state, "indexed" === s.name && (r || i(u), s.indexed = !0, s.name = ""), h(s.type, s.name) && (s.name = ""), s.type = _(s.type);
                                    let f = o(s.parent);
                                    s.parent.components.push(f), delete s.parent, s = f;
                                    break;
                                case " ":
                                    s.state.allowType && "" !== s.type && (s.type = _(s.type), delete s.state.allowType, s.state.allowName = !0, s.state.allowParams = !0), s.state.allowName && "" !== s.name && ("indexed" === s.name ? (r || i(u), s.indexed && i(u), s.indexed = !0, s.name = "") : h(s.type, s.name) ? s.name = "" : s.state.allowName = !1);
                                    break;
                                case "[":
                                    s.state.allowArray || i(u), s.type += c, s.state.allowArray = !1, s.state.allowName = !1, s.state.readArray = !0;
                                    break;
                                case "]":
                                    s.state.readArray || i(u), s.type += c, s.state.readArray = !1, s.state.allowArray = !0, s.state.allowName = !0;
                                    break;
                                default:
                                    s.state.allowType ? (s.type += c, s.state.allowParams = !0, s.state.allowArray = !0) : s.state.allowName ? (s.name += c, delete s.state.allowArray) : s.state.readArray ? s.type += c : i(u)
                            }
                        }
                        return s.parent && l.throwArgumentError("unexpected eof", "param", e), delete a.state, "indexed" === s.name ? (r || i(n.length - 7), s.indexed && i(n.length - 7), s.indexed = !0, s.name = "") : h(s.type, s.name) && (s.name = ""), a.type = _(a.type), a
                    }(e, !!r), g.fromObject({
                        name: n.name,
                        type: n.type,
                        indexed: n.indexed,
                        components: n.components
                    })
                }
                static isParamType(e) {
                    return !!(null != e && e._isParamType)
                }
            }

            function v(e, r) {
                return (function(e) {
                    e = e.trim();
                    let r = [],
                        n = "",
                        i = 0;
                    for (let o = 0; o < e.length; o++) {
                        let a = e[o];
                        "," === a && 0 === i ? (r.push(n), n = "") : (n += a, "(" === a ? i++ : ")" === a && -1 == --i && l.throwArgumentError("unbalanced parenthesis", "value", e))
                    }
                    return n && r.push(n), r
                })(e).map(e => g.fromString(e, r))
            }
            class y {
                constructor(e, r) {
                    e !== u && l.throwError("use a static from method", a.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "new Fragment()"
                    }), f(this, r), this._isFragment = !0, Object.freeze(this)
                }
                static from(e) {
                    return y.isFragment(e) ? e : "string" == typeof e ? y.fromString(e) : y.fromObject(e)
                }
                static fromObject(e) {
                    if (y.isFragment(e)) return e;
                    switch (e.type) {
                        case "function":
                            return A.fromObject(e);
                        case "event":
                            return b.fromObject(e);
                        case "constructor":
                            return C.fromObject(e);
                        case "error":
                            return S.fromObject(e);
                        case "fallback":
                        case "receive":
                            return null
                    }
                    return l.throwArgumentError("invalid fragment object", "value", e)
                }
                static fromString(e) {
                    return "event" === (e = (e = (e = e.replace(/\s/g, " ")).replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).split(" ")[0] ? b.fromString(e.substring(5).trim()) : "function" === e.split(" ")[0] ? A.fromString(e.substring(8).trim()) : "constructor" === e.split("(")[0].trim() ? C.fromString(e.trim()) : "error" === e.split(" ")[0] ? S.fromString(e.substring(5).trim()) : l.throwArgumentError("unsupported fragment", "value", e)
                }
                static isFragment(e) {
                    return !!(e && e._isFragment)
                }
            }
            class b extends y {
                format(e) {
                    if (e || (e = p.sighash), p[e] || l.throwArgumentError("invalid format type", "format", e), e === p.json) return JSON.stringify({
                        type: "event",
                        anonymous: this.anonymous,
                        name: this.name,
                        inputs: this.inputs.map(r => JSON.parse(r.format(e)))
                    });
                    let r = "";
                    return e !== p.sighash && (r += "event "), r += this.name + "(" + this.inputs.map(r => r.format(e)).join(e === p.full ? ", " : ",") + ") ", e !== p.sighash && this.anonymous && (r += "anonymous "), r.trim()
                }
                static from(e) {
                    return "string" == typeof e ? b.fromString(e) : b.fromObject(e)
                }
                static fromObject(e) {
                    if (b.isEventFragment(e)) return e;
                    "event" !== e.type && l.throwArgumentError("invalid event object", "value", e);
                    let r = {
                        name: j(e.name),
                        anonymous: e.anonymous,
                        inputs: e.inputs ? e.inputs.map(g.fromObject) : [],
                        type: "event"
                    };
                    return new b(u, r)
                }
                static fromString(e) {
                    let r = e.match(T);
                    r || l.throwArgumentError("invalid event string", "value", e);
                    let n = !1;
                    return r[3].split(" ").forEach(e => {
                        switch (e.trim()) {
                            case "anonymous":
                                n = !0;
                                break;
                            case "":
                                break;
                            default:
                                l.warn("unknown modifier: " + e)
                        }
                    }), b.fromObject({
                        name: r[1].trim(),
                        anonymous: n,
                        inputs: v(r[2], !0),
                        type: "event"
                    })
                }
                static isEventFragment(e) {
                    return e && e._isFragment && "event" === e.type
                }
            }

            function w(e, r) {
                r.gas = null;
                let n = e.split("@");
                return 1 !== n.length ? (n.length > 2 && l.throwArgumentError("invalid human-readable ABI signature", "value", e), n[1].match(/^[0-9]+$/) || l.throwArgumentError("invalid human-readable ABI signature gas", "value", e), r.gas = i.O$.from(n[1]), n[0]) : e
            }

            function x(e, r) {
                r.constant = !1, r.payable = !1, r.stateMutability = "nonpayable", e.split(" ").forEach(e => {
                    switch (e.trim()) {
                        case "constant":
                            r.constant = !0;
                            break;
                        case "payable":
                            r.payable = !0, r.stateMutability = "payable";
                            break;
                        case "nonpayable":
                            r.payable = !1, r.stateMutability = "nonpayable";
                            break;
                        case "pure":
                            r.constant = !0, r.stateMutability = "pure";
                            break;
                        case "view":
                            r.constant = !0, r.stateMutability = "view";
                            break;
                        case "external":
                        case "public":
                        case "":
                            break;
                        default:
                            console.log("unknown modifier: " + e)
                    }
                })
            }

            function E(e) {
                let r = {
                    constant: !1,
                    payable: !0,
                    stateMutability: "payable"
                };
                return null != e.stateMutability ? (r.stateMutability = e.stateMutability, r.constant = "view" === r.stateMutability || "pure" === r.stateMutability, null != e.constant && !!e.constant !== r.constant && l.throwArgumentError("cannot have constant function with mutability " + r.stateMutability, "value", e), r.payable = "payable" === r.stateMutability, null != e.payable && !!e.payable !== r.payable && l.throwArgumentError("cannot have payable function with mutability " + r.stateMutability, "value", e)) : null != e.payable ? (r.payable = !!e.payable, null != e.constant || r.payable || "constructor" === e.type || l.throwArgumentError("unable to determine stateMutability", "value", e), r.constant = !!e.constant, r.constant ? r.stateMutability = "view" : r.stateMutability = r.payable ? "payable" : "nonpayable", r.payable && r.constant && l.throwArgumentError("cannot have constant payable function", "value", e)) : null != e.constant ? (r.constant = !!e.constant, r.payable = !r.constant, r.stateMutability = r.constant ? "view" : "payable") : "constructor" !== e.type && l.throwArgumentError("unable to determine stateMutability", "value", e), r
            }
            class C extends y {
                format(e) {
                    if (e || (e = p.sighash), p[e] || l.throwArgumentError("invalid format type", "format", e), e === p.json) return JSON.stringify({
                        type: "constructor",
                        stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                        payable: this.payable,
                        gas: this.gas ? this.gas.toNumber() : void 0,
                        inputs: this.inputs.map(r => JSON.parse(r.format(e)))
                    });
                    e === p.sighash && l.throwError("cannot format a constructor for sighash", a.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "format(sighash)"
                    });
                    let r = "constructor(" + this.inputs.map(r => r.format(e)).join(e === p.full ? ", " : ",") + ") ";
                    return this.stateMutability && "nonpayable" !== this.stateMutability && (r += this.stateMutability + " "), r.trim()
                }
                static from(e) {
                    return "string" == typeof e ? C.fromString(e) : C.fromObject(e)
                }
                static fromObject(e) {
                    if (C.isConstructorFragment(e)) return e;
                    "constructor" !== e.type && l.throwArgumentError("invalid constructor object", "value", e);
                    let r = E(e);
                    r.constant && l.throwArgumentError("constructor cannot be constant", "value", e);
                    let n = {
                        name: null,
                        type: e.type,
                        inputs: e.inputs ? e.inputs.map(g.fromObject) : [],
                        payable: r.payable,
                        stateMutability: r.stateMutability,
                        gas: e.gas ? i.O$.from(e.gas) : null
                    };
                    return new C(u, n)
                }
                static fromString(e) {
                    let r = {
                            type: "constructor"
                        },
                        n = (e = w(e, r)).match(T);
                    return n && "constructor" === n[1].trim() || l.throwArgumentError("invalid constructor string", "value", e), r.inputs = v(n[2].trim(), !1), x(n[3].trim(), r), C.fromObject(r)
                }
                static isConstructorFragment(e) {
                    return e && e._isFragment && "constructor" === e.type
                }
            }
            class A extends C {
                format(e) {
                    if (e || (e = p.sighash), p[e] || l.throwArgumentError("invalid format type", "format", e), e === p.json) return JSON.stringify({
                        type: "function",
                        name: this.name,
                        constant: this.constant,
                        stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                        payable: this.payable,
                        gas: this.gas ? this.gas.toNumber() : void 0,
                        inputs: this.inputs.map(r => JSON.parse(r.format(e))),
                        outputs: this.outputs.map(r => JSON.parse(r.format(e)))
                    });
                    let r = "";
                    return e !== p.sighash && (r += "function "), r += this.name + "(" + this.inputs.map(r => r.format(e)).join(e === p.full ? ", " : ",") + ") ", e !== p.sighash && (this.stateMutability ? "nonpayable" !== this.stateMutability && (r += this.stateMutability + " ") : this.constant && (r += "view "), this.outputs && this.outputs.length && (r += "returns (" + this.outputs.map(r => r.format(e)).join(", ") + ") "), null != this.gas && (r += "@" + this.gas.toString() + " ")), r.trim()
                }
                static from(e) {
                    return "string" == typeof e ? A.fromString(e) : A.fromObject(e)
                }
                static fromObject(e) {
                    if (A.isFunctionFragment(e)) return e;
                    "function" !== e.type && l.throwArgumentError("invalid function object", "value", e);
                    let r = E(e),
                        n = {
                            type: e.type,
                            name: j(e.name),
                            constant: r.constant,
                            inputs: e.inputs ? e.inputs.map(g.fromObject) : [],
                            outputs: e.outputs ? e.outputs.map(g.fromObject) : [],
                            payable: r.payable,
                            stateMutability: r.stateMutability,
                            gas: e.gas ? i.O$.from(e.gas) : null
                        };
                    return new A(u, n)
                }
                static fromString(e) {
                    let r = {
                            type: "function"
                        },
                        n = (e = w(e, r)).split(" returns ");
                    n.length > 2 && l.throwArgumentError("invalid function string", "value", e);
                    let i = n[0].match(T);
                    if (i || l.throwArgumentError("invalid function signature", "value", e), r.name = i[1].trim(), r.name && j(r.name), r.inputs = v(i[2], !1), x(i[3].trim(), r), n.length > 1) {
                        let o = n[1].match(T);
                        ("" != o[1].trim() || "" != o[3].trim()) && l.throwArgumentError("unexpected tokens", "value", e), r.outputs = v(o[2], !1)
                    } else r.outputs = [];
                    return A.fromObject(r)
                }
                static isFunctionFragment(e) {
                    return e && e._isFragment && "function" === e.type
                }
            }

            function k(e) {
                let r = e.format();
                return ("Error(string)" === r || "Panic(uint256)" === r) && l.throwArgumentError(`cannot specify user defined ${r} error`, "fragment", e), e
            }
            class S extends y {
                format(e) {
                    if (e || (e = p.sighash), p[e] || l.throwArgumentError("invalid format type", "format", e), e === p.json) return JSON.stringify({
                        type: "error",
                        name: this.name,
                        inputs: this.inputs.map(r => JSON.parse(r.format(e)))
                    });
                    let r = "";
                    return e !== p.sighash && (r += "error "), (r += this.name + "(" + this.inputs.map(r => r.format(e)).join(e === p.full ? ", " : ",") + ") ").trim()
                }
                static from(e) {
                    return "string" == typeof e ? S.fromString(e) : S.fromObject(e)
                }
                static fromObject(e) {
                    if (S.isErrorFragment(e)) return e;
                    "error" !== e.type && l.throwArgumentError("invalid error object", "value", e);
                    let r = {
                        type: e.type,
                        name: j(e.name),
                        inputs: e.inputs ? e.inputs.map(g.fromObject) : []
                    };
                    return k(new S(u, r))
                }
                static fromString(e) {
                    let r = {
                            type: "error"
                        },
                        n = e.match(T);
                    return n || l.throwArgumentError("invalid error signature", "value", e), r.name = n[1].trim(), r.name && j(r.name), r.inputs = v(n[2], !1), k(S.fromObject(r))
                }
                static isErrorFragment(e) {
                    return e && e._isFragment && "error" === e.type
                }
            }

            function _(e) {
                return e.match(/^uint($|[^1-9])/) ? e = "uint256" + e.substring(4) : e.match(/^int($|[^1-9])/) && (e = "int256" + e.substring(3)), e
            }
            let P = RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");

            function j(e) {
                return e && e.match(P) || l.throwArgumentError(`invalid identifier "${e}"`, "value", e), e
            }
            let T = RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$")
        },
        83893: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                AbiCoder: function() {
                    return o.R
                },
                ConstructorFragment: function() {
                    return i.Xg
                },
                ErrorFragment: function() {
                    return i.IC
                },
                EventFragment: function() {
                    return i.QV
                },
                FormatTypes: function() {
                    return i.pc
                },
                Fragment: function() {
                    return i.HY
                },
                FunctionFragment: function() {
                    return i.YW
                },
                Indexed: function() {
                    return a.Hk
                },
                Interface: function() {
                    return a.vU
                },
                LogDescription: function() {
                    return a.CC
                },
                ParamType: function() {
                    return i._R
                },
                TransactionDescription: function() {
                    return a.vk
                },
                checkResultErrors: function() {
                    return s.BR
                },
                defaultAbiCoder: function() {
                    return o.$
                }
            });
            var i = n(11388),
                o = n(84243),
                a = n(8198),
                s = n(61184)
        },
        8198: function(e, r, n) {
            "use strict";
            n.d(r, {
                CC: function() {
                    return m
                },
                Hk: function() {
                    return y
                },
                vU: function() {
                    return x
                },
                vk: function() {
                    return g
                }
            });
            var i = n(19485),
                o = n(2593),
                a = n(16441),
                s = n(32046),
                l = n(38197),
                u = n(6881),
                c = n(84243),
                d = n(11388),
                h = n(1581),
                f = n(95851);
            let p = new h.Logger(f.i);
            class m extends u.Description {}
            class g extends u.Description {}
            class v extends u.Description {}
            class y extends u.Description {
                static isIndexed(e) {
                    return !!(e && e._isIndexed)
                }
            }
            let b = {
                "0x08c379a0": {
                    signature: "Error(string)",
                    name: "Error",
                    inputs: ["string"],
                    reason: !0
                },
                "0x4e487b71": {
                    signature: "Panic(uint256)",
                    name: "Panic",
                    inputs: ["uint256"]
                }
            };

            function w(e, r) {
                let n = Error(`deferred error during ABI decoding triggered accessing ${e}`);
                return n.error = r, n
            }
            class x {
                constructor(e) {
                    let r = [];
                    r = "string" == typeof e ? JSON.parse(e) : e, (0, u.defineReadOnly)(this, "fragments", r.map(e => d.HY.from(e)).filter(e => null != e)), (0, u.defineReadOnly)(this, "_abiCoder", (0, u.getStatic)(new.target, "getAbiCoder")()), (0, u.defineReadOnly)(this, "functions", {}), (0, u.defineReadOnly)(this, "errors", {}), (0, u.defineReadOnly)(this, "events", {}), (0, u.defineReadOnly)(this, "structs", {}), this.fragments.forEach(e => {
                        let r = null;
                        switch (e.type) {
                            case "constructor":
                                if (this.deploy) {
                                    p.warn("duplicate definition - constructor");
                                    return
                                }(0, u.defineReadOnly)(this, "deploy", e);
                                return;
                            case "function":
                                r = this.functions;
                                break;
                            case "event":
                                r = this.events;
                                break;
                            case "error":
                                r = this.errors;
                                break;
                            default:
                                return
                        }
                        let n = e.format();
                        if (r[n]) {
                            p.warn("duplicate definition - " + n);
                            return
                        }
                        r[n] = e
                    }), this.deploy || (0, u.defineReadOnly)(this, "deploy", d.Xg.from({
                        payable: !1,
                        type: "constructor"
                    })), (0, u.defineReadOnly)(this, "_isInterface", !0)
                }
                format(e) {
                    e || (e = d.pc.full), e === d.pc.sighash && p.throwArgumentError("interface does not support formatting sighash", "format", e);
                    let r = this.fragments.map(r => r.format(e));
                    return e === d.pc.json ? JSON.stringify(r.map(e => JSON.parse(e))) : r
                }
                static getAbiCoder() {
                    return c.$
                }
                static getAddress(e) {
                    return (0, i.getAddress)(e)
                }
                static getSighash(e) {
                    return (0, a.hexDataSlice)((0, s.id)(e.format()), 0, 4)
                }
                static getEventTopic(e) {
                    return (0, s.id)(e.format())
                }
                getFunction(e) {
                    if ((0, a.isHexString)(e)) {
                        for (let r in this.functions)
                            if (e === this.getSighash(r)) return this.functions[r];
                        p.throwArgumentError("no matching function", "sighash", e)
                    }
                    if (-1 === e.indexOf("(")) {
                        let n = e.trim(),
                            i = Object.keys(this.functions).filter(e => e.split("(")[0] === n);
                        return 0 === i.length ? p.throwArgumentError("no matching function", "name", n) : i.length > 1 && p.throwArgumentError("multiple matching functions", "name", n), this.functions[i[0]]
                    }
                    let o = this.functions[d.YW.fromString(e).format()];
                    return o || p.throwArgumentError("no matching function", "signature", e), o
                }
                getEvent(e) {
                    if ((0, a.isHexString)(e)) {
                        let r = e.toLowerCase();
                        for (let n in this.events)
                            if (r === this.getEventTopic(n)) return this.events[n];
                        p.throwArgumentError("no matching event", "topichash", r)
                    }
                    if (-1 === e.indexOf("(")) {
                        let i = e.trim(),
                            o = Object.keys(this.events).filter(e => e.split("(")[0] === i);
                        return 0 === o.length ? p.throwArgumentError("no matching event", "name", i) : o.length > 1 && p.throwArgumentError("multiple matching events", "name", i), this.events[o[0]]
                    }
                    let s = this.events[d.QV.fromString(e).format()];
                    return s || p.throwArgumentError("no matching event", "signature", e), s
                }
                getError(e) {
                    if ((0, a.isHexString)(e)) {
                        let r = (0, u.getStatic)(this.constructor, "getSighash");
                        for (let n in this.errors) {
                            let i = this.errors[n];
                            if (e === r(i)) return this.errors[n]
                        }
                        p.throwArgumentError("no matching error", "sighash", e)
                    }
                    if (-1 === e.indexOf("(")) {
                        let o = e.trim(),
                            s = Object.keys(this.errors).filter(e => e.split("(")[0] === o);
                        return 0 === s.length ? p.throwArgumentError("no matching error", "name", o) : s.length > 1 && p.throwArgumentError("multiple matching errors", "name", o), this.errors[s[0]]
                    }
                    let l = this.errors[d.YW.fromString(e).format()];
                    return l || p.throwArgumentError("no matching error", "signature", e), l
                }
                getSighash(e) {
                    if ("string" == typeof e) try {
                        e = this.getFunction(e)
                    } catch (n) {
                        try {
                            e = this.getError(e)
                        } catch (r) {
                            throw n
                        }
                    }
                    return (0, u.getStatic)(this.constructor, "getSighash")(e)
                }
                getEventTopic(e) {
                    return "string" == typeof e && (e = this.getEvent(e)), (0, u.getStatic)(this.constructor, "getEventTopic")(e)
                }
                _decodeParams(e, r) {
                    return this._abiCoder.decode(e, r)
                }
                _encodeParams(e, r) {
                    return this._abiCoder.encode(e, r)
                }
                encodeDeploy(e) {
                    return this._encodeParams(this.deploy.inputs, e || [])
                }
                decodeErrorResult(e, r) {
                    "string" == typeof e && (e = this.getError(e));
                    let n = (0, a.arrayify)(r);
                    return (0, a.hexlify)(n.slice(0, 4)) !== this.getSighash(e) && p.throwArgumentError(`data signature does not match error ${e.name}.`, "data", (0, a.hexlify)(n)), this._decodeParams(e.inputs, n.slice(4))
                }
                encodeErrorResult(e, r) {
                    return "string" == typeof e && (e = this.getError(e)), (0, a.hexlify)((0, a.concat)([this.getSighash(e), this._encodeParams(e.inputs, r || [])]))
                }
                decodeFunctionData(e, r) {
                    "string" == typeof e && (e = this.getFunction(e));
                    let n = (0, a.arrayify)(r);
                    return (0, a.hexlify)(n.slice(0, 4)) !== this.getSighash(e) && p.throwArgumentError(`data signature does not match function ${e.name}.`, "data", (0, a.hexlify)(n)), this._decodeParams(e.inputs, n.slice(4))
                }
                encodeFunctionData(e, r) {
                    return "string" == typeof e && (e = this.getFunction(e)), (0, a.hexlify)((0, a.concat)([this.getSighash(e), this._encodeParams(e.inputs, r || [])]))
                }
                decodeFunctionResult(e, r) {
                    "string" == typeof e && (e = this.getFunction(e));
                    let n = (0, a.arrayify)(r),
                        i = null,
                        o = "",
                        s = null,
                        l = null,
                        u = null;
                    switch (n.length % this._abiCoder._getWordSize()) {
                        case 0:
                            try {
                                return this._abiCoder.decode(e.outputs, n)
                            } catch (c) {}
                            break;
                        case 4:
                            {
                                let d = (0, a.hexlify)(n.slice(0, 4)),
                                    f = b[d];
                                if (f) s = this._abiCoder.decode(f.inputs, n.slice(4)),
                                l = f.name,
                                u = f.signature,
                                f.reason && (i = s[0]),
                                "Error" === l ? o = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(s[0])}` : "Panic" === l && (o = `; VM Exception while processing transaction: reverted with panic code ${s[0]}`);
                                else try {
                                    let m = this.getError(d);
                                    s = this._abiCoder.decode(m.inputs, n.slice(4)), l = m.name, u = m.format()
                                } catch (g) {}
                            }
                    }
                    return p.throwError("call revert exception" + o, h.Logger.errors.CALL_EXCEPTION, {
                        method: e.format(),
                        data: (0, a.hexlify)(r),
                        errorArgs: s,
                        errorName: l,
                        errorSignature: u,
                        reason: i
                    })
                }
                encodeFunctionResult(e, r) {
                    return "string" == typeof e && (e = this.getFunction(e)), (0, a.hexlify)(this._abiCoder.encode(e.outputs, r || []))
                }
                encodeFilterTopics(e, r) {
                    "string" == typeof e && (e = this.getEvent(e)), r.length > e.inputs.length && p.throwError("too many arguments for " + e.format(), h.Logger.errors.UNEXPECTED_ARGUMENT, {
                        argument: "values",
                        value: r
                    });
                    let n = [];
                    e.anonymous || n.push(this.getEventTopic(e));
                    let i = (e, r) => "string" === e.type ? (0, s.id)(r) : "bytes" === e.type ? (0, l.keccak256)((0, a.hexlify)(r)) : ("bool" === e.type && "boolean" == typeof r && (r = r ? "0x01" : "0x00"), e.type.match(/^u?int/) && (r = o.O$.from(r).toHexString()), "address" === e.type && this._abiCoder.encode(["address"], [r]), (0, a.hexZeroPad)((0, a.hexlify)(r), 32));
                    for (r.forEach((r, o) => {
                            let a = e.inputs[o];
                            if (!a.indexed) {
                                null != r && p.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + a.name, r);
                                return
                            }
                            null == r ? n.push(null) : "array" === a.baseType || "tuple" === a.baseType ? p.throwArgumentError("filtering with tuples or arrays not supported", "contract." + a.name, r) : Array.isArray(r) ? n.push(r.map(e => i(a, e))) : n.push(i(a, r))
                        }); n.length && null === n[n.length - 1];) n.pop();
                    return n
                }
                encodeEventLog(e, r) {
                    "string" == typeof e && (e = this.getEvent(e));
                    let n = [],
                        i = [],
                        o = [];
                    return e.anonymous || n.push(this.getEventTopic(e)), r.length !== e.inputs.length && p.throwArgumentError("event arguments/values mismatch", "values", r), e.inputs.forEach((e, a) => {
                        let u = r[a];
                        if (e.indexed) {
                            if ("string" === e.type) n.push((0, s.id)(u));
                            else if ("bytes" === e.type) n.push((0, l.keccak256)(u));
                            else if ("tuple" === e.baseType || "array" === e.baseType) throw Error("not implemented");
                            else n.push(this._abiCoder.encode([e.type], [u]))
                        } else i.push(e), o.push(u)
                    }), {
                        data: this._abiCoder.encode(i, o),
                        topics: n
                    }
                }
                decodeEventLog(e, r, n) {
                    if ("string" == typeof e && (e = this.getEvent(e)), null != n && !e.anonymous) {
                        let i = this.getEventTopic(e);
                        (0, a.isHexString)(n[0], 32) && n[0].toLowerCase() === i || p.throwError("fragment/topic mismatch", h.Logger.errors.INVALID_ARGUMENT, {
                            argument: "topics[0]",
                            expected: i,
                            value: n[0]
                        }), n = n.slice(1)
                    }
                    let o = [],
                        s = [],
                        l = [];
                    e.inputs.forEach((e, r) => {
                        e.indexed ? "string" === e.type || "bytes" === e.type || "tuple" === e.baseType || "array" === e.baseType ? (o.push(d._R.fromObject({
                            type: "bytes32",
                            name: e.name
                        })), l.push(!0)) : (o.push(e), l.push(!1)) : (s.push(e), l.push(!1))
                    });
                    let u = null != n ? this._abiCoder.decode(o, (0, a.concat)(n)) : null,
                        c = this._abiCoder.decode(s, r, !0),
                        f = [],
                        m = 0,
                        g = 0;
                    e.inputs.forEach((e, r) => {
                        if (e.indexed) {
                            if (null == u) f[r] = new y({
                                _isIndexed: !0,
                                hash: null
                            });
                            else if (l[r]) f[r] = new y({
                                _isIndexed: !0,
                                hash: u[g++]
                            });
                            else try {
                                f[r] = u[g++]
                            } catch (n) {
                                f[r] = n
                            }
                        } else try {
                            f[r] = c[m++]
                        } catch (i) {
                            f[r] = i
                        }
                        if (e.name && null == f[e.name]) {
                            let o = f[r];
                            o instanceof Error ? Object.defineProperty(f, e.name, {
                                enumerable: !0,
                                get: () => {
                                    throw w(`property ${JSON.stringify(e.name)}`, o)
                                }
                            }) : f[e.name] = o
                        }
                    });
                    for (let v = 0; v < f.length; v++) {
                        let b = f[v];
                        b instanceof Error && Object.defineProperty(f, v, {
                            enumerable: !0,
                            get: () => {
                                throw w(`index ${v}`, b)
                            }
                        })
                    }
                    return Object.freeze(f)
                }
                parseTransaction(e) {
                    let r = this.getFunction(e.data.substring(0, 10).toLowerCase());
                    return r ? new g({
                        args: this._abiCoder.decode(r.inputs, "0x" + e.data.substring(10)),
                        functionFragment: r,
                        name: r.name,
                        signature: r.format(),
                        sighash: this.getSighash(r),
                        value: o.O$.from(e.value || "0")
                    }) : null
                }
                parseLog(e) {
                    let r = this.getEvent(e.topics[0]);
                    return !r || r.anonymous ? null : new m({
                        eventFragment: r,
                        name: r.name,
                        signature: r.format(),
                        topic: this.getEventTopic(r),
                        args: this.decodeEventLog(r, e.data, e.topics)
                    })
                }
                parseError(e) {
                    let r = (0, a.hexlify)(e),
                        n = this.getError(r.substring(0, 10).toLowerCase());
                    return n ? new v({
                        args: this._abiCoder.decode(n.inputs, "0x" + r.substring(10)),
                        errorFragment: n,
                        name: n.name,
                        signature: n.format(),
                        sighash: this.getSighash(n)
                    }) : null
                }
                static isInterface(e) {
                    return !!(e && e._isInterface)
                }
            }
        },
        81556: function(e, r, n) {
            "use strict";
            n.d(r, {
                Sg: function() {
                    return l
                },
                zt: function() {
                    return u
                }
            });
            var i = n(2593),
                o = n(6881),
                a = n(1581);
            let s = new a.Logger("abstract-provider/5.7.0");
            class l extends o.Description {
                static isForkEvent(e) {
                    return !!(e && e._isForkEvent)
                }
            }
            class u {
                constructor() {
                    s.checkAbstract(new.target, u), (0, o.defineReadOnly)(this, "_isProvider", !0)
                }
                getFeeData() {
                    var e, r, n, a;
                    return e = this, r = void 0, n = void 0, a = function*() {
                        let {
                            block: e,
                            gasPrice: r
                        } = yield(0, o.resolveProperties)({
                            block: this.getBlock("latest"),
                            gasPrice: this.getGasPrice().catch(e => null)
                        }), n = null, a = null, s = null;
                        return e && e.baseFeePerGas && (n = e.baseFeePerGas, s = i.O$.from("1500000000"), a = e.baseFeePerGas.mul(2).add(s)), {
                            lastBaseFeePerGas: n,
                            maxFeePerGas: a,
                            maxPriorityFeePerGas: s,
                            gasPrice: r
                        }
                    }, new(n || (n = Promise))(function(i, o) {
                        function s(e) {
                            try {
                                u(a.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function l(e) {
                            try {
                                u(a.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : ((r = e.value) instanceof n ? r : new n(function(e) {
                                e(r)
                            })).then(s, l)
                        }
                        u((a = a.apply(e, r || [])).next())
                    })
                }
                addListener(e, r) {
                    return this.on(e, r)
                }
                removeListener(e, r) {
                    return this.off(e, r)
                }
                static isProvider(e) {
                    return !!(e && e._isProvider)
                }
            }
        },
        48088: function(e, r, n) {
            "use strict";
            n.d(r, {
                E: function() {
                    return c
                },
                b: function() {
                    return d
                }
            });
            var i = n(6881),
                o = n(1581),
                a = function(e, r, n, i) {
                    return new(n || (n = Promise))(function(o, a) {
                        function s(e) {
                            try {
                                u(i.next(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function l(e) {
                            try {
                                u(i.throw(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? o(e.value) : ((r = e.value) instanceof n ? r : new n(function(e) {
                                e(r)
                            })).then(s, l)
                        }
                        u((i = i.apply(e, r || [])).next())
                    })
                };
            let s = new o.Logger("abstract-signer/5.7.0"),
                l = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"],
                u = [o.Logger.errors.INSUFFICIENT_FUNDS, o.Logger.errors.NONCE_EXPIRED, o.Logger.errors.REPLACEMENT_UNDERPRICED];
            class c {
                constructor() {
                    s.checkAbstract(new.target, c), (0, i.defineReadOnly)(this, "_isSigner", !0)
                }
                getBalance(e) {
                    return a(this, void 0, void 0, function*() {
                        return this._checkProvider("getBalance"), yield this.provider.getBalance(this.getAddress(), e)
                    })
                }
                getTransactionCount(e) {
                    return a(this, void 0, void 0, function*() {
                        return this._checkProvider("getTransactionCount"), yield this.provider.getTransactionCount(this.getAddress(), e)
                    })
                }
                estimateGas(e) {
                    return a(this, void 0, void 0, function*() {
                        this._checkProvider("estimateGas");
                        let r = yield(0, i.resolveProperties)(this.checkTransaction(e));
                        return yield this.provider.estimateGas(r)
                    })
                }
                call(e, r) {
                    return a(this, void 0, void 0, function*() {
                        this._checkProvider("call");
                        let n = yield(0, i.resolveProperties)(this.checkTransaction(e));
                        return yield this.provider.call(n, r)
                    })
                }
                sendTransaction(e) {
                    return a(this, void 0, void 0, function*() {
                        this._checkProvider("sendTransaction");
                        let r = yield this.populateTransaction(e), n = yield this.signTransaction(r);
                        return yield this.provider.sendTransaction(n)
                    })
                }
                getChainId() {
                    return a(this, void 0, void 0, function*() {
                        this._checkProvider("getChainId");
                        let e = yield this.provider.getNetwork();
                        return e.chainId
                    })
                }
                getGasPrice() {
                    return a(this, void 0, void 0, function*() {
                        return this._checkProvider("getGasPrice"), yield this.provider.getGasPrice()
                    })
                }
                getFeeData() {
                    return a(this, void 0, void 0, function*() {
                        return this._checkProvider("getFeeData"), yield this.provider.getFeeData()
                    })
                }
                resolveName(e) {
                    return a(this, void 0, void 0, function*() {
                        return this._checkProvider("resolveName"), yield this.provider.resolveName(e)
                    })
                }
                checkTransaction(e) {
                    for (let r in e) - 1 === l.indexOf(r) && s.throwArgumentError("invalid transaction key: " + r, "transaction", e);
                    let n = (0, i.shallowCopy)(e);
                    return null == n.from ? n.from = this.getAddress() : n.from = Promise.all([Promise.resolve(n.from), this.getAddress()]).then(r => (r[0].toLowerCase() !== r[1].toLowerCase() && s.throwArgumentError("from address mismatch", "transaction", e), r[0])), n
                }
                populateTransaction(e) {
                    return a(this, void 0, void 0, function*() {
                        let r = yield(0, i.resolveProperties)(this.checkTransaction(e));
                        null != r.to && (r.to = Promise.resolve(r.to).then(e => a(this, void 0, void 0, function*() {
                            if (null == e) return null;
                            let r = yield this.resolveName(e);
                            return null == r && s.throwArgumentError("provided ENS name resolves to null", "tx.to", e), r
                        })), r.to.catch(e => {}));
                        let n = null != r.maxFeePerGas || null != r.maxPriorityFeePerGas;
                        if (null != r.gasPrice && (2 === r.type || n) ? s.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", e) : (0 === r.type || 1 === r.type) && n && s.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", e), (2 === r.type || null == r.type) && null != r.maxFeePerGas && null != r.maxPriorityFeePerGas) r.type = 2;
                        else if (0 === r.type || 1 === r.type) null == r.gasPrice && (r.gasPrice = this.getGasPrice());
                        else {
                            let l = yield this.getFeeData();
                            if (null == r.type) {
                                if (null != l.maxFeePerGas && null != l.maxPriorityFeePerGas) {
                                    if (r.type = 2, null != r.gasPrice) {
                                        let c = r.gasPrice;
                                        delete r.gasPrice, r.maxFeePerGas = c, r.maxPriorityFeePerGas = c
                                    } else null == r.maxFeePerGas && (r.maxFeePerGas = l.maxFeePerGas), null == r.maxPriorityFeePerGas && (r.maxPriorityFeePerGas = l.maxPriorityFeePerGas)
                                } else null != l.gasPrice ? (n && s.throwError("network does not support EIP-1559", o.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: "populateTransaction"
                                }), null == r.gasPrice && (r.gasPrice = l.gasPrice), r.type = 0) : s.throwError("failed to get consistent fee data", o.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: "signer.getFeeData"
                                })
                            } else 2 === r.type && (null == r.maxFeePerGas && (r.maxFeePerGas = l.maxFeePerGas), null == r.maxPriorityFeePerGas && (r.maxPriorityFeePerGas = l.maxPriorityFeePerGas))
                        }
                        return null == r.nonce && (r.nonce = this.getTransactionCount("pending")), null == r.gasLimit && (r.gasLimit = this.estimateGas(r).catch(e => {
                            if (u.indexOf(e.code) >= 0) throw e;
                            return s.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", o.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                                error: e,
                                tx: r
                            })
                        })), null == r.chainId ? r.chainId = this.getChainId() : r.chainId = Promise.all([Promise.resolve(r.chainId), this.getChainId()]).then(r => (0 !== r[1] && r[0] !== r[1] && s.throwArgumentError("chainId address mismatch", "transaction", e), r[0])), yield(0, i.resolveProperties)(r)
                    })
                }
                _checkProvider(e) {
                    this.provider || s.throwError("missing provider", o.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: e || "_checkProvider"
                    })
                }
                static isSigner(e) {
                    return !!(e && e._isSigner)
                }
            }
            class d extends c {
                constructor(e, r) {
                    super(), (0, i.defineReadOnly)(this, "address", e), (0, i.defineReadOnly)(this, "provider", r || null)
                }
                getAddress() {
                    return Promise.resolve(this.address)
                }
                _fail(e, r) {
                    return Promise.resolve().then(() => {
                        s.throwError(e, o.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: r
                        })
                    })
                }
                signMessage(e) {
                    return this._fail("VoidSigner cannot sign messages", "signMessage")
                }
                signTransaction(e) {
                    return this._fail("VoidSigner cannot sign transactions", "signTransaction")
                }
                _signTypedData(e, r, n) {
                    return this._fail("VoidSigner cannot sign typed data", "signTypedData")
                }
                connect(e) {
                    return new d(this.address, e)
                }
            }
        },
        19485: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                getAddress: function() {
                    return g
                },
                getContractAddress: function() {
                    return b
                },
                getCreate2Address: function() {
                    return w
                },
                getIcapAddress: function() {
                    return y
                },
                isAddress: function() {
                    return v
                }
            });
            var i = n(16441),
                o = n(2593),
                a = n(38197),
                s = n(59052),
                l = n(1581);
            let u = new l.Logger("address/5.7.0");

            function c(e) {
                (0, i.isHexString)(e, 20) || u.throwArgumentError("invalid address", "address", e), e = e.toLowerCase();
                let r = e.substring(2).split(""),
                    n = new Uint8Array(40);
                for (let o = 0; o < 40; o++) n[o] = r[o].charCodeAt(0);
                let s = (0, i.arrayify)((0, a.keccak256)(n));
                for (let l = 0; l < 40; l += 2) s[l >> 1] >> 4 >= 8 && (r[l] = r[l].toUpperCase()), (15 & s[l >> 1]) >= 8 && (r[l + 1] = r[l + 1].toUpperCase());
                return "0x" + r.join("")
            }
            let d = {};
            for (let h = 0; h < 10; h++) d[String(h)] = String(h);
            for (let f = 0; f < 26; f++) d[String.fromCharCode(65 + f)] = String(10 + f);
            let p = Math.floor(Math.log10 ? Math.log10(9007199254740991) : Math.log(9007199254740991) / Math.LN10);

            function m(e) {
                let r = (e = (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00").split("").map(e => d[e]).join("");
                for (; r.length >= p;) {
                    let n = r.substring(0, p);
                    r = parseInt(n, 10) % 97 + r.substring(n.length)
                }
                let i = String(98 - parseInt(r, 10) % 97);
                for (; i.length < 2;) i = "0" + i;
                return i
            }

            function g(e) {
                let r = null;
                if ("string" != typeof e && u.throwArgumentError("invalid address", "address", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== e.substring(0, 2) && (e = "0x" + e), r = c(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && r !== e && u.throwArgumentError("bad address checksum", "address", e);
                else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    for (e.substring(2, 4) !== m(e) && u.throwArgumentError("bad icap checksum", "address", e), r = (0, o.g$)(e.substring(4)); r.length < 40;) r = "0" + r;
                    r = c("0x" + r)
                } else u.throwArgumentError("invalid address", "address", e);
                return r
            }

            function v(e) {
                try {
                    return g(e), !0
                } catch (r) {}
                return !1
            }

            function y(e) {
                let r = (0, o.t2)(g(e).substring(2)).toUpperCase();
                for (; r.length < 30;) r = "0" + r;
                return "XE" + m("XE00" + r) + r
            }

            function b(e) {
                let r = null;
                try {
                    r = g(e.from)
                } catch (n) {
                    u.throwArgumentError("missing from address", "transaction", e)
                }
                let l = (0, i.stripZeros)((0, i.arrayify)(o.O$.from(e.nonce).toHexString()));
                return g((0, i.hexDataSlice)((0, a.keccak256)((0, s.encode)([r, l])), 12))
            }

            function w(e, r, n) {
                return 32 !== (0, i.hexDataLength)(r) && u.throwArgumentError("salt must be 32 bytes", "salt", r), 32 !== (0, i.hexDataLength)(n) && u.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", n), g((0, i.hexDataSlice)((0, a.keccak256)((0, i.concat)(["0xff", g(e), r, n])), 12))
            }
        },
        59567: function(e, r, n) {
            "use strict";
            n.d(r, {
                J: function() {
                    return o
                },
                c: function() {
                    return a
                }
            });
            var i = n(16441);

            function o(e) {
                e = atob(e);
                let r = [];
                for (let n = 0; n < e.length; n++) r.push(e.charCodeAt(n));
                return (0, i.arrayify)(r)
            }

            function a(e) {
                e = (0, i.arrayify)(e);
                let r = "";
                for (let n = 0; n < e.length; n++) r += String.fromCharCode(e[n]);
                return btoa(r)
            }
        },
        4089: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                decode: function() {
                    return i.J
                },
                encode: function() {
                    return i.c
                }
            });
            var i = n(59567)
        },
        57727: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                Base32: function() {
                    return s
                },
                Base58: function() {
                    return l
                },
                BaseX: function() {
                    return a
                }
            });
            var i = n(16441),
                o = n(6881);
            class a {
                constructor(e) {
                    (0, o.defineReadOnly)(this, "alphabet", e), (0, o.defineReadOnly)(this, "base", e.length), (0, o.defineReadOnly)(this, "_alphabetMap", {}), (0, o.defineReadOnly)(this, "_leader", e.charAt(0));
                    for (let r = 0; r < e.length; r++) this._alphabetMap[e.charAt(r)] = r
                }
                encode(e) {
                    let r = (0, i.arrayify)(e);
                    if (0 === r.length) return "";
                    let n = [0];
                    for (let o = 0; o < r.length; ++o) {
                        let a = r[o];
                        for (let s = 0; s < n.length; ++s) a += n[s] << 8, n[s] = a % this.base, a = a / this.base | 0;
                        for (; a > 0;) n.push(a % this.base), a = a / this.base | 0
                    }
                    let l = "";
                    for (let u = 0; 0 === r[u] && u < r.length - 1; ++u) l += this._leader;
                    for (let c = n.length - 1; c >= 0; --c) l += this.alphabet[n[c]];
                    return l
                }
                decode(e) {
                    if ("string" != typeof e) throw TypeError("Expected String");
                    let r = [];
                    if (0 === e.length) return new Uint8Array(r);
                    r.push(0);
                    for (let n = 0; n < e.length; n++) {
                        let o = this._alphabetMap[e[n]];
                        if (void 0 === o) throw Error("Non-base" + this.base + " character");
                        let a = o;
                        for (let s = 0; s < r.length; ++s) a += r[s] * this.base, r[s] = 255 & a, a >>= 8;
                        for (; a > 0;) r.push(255 & a), a >>= 8
                    }
                    for (let l = 0; e[l] === this._leader && l < e.length - 1; ++l) r.push(0);
                    return (0, i.arrayify)(new Uint8Array(r.reverse()))
                }
            }
            let s = new a("abcdefghijklmnopqrstuvwxyz234567"),
                l = new a("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")
        },
        48794: function(e, r, n) {
            "use strict";
            n.d(r, {
                i: function() {
                    return i
                }
            });
            let i = "bignumber/5.7.0"
        },
        2593: function(e, r, n) {
            "use strict";
            n.d(r, {
                O$: function() {
                    return p
                },
                Zm: function() {
                    return h
                },
                g$: function() {
                    return b
                },
                t2: function() {
                    return w
                }
            });
            var i = n(13550),
                o = n.n(i),
                a = n(16441),
                s = n(1581),
                l = n(48794),
                u = o().BN;
            let c = new s.Logger(l.i),
                d = {};

            function h(e) {
                return null != e && (p.isBigNumber(e) || "number" == typeof e && e % 1 == 0 || "string" == typeof e && !!e.match(/^-?[0-9]+$/) || (0, a.isHexString)(e) || "bigint" == typeof e || (0, a.isBytes)(e))
            }
            let f = !1;
            class p {
                constructor(e, r) {
                    e !== d && c.throwError("cannot call constructor directly; use BigNumber.from", s.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "new (BigNumber)"
                    }), this._hex = r, this._isBigNumber = !0, Object.freeze(this)
                }
                fromTwos(e) {
                    return g(v(this).fromTwos(e))
                }
                toTwos(e) {
                    return g(v(this).toTwos(e))
                }
                abs() {
                    return "-" === this._hex[0] ? p.from(this._hex.substring(1)) : this
                }
                add(e) {
                    return g(v(this).add(v(e)))
                }
                sub(e) {
                    return g(v(this).sub(v(e)))
                }
                div(e) {
                    let r = p.from(e);
                    return r.isZero() && y("division-by-zero", "div"), g(v(this).div(v(e)))
                }
                mul(e) {
                    return g(v(this).mul(v(e)))
                }
                mod(e) {
                    let r = v(e);
                    return r.isNeg() && y("division-by-zero", "mod"), g(v(this).umod(r))
                }
                pow(e) {
                    let r = v(e);
                    return r.isNeg() && y("negative-power", "pow"), g(v(this).pow(r))
                }
                and(e) {
                    let r = v(e);
                    return (this.isNegative() || r.isNeg()) && y("unbound-bitwise-result", "and"), g(v(this).and(r))
                }
                or(e) {
                    let r = v(e);
                    return (this.isNegative() || r.isNeg()) && y("unbound-bitwise-result", "or"), g(v(this).or(r))
                }
                xor(e) {
                    let r = v(e);
                    return (this.isNegative() || r.isNeg()) && y("unbound-bitwise-result", "xor"), g(v(this).xor(r))
                }
                mask(e) {
                    return (this.isNegative() || e < 0) && y("negative-width", "mask"), g(v(this).maskn(e))
                }
                shl(e) {
                    return (this.isNegative() || e < 0) && y("negative-width", "shl"), g(v(this).shln(e))
                }
                shr(e) {
                    return (this.isNegative() || e < 0) && y("negative-width", "shr"), g(v(this).shrn(e))
                }
                eq(e) {
                    return v(this).eq(v(e))
                }
                lt(e) {
                    return v(this).lt(v(e))
                }
                lte(e) {
                    return v(this).lte(v(e))
                }
                gt(e) {
                    return v(this).gt(v(e))
                }
                gte(e) {
                    return v(this).gte(v(e))
                }
                isNegative() {
                    return "-" === this._hex[0]
                }
                isZero() {
                    return v(this).isZero()
                }
                toNumber() {
                    try {
                        return v(this).toNumber()
                    } catch (e) {
                        y("overflow", "toNumber", this.toString())
                    }
                    return null
                }
                toBigInt() {
                    try {
                        return BigInt(this.toString())
                    } catch (e) {}
                    return c.throwError("this platform does not support BigInt", s.Logger.errors.UNSUPPORTED_OPERATION, {
                        value: this.toString()
                    })
                }
                toString() {
                    return arguments.length > 0 && (10 === arguments[0] ? f || (f = !0, c.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? c.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", s.Logger.errors.UNEXPECTED_ARGUMENT, {}) : c.throwError("BigNumber.toString does not accept parameters", s.Logger.errors.UNEXPECTED_ARGUMENT, {})), v(this).toString(10)
                }
                toHexString() {
                    return this._hex
                }
                toJSON(e) {
                    return {
                        type: "BigNumber",
                        hex: this.toHexString()
                    }
                }
                static from(e) {
                    if (e instanceof p) return e;
                    if ("string" == typeof e) return e.match(/^-?0x[0-9a-f]+$/i) ? new p(d, m(e)) : e.match(/^-?[0-9]+$/) ? new p(d, m(new u(e))) : c.throwArgumentError("invalid BigNumber string", "value", e);
                    if ("number" == typeof e) return e % 1 && y("underflow", "BigNumber.from", e), (e >= 9007199254740991 || e <= -9007199254740991) && y("overflow", "BigNumber.from", e), p.from(String(e));
                    if ("bigint" == typeof e) return p.from(e.toString());
                    if ((0, a.isBytes)(e)) return p.from((0, a.hexlify)(e));
                    if (e) {
                        if (e.toHexString) {
                            let r = e.toHexString();
                            if ("string" == typeof r) return p.from(r)
                        } else {
                            let n = e._hex;
                            if (null == n && "BigNumber" === e.type && (n = e.hex), "string" == typeof n && ((0, a.isHexString)(n) || "-" === n[0] && (0, a.isHexString)(n.substring(1)))) return p.from(n)
                        }
                    }
                    return c.throwArgumentError("invalid BigNumber value", "value", e)
                }
                static isBigNumber(e) {
                    return !!(e && e._isBigNumber)
                }
            }

            function m(e) {
                if ("string" != typeof e) return m(e.toString(16));
                if ("-" === e[0]) return ("-" === (e = e.substring(1))[0] && c.throwArgumentError("invalid hex", "value", e), "0x00" === (e = m(e))) ? e : "-" + e;
                if ("0x" !== e.substring(0, 2) && (e = "0x" + e), "0x" === e) return "0x00";
                for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && "0x00" === e.substring(0, 4);) e = "0x" + e.substring(4);
                return e
            }

            function g(e) {
                return p.from(m(e))
            }

            function v(e) {
                let r = p.from(e).toHexString();
                return "-" === r[0] ? new u("-" + r.substring(3), 16) : new u(r.substring(2), 16)
            }

            function y(e, r, n) {
                let i = {
                    fault: e,
                    operation: r
                };
                return null != n && (i.value = n), c.throwError(e, s.Logger.errors.NUMERIC_FAULT, i)
            }

            function b(e) {
                return new u(e, 36).toString(16)
            }

            function w(e) {
                return new u(e, 16).toString(36)
            }
        },
        16441: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                arrayify: function() {
                    return d
                },
                concat: function() {
                    return h
                },
                hexConcat: function() {
                    return w
                },
                hexDataLength: function() {
                    return y
                },
                hexDataSlice: function() {
                    return b
                },
                hexStripZeros: function() {
                    return E
                },
                hexValue: function() {
                    return x
                },
                hexZeroPad: function() {
                    return C
                },
                hexlify: function() {
                    return v
                },
                isBytes: function() {
                    return c
                },
                isBytesLike: function() {
                    return l
                },
                isHexString: function() {
                    return m
                },
                joinSignature: function() {
                    return k
                },
                splitSignature: function() {
                    return A
                },
                stripZeros: function() {
                    return f
                },
                zeroPad: function() {
                    return p
                }
            });
            var i = n(1581);
            let o = new i.Logger("bytes/5.7.0");

            function a(e) {
                return !!e.toHexString
            }

            function s(e) {
                return e.slice || (e.slice = function() {
                    let r = Array.prototype.slice.call(arguments);
                    return s(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function l(e) {
                return m(e) && !(e.length % 2) || c(e)
            }

            function u(e) {
                return "number" == typeof e && e == e && e % 1 == 0
            }

            function c(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" == typeof e || !u(e.length) || e.length < 0) return !1;
                for (let r = 0; r < e.length; r++) {
                    let n = e[r];
                    if (!u(n) || n < 0 || n >= 256) return !1
                }
                return !0
            }

            function d(e, r) {
                if (r || (r = {}), "number" == typeof e) {
                    o.checkSafeUint53(e, "invalid arrayify value");
                    let n = [];
                    for (; e;) n.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === n.length && n.push(0), s(new Uint8Array(n))
                }
                if (r.allowMissingPrefix && "string" == typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), a(e) && (e = e.toHexString()), m(e)) {
                    let i = e.substring(2);
                    i.length % 2 && ("left" === r.hexPad ? i = "0" + i : "right" === r.hexPad ? i += "0" : o.throwArgumentError("hex data is odd-length", "value", e));
                    let l = [];
                    for (let u = 0; u < i.length; u += 2) l.push(parseInt(i.substring(u, u + 2), 16));
                    return s(new Uint8Array(l))
                }
                return c(e) ? s(new Uint8Array(e)) : o.throwArgumentError("invalid arrayify value", "value", e)
            }

            function h(e) {
                let r = e.map(e => d(e)),
                    n = r.reduce((e, r) => e + r.length, 0),
                    i = new Uint8Array(n);
                return r.reduce((e, r) => (i.set(r, e), e + r.length), 0), s(i)
            }

            function f(e) {
                let r = d(e);
                if (0 === r.length) return r;
                let n = 0;
                for (; n < r.length && 0 === r[n];) n++;
                return n && (r = r.slice(n)), r
            }

            function p(e, r) {
                (e = d(e)).length > r && o.throwArgumentError("value out of range", "value", arguments[0]);
                let n = new Uint8Array(r);
                return n.set(e, r - e.length), s(n)
            }

            function m(e, r) {
                return "string" == typeof e && !!e.match(/^0x[0-9A-Fa-f]*$/) && (!r || e.length === 2 + 2 * r)
            }
            let g = "0123456789abcdef";

            function v(e, r) {
                if (r || (r = {}), "number" == typeof e) {
                    o.checkSafeUint53(e, "invalid hexlify value");
                    let n = "";
                    for (; e;) n = g[15 & e] + n, e = Math.floor(e / 16);
                    return n.length ? (n.length % 2 && (n = "0" + n), "0x" + n) : "0x00"
                }
                if ("bigint" == typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" == typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), a(e)) return e.toHexString();
                if (m(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : o.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (c(e)) {
                    let i = "0x";
                    for (let s = 0; s < e.length; s++) {
                        let l = e[s];
                        i += g[(240 & l) >> 4] + g[15 & l]
                    }
                    return i
                }
                return o.throwArgumentError("invalid hexlify value", "value", e)
            }

            function y(e) {
                if ("string" != typeof e) e = v(e);
                else if (!m(e) || e.length % 2) return null;
                return (e.length - 2) / 2
            }

            function b(e, r, n) {
                return ("string" != typeof e ? e = v(e) : (!m(e) || e.length % 2) && o.throwArgumentError("invalid hexData", "value", e), r = 2 + 2 * r, null != n) ? "0x" + e.substring(r, 2 + 2 * n) : "0x" + e.substring(r)
            }

            function w(e) {
                let r = "0x";
                return e.forEach(e => {
                    r += v(e).substring(2)
                }), r
            }

            function x(e) {
                let r = E(v(e, {
                    hexPad: "left"
                }));
                return "0x" === r ? "0x0" : r
            }

            function E(e) {
                "string" != typeof e && (e = v(e)), m(e) || o.throwArgumentError("invalid hex string", "value", e), e = e.substring(2);
                let r = 0;
                for (; r < e.length && "0" === e[r];) r++;
                return "0x" + e.substring(r)
            }

            function C(e, r) {
                for ("string" != typeof e ? e = v(e) : m(e) || o.throwArgumentError("invalid hex string", "value", e), e.length > 2 * r + 2 && o.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * r + 2;) e = "0x0" + e.substring(2);
                return e
            }

            function A(e) {
                let r = {
                    r: "0x",
                    s: "0x",
                    _vs: "0x",
                    recoveryParam: 0,
                    v: 0,
                    yParityAndS: "0x",
                    compact: "0x"
                };
                if (l(e)) {
                    let n = d(e);
                    64 === n.length ? (r.v = 27 + (n[32] >> 7), n[32] &= 127, r.r = v(n.slice(0, 32)), r.s = v(n.slice(32, 64))) : 65 === n.length ? (r.r = v(n.slice(0, 32)), r.s = v(n.slice(32, 64)), r.v = n[64]) : o.throwArgumentError("invalid signature string", "signature", e), r.v < 27 && (0 === r.v || 1 === r.v ? r.v += 27 : o.throwArgumentError("signature invalid v byte", "signature", e)), r.recoveryParam = 1 - r.v % 2, r.recoveryParam && (n[32] |= 128), r._vs = v(n.slice(32, 64))
                } else {
                    if (r.r = e.r, r.s = e.s, r.v = e.v, r.recoveryParam = e.recoveryParam, r._vs = e._vs, null != r._vs) {
                        let i = p(d(r._vs), 32);
                        r._vs = v(i);
                        let a = i[0] >= 128 ? 1 : 0;
                        null == r.recoveryParam ? r.recoveryParam = a : r.recoveryParam !== a && o.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e), i[0] &= 127;
                        let s = v(i);
                        null == r.s ? r.s = s : r.s !== s && o.throwArgumentError("signature v mismatch _vs", "signature", e)
                    }
                    if (null == r.recoveryParam) null == r.v ? o.throwArgumentError("signature missing v and recoveryParam", "signature", e) : 0 === r.v || 1 === r.v ? r.recoveryParam = r.v : r.recoveryParam = 1 - r.v % 2;
                    else if (null == r.v) r.v = 27 + r.recoveryParam;
                    else {
                        let u = 0 === r.v || 1 === r.v ? r.v : 1 - r.v % 2;
                        r.recoveryParam !== u && o.throwArgumentError("signature recoveryParam mismatch v", "signature", e)
                    }
                    null != r.r && m(r.r) ? r.r = C(r.r, 32) : o.throwArgumentError("signature missing or invalid r", "signature", e), null != r.s && m(r.s) ? r.s = C(r.s, 32) : o.throwArgumentError("signature missing or invalid s", "signature", e);
                    let c = d(r.s);
                    c[0] >= 128 && o.throwArgumentError("signature s out of range", "signature", e), r.recoveryParam && (c[0] |= 128);
                    let h = v(c);
                    r._vs && (m(r._vs) || o.throwArgumentError("signature invalid _vs", "signature", e), r._vs = C(r._vs, 32)), null == r._vs ? r._vs = h : r._vs !== h && o.throwArgumentError("signature _vs mismatch v and s", "signature", e)
                }
                return r.yParityAndS = r._vs, r.compact = r.r + r.yParityAndS.substring(2), r
            }

            function k(e) {
                return v(h([(e = A(e)).r, e.s, e.recoveryParam ? "0x1c" : "0x1b"]))
            }
        },
        9279: function(e, r, n) {
            "use strict";
            n.d(r, {
                d: function() {
                    return i
                }
            });
            let i = "0x0000000000000000000000000000000000000000"
        },
        21046: function(e, r, n) {
            "use strict";
            n.d(r, {
                Bz: function() {
                    return l
                },
                _Y: function() {
                    return a
                },
                fh: function() {
                    return s
                },
                tL: function() {
                    return o
                }
            });
            var i = n(2593);
            let o = i.O$.from(-1),
                a = i.O$.from(0),
                s = i.O$.from(1),
                l = i.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
        },
        57218: function(e, r, n) {
            "use strict";
            n.d(r, {
                R: function() {
                    return i
                }
            });
            let i = "0x0000000000000000000000000000000000000000000000000000000000000000"
        },
        64146: function(e, r, n) {
            "use strict";
            n.d(r, {
                CH: function() {
                    return S
                }
            });
            var i = n(61184),
                o = n(8198),
                a = n(81556),
                s = n(48088),
                l = n(19485),
                u = n(2593),
                c = n(16441),
                d = n(6881),
                h = n(83875),
                f = n(1581),
                p = function(e, r, n, i) {
                    return new(n || (n = Promise))(function(o, a) {
                        function s(e) {
                            try {
                                u(i.next(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function l(e) {
                            try {
                                u(i.throw(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? o(e.value) : ((r = e.value) instanceof n ? r : new n(function(e) {
                                e(r)
                            })).then(s, l)
                        }
                        u((i = i.apply(e, r || [])).next())
                    })
                };
            let m = new f.Logger("contracts/5.7.0");

            function g(e, r) {
                return p(this, void 0, void 0, function*() {
                    let n = yield r;
                    "string" != typeof n && m.throwArgumentError("invalid address or ENS name", "name", n);
                    try {
                        return (0, l.getAddress)(n)
                    } catch (i) {}
                    e || m.throwError("a provider or signer is needed to resolve ENS names", f.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "resolveName"
                    });
                    let o = yield e.resolveName(n);
                    return null == o && m.throwArgumentError("resolver or addr is not configured for ENS name", "name", n), o
                })
            }

            function v(e, r, n) {
                return p(this, void 0, void 0, function*() {
                    let i = {};
                    n.length === r.inputs.length + 1 && "object" == typeof n[n.length - 1] && (i = (0, d.shallowCopy)(n.pop())), m.checkArgumentCount(n.length, r.inputs.length, "passed to contract"), e.signer ? i.from ? i.from = (0, d.resolveProperties)({
                        override: g(e.signer, i.from),
                        signer: e.signer.getAddress()
                    }).then(e => p(this, void 0, void 0, function*() {
                        return (0, l.getAddress)(e.signer) !== e.override && m.throwError("Contract with a Signer cannot override from", f.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "overrides.from"
                        }), e.override
                    })) : i.from = e.signer.getAddress() : i.from && (i.from = g(e.provider, i.from));
                    let o = yield(0, d.resolveProperties)({
                        args: function e(r, n, i) {
                            return p(this, void 0, void 0, function*() {
                                return Array.isArray(i) ? yield Promise.all(i.map((i, o) => e(r, Array.isArray(n) ? n[o] : n[i.name], i))): "address" === i.type ? yield g(r, n): "tuple" === i.type ? yield e(r, n, i.components): "array" === i.baseType ? Array.isArray(n) ? yield Promise.all(n.map(n => e(r, n, i.arrayChildren))): Promise.reject(m.makeError("invalid value for array", f.Logger.errors.INVALID_ARGUMENT, {
                                    argument: "value",
                                    value: n
                                })): n
                            })
                        }(e.signer || e.provider, n, r.inputs),
                        address: e.resolvedAddress,
                        overrides: (0, d.resolveProperties)(i) || {}
                    }), a = e.interface.encodeFunctionData(r, o.args), s = {
                        data: a,
                        to: o.address
                    }, v = o.overrides;
                    if (null != v.nonce && (s.nonce = u.O$.from(v.nonce).toNumber()), null != v.gasLimit && (s.gasLimit = u.O$.from(v.gasLimit)), null != v.gasPrice && (s.gasPrice = u.O$.from(v.gasPrice)), null != v.maxFeePerGas && (s.maxFeePerGas = u.O$.from(v.maxFeePerGas)), null != v.maxPriorityFeePerGas && (s.maxPriorityFeePerGas = u.O$.from(v.maxPriorityFeePerGas)), null != v.from && (s.from = v.from), null != v.type && (s.type = v.type), null != v.accessList && (s.accessList = (0, h.accessListify)(v.accessList)), null == s.gasLimit && null != r.gas) {
                        let y = 21e3,
                            b = (0, c.arrayify)(a);
                        for (let w = 0; w < b.length; w++) y += 4, b[w] && (y += 64);
                        s.gasLimit = u.O$.from(r.gas).add(y)
                    }
                    if (v.value) {
                        let x = u.O$.from(v.value);
                        x.isZero() || r.payable || m.throwError("non-payable method cannot override value", f.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "overrides.value",
                            value: i.value
                        }), s.value = x
                    }
                    v.customData && (s.customData = (0, d.shallowCopy)(v.customData)), v.ccipReadEnabled && (s.ccipReadEnabled = !!v.ccipReadEnabled), delete i.nonce, delete i.gasLimit, delete i.gasPrice, delete i.from, delete i.value, delete i.type, delete i.accessList, delete i.maxFeePerGas, delete i.maxPriorityFeePerGas, delete i.customData, delete i.ccipReadEnabled;
                    let E = Object.keys(i).filter(e => null != i[e]);
                    return E.length && m.throwError(`cannot override ${E.map(e=>JSON.stringify(e)).join(",")}`, f.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "overrides",
                        overrides: E
                    }), s
                })
            }

            function y(e, r, n) {
                let i = e.signer || e.provider;
                return function(...o) {
                    return p(this, void 0, void 0, function*() {
                        let a;
                        if (o.length === r.inputs.length + 1 && "object" == typeof o[o.length - 1]) {
                            let s = (0, d.shallowCopy)(o.pop());
                            null != s.blockTag && (a = yield s.blockTag), delete s.blockTag, o.push(s)
                        }
                        null != e.deployTransaction && (yield e._deployed(a));
                        let l = yield v(e, r, o), u = yield i.call(l, a);
                        try {
                            let c = e.interface.decodeFunctionResult(r, u);
                            return n && 1 === r.outputs.length && (c = c[0]), c
                        } catch (h) {
                            throw h.code === f.Logger.errors.CALL_EXCEPTION && (h.address = e.address, h.args = o, h.transaction = l), h
                        }
                    })
                }
            }

            function b(e, r, n) {
                return r.constant ? y(e, r, n) : function(...n) {
                    return p(this, void 0, void 0, function*() {
                        e.signer || m.throwError("sending a transaction requires a signer", f.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "sendTransaction"
                        }), null != e.deployTransaction && (yield e._deployed());
                        let i = yield v(e, r, n), o = yield e.signer.sendTransaction(i);
                        return function(e, r) {
                            let n = r.wait.bind(r);
                            r.wait = r => n(r).then(r => (r.events = r.logs.map(n => {
                                let i = (0, d.deepCopy)(n),
                                    o = null;
                                try {
                                    o = e.interface.parseLog(n)
                                } catch (a) {}
                                return o && (i.args = o.args, i.decode = (r, n) => e.interface.decodeEventLog(o.eventFragment, r, n), i.event = o.name, i.eventSignature = o.signature), i.removeListener = () => e.provider, i.getBlock = () => e.provider.getBlock(r.blockHash), i.getTransaction = () => e.provider.getTransaction(r.transactionHash), i.getTransactionReceipt = () => Promise.resolve(r), i
                            }), r))
                        }(e, o), o
                    })
                }
            }

            function w(e) {
                return e.address && (null == e.topics || 0 === e.topics.length) ? "*" : (e.address || "*") + "@" + (e.topics ? e.topics.map(e => Array.isArray(e) ? e.join("|") : e).join(":") : "")
            }
            class x {
                constructor(e, r) {
                    (0, d.defineReadOnly)(this, "tag", e), (0, d.defineReadOnly)(this, "filter", r), this._listeners = []
                }
                addListener(e, r) {
                    this._listeners.push({
                        listener: e,
                        once: r
                    })
                }
                removeListener(e) {
                    let r = !1;
                    this._listeners = this._listeners.filter(n => !!r || n.listener !== e || (r = !0, !1))
                }
                removeAllListeners() {
                    this._listeners = []
                }
                listeners() {
                    return this._listeners.map(e => e.listener)
                }
                listenerCount() {
                    return this._listeners.length
                }
                run(e) {
                    let r = this.listenerCount();
                    return this._listeners = this._listeners.filter(r => {
                        let n = e.slice();
                        return setTimeout(() => {
                            r.listener.apply(this, n)
                        }, 0), !r.once
                    }), r
                }
                prepareEvent(e) {}
                getEmit(e) {
                    return [e]
                }
            }
            class E extends x {
                constructor() {
                    super("error", null)
                }
            }
            class C extends x {
                constructor(e, r, n, i) {
                    let o = {
                            address: e
                        },
                        a = r.getEventTopic(n);
                    i ? (a !== i[0] && m.throwArgumentError("topic mismatch", "topics", i), o.topics = i.slice()) : o.topics = [a], super(w(o), o), (0, d.defineReadOnly)(this, "address", e), (0, d.defineReadOnly)(this, "interface", r), (0, d.defineReadOnly)(this, "fragment", n)
                }
                prepareEvent(e) {
                    super.prepareEvent(e), e.event = this.fragment.name, e.eventSignature = this.fragment.format(), e.decode = (e, r) => this.interface.decodeEventLog(this.fragment, e, r);
                    try {
                        e.args = this.interface.decodeEventLog(this.fragment, e.data, e.topics)
                    } catch (r) {
                        e.args = null, e.decodeError = r
                    }
                }
                getEmit(e) {
                    let r = (0, i.BR)(e.args);
                    if (r.length) throw r[0].error;
                    let n = (e.args || []).slice();
                    return n.push(e), n
                }
            }
            class A extends x {
                constructor(e, r) {
                    super("*", {
                        address: e
                    }), (0, d.defineReadOnly)(this, "address", e), (0, d.defineReadOnly)(this, "interface", r)
                }
                prepareEvent(e) {
                    super.prepareEvent(e);
                    try {
                        let r = this.interface.parseLog(e);
                        e.event = r.name, e.eventSignature = r.signature, e.decode = (e, n) => this.interface.decodeEventLog(r.eventFragment, e, n), e.args = r.args
                    } catch (n) {}
                }
            }
            class k {
                constructor(e, r, n) {
                    (0, d.defineReadOnly)(this, "interface", (0, d.getStatic)(new.target, "getInterface")(r)), null == n ? ((0, d.defineReadOnly)(this, "provider", null), (0, d.defineReadOnly)(this, "signer", null)) : s.E.isSigner(n) ? ((0, d.defineReadOnly)(this, "provider", n.provider || null), (0, d.defineReadOnly)(this, "signer", n)) : a.zt.isProvider(n) ? ((0, d.defineReadOnly)(this, "provider", n), (0, d.defineReadOnly)(this, "signer", null)) : m.throwArgumentError("invalid signer or provider", "signerOrProvider", n), (0, d.defineReadOnly)(this, "callStatic", {}), (0, d.defineReadOnly)(this, "estimateGas", {}), (0, d.defineReadOnly)(this, "functions", {}), (0, d.defineReadOnly)(this, "populateTransaction", {}), (0, d.defineReadOnly)(this, "filters", {}); {
                        let i = {};
                        Object.keys(this.interface.events).forEach(e => {
                            let r = this.interface.events[e];
                            (0, d.defineReadOnly)(this.filters, e, (...e) => ({
                                address: this.address,
                                topics: this.interface.encodeFilterTopics(r, e)
                            })), i[r.name] || (i[r.name] = []), i[r.name].push(e)
                        }), Object.keys(i).forEach(e => {
                            let r = i[e];
                            1 === r.length ? (0, d.defineReadOnly)(this.filters, e, this.filters[r[0]]) : m.warn(`Duplicate definition of ${e} (${r.join(", ")})`)
                        })
                    }
                    if ((0, d.defineReadOnly)(this, "_runningEvents", {}), (0, d.defineReadOnly)(this, "_wrappedEmits", {}), null == e && m.throwArgumentError("invalid contract address or ENS name", "addressOrName", e), (0, d.defineReadOnly)(this, "address", e), this.provider)(0, d.defineReadOnly)(this, "resolvedAddress", g(this.provider, e));
                    else try {
                        (0, d.defineReadOnly)(this, "resolvedAddress", Promise.resolve((0, l.getAddress)(e)))
                    } catch (o) {
                        m.throwError("provider is required to use ENS name as contract address", f.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "new Contract"
                        })
                    }
                    this.resolvedAddress.catch(e => {});
                    let u = {},
                        c = {};
                    Object.keys(this.interface.functions).forEach(e => {
                        let r = this.interface.functions[e];
                        if (c[e]) {
                            m.warn(`Duplicate ABI entry for ${JSON.stringify(e)}`);
                            return
                        }
                        c[e] = !0; {
                            let n = r.name;
                            u[`%${n}`] || (u[`%${n}`] = []), u[`%${n}`].push(e)
                        }
                        if (null == this[e] && (0, d.defineReadOnly)(this, e, b(this, r, !0)), null == this.functions[e] && (0, d.defineReadOnly)(this.functions, e, b(this, r, !1)), null == this.callStatic[e] && (0, d.defineReadOnly)(this.callStatic, e, y(this, r, !0)), null == this.populateTransaction[e]) {
                            var i;
                            (0, d.defineReadOnly)(this.populateTransaction, e, (i = this, function(...e) {
                                return v(i, r, e)
                            }))
                        }
                        null == this.estimateGas[e] && (0, d.defineReadOnly)(this.estimateGas, e, function(e, r) {
                            let n = e.signer || e.provider;
                            return function(...i) {
                                return p(this, void 0, void 0, function*() {
                                    n || m.throwError("estimate require a provider or signer", f.Logger.errors.UNSUPPORTED_OPERATION, {
                                        operation: "estimateGas"
                                    });
                                    let o = yield v(e, r, i);
                                    return yield n.estimateGas(o)
                                })
                            }
                        }(this, r))
                    }), Object.keys(u).forEach(e => {
                        let r = u[e];
                        if (r.length > 1) return;
                        e = e.substring(1);
                        let n = r[0];
                        try {
                            null == this[e] && (0, d.defineReadOnly)(this, e, this[n])
                        } catch (i) {}
                        null == this.functions[e] && (0, d.defineReadOnly)(this.functions, e, this.functions[n]), null == this.callStatic[e] && (0, d.defineReadOnly)(this.callStatic, e, this.callStatic[n]), null == this.populateTransaction[e] && (0, d.defineReadOnly)(this.populateTransaction, e, this.populateTransaction[n]), null == this.estimateGas[e] && (0, d.defineReadOnly)(this.estimateGas, e, this.estimateGas[n])
                    })
                }
                static getContractAddress(e) {
                    return (0, l.getContractAddress)(e)
                }
                static getInterface(e) {
                    return o.vU.isInterface(e) ? e : new o.vU(e)
                }
                deployed() {
                    return this._deployed()
                }
                _deployed(e) {
                    return this._deployedPromise || (this.deployTransaction ? this._deployedPromise = this.deployTransaction.wait().then(() => this) : this._deployedPromise = this.provider.getCode(this.address, e).then(e => ("0x" === e && m.throwError("contract not deployed", f.Logger.errors.UNSUPPORTED_OPERATION, {
                        contractAddress: this.address,
                        operation: "getDeployed"
                    }), this))), this._deployedPromise
                }
                fallback(e) {
                    this.signer || m.throwError("sending a transactions require a signer", f.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "sendTransaction(fallback)"
                    });
                    let r = (0, d.shallowCopy)(e || {});
                    return ["from", "to"].forEach(function(e) {
                        null != r[e] && m.throwError("cannot override " + e, f.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: e
                        })
                    }), r.to = this.resolvedAddress, this.deployed().then(() => this.signer.sendTransaction(r))
                }
                connect(e) {
                    "string" == typeof e && (e = new s.b(e, this.provider));
                    let r = new this.constructor(this.address, this.interface, e);
                    return this.deployTransaction && (0, d.defineReadOnly)(r, "deployTransaction", this.deployTransaction), r
                }
                attach(e) {
                    return new this.constructor(e, this.interface, this.signer || this.provider)
                }
                static isIndexed(e) {
                    return o.Hk.isIndexed(e)
                }
                _normalizeRunningEvent(e) {
                    return this._runningEvents[e.tag] ? this._runningEvents[e.tag] : e
                }
                _getRunningEvent(e) {
                    if ("string" == typeof e) {
                        if ("error" === e) return this._normalizeRunningEvent(new E);
                        if ("event" === e) return this._normalizeRunningEvent(new x("event", null));
                        if ("*" === e) return this._normalizeRunningEvent(new A(this.address, this.interface));
                        let r = this.interface.getEvent(e);
                        return this._normalizeRunningEvent(new C(this.address, this.interface, r))
                    }
                    if (e.topics && e.topics.length > 0) {
                        try {
                            let n = e.topics[0];
                            if ("string" != typeof n) throw Error("invalid topic");
                            let i = this.interface.getEvent(n);
                            return this._normalizeRunningEvent(new C(this.address, this.interface, i, e.topics))
                        } catch (o) {}
                        let a = {
                            address: this.address,
                            topics: e.topics
                        };
                        return this._normalizeRunningEvent(new x(w(a), a))
                    }
                    return this._normalizeRunningEvent(new A(this.address, this.interface))
                }
                _checkRunningEvents(e) {
                    if (0 === e.listenerCount()) {
                        delete this._runningEvents[e.tag];
                        let r = this._wrappedEmits[e.tag];
                        r && e.filter && (this.provider.off(e.filter, r), delete this._wrappedEmits[e.tag])
                    }
                }
                _wrapEvent(e, r, n) {
                    let i = (0, d.deepCopy)(r);
                    return i.removeListener = () => {
                        n && (e.removeListener(n), this._checkRunningEvents(e))
                    }, i.getBlock = () => this.provider.getBlock(r.blockHash), i.getTransaction = () => this.provider.getTransaction(r.transactionHash), i.getTransactionReceipt = () => this.provider.getTransactionReceipt(r.transactionHash), e.prepareEvent(i), i
                }
                _addEventListener(e, r, n) {
                    if (this.provider || m.throwError("events require a provider or a signer with a provider", f.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "once"
                        }), e.addListener(r, n), this._runningEvents[e.tag] = e, !this._wrappedEmits[e.tag]) {
                        let i = n => {
                            let i = this._wrapEvent(e, n, r);
                            if (null == i.decodeError) try {
                                let o = e.getEmit(i);
                                this.emit(e.filter, ...o)
                            } catch (a) {
                                i.decodeError = a.error
                            }
                            null != e.filter && this.emit("event", i), null != i.decodeError && this.emit("error", i.decodeError, i)
                        };
                        this._wrappedEmits[e.tag] = i, null != e.filter && this.provider.on(e.filter, i)
                    }
                }
                queryFilter(e, r, n) {
                    let i = this._getRunningEvent(e),
                        o = (0, d.shallowCopy)(i.filter);
                    return "string" == typeof r && (0, c.isHexString)(r, 32) ? (null != n && m.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", n), o.blockHash = r) : (o.fromBlock = null != r ? r : 0, o.toBlock = null != n ? n : "latest"), this.provider.getLogs(o).then(e => e.map(e => this._wrapEvent(i, e, null)))
                }
                on(e, r) {
                    return this._addEventListener(this._getRunningEvent(e), r, !1), this
                }
                once(e, r) {
                    return this._addEventListener(this._getRunningEvent(e), r, !0), this
                }
                emit(e, ...r) {
                    if (!this.provider) return !1;
                    let n = this._getRunningEvent(e),
                        i = n.run(r) > 0;
                    return this._checkRunningEvents(n), i
                }
                listenerCount(e) {
                    return this.provider ? null == e ? Object.keys(this._runningEvents).reduce((e, r) => e + this._runningEvents[r].listenerCount(), 0) : this._getRunningEvent(e).listenerCount() : 0
                }
                listeners(e) {
                    if (!this.provider) return [];
                    if (null == e) {
                        let r = [];
                        for (let n in this._runningEvents) this._runningEvents[n].listeners().forEach(e => {
                            r.push(e)
                        });
                        return r
                    }
                    return this._getRunningEvent(e).listeners()
                }
                removeAllListeners(e) {
                    if (!this.provider) return this;
                    if (null == e) {
                        for (let r in this._runningEvents) {
                            let n = this._runningEvents[r];
                            n.removeAllListeners(), this._checkRunningEvents(n)
                        }
                        return this
                    }
                    let i = this._getRunningEvent(e);
                    return i.removeAllListeners(), this._checkRunningEvents(i), this
                }
                off(e, r) {
                    if (!this.provider) return this;
                    let n = this._getRunningEvent(e);
                    return n.removeListener(r), this._checkRunningEvents(n), this
                }
                removeListener(e, r) {
                    return this.off(e, r)
                }
            }
            class S extends k {}
        },
        35644: function(e, r, n) {
            "use strict";
            n.d(r, {
                i: function() {
                    return i
                }
            });
            let i = "hash/5.7.0"
        },
        32046: function(e, r, n) {
            "use strict";
            n.d(r, {
                id: function() {
                    return a
                }
            });
            var i = n(38197),
                o = n(29251);

            function a(e) {
                return (0, i.keccak256)((0, o.Y0)(e))
            }
        },
        75931: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                _TypedDataEncoder: function() {
                    return s.E
                },
                dnsEncode: function() {
                    return o.Kn
                },
                ensNormalize: function() {
                    return o.w3
                },
                hashMessage: function() {
                    return a.r
                },
                id: function() {
                    return i.id
                },
                isValidName: function() {
                    return o.r1
                },
                messagePrefix: function() {
                    return a.B
                },
                namehash: function() {
                    return o.VM
                }
            });
            var i = n(32046),
                o = n(27586),
                a = n(93684),
                s = n(67827)
        },
        93684: function(e, r, n) {
            "use strict";
            n.d(r, {
                B: function() {
                    return s
                },
                r: function() {
                    return l
                }
            });
            var i = n(16441),
                o = n(38197),
                a = n(29251);
            let s = "\x19Ethereum Signed Message:\n";

            function l(e) {
                return "string" == typeof e && (e = (0, a.Y0)(e)), (0, o.keccak256)((0, i.concat)([(0, a.Y0)(s), (0, a.Y0)(String(e.length)), e]))
            }
        },
        27586: function(e, r, n) {
            "use strict";
            let i, o;
            n.d(r, {
                Kn: function() {
                    return R
                },
                w3: function() {
                    return P
                },
                r1: function() {
                    return j
                },
                VM: function() {
                    return T
                }
            });
            var a, s = n(16441),
                l = n(29251),
                u = n(38197),
                c = n(1581),
                d = n(35644),
                h = n(59567);

            function f(e, r) {
                null == r && (r = 1);
                let n = [],
                    i = n.forEach,
                    o = function(e, r) {
                        i.call(e, function(e) {
                            r > 0 && Array.isArray(e) ? o(e, r - 1) : n.push(e)
                        })
                    };
                return o(e, r), n
            }

            function p(e, r) {
                let n = Array(e);
                for (let i = 0, o = -1; i < e; i++) n[i] = o += 1 + r();
                return n
            }

            function m(e, r) {
                let n = p(e(), e),
                    i = e(),
                    o = p(i, e),
                    a = function(e, r) {
                        let n = Array(e);
                        for (let i = 0; i < e; i++) n[i] = 1 + r();
                        return n
                    }(i, e);
                for (let s = 0; s < i; s++)
                    for (let l = 0; l < a[s]; l++) n.push(o[s] + l);
                return r ? n.map(e => r[e]) : n
            }

            function g(e, r, n) {
                let i = Array(e).fill(void 0).map(() => []);
                for (let o = 0; o < r; o++)(function(e, r) {
                    let n = Array(e);
                    for (let i = 0, o = 0; i < e; i++) {
                        var a;
                        n[i] = o += 1 & (a = r()) ? ~a >> 1 : a >> 1
                    }
                    return n
                })(e, n).forEach((e, r) => i[r].push(e));
                return i
            }
            let v = (a = function(e) {
                    let r = 0;

                    function n() {
                        return e[r++] << 8 | e[r++]
                    }
                    let i = n(),
                        o = 1,
                        a = [0, 1];
                    for (let s = 1; s < i; s++) a.push(o += n());
                    let l = n(),
                        u = r;
                    r += l;
                    let c = 0,
                        d = 0;

                    function h() {
                        return 0 == c && (d = d << 8 | e[r++], c = 8), d >> --c & 1
                    }
                    let f = 0;
                    for (let p = 0; p < 31; p++) f = f << 1 | h();
                    let m = [],
                        g = 0,
                        v = 2147483648;
                    for (;;) {
                        let y = Math.floor(((f - g + 1) * o - 1) / v),
                            b = 0,
                            w = i;
                        for (; w - b > 1;) {
                            let x = b + w >>> 1;
                            y < a[x] ? w = x : b = x
                        }
                        if (0 == b) break;
                        m.push(b);
                        let E = g + Math.floor(v * a[b] / o),
                            C = g + Math.floor(v * a[b + 1] / o) - 1;
                        for (;
                            ((E ^ C) & 1073741824) == 0;) f = f << 1 & 2147483647 | h(), E = E << 1 & 2147483647, C = C << 1 & 2147483647 | 1;
                        for (; E & ~C & 536870912;) f = 1073741824 & f | f << 1 & 1073741823 | h(), E = E << 1 ^ 1073741824, C = (1073741824 ^ C) << 1 | 1073741825;
                        g = E, v = 1 + C - E
                    }
                    let A = i - 4;
                    return m.map(r => {
                        switch (r - A) {
                            case 3:
                                return A + 65792 + (e[u++] << 16 | e[u++] << 8 | e[u++]);
                            case 2:
                                return A + 256 + (e[u++] << 8 | e[u++]);
                            case 1:
                                return A + e[u++];
                            default:
                                return r - 1
                        }
                    })
                }((0, h.J)("")), o = 0, () => a[o++]),
                y = new Set(m(v)),
                b = new Set(m(v)),
                w = function(e) {
                    let r = [];
                    for (;;) {
                        let n = e();
                        if (0 == n) break;
                        r.push(function(e, r) {
                            let n = 1 + r(),
                                i = r(),
                                o = function(e) {
                                    let r = [];
                                    for (;;) {
                                        let n = e();
                                        if (0 == n) break;
                                        r.push(n)
                                    }
                                    return r
                                }(r);
                            return f(g(o.length, 1 + e, r).map((e, r) => {
                                let a = e[0],
                                    s = e.slice(1);
                                return Array(o[r]).fill(void 0).map((e, r) => {
                                    let o = r * i;
                                    return [a + r * n, s.map(e => e + o)]
                                })
                            }))
                        }(n, e))
                    }
                    for (;;) {
                        let i = e() - 1;
                        if (i < 0) break;
                        r.push(g(1 + e(), 1 + i, e).map(e => [e[0], e.slice(1)]))
                    }
                    return function(e) {
                        let r = {};
                        for (let n = 0; n < e.length; n++) {
                            let i = e[n];
                            r[i[0]] = i[1]
                        }
                        return r
                    }(f(r))
                }(v),
                x = (i = m(v).sort((e, r) => e - r), function e() {
                    let r = [];
                    for (;;) {
                        let n = m(v, i);
                        if (0 == n.length) break;
                        r.push({
                            set: new Set(n),
                            node: e()
                        })
                    }
                    r.sort((e, r) => r.set.size - e.set.size);
                    let o = v(),
                        a = o % 3,
                        s = !!(1 & (o = o / 3 | 0)),
                        l = 1 == (o >>= 1),
                        u = 2 == o;
                    return {
                        branches: r,
                        valid: a,
                        fe0f: s,
                        save: l,
                        check: u
                    }
                }());

            function E(e) {
                return e.filter(e => 65039 != e)
            }

            function C(e) {
                for (let r of e.split(".")) {
                    var n;
                    let i = (n = r, (0, l.XL)(n));
                    try {
                        for (let o = i.lastIndexOf(95) - 1; o >= 0; o--)
                            if (95 !== i[o]) throw Error("underscore only allowed at start");
                        if (i.length >= 4 && i.every(e => e < 128) && 45 === i[2] && 45 === i[3]) throw Error("invalid label extension")
                    } catch (a) {
                        throw Error(`Invalid label "${r}": ${a.message}`)
                    }
                }
                return e
            }
            let A = new c.Logger(d.i),
                k = new Uint8Array(32);

            function S(e) {
                if (0 === e.length) throw Error("invalid ENS name; empty component");
                return e
            }

            function _(e) {
                let r = (0, l.Y0)(C(function(e, r) {
                        let n = (0, l.XL)(e).reverse(),
                            i = [];
                        for (; n.length;) {
                            let o = function(e, r) {
                                var n;
                                let i, o;
                                let a = x,
                                    s = [],
                                    l = e.length;
                                for (r && (r.length = 0); l;) {
                                    let u = e[--l];
                                    if (!(a = null === (n = a.branches.find(e => e.set.has(u))) || void 0 === n ? void 0 : n.node)) break;
                                    if (a.save) o = u;
                                    else if (a.check && u === o) break;
                                    s.push(u), a.fe0f && (s.push(65039), l > 0 && 65039 == e[l - 1] && l--), a.valid && (i = s.slice(), 2 == a.valid && i.splice(1, 1), r && r.push(...e.slice(l).reverse()), e.length = l)
                                }
                                return i
                            }(n);
                            if (o) {
                                i.push(...r(o));
                                continue
                            }
                            let a = n.pop();
                            if (y.has(a)) {
                                i.push(a);
                                continue
                            }
                            if (b.has(a)) continue;
                            let s = w[a];
                            if (s) {
                                i.push(...s);
                                continue
                            }
                            throw Error(`Disallowed codepoint: 0x${a.toString(16).toUpperCase()}`)
                        }
                        return C(String.fromCodePoint(...i).normalize("NFC"))
                    }(e, E))),
                    n = [];
                if (0 === e.length) return n;
                let i = 0;
                for (let o = 0; o < r.length; o++) {
                    let a = r[o];
                    46 === a && (n.push(S(r.slice(i, o))), i = o + 1)
                }
                if (i >= r.length) throw Error("invalid ENS name; empty component");
                return n.push(S(r.slice(i))), n
            }

            function P(e) {
                return _(e).map(e => (0, l.ZN)(e)).join(".")
            }

            function j(e) {
                try {
                    return 0 !== _(e).length
                } catch (r) {}
                return !1
            }

            function T(e) {
                "string" != typeof e && A.throwArgumentError("invalid ENS name; not a string", "name", e);
                let r = k,
                    n = _(e);
                for (; n.length;) r = (0, u.keccak256)((0, s.concat)([r, (0, u.keccak256)(n.pop())]));
                return (0, s.hexlify)(r)
            }

            function R(e) {
                return (0, s.hexlify)((0, s.concat)(_(e).map(e => {
                    if (e.length > 63) throw Error("invalid DNS encoded entry; length exceeds 63 bytes");
                    let r = new Uint8Array(e.length + 1);
                    return r.set(e, 1), r[0] = r.length - 1, r
                }))) + "00"
            }
            k.fill(0)
        },
        67827: function(e, r, n) {
            "use strict";
            n.d(r, {
                E: function() {
                    return S
                }
            });
            var i = n(19485),
                o = n(2593),
                a = n(16441),
                s = n(38197),
                l = n(6881),
                u = n(1581),
                c = n(35644),
                d = n(32046);
            let h = new u.Logger(c.i),
                f = new Uint8Array(32);
            f.fill(0);
            let p = o.O$.from(-1),
                m = o.O$.from(0),
                g = o.O$.from(1),
                v = o.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
                y = (0, a.hexZeroPad)(g.toHexString(), 32),
                b = (0, a.hexZeroPad)(m.toHexString(), 32),
                w = {
                    name: "string",
                    version: "string",
                    chainId: "uint256",
                    verifyingContract: "address",
                    salt: "bytes32"
                },
                x = ["name", "version", "chainId", "verifyingContract", "salt"];

            function E(e) {
                return function(r) {
                    return "string" != typeof r && h.throwArgumentError(`invalid domain value for ${JSON.stringify(e)}`, `domain.${e}`, r), r
                }
            }
            let C = {
                name: E("name"),
                version: E("version"),
                chainId: function(e) {
                    try {
                        return o.O$.from(e).toString()
                    } catch (r) {}
                    return h.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", e)
                },
                verifyingContract: function(e) {
                    try {
                        return (0, i.getAddress)(e).toLowerCase()
                    } catch (r) {}
                    return h.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", e)
                },
                salt: function(e) {
                    try {
                        let r = (0, a.arrayify)(e);
                        if (32 !== r.length) throw Error("bad length");
                        return (0, a.hexlify)(r)
                    } catch (n) {}
                    return h.throwArgumentError('invalid domain value "salt"', "domain.salt", e)
                }
            };

            function A(e) {
                {
                    let r = e.match(/^(u?)int(\d*)$/);
                    if (r) {
                        let n = "" === r[1],
                            l = parseInt(r[2] || "256");
                        (l % 8 != 0 || l > 256 || r[2] && r[2] !== String(l)) && h.throwArgumentError("invalid numeric width", "type", e);
                        let u = v.mask(n ? l - 1 : l),
                            c = n ? u.add(g).mul(p) : m;
                        return function(r) {
                            let n = o.O$.from(r);
                            return (n.lt(c) || n.gt(u)) && h.throwArgumentError(`value out-of-bounds for ${e}`, "value", r), (0, a.hexZeroPad)(n.toTwos(256).toHexString(), 32)
                        }
                    }
                } {
                    let w = e.match(/^bytes(\d+)$/);
                    if (w) {
                        let x = parseInt(w[1]);
                        return (0 === x || x > 32 || w[1] !== String(x)) && h.throwArgumentError("invalid bytes width", "type", e),
                            function(r) {
                                let n = (0, a.arrayify)(r);
                                return n.length !== x && h.throwArgumentError(`invalid length for ${e}`, "value", r),
                                    function(e) {
                                        let r = (0, a.arrayify)(e),
                                            n = r.length % 32;
                                        return n ? (0, a.hexConcat)([r, f.slice(n)]) : (0, a.hexlify)(r)
                                    }(r)
                            }
                    }
                }
                switch (e) {
                    case "address":
                        return function(e) {
                            return (0, a.hexZeroPad)((0, i.getAddress)(e), 32)
                        };
                    case "bool":
                        return function(e) {
                            return e ? y : b
                        };
                    case "bytes":
                        return function(e) {
                            return (0, s.keccak256)(e)
                        };
                    case "string":
                        return function(e) {
                            return (0, d.id)(e)
                        }
                }
                return null
            }

            function k(e, r) {
                return `${e}(${r.map(({name:e,type:r})=>r+" "+e).join(",")})`
            }
            class S {
                constructor(e) {
                    (0, l.defineReadOnly)(this, "types", Object.freeze((0, l.deepCopy)(e))), (0, l.defineReadOnly)(this, "_encoderCache", {}), (0, l.defineReadOnly)(this, "_types", {});
                    let r = {},
                        n = {},
                        i = {};
                    for (let o in Object.keys(e).forEach(e => {
                            r[e] = {}, n[e] = [], i[e] = {}
                        }), e) {
                        let a = {};
                        e[o].forEach(i => {
                            a[i.name] && h.throwArgumentError(`duplicate variable name ${JSON.stringify(i.name)} in ${JSON.stringify(o)}`, "types", e), a[i.name] = !0;
                            let s = i.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                            s === o && h.throwArgumentError(`circular type reference to ${JSON.stringify(s)}`, "types", e);
                            let l = A(s);
                            l || (n[s] || h.throwArgumentError(`unknown type ${JSON.stringify(s)}`, "types", e), n[s].push(o), r[o][s] = !0)
                        })
                    }
                    let s = Object.keys(n).filter(e => 0 === n[e].length);
                    for (let u in 0 === s.length ? h.throwArgumentError("missing primary type", "types", e) : s.length > 1 && h.throwArgumentError(`ambiguous primary types or unused types: ${s.map(e=>JSON.stringify(e)).join(", ")}`, "types", e), (0, l.defineReadOnly)(this, "primaryType", s[0]), ! function o(a, s) {
                            s[a] && h.throwArgumentError(`circular type reference to ${JSON.stringify(a)}`, "types", e), s[a] = !0, Object.keys(r[a]).forEach(e => {
                                n[e] && (o(e, s), Object.keys(s).forEach(r => {
                                    i[r][e] = !0
                                }))
                            }), delete s[a]
                        }(this.primaryType, {}), i) {
                        let c = Object.keys(i[u]);
                        c.sort(), this._types[u] = k(u, e[u]) + c.map(r => k(r, e[r])).join("")
                    }
                }
                getEncoder(e) {
                    let r = this._encoderCache[e];
                    return r || (r = this._encoderCache[e] = this._getEncoder(e)), r
                }
                _getEncoder(e) {
                    {
                        let r = A(e);
                        if (r) return r
                    }
                    let n = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (n) {
                        let i = n[1],
                            o = this.getEncoder(i),
                            l = parseInt(n[3]);
                        return e => {
                            l >= 0 && e.length !== l && h.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e);
                            let r = e.map(o);
                            return this._types[i] && (r = r.map(s.keccak256)), (0, s.keccak256)((0, a.hexConcat)(r))
                        }
                    }
                    let u = this.types[e];
                    if (u) {
                        let c = (0, d.id)(this._types[e]);
                        return e => {
                            let r = u.map(({
                                name: r,
                                type: n
                            }) => {
                                let i = this.getEncoder(n)(e[r]);
                                return this._types[n] ? (0, s.keccak256)(i) : i
                            });
                            return r.unshift(c), (0, a.hexConcat)(r)
                        }
                    }
                    return h.throwArgumentError(`unknown type: ${e}`, "type", e)
                }
                encodeType(e) {
                    let r = this._types[e];
                    return r || h.throwArgumentError(`unknown type: ${JSON.stringify(e)}`, "name", e), r
                }
                encodeData(e, r) {
                    return this.getEncoder(e)(r)
                }
                hashStruct(e, r) {
                    return (0, s.keccak256)(this.encodeData(e, r))
                }
                encode(e) {
                    return this.encodeData(this.primaryType, e)
                }
                hash(e) {
                    return this.hashStruct(this.primaryType, e)
                }
                _visit(e, r, n) {
                    {
                        let i = A(e);
                        if (i) return n(e, r)
                    }
                    let o = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (o) {
                        let a = o[1],
                            s = parseInt(o[3]);
                        return s >= 0 && r.length !== s && h.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", r), r.map(e => this._visit(a, e, n))
                    }
                    let l = this.types[e];
                    return l ? l.reduce((e, {
                        name: i,
                        type: o
                    }) => (e[i] = this._visit(o, r[i], n), e), {}) : h.throwArgumentError(`unknown type: ${e}`, "type", e)
                }
                visit(e, r) {
                    return this._visit(this.primaryType, e, r)
                }
                static from(e) {
                    return new S(e)
                }
                static getPrimaryType(e) {
                    return S.from(e).primaryType
                }
                static hashStruct(e, r, n) {
                    return S.from(r).hashStruct(e, n)
                }
                static hashDomain(e) {
                    let r = [];
                    for (let n in e) {
                        let i = w[n];
                        i || h.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(n)}`, "domain", e), r.push({
                            name: n,
                            type: i
                        })
                    }
                    return r.sort((e, r) => x.indexOf(e.name) - x.indexOf(r.name)), S.hashStruct("EIP712Domain", {
                        EIP712Domain: r
                    }, e)
                }
                static encode(e, r, n) {
                    return (0, a.hexConcat)(["0x1901", S.hashDomain(e), S.from(r).hash(n)])
                }
                static hash(e, r, n) {
                    return (0, s.keccak256)(S.encode(e, r, n))
                }
                static resolveNames(e, r, n, i) {
                    var o, s, u, c;
                    return o = this, s = void 0, u = void 0, c = function*() {
                        e = (0, l.shallowCopy)(e);
                        let o = {};
                        e.verifyingContract && !(0, a.isHexString)(e.verifyingContract, 20) && (o[e.verifyingContract] = "0x");
                        let s = S.from(r);
                        for (let u in s.visit(n, (e, r) => ("address" !== e || (0, a.isHexString)(r, 20) || (o[r] = "0x"), r)), o) o[u] = yield i(u);
                        return e.verifyingContract && o[e.verifyingContract] && (e.verifyingContract = o[e.verifyingContract]), n = s.visit(n, (e, r) => "address" === e && o[r] ? o[r] : r), {
                            domain: e,
                            value: n
                        }
                    }, new(u || (u = Promise))(function(e, r) {
                        function n(e) {
                            try {
                                a(c.next(e))
                            } catch (n) {
                                r(n)
                            }
                        }

                        function i(e) {
                            try {
                                a(c.throw(e))
                            } catch (n) {
                                r(n)
                            }
                        }

                        function a(r) {
                            var o;
                            r.done ? e(r.value) : ((o = r.value) instanceof u ? o : new u(function(e) {
                                e(o)
                            })).then(n, i)
                        }
                        a((c = c.apply(o, s || [])).next())
                    })
                }
                static getPayload(e, r, n) {
                    S.hashDomain(e);
                    let i = {},
                        s = [];
                    x.forEach(r => {
                        let n = e[r];
                        null != n && (i[r] = C[r](n), s.push({
                            name: r,
                            type: w[r]
                        }))
                    });
                    let u = S.from(r),
                        c = (0, l.shallowCopy)(r);
                    return c.EIP712Domain ? h.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", r) : c.EIP712Domain = s, u.encode(n), {
                        types: c,
                        domain: i,
                        primaryType: u.primaryType,
                        message: u.visit(n, (e, r) => {
                            if (e.match(/^bytes(\d*)/)) return (0, a.hexlify)((0, a.arrayify)(r));
                            if (e.match(/^u?int/)) return o.O$.from(r).toString();
                            switch (e) {
                                case "address":
                                    return r.toLowerCase();
                                case "bool":
                                    return !!r;
                                case "string":
                                    return "string" != typeof r && h.throwArgumentError("invalid string", "value", r), r
                            }
                            return h.throwArgumentError("unsupported type", "type", e)
                        })
                    }
                }
            }
        },
        86507: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                HDNode: function() {
                    return R
                },
                defaultPath: function() {
                    return T
                },
                entropyToMnemonic: function() {
                    return M
                },
                getAccountPath: function() {
                    return N
                },
                isValidMnemonic: function() {
                    return I
                },
                mnemonicToEntropy: function() {
                    return O
                },
                mnemonicToSeed: function() {
                    return B
                }
            });
            var i = n(57727),
                o = n(16441),
                a = n(2593),
                s = n(29251),
                l = n(85306),
                u = n(6881),
                c = n(67669),
                d = n(2006),
                h = n(21261),
                f = n(83875),
                p = n(32046),
                m = n(1581);
            let g = new m.Logger("wordlists/5.7.0");
            class v {
                constructor(e) {
                    g.checkAbstract(new.target, v), (0, u.defineReadOnly)(this, "locale", e)
                }
                split(e) {
                    return e.toLowerCase().split(/ +/g)
                }
                join(e) {
                    return e.join(" ")
                }
                static check(e) {
                    let r = [];
                    for (let n = 0; n < 2048; n++) {
                        let i = e.getWord(n);
                        if (n !== e.getWordIndex(i)) return "0x";
                        r.push(i)
                    }
                    return (0, p.id)(r.join("\n") + "\n")
                }
                static register(e, r) {
                    r || (r = e.locale)
                }
            }
            let y = null;

            function b(e) {
                if (null == y && (y = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "), "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60" !== v.check(e))) throw y = null, Error("BIP39 Wordlist for en (English) FAILED")
            }
            let w = new class extends v {
                constructor() {
                    super("en")
                }
                getWord(e) {
                    return b(this), y[e]
                }
                getWordIndex(e) {
                    return b(this), y.indexOf(e)
                }
            };
            v.register(w);
            let x = {
                    en: w
                },
                E = new m.Logger("hdnode/5.7.0"),
                C = a.O$.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),
                A = (0, s.Y0)("Bitcoin seed");

            function k(e) {
                return (1 << e) - 1 << 8 - e
            }

            function S(e) {
                return (0, o.hexZeroPad)((0, o.hexlify)(e), 32)
            }

            function _(e) {
                return i.Base58.encode((0, o.concat)([e, (0, o.hexDataSlice)((0, d.JQ)((0, d.JQ)(e)), 0, 4)]))
            }

            function P(e) {
                if (null == e) return x.en;
                if ("string" == typeof e) {
                    let r = x[e];
                    return null == r && E.throwArgumentError("unknown locale", "wordlist", e), r
                }
                return e
            }
            let j = {},
                T = "m/44'/60'/0'/0/0";
            class R {
                constructor(e, r, n, i, a, s, l, h) {
                    if (e !== j) throw Error("HDNode constructor cannot be called directly");
                    if (r) {
                        let p = new c.SigningKey(r);
                        (0, u.defineReadOnly)(this, "privateKey", p.privateKey), (0, u.defineReadOnly)(this, "publicKey", p.compressedPublicKey)
                    } else(0, u.defineReadOnly)(this, "privateKey", null), (0, u.defineReadOnly)(this, "publicKey", (0, o.hexlify)(n));
                    (0, u.defineReadOnly)(this, "parentFingerprint", i), (0, u.defineReadOnly)(this, "fingerprint", (0, o.hexDataSlice)((0, d.bP)((0, d.JQ)(this.publicKey)), 0, 4)), (0, u.defineReadOnly)(this, "address", (0, f.computeAddress)(this.publicKey)), (0, u.defineReadOnly)(this, "chainCode", a), (0, u.defineReadOnly)(this, "index", s), (0, u.defineReadOnly)(this, "depth", l), null == h ? ((0, u.defineReadOnly)(this, "mnemonic", null), (0, u.defineReadOnly)(this, "path", null)) : "string" == typeof h ? ((0, u.defineReadOnly)(this, "mnemonic", null), (0, u.defineReadOnly)(this, "path", h)) : ((0, u.defineReadOnly)(this, "mnemonic", h), (0, u.defineReadOnly)(this, "path", h.path))
                }
                get extendedKey() {
                    if (this.depth >= 256) throw Error("Depth too large!");
                    return _((0, o.concat)([null != this.privateKey ? "0x0488ADE4" : "0x0488B21E", (0, o.hexlify)(this.depth), this.parentFingerprint, (0, o.hexZeroPad)((0, o.hexlify)(this.index), 4), this.chainCode, null != this.privateKey ? (0, o.concat)(["0x00", this.privateKey]) : this.publicKey]))
                }
                neuter() {
                    return new R(j, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path)
                }
                _derive(e) {
                    if (e > 4294967295) throw Error("invalid index - " + String(e));
                    let r = this.path;
                    r && (r += "/" + (2147483647 & e));
                    let n = new Uint8Array(37);
                    if (2147483648 & e) {
                        if (!this.privateKey) throw Error("cannot derive child of neutered node");
                        n.set((0, o.arrayify)(this.privateKey), 1), r && (r += "'")
                    } else n.set((0, o.arrayify)(this.publicKey));
                    for (let i = 24; i >= 0; i -= 8) n[33 + (i >> 3)] = e >> 24 - i & 255;
                    let s = (0, o.arrayify)((0, d.Gy)(h.p.sha512, this.chainCode, n)),
                        l = s.slice(0, 32),
                        u = s.slice(32),
                        f = null,
                        p = null;
                    if (this.privateKey) f = S(a.O$.from(l).add(this.privateKey).mod(C));
                    else {
                        let m = new c.SigningKey((0, o.hexlify)(l));
                        p = m._addPoint(this.publicKey)
                    }
                    let g = r,
                        v = this.mnemonic;
                    return v && (g = Object.freeze({
                        phrase: v.phrase,
                        path: r,
                        locale: v.locale || "en"
                    })), new R(j, f, p, this.fingerprint, S(u), e, this.depth + 1, g)
                }
                derivePath(e) {
                    let r = e.split("/");
                    if (0 === r.length || "m" === r[0] && 0 !== this.depth) throw Error("invalid path - " + e);
                    "m" === r[0] && r.shift();
                    let n = this;
                    for (let i = 0; i < r.length; i++) {
                        let o = r[i];
                        if (o.match(/^[0-9]+'$/)) {
                            let a = parseInt(o.substring(0, o.length - 1));
                            if (a >= 2147483648) throw Error("invalid path index - " + o);
                            n = n._derive(2147483648 + a)
                        } else if (o.match(/^[0-9]+$/)) {
                            let s = parseInt(o);
                            if (s >= 2147483648) throw Error("invalid path index - " + o);
                            n = n._derive(s)
                        } else throw Error("invalid path component - " + o)
                    }
                    return n
                }
                static _fromSeed(e, r) {
                    let n = (0, o.arrayify)(e);
                    if (n.length < 16 || n.length > 64) throw Error("invalid seed");
                    let i = (0, o.arrayify)((0, d.Gy)(h.p.sha512, A, n));
                    return new R(j, S(i.slice(0, 32)), null, "0x00000000", S(i.slice(32)), 0, 0, r)
                }
                static fromMnemonic(e, r, n) {
                    return e = M(O(e, n = P(n)), n), R._fromSeed(B(e, r), {
                        phrase: e,
                        path: "m",
                        locale: n.locale
                    })
                }
                static fromSeed(e) {
                    return R._fromSeed(e, null)
                }
                static fromExtendedKey(e) {
                    let r = i.Base58.decode(e);
                    (82 !== r.length || _(r.slice(0, 78)) !== e) && E.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
                    let n = r[4],
                        a = (0, o.hexlify)(r.slice(5, 9)),
                        s = parseInt((0, o.hexlify)(r.slice(9, 13)).substring(2), 16),
                        l = (0, o.hexlify)(r.slice(13, 45)),
                        u = r.slice(45, 78);
                    switch ((0, o.hexlify)(r.slice(0, 4))) {
                        case "0x0488b21e":
                        case "0x043587cf":
                            return new R(j, null, (0, o.hexlify)(u), a, l, s, n, null);
                        case "0x0488ade4":
                        case "0x04358394 ":
                            if (0 !== u[0]) break;
                            return new R(j, (0, o.hexlify)(u.slice(1)), null, a, l, s, n, null)
                    }
                    return E.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]")
                }
            }

            function B(e, r) {
                r || (r = "");
                let n = (0, s.Y0)("mnemonic" + r, s.Uj.NFKD);
                return (0, l.n)((0, s.Y0)(e, s.Uj.NFKD), n, 2048, 64, "sha512")
            }

            function O(e, r) {
                r = P(r), E.checkNormalize();
                let n = r.split(e);
                if (n.length % 3 != 0) throw Error("invalid mnemonic");
                let i = (0, o.arrayify)(new Uint8Array(Math.ceil(11 * n.length / 8))),
                    a = 0;
                for (let s = 0; s < n.length; s++) {
                    let l = r.getWordIndex(n[s].normalize("NFKD"));
                    if (-1 === l) throw Error("invalid mnemonic");
                    for (let u = 0; u < 11; u++) l & 1 << 10 - u && (i[a >> 3] |= 1 << 7 - a % 8), a++
                }
                let c = 32 * n.length / 3,
                    h = n.length / 3,
                    f = k(h),
                    p = (0, o.arrayify)((0, d.JQ)(i.slice(0, c / 8)))[0] & f;
                if (p !== (i[i.length - 1] & f)) throw Error("invalid checksum");
                return (0, o.hexlify)(i.slice(0, c / 8))
            }

            function M(e, r) {
                if (r = P(r), (e = (0, o.arrayify)(e)).length % 4 != 0 || e.length < 16 || e.length > 32) throw Error("invalid entropy");
                let n = [0],
                    i = 11;
                for (let a = 0; a < e.length; a++) i > 8 ? (n[n.length - 1] <<= 8, n[n.length - 1] |= e[a], i -= 8) : (n[n.length - 1] <<= i, n[n.length - 1] |= e[a] >> 8 - i, n.push(e[a] & (1 << 8 - i) - 1), i += 3);
                let s = e.length / 4,
                    l = (0, o.arrayify)((0, d.JQ)(e))[0] & k(s);
                return n[n.length - 1] <<= s, n[n.length - 1] |= l >> 8 - s, r.join(n.map(e => r.getWord(e)))
            }

            function I(e, r) {
                try {
                    return O(e, r), !0
                } catch (n) {}
                return !1
            }

            function N(e) {
                return ("number" != typeof e || e < 0 || e >= 2147483648 || e % 1) && E.throwArgumentError("invalid account index", "index", e), `m/44'/60'/${e}'/0/0`
            }
        },
        29816: function(e, r, n) {
            "use strict";
            n.d(r, {
                i: function() {
                    return i
                }
            });
            let i = "json-wallets/5.7.0"
        },
        45659: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                decryptCrowdsale: function() {
                    return v
                },
                decryptJsonWallet: function() {
                    return E
                },
                decryptJsonWalletSync: function() {
                    return C
                },
                decryptKeystore: function() {
                    return x.pe
                },
                decryptKeystoreSync: function() {
                    return x.hb
                },
                encryptKeystore: function() {
                    return x.HI
                },
                getJsonWalletAddress: function() {
                    return w
                },
                isCrowdsaleWallet: function() {
                    return y
                },
                isKeystoreWallet: function() {
                    return b
                }
            });
            var i = n(78826),
                o = n.n(i),
                a = n(19485),
                s = n(16441),
                l = n(38197),
                u = n(85306),
                c = n(29251),
                d = n(6881),
                h = n(1581),
                f = n(29816),
                p = n(97013);
            let m = new h.Logger(f.i);
            class g extends d.Description {
                isCrowdsaleAccount(e) {
                    return !!(e && e._isCrowdsaleAccount)
                }
            }

            function v(e, r) {
                let n = JSON.parse(e);
                r = (0, p.Ij)(r);
                let i = (0, a.getAddress)((0, p.gx)(n, "ethaddr")),
                    d = (0, p.p3)((0, p.gx)(n, "encseed"));
                d && d.length % 16 == 0 || m.throwArgumentError("invalid encseed", "json", e);
                let h = (0, s.arrayify)((0, u.n)(r, r, 2e3, 32, "sha256")).slice(0, 16),
                    f = d.slice(0, 16),
                    v = d.slice(16),
                    y = new(o()).ModeOfOperation.cbc(h, f),
                    b = o().padding.pkcs7.strip((0, s.arrayify)(y.decrypt(v))),
                    w = "";
                for (let x = 0; x < b.length; x++) w += String.fromCharCode(b[x]);
                let E = (0, c.Y0)(w),
                    C = (0, l.keccak256)(E);
                return new g({
                    _isCrowdsaleAccount: !0,
                    address: i,
                    privateKey: C
                })
            }

            function y(e) {
                let r = null;
                try {
                    r = JSON.parse(e)
                } catch (n) {
                    return !1
                }
                return r.encseed && r.ethaddr
            }

            function b(e) {
                let r = null;
                try {
                    r = JSON.parse(e)
                } catch (n) {
                    return !1
                }
                return !!r.version && parseInt(r.version) === r.version && 3 === parseInt(r.version)
            }

            function w(e) {
                if (y(e)) try {
                    return (0, a.getAddress)(JSON.parse(e).ethaddr)
                } catch (r) {
                    return null
                }
                if (b(e)) try {
                    return (0, a.getAddress)(JSON.parse(e).address)
                } catch (n) {}
                return null
            }
            var x = n(81964);

            function E(e, r, n) {
                if (y(e)) {
                    n && n(0);
                    let i = v(e, r);
                    return n && n(1), Promise.resolve(i)
                }
                return b(e) ? (0, x.pe)(e, r, n) : Promise.reject(Error("invalid JSON wallet"))
            }

            function C(e, r) {
                if (y(e)) return v(e, r);
                if (b(e)) return (0, x.hb)(e, r);
                throw Error("invalid JSON wallet")
            }
        },
        81964: function(e, r, n) {
            "use strict";
            n.d(r, {
                HI: function() {
                    return P
                },
                hb: function() {
                    return S
                },
                pe: function() {
                    return _
                }
            });
            var i = n(78826),
                o = n.n(i),
                a = n(17635),
                s = n.n(a),
                l = n(19485),
                u = n(16441),
                c = n(86507),
                d = n(38197),
                h = n(85306),
                f = n(5634),
                p = n(6881),
                m = n(83875),
                g = n(97013),
                v = n(1581),
                y = n(29816);
            let b = new v.Logger(y.i);

            function w(e) {
                return null != e && e.mnemonic && e.mnemonic.phrase
            }
            class x extends p.Description {
                isKeystoreAccount(e) {
                    return !!(e && e._isKeystoreAccount)
                }
            }

            function E(e, r) {
                let n = (0, g.p3)((0, g.gx)(e, "crypto/ciphertext")),
                    i = (0, u.hexlify)((0, d.keccak256)((0, u.concat)([r.slice(16, 32), n]))).substring(2);
                if (i !== (0, g.gx)(e, "crypto/mac").toLowerCase()) throw Error("invalid password");
                let a = function(e, r, n) {
                    let i = (0, g.gx)(e, "crypto/cipher");
                    if ("aes-128-ctr" === i) {
                        let a = (0, g.p3)((0, g.gx)(e, "crypto/cipherparams/iv")),
                            s = new(o()).Counter(a),
                            l = new(o()).ModeOfOperation.ctr(r, s);
                        return (0, u.arrayify)(l.decrypt(n))
                    }
                    return null
                }(e, r.slice(0, 16), n);
                a || b.throwError("unsupported cipher", v.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "decrypt"
                });
                let s = r.slice(32, 64),
                    h = (0, m.computeAddress)(a);
                if (e.address) {
                    let f = e.address.toLowerCase();
                    if ("0x" !== f.substring(0, 2) && (f = "0x" + f), (0, l.getAddress)(f) !== h) throw Error("address mismatch")
                }
                let p = {
                    _isKeystoreAccount: !0,
                    address: h,
                    privateKey: (0, u.hexlify)(a)
                };
                if ("0.1" === (0, g.gx)(e, "x-ethers/version")) {
                    let y = (0, g.p3)((0, g.gx)(e, "x-ethers/mnemonicCiphertext")),
                        w = (0, g.p3)((0, g.gx)(e, "x-ethers/mnemonicCounter")),
                        E = new(o()).Counter(w),
                        C = new(o()).ModeOfOperation.ctr(s, E),
                        A = (0, g.gx)(e, "x-ethers/path") || c.defaultPath,
                        k = (0, g.gx)(e, "x-ethers/locale") || "en",
                        S = (0, u.arrayify)(C.decrypt(y));
                    try {
                        let _ = (0, c.entropyToMnemonic)(S, k),
                            P = c.HDNode.fromMnemonic(_, null, k).derivePath(A);
                        if (P.privateKey != p.privateKey) throw Error("mnemonic mismatch");
                        p.mnemonic = P.mnemonic
                    } catch (j) {
                        if (j.code !== v.Logger.errors.INVALID_ARGUMENT || "wordlist" !== j.argument) throw j
                    }
                }
                return new x(p)
            }

            function C(e, r, n, i, o) {
                return (0, u.arrayify)((0, h.n)(e, r, n, i, o))
            }

            function A(e, r, n, i, o) {
                return Promise.resolve(C(e, r, n, i, o))
            }

            function k(e, r, n, i, o) {
                let a = (0, g.Ij)(r),
                    s = (0, g.gx)(e, "crypto/kdf");
                if (s && "string" == typeof s) {
                    let l = function(e, r) {
                        return b.throwArgumentError("invalid key-derivation function parameters", e, r)
                    };
                    if ("scrypt" === s.toLowerCase()) {
                        let u = (0, g.p3)((0, g.gx)(e, "crypto/kdfparams/salt")),
                            c = parseInt((0, g.gx)(e, "crypto/kdfparams/n")),
                            d = parseInt((0, g.gx)(e, "crypto/kdfparams/r")),
                            h = parseInt((0, g.gx)(e, "crypto/kdfparams/p"));
                        c && d && h || l("kdf", s), (c & c - 1) != 0 && l("N", c);
                        let f = parseInt((0, g.gx)(e, "crypto/kdfparams/dklen"));
                        return 32 !== f && l("dklen", f), i(a, u, c, d, h, 64, o)
                    }
                    if ("pbkdf2" === s.toLowerCase()) {
                        let p = (0, g.p3)((0, g.gx)(e, "crypto/kdfparams/salt")),
                            m = null,
                            v = (0, g.gx)(e, "crypto/kdfparams/prf");
                        "hmac-sha256" === v ? m = "sha256" : "hmac-sha512" === v ? m = "sha512" : l("prf", v);
                        let y = parseInt((0, g.gx)(e, "crypto/kdfparams/c")),
                            w = parseInt((0, g.gx)(e, "crypto/kdfparams/dklen"));
                        return 32 !== w && l("dklen", w), n(a, p, y, w, m)
                    }
                }
                return b.throwArgumentError("unsupported key-derivation function", "kdf", s)
            }

            function S(e, r) {
                let n = JSON.parse(e),
                    i = k(n, r, C, s().syncScrypt);
                return E(n, i)
            }

            function _(e, r, n) {
                var i, o, a, l;
                return i = this, o = void 0, a = void 0, l = function*() {
                    let i = JSON.parse(e),
                        o = yield k(i, r, A, s().scrypt, n);
                    return E(i, o)
                }, new(a || (a = Promise))(function(e, r) {
                    function n(e) {
                        try {
                            u(l.next(e))
                        } catch (n) {
                            r(n)
                        }
                    }

                    function s(e) {
                        try {
                            u(l.throw(e))
                        } catch (n) {
                            r(n)
                        }
                    }

                    function u(r) {
                        var i;
                        r.done ? e(r.value) : ((i = r.value) instanceof a ? i : new a(function(e) {
                            e(i)
                        })).then(n, s)
                    }
                    u((l = l.apply(i, o || [])).next())
                })
            }

            function P(e, r, n, i) {
                try {
                    if ((0, l.getAddress)(e.address) !== (0, m.computeAddress)(e.privateKey)) throw Error("address/privateKey mismatch");
                    if (w(e)) {
                        let a = e.mnemonic,
                            h = c.HDNode.fromMnemonic(a.phrase, null, a.locale).derivePath(a.path || c.defaultPath);
                        if (h.privateKey != e.privateKey) throw Error("mnemonic mismatch")
                    }
                } catch (p) {
                    return Promise.reject(p)
                }
                "function" != typeof n || i || (i = n, n = {}), n || (n = {});
                let v = (0, u.arrayify)(e.privateKey),
                    y = (0, g.Ij)(r),
                    b = null,
                    x = null,
                    E = null;
                if (w(e)) {
                    let C = e.mnemonic;
                    b = (0, u.arrayify)((0, c.mnemonicToEntropy)(C.phrase, C.locale || "en")), x = C.path || c.defaultPath, E = C.locale || "en"
                }
                let A = n.client;
                A || (A = "ethers.js");
                let k = null;
                k = n.salt ? (0, u.arrayify)(n.salt) : (0, f.O)(32);
                let S = null;
                if (n.iv) {
                    if (16 !== (S = (0, u.arrayify)(n.iv)).length) throw Error("invalid iv")
                } else S = (0, f.O)(16);
                let _ = null;
                if (n.uuid) {
                    if (16 !== (_ = (0, u.arrayify)(n.uuid)).length) throw Error("invalid uuid")
                } else _ = (0, f.O)(16);
                let P = 131072,
                    j = 8,
                    T = 1;
                return n.scrypt && (n.scrypt.N && (P = n.scrypt.N), n.scrypt.r && (j = n.scrypt.r), n.scrypt.p && (T = n.scrypt.p)), s().scrypt(y, k, P, j, T, 64, i).then(r => {
                    r = (0, u.arrayify)(r);
                    let n = r.slice(0, 16),
                        i = r.slice(16, 32),
                        a = r.slice(32, 64),
                        s = new(o()).Counter(S),
                        l = new(o()).ModeOfOperation.ctr(n, s),
                        c = (0, u.arrayify)(l.encrypt(v)),
                        h = (0, d.keccak256)((0, u.concat)([i, c])),
                        p = {
                            address: e.address.substring(2).toLowerCase(),
                            id: (0, g.EH)(_),
                            version: 3,
                            crypto: {
                                cipher: "aes-128-ctr",
                                cipherparams: {
                                    iv: (0, u.hexlify)(S).substring(2)
                                },
                                ciphertext: (0, u.hexlify)(c).substring(2),
                                kdf: "scrypt",
                                kdfparams: {
                                    salt: (0, u.hexlify)(k).substring(2),
                                    n: P,
                                    dklen: 32,
                                    p: T,
                                    r: j
                                },
                                mac: h.substring(2)
                            }
                        };
                    if (b) {
                        let m = (0, f.O)(16),
                            y = new(o()).Counter(m),
                            w = new(o()).ModeOfOperation.ctr(a, y),
                            C = (0, u.arrayify)(w.encrypt(b)),
                            R = new Date,
                            B = R.getUTCFullYear() + "-" + (0, g.VP)(R.getUTCMonth() + 1, 2) + "-" + (0, g.VP)(R.getUTCDate(), 2) + "T" + (0, g.VP)(R.getUTCHours(), 2) + "-" + (0, g.VP)(R.getUTCMinutes(), 2) + "-" + (0, g.VP)(R.getUTCSeconds(), 2) + ".0Z";
                        p["x-ethers"] = {
                            client: A,
                            gethFilename: "UTC--" + B + "--" + p.address,
                            mnemonicCounter: (0, u.hexlify)(m).substring(2),
                            mnemonicCiphertext: (0, u.hexlify)(C).substring(2),
                            path: x,
                            locale: E,
                            version: "0.1"
                        }
                    }
                    return JSON.stringify(p)
                })
            }
        },
        97013: function(e, r, n) {
            "use strict";
            n.d(r, {
                EH: function() {
                    return c
                },
                Ij: function() {
                    return l
                },
                VP: function() {
                    return s
                },
                gx: function() {
                    return u
                },
                p3: function() {
                    return a
                }
            });
            var i = n(16441),
                o = n(29251);

            function a(e) {
                return "string" == typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), (0, i.arrayify)(e)
            }

            function s(e, r) {
                for (e = String(e); e.length < r;) e = "0" + e;
                return e
            }

            function l(e) {
                return "string" == typeof e ? (0, o.Y0)(e, o.Uj.NFKC) : (0, i.arrayify)(e)
            }

            function u(e, r) {
                let n = e,
                    i = r.toLowerCase().split("/");
                for (let o = 0; o < i.length; o++) {
                    let a = null;
                    for (let s in n)
                        if (s.toLowerCase() === i[o]) {
                            a = n[s];
                            break
                        }
                    if (null === a) return null;
                    n = a
                }
                return n
            }

            function c(e) {
                let r = (0, i.arrayify)(e);
                r[6] = 15 & r[6] | 64, r[8] = 63 & r[8] | 128;
                let n = (0, i.hexlify)(r);
                return [n.substring(2, 10), n.substring(10, 14), n.substring(14, 18), n.substring(18, 22), n.substring(22, 34)].join("-")
            }
        },
        38197: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                keccak256: function() {
                    return s
                }
            });
            var i = n(91094),
                o = n.n(i),
                a = n(16441);

            function s(e) {
                return "0x" + o().keccak_256((0, a.arrayify)(e))
            }
        },
        1581: function(e, r, n) {
            "use strict";
            var i, o, a, s;
            n.r(r), n.d(r, {
                ErrorCode: function() {
                    return o
                },
                LogLevel: function() {
                    return i
                },
                Logger: function() {
                    return m
                }
            });
            let l = !1,
                u = !1,
                c = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                d = c.default,
                h = null,
                f = function() {
                    try {
                        let e = [];
                        if (["NFD", "NFC", "NFKD", "NFKC"].forEach(r => {
                                try {
                                    if ("test" !== "test".normalize(r)) throw Error("bad normalize")
                                } catch (n) {
                                    e.push(r)
                                }
                            }), e.length) throw Error("missing " + e.join(", "));
                        if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw Error("broken implementation")
                    } catch (r) {
                        return r.message
                    }
                    return null
                }();
            (a = i || (i = {})).DEBUG = "DEBUG", a.INFO = "INFO", a.WARNING = "WARNING", a.ERROR = "ERROR", a.OFF = "OFF", (s = o || (o = {})).UNKNOWN_ERROR = "UNKNOWN_ERROR", s.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", s.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", s.NETWORK_ERROR = "NETWORK_ERROR", s.SERVER_ERROR = "SERVER_ERROR", s.TIMEOUT = "TIMEOUT", s.BUFFER_OVERRUN = "BUFFER_OVERRUN", s.NUMERIC_FAULT = "NUMERIC_FAULT", s.MISSING_NEW = "MISSING_NEW", s.INVALID_ARGUMENT = "INVALID_ARGUMENT", s.MISSING_ARGUMENT = "MISSING_ARGUMENT", s.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", s.CALL_EXCEPTION = "CALL_EXCEPTION", s.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", s.NONCE_EXPIRED = "NONCE_EXPIRED", s.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", s.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", s.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", s.ACTION_REJECTED = "ACTION_REJECTED";
            let p = "0123456789abcdef";
            class m {
                constructor(e) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: e,
                        writable: !1
                    })
                }
                _log(e, r) {
                    let n = e.toLowerCase();
                    null == c[n] && this.throwArgumentError("invalid log level name", "logLevel", e), d > c[n] || console.log.apply(console, r)
                }
                debug(...e) {
                    this._log(m.levels.DEBUG, e)
                }
                info(...e) {
                    this._log(m.levels.INFO, e)
                }
                warn(...e) {
                    this._log(m.levels.WARNING, e)
                }
                makeError(e, r, n) {
                    if (u) return this.makeError("censored error", r, {});
                    r || (r = m.errors.UNKNOWN_ERROR), n || (n = {});
                    let i = [];
                    Object.keys(n).forEach(e => {
                        let r = n[e];
                        try {
                            if (r instanceof Uint8Array) {
                                let o = "";
                                for (let a = 0; a < r.length; a++) o += p[r[a] >> 4] + p[15 & r[a]];
                                i.push(e + "=Uint8Array(0x" + o + ")")
                            } else i.push(e + "=" + JSON.stringify(r))
                        } catch (s) {
                            i.push(e + "=" + JSON.stringify(n[e].toString()))
                        }
                    }), i.push(`code=${r}`), i.push(`version=${this.version}`);
                    let a = e,
                        s = "";
                    switch (r) {
                        case o.NUMERIC_FAULT:
                            {
                                s = "NUMERIC_FAULT";
                                let l = e;
                                switch (l) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        s += "-" + l;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        s += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        s += "-unbound-result"
                                }
                                break
                            }
                        case o.CALL_EXCEPTION:
                        case o.INSUFFICIENT_FUNDS:
                        case o.MISSING_NEW:
                        case o.NONCE_EXPIRED:
                        case o.REPLACEMENT_UNDERPRICED:
                        case o.TRANSACTION_REPLACED:
                        case o.UNPREDICTABLE_GAS_LIMIT:
                            s = r
                    }
                    s && (e += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (e += " (" + i.join(", ") + ")");
                    let c = Error(e);
                    return c.reason = a, c.code = r, Object.keys(n).forEach(function(e) {
                        c[e] = n[e]
                    }), c
                }
                throwError(e, r, n) {
                    throw this.makeError(e, r, n)
                }
                throwArgumentError(e, r, n) {
                    return this.throwError(e, m.errors.INVALID_ARGUMENT, {
                        argument: r,
                        value: n
                    })
                }
                assert(e, r, n, i) {
                    e || this.throwError(r, n, i)
                }
                assertArgument(e, r, n, i) {
                    e || this.throwArgumentError(r, n, i)
                }
                checkNormalize(e) {
                    null == e && (e = "platform missing String.prototype.normalize"), f && this.throwError("platform missing String.prototype.normalize", m.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: f
                    })
                }
                checkSafeUint53(e, r) {
                    "number" == typeof e && (null == r && (r = "value not safe"), (e < 0 || e >= 9007199254740991) && this.throwError(r, m.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: e
                    }), e % 1 && this.throwError(r, m.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: e
                    }))
                }
                checkArgumentCount(e, r, n) {
                    n = n ? ": " + n : "", e < r && this.throwError("missing argument" + n, m.errors.MISSING_ARGUMENT, {
                        count: e,
                        expectedCount: r
                    }), e > r && this.throwError("too many arguments" + n, m.errors.UNEXPECTED_ARGUMENT, {
                        count: e,
                        expectedCount: r
                    })
                }
                checkNew(e, r) {
                    (e === Object || null == e) && this.throwError("missing new", m.errors.MISSING_NEW, {
                        name: r.name
                    })
                }
                checkAbstract(e, r) {
                    e === r ? this.throwError("cannot instantiate abstract class " + JSON.stringify(r.name) + " directly; use a sub-class", m.errors.UNSUPPORTED_OPERATION, {
                        name: e.name,
                        operation: "new"
                    }) : (e === Object || null == e) && this.throwError("missing new", m.errors.MISSING_NEW, {
                        name: r.name
                    })
                }
                static globalLogger() {
                    return h || (h = new m("logger/5.7.0")), h
                }
                static setCensorship(e, r) {
                    if (!e && r && this.globalLogger().throwError("cannot permanently disable censorship", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), l) {
                        if (!e) return;
                        this.globalLogger().throwError("error censorship permanent", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    u = !!e, l = !!r
                }
                static setLogLevel(e) {
                    let r = c[e.toLowerCase()];
                    if (null == r) {
                        m.globalLogger().warn("invalid log level - " + e);
                        return
                    }
                    d = r
                }
                static from(e) {
                    return new m(e)
                }
            }
            m.errors = o, m.levels = i
        },
        85306: function(e, r, n) {
            "use strict";
            n.d(r, {
                n: function() {
                    return a
                }
            });
            var i = n(16441),
                o = n(2006);

            function a(e, r, n, a, s) {
                let l, u, c;
                e = (0, i.arrayify)(e), r = (0, i.arrayify)(r);
                let d = 1,
                    h = new Uint8Array(a),
                    f = new Uint8Array(r.length + 4);
                f.set(r);
                for (let p = 1; p <= d; p++) {
                    f[r.length] = p >> 24 & 255, f[r.length + 1] = p >> 16 & 255, f[r.length + 2] = p >> 8 & 255, f[r.length + 3] = 255 & p;
                    let m = (0, i.arrayify)((0, o.Gy)(s, e, f));
                    l || (l = m.length, c = new Uint8Array(l), d = Math.ceil(a / l), u = a - (d - 1) * l), c.set(m);
                    for (let g = 1; g < n; g++) {
                        m = (0, i.arrayify)((0, o.Gy)(s, e, m));
                        for (let v = 0; v < l; v++) c[v] ^= m[v]
                    }
                    let y = (p - 1) * l,
                        b = p === d ? u : l;
                    h.set((0, i.arrayify)(c).slice(0, b), y)
                }
                return (0, i.hexlify)(h)
            }
        },
        6881: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                Description: function() {
                    return f
                },
                checkProperties: function() {
                    return u
                },
                deepCopy: function() {
                    return h
                },
                defineReadOnly: function() {
                    return a
                },
                getStatic: function() {
                    return s
                },
                resolveProperties: function() {
                    return l
                },
                shallowCopy: function() {
                    return c
                }
            });
            var i = n(1581);
            let o = new i.Logger("properties/5.7.0");

            function a(e, r, n) {
                Object.defineProperty(e, r, {
                    enumerable: !0,
                    value: n,
                    writable: !1
                })
            }

            function s(e, r) {
                for (let n = 0; n < 32; n++) {
                    if (e[r]) return e[r];
                    if (!e.prototype || "object" != typeof e.prototype) break;
                    e = Object.getPrototypeOf(e.prototype).constructor
                }
                return null
            }

            function l(e) {
                var r, n, i, o;
                return r = this, n = void 0, i = void 0, o = function*() {
                    let r = Object.keys(e).map(r => {
                            let n = e[r];
                            return Promise.resolve(n).then(e => ({
                                key: r,
                                value: e
                            }))
                        }),
                        n = yield Promise.all(r);
                    return n.reduce((e, r) => (e[r.key] = r.value, e), {})
                }, new(i || (i = Promise))(function(e, a) {
                    function s(e) {
                        try {
                            u(o.next(e))
                        } catch (r) {
                            a(r)
                        }
                    }

                    function l(e) {
                        try {
                            u(o.throw(e))
                        } catch (r) {
                            a(r)
                        }
                    }

                    function u(r) {
                        var n;
                        r.done ? e(r.value) : ((n = r.value) instanceof i ? n : new i(function(e) {
                            e(n)
                        })).then(s, l)
                    }
                    u((o = o.apply(r, n || [])).next())
                })
            }

            function u(e, r) {
                e && "object" == typeof e || o.throwArgumentError("invalid object", "object", e), Object.keys(e).forEach(n => {
                    r[n] || o.throwArgumentError("invalid object key - " + n, "transaction:" + n, e)
                })
            }

            function c(e) {
                let r = {};
                for (let n in e) r[n] = e[n];
                return r
            }
            let d = {
                bigint: !0,
                boolean: !0,
                function: !0,
                number: !0,
                string: !0
            };

            function h(e) {
                return function(e) {
                    if (function e(r) {
                            if (null == r || d[typeof r]) return !0;
                            if (Array.isArray(r) || "object" == typeof r) {
                                if (!Object.isFrozen(r)) return !1;
                                let n = Object.keys(r);
                                for (let i = 0; i < n.length; i++) {
                                    let a = null;
                                    try {
                                        a = r[n[i]]
                                    } catch (s) {
                                        continue
                                    }
                                    if (!e(a)) return !1
                                }
                                return !0
                            }
                            return o.throwArgumentError(`Cannot deepCopy ${typeof r}`, "object", r)
                        }(e)) return e;
                    if (Array.isArray(e)) return Object.freeze(e.map(e => h(e)));
                    if ("object" == typeof e) {
                        let r = {};
                        for (let n in e) {
                            let i = e[n];
                            void 0 !== i && a(r, n, h(i))
                        }
                        return r
                    }
                    return o.throwArgumentError(`Cannot deepCopy ${typeof e}`, "object", e)
                }(e)
            }
            class f {
                constructor(e) {
                    for (let r in e) this[r] = h(e[r])
                }
            }
        },
        34216: function(e, r, n) {
            "use strict";
            n.d(r, {
                i: function() {
                    return i
                }
            });
            let i = "providers/5.7.2"
        },
        57408: function(e, r, n) {
            "use strict";
            n.d(r, {
                Zk: function() {
                    return Q
                }
            });
            var i = n(81556),
                o = n(59567),
                a = n(57727),
                s = n(2593),
                l = n(16441),
                u = n(57218),
                c = n(27586),
                d = n(1581);
            let h = new d.Logger("networks/5.7.1");

            function f(e) {
                let r = function(r, n) {
                    null == n && (n = {});
                    let i = [];
                    if (r.InfuraProvider && "-" !== n.infura) try {
                        i.push(new r.InfuraProvider(e, n.infura))
                    } catch (o) {}
                    if (r.EtherscanProvider && "-" !== n.etherscan) try {
                        i.push(new r.EtherscanProvider(e, n.etherscan))
                    } catch (a) {}
                    if (r.AlchemyProvider && "-" !== n.alchemy) try {
                        i.push(new r.AlchemyProvider(e, n.alchemy))
                    } catch (s) {}
                    if (r.PocketProvider && "-" !== n.pocket) try {
                        let l = new r.PocketProvider(e, n.pocket);
                        l.network && -1 === ["goerli", "ropsten", "rinkeby", "sepolia"].indexOf(l.network.name) && i.push(l)
                    } catch (u) {}
                    if (r.CloudflareProvider && "-" !== n.cloudflare) try {
                        i.push(new r.CloudflareProvider(e))
                    } catch (c) {}
                    if (r.AnkrProvider && "-" !== n.ankr) try {
                        let d = new r.AnkrProvider(e, n.ankr);
                        d.network && -1 === ["ropsten"].indexOf(d.network.name) && i.push(d)
                    } catch (h) {}
                    if (0 === i.length) return null;
                    if (r.FallbackProvider) {
                        let f = 1;
                        return null != n.quorum ? f = n.quorum : "homestead" === e && (f = 2), new r.FallbackProvider(i, f)
                    }
                    return i[0]
                };
                return r.renetwork = function(e) {
                    return f(e)
                }, r
            }

            function p(e, r) {
                let n = function(n, i) {
                    return n.JsonRpcProvider ? new n.JsonRpcProvider(e, r) : null
                };
                return n.renetwork = function(r) {
                    return p(e, r)
                }, n
            }
            let m = {
                    chainId: 1,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "homestead",
                    _defaultProvider: f("homestead")
                },
                g = {
                    chainId: 3,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "ropsten",
                    _defaultProvider: f("ropsten")
                },
                v = {
                    chainId: 63,
                    name: "classicMordor",
                    _defaultProvider: p("https://www.ethercluster.com/mordor", "classicMordor")
                },
                y = {
                    unspecified: {
                        chainId: 0,
                        name: "unspecified"
                    },
                    homestead: m,
                    mainnet: m,
                    morden: {
                        chainId: 2,
                        name: "morden"
                    },
                    ropsten: g,
                    testnet: g,
                    rinkeby: {
                        chainId: 4,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "rinkeby",
                        _defaultProvider: f("rinkeby")
                    },
                    kovan: {
                        chainId: 42,
                        name: "kovan",
                        _defaultProvider: f("kovan")
                    },
                    goerli: {
                        chainId: 5,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "goerli",
                        _defaultProvider: f("goerli")
                    },
                    kintsugi: {
                        chainId: 1337702,
                        name: "kintsugi"
                    },
                    sepolia: {
                        chainId: 11155111,
                        name: "sepolia",
                        _defaultProvider: f("sepolia")
                    },
                    classic: {
                        chainId: 61,
                        name: "classic",
                        _defaultProvider: p("https://www.ethercluster.com/etc", "classic")
                    },
                    classicMorden: {
                        chainId: 62,
                        name: "classicMorden"
                    },
                    classicMordor: v,
                    classicTestnet: v,
                    classicKotti: {
                        chainId: 6,
                        name: "classicKotti",
                        _defaultProvider: p("https://www.ethercluster.com/kotti", "classicKotti")
                    },
                    xdai: {
                        chainId: 100,
                        name: "xdai"
                    },
                    matic: {
                        chainId: 137,
                        name: "matic",
                        _defaultProvider: f("matic")
                    },
                    maticmum: {
                        chainId: 80001,
                        name: "maticmum"
                    },
                    optimism: {
                        chainId: 10,
                        name: "optimism",
                        _defaultProvider: f("optimism")
                    },
                    "optimism-kovan": {
                        chainId: 69,
                        name: "optimism-kovan"
                    },
                    "optimism-goerli": {
                        chainId: 420,
                        name: "optimism-goerli"
                    },
                    arbitrum: {
                        chainId: 42161,
                        name: "arbitrum"
                    },
                    "arbitrum-rinkeby": {
                        chainId: 421611,
                        name: "arbitrum-rinkeby"
                    },
                    "arbitrum-goerli": {
                        chainId: 421613,
                        name: "arbitrum-goerli"
                    },
                    bnb: {
                        chainId: 56,
                        name: "bnb"
                    },
                    bnbt: {
                        chainId: 97,
                        name: "bnbt"
                    }
                };
            var b = n(6881),
                w = n(2006),
                x = n(29251),
                E = n(37707),
                C = n(92882),
                A = n.n(C),
                k = n(34216),
                S = n(30032),
                _ = function(e, r, n, i) {
                    return new(n || (n = Promise))(function(o, a) {
                        function s(e) {
                            try {
                                u(i.next(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function l(e) {
                            try {
                                u(i.throw(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? o(e.value) : ((r = e.value) instanceof n ? r : new n(function(e) {
                                e(r)
                            })).then(s, l)
                        }
                        u((i = i.apply(e, r || [])).next())
                    })
                };
            let P = new d.Logger(k.i);

            function j(e) {
                return null == e ? "null" : (32 !== (0, l.hexDataLength)(e) && P.throwArgumentError("invalid topic", "topic", e), e.toLowerCase())
            }

            function T(e) {
                for (e = e.slice(); e.length > 0 && null == e[e.length - 1];) e.pop();
                return e.map(e => {
                    if (!Array.isArray(e)) return j(e); {
                        let r = {};
                        e.forEach(e => {
                            r[j(e)] = !0
                        });
                        let n = Object.keys(r);
                        return n.sort(), n.join("|")
                    }
                }).join("&")
            }

            function R(e) {
                if ("string" == typeof e) {
                    if (e = e.toLowerCase(), 32 === (0, l.hexDataLength)(e)) return "tx:" + e;
                    if (-1 === e.indexOf(":")) return e
                } else if (Array.isArray(e)) return "filter:*:" + T(e);
                else if (i.Sg.isForkEvent(e)) throw P.warn("not implemented"), Error("not implemented");
                else if (e && "object" == typeof e) return "filter:" + (e.address || "*") + ":" + T(e.topics || []);
                throw Error("invalid event - " + e)
            }

            function B() {
                return new Date().getTime()
            }

            function O(e) {
                return new Promise(r => {
                    setTimeout(r, e)
                })
            }
            let M = ["block", "network", "pending", "poll"];
            class I {
                constructor(e, r, n) {
                    (0, b.defineReadOnly)(this, "tag", e), (0, b.defineReadOnly)(this, "listener", r), (0, b.defineReadOnly)(this, "once", n), this._lastBlockNumber = -2, this._inflight = !1
                }
                get event() {
                    switch (this.type) {
                        case "tx":
                            return this.hash;
                        case "filter":
                            return this.filter
                    }
                    return this.tag
                }
                get type() {
                    return this.tag.split(":")[0]
                }
                get hash() {
                    let e = this.tag.split(":");
                    return "tx" !== e[0] ? null : e[1]
                }
                get filter() {
                    var e;
                    let r = this.tag.split(":");
                    if ("filter" !== r[0]) return null;
                    let n = r[1],
                        i = "" === (e = r[2]) ? [] : e.split(/&/g).map(e => {
                            if ("" === e) return [];
                            let r = e.split("|").map(e => "null" === e ? null : e);
                            return 1 === r.length ? r[0] : r
                        }),
                        o = {};
                    return i.length > 0 && (o.topics = i), n && "*" !== n && (o.address = n), o
                }
                pollable() {
                    return this.tag.indexOf(":") >= 0 || M.indexOf(this.tag) >= 0
                }
            }
            let N = {
                0: {
                    symbol: "btc",
                    p2pkh: 0,
                    p2sh: 5,
                    prefix: "bc"
                },
                2: {
                    symbol: "ltc",
                    p2pkh: 48,
                    p2sh: 50,
                    prefix: "ltc"
                },
                3: {
                    symbol: "doge",
                    p2pkh: 30,
                    p2sh: 22
                },
                60: {
                    symbol: "eth",
                    ilk: "eth"
                },
                61: {
                    symbol: "etc",
                    ilk: "eth"
                },
                700: {
                    symbol: "xdai",
                    ilk: "eth"
                }
            };

            function F(e) {
                return (0, l.hexZeroPad)(s.O$.from(e).toHexString(), 32)
            }

            function L(e) {
                return a.Base58.encode((0, l.concat)([e, (0, l.hexDataSlice)((0, w.JQ)((0, w.JQ)(e)), 0, 4)]))
            }
            let D = RegExp("^(ipfs)://(.*)$", "i"),
                z = [RegExp("^(https)://(.*)$", "i"), RegExp("^(data):(.*)$", "i"), D, RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];

            function U(e, r) {
                try {
                    return (0, x.ZN)($(e, r))
                } catch (n) {}
                return null
            }

            function $(e, r) {
                if ("0x" === e) return null;
                let n = s.O$.from((0, l.hexDataSlice)(e, r, r + 32)).toNumber(),
                    i = s.O$.from((0, l.hexDataSlice)(e, n, n + 32)).toNumber();
                return (0, l.hexDataSlice)(e, n + 32, n + 32 + i)
            }

            function q(e) {
                return e.match(/^ipfs:\/\/ipfs\//i) ? e = e.substring(12) : e.match(/^ipfs:\/\//i) ? e = e.substring(7) : P.throwArgumentError("unsupported IPFS format", "link", e), `https://gateway.ipfs.io/ipfs/${e}`
            }

            function W(e) {
                let r = (0, l.arrayify)(e);
                if (r.length > 32) throw Error("internal; should not happen");
                let n = new Uint8Array(32);
                return n.set(r, 32 - r.length), n
            }

            function V(e) {
                let r = [],
                    n = 0;
                for (let i = 0; i < e.length; i++) r.push(null), n += 32;
                for (let o = 0; o < e.length; o++) {
                    let a = (0, l.arrayify)(e[o]);
                    r[o] = W(n), r.push(W(a.length)), r.push(function(e) {
                        if (e.length % 32 == 0) return e;
                        let r = new Uint8Array(32 * Math.ceil(e.length / 32));
                        return r.set(e), r
                    }(a)), n += 32 + 32 * Math.ceil(a.length / 32)
                }
                return (0, l.hexConcat)(r)
            }
            class H {
                constructor(e, r, n, i) {
                    (0, b.defineReadOnly)(this, "provider", e), (0, b.defineReadOnly)(this, "name", n), (0, b.defineReadOnly)(this, "address", e.formatter.address(r)), (0, b.defineReadOnly)(this, "_resolvedAddress", i)
                }
                supportsWildcard() {
                    return this._supportsEip2544 || (this._supportsEip2544 = this.provider.call({
                        to: this.address,
                        data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
                    }).then(e => s.O$.from(e).eq(1)).catch(e => {
                        if (e.code === d.Logger.errors.CALL_EXCEPTION) return !1;
                        throw this._supportsEip2544 = null, e
                    })), this._supportsEip2544
                }
                _fetch(e, r) {
                    return _(this, void 0, void 0, function*() {
                        let n = {
                                to: this.address,
                                ccipReadEnabled: !0,
                                data: (0, l.hexConcat)([e, (0, c.VM)(this.name), r || "0x"])
                            },
                            i = !1;
                        (yield this.supportsWildcard()) && (i = !0, n.data = (0, l.hexConcat)(["0x9061b923", V([(0, c.Kn)(this.name), n.data])]));
                        try {
                            let o = yield this.provider.call(n);
                            return (0, l.arrayify)(o).length % 32 == 4 && P.throwError("resolver threw error", d.Logger.errors.CALL_EXCEPTION, {
                                transaction: n,
                                data: o
                            }), i && (o = $(o, 0)), o
                        } catch (a) {
                            if (a.code === d.Logger.errors.CALL_EXCEPTION) return null;
                            throw a
                        }
                    })
                }
                _fetchBytes(e, r) {
                    return _(this, void 0, void 0, function*() {
                        let n = yield this._fetch(e, r);
                        return null != n ? $(n, 0) : null
                    })
                }
                _getAddress(e, r) {
                    let n = N[String(e)];
                    if (null == n && P.throwError(`unsupported coin type: ${e}`, d.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: `getAddress(${e})`
                        }), "eth" === n.ilk) return this.provider.formatter.address(r);
                    let i = (0, l.arrayify)(r);
                    if (null != n.p2pkh) {
                        let o = r.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
                        if (o) {
                            let a = parseInt(o[1], 16);
                            if (o[2].length === 2 * a && a >= 1 && a <= 75) return L((0, l.concat)([
                                [n.p2pkh], "0x" + o[2]
                            ]))
                        }
                    }
                    if (null != n.p2sh) {
                        let s = r.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
                        if (s) {
                            let u = parseInt(s[1], 16);
                            if (s[2].length === 2 * u && u >= 1 && u <= 75) return L((0, l.concat)([
                                [n.p2sh], "0x" + s[2]
                            ]))
                        }
                    }
                    if (null != n.prefix) {
                        let c = i[1],
                            h = i[0];
                        if (0 === h ? 20 !== c && 32 !== c && (h = -1) : h = -1, h >= 0 && i.length === 2 + c && c >= 1 && c <= 75) {
                            let f = A().toWords(i.slice(2));
                            return f.unshift(h), A().encode(n.prefix, f)
                        }
                    }
                    return null
                }
                getAddress(e) {
                    return _(this, void 0, void 0, function*() {
                        if (null == e && (e = 60), 60 === e) try {
                            let r = yield this._fetch("0x3b3b57de");
                            if ("0x" === r || r === u.R) return null;
                            return this.provider.formatter.callAddress(r)
                        } catch (n) {
                            if (n.code === d.Logger.errors.CALL_EXCEPTION) return null;
                            throw n
                        }
                        let i = yield this._fetchBytes("0xf1cb7e06", F(e));
                        if (null == i || "0x" === i) return null;
                        let o = this._getAddress(e, i);
                        return null == o && P.throwError("invalid or unsupported coin data", d.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: `getAddress(${e})`,
                            coinType: e,
                            data: i
                        }), o
                    })
                }
                getAvatar() {
                    return _(this, void 0, void 0, function*() {
                        let e = [{
                            type: "name",
                            content: this.name
                        }];
                        try {
                            let r = yield this.getText("avatar");
                            if (null == r) return null;
                            for (let n = 0; n < z.length; n++) {
                                let i = r.match(z[n]);
                                if (null == i) continue;
                                let o = i[1].toLowerCase();
                                switch (o) {
                                    case "https":
                                        return e.push({
                                            type: "url",
                                            content: r
                                        }), {
                                            linkage: e,
                                            url: r
                                        };
                                    case "data":
                                        return e.push({
                                            type: "data",
                                            content: r
                                        }), {
                                            linkage: e,
                                            url: r
                                        };
                                    case "ipfs":
                                        return e.push({
                                            type: "ipfs",
                                            content: r
                                        }), {
                                            linkage: e,
                                            url: q(r)
                                        };
                                    case "erc721":
                                    case "erc1155":
                                        {
                                            let a = "erc721" === o ? "0xc87b56dd" : "0x0e89341c";e.push({
                                                type: o,
                                                content: r
                                            });
                                            let u = this._resolvedAddress || (yield this.getAddress()),
                                                c = (i[2] || "").split("/");
                                            if (2 !== c.length) return null;
                                            let d = yield this.provider.formatter.address(c[0]), h = (0, l.hexZeroPad)(s.O$.from(c[1]).toHexString(), 32);
                                            if ("erc721" === o) {
                                                let f = this.provider.formatter.callAddress((yield this.provider.call({
                                                    to: d,
                                                    data: (0, l.hexConcat)(["0x6352211e", h])
                                                })));
                                                if (u !== f) return null;
                                                e.push({
                                                    type: "owner",
                                                    content: f
                                                })
                                            } else if ("erc1155" === o) {
                                                let p = s.O$.from((yield this.provider.call({
                                                    to: d,
                                                    data: (0, l.hexConcat)(["0x00fdd58e", (0, l.hexZeroPad)(u, 32), h])
                                                })));
                                                if (p.isZero()) return null;
                                                e.push({
                                                    type: "balance",
                                                    content: p.toString()
                                                })
                                            }
                                            let m = {
                                                    to: this.provider.formatter.address(c[0]),
                                                    data: (0, l.hexConcat)([a, h])
                                                },
                                                g = U((yield this.provider.call(m)), 0);
                                            if (null == g) return null;e.push({
                                                type: "metadata-url-base",
                                                content: g
                                            }),
                                            "erc1155" === o && (g = g.replace("{id}", h.substring(2)), e.push({
                                                type: "metadata-url-expanded",
                                                content: g
                                            })),
                                            g.match(/^ipfs:/i) && (g = q(g)),
                                            e.push({
                                                type: "metadata-url",
                                                content: g
                                            });
                                            let v = yield(0, E.fetchJson)(g);
                                            if (!v) return null;e.push({
                                                type: "metadata",
                                                content: JSON.stringify(v)
                                            });
                                            let y = v.image;
                                            if ("string" != typeof y) return null;
                                            if (y.match(/^(https:\/\/|data:)/i));
                                            else {
                                                let b = y.match(D);
                                                if (null == b) return null;
                                                e.push({
                                                    type: "url-ipfs",
                                                    content: y
                                                }), y = q(y)
                                            }
                                            return e.push({
                                                type: "url",
                                                content: y
                                            }),
                                            {
                                                linkage: e,
                                                url: y
                                            }
                                        }
                                }
                            }
                        } catch (w) {}
                        return null
                    })
                }
                getContentHash() {
                    return _(this, void 0, void 0, function*() {
                        let e = yield this._fetchBytes("0xbc1c58d1");
                        if (null == e || "0x" === e) return null;
                        let r = e.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                        if (r) {
                            let n = parseInt(r[3], 16);
                            if (r[4].length === 2 * n) return "ipfs://" + a.Base58.encode("0x" + r[1])
                        }
                        let i = e.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                        if (i) {
                            let s = parseInt(i[3], 16);
                            if (i[4].length === 2 * s) return "ipns://" + a.Base58.encode("0x" + i[1])
                        }
                        let l = e.match(/^0xe40101fa011b20([0-9a-f]*)$/);
                        if (l && 64 === l[1].length) return "bzz://" + l[1];
                        let u = e.match(/^0x90b2c605([0-9a-f]*)$/);
                        if (u && 68 === u[1].length) {
                            let c = {
                                    "=": "",
                                    "+": "-",
                                    "/": "_"
                                },
                                h = (0, o.c)("0x" + u[1]).replace(/[=+\/]/g, e => c[e]);
                            return "sia://" + h
                        }
                        return P.throwError("invalid or unsupported content hash data", d.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "getContentHash()",
                            data: e
                        })
                    })
                }
                getText(e) {
                    return _(this, void 0, void 0, function*() {
                        let r = (0, x.Y0)(e);
                        (r = (0, l.concat)([F(64), F(r.length), r])).length % 32 != 0 && (r = (0, l.concat)([r, (0, l.hexZeroPad)("0x", 32 - e.length % 32)]));
                        let n = yield this._fetchBytes("0x59d1d43c", (0, l.hexlify)(r));
                        return null == n || "0x" === n ? null : (0, x.ZN)(n)
                    })
                }
            }
            let G = null,
                K = 1;
            class Q extends i.zt {
                constructor(e) {
                    if (super(), this._events = [], this._emitted = {
                            block: -2
                        }, this.disableCcipRead = !1, this.formatter = new.target.getFormatter(), (0, b.defineReadOnly)(this, "anyNetwork", "any" === e), this.anyNetwork && (e = this.detectNetwork()), e instanceof Promise) this._networkPromise = e, e.catch(e => {}), this._ready().catch(e => {});
                    else {
                        let r = (0, b.getStatic)(new.target, "getNetwork")(e);
                        r ? ((0, b.defineReadOnly)(this, "_network", r), this.emit("network", r, null)) : P.throwArgumentError("invalid network", "network", e)
                    }
                    this._maxInternalBlockNumber = -1024, this._lastBlockNumber = -2, this._maxFilterBlockRange = 10, this._pollingInterval = 4e3, this._fastQueryDate = 0
                }
                _ready() {
                    return _(this, void 0, void 0, function*() {
                        if (null == this._network) {
                            let e = null;
                            if (this._networkPromise) try {
                                e = yield this._networkPromise
                            } catch (r) {}
                            null == e && (e = yield this.detectNetwork()), e || P.throwError("no network detected", d.Logger.errors.UNKNOWN_ERROR, {}), null == this._network && (this.anyNetwork ? this._network = e : (0, b.defineReadOnly)(this, "_network", e), this.emit("network", e, null))
                        }
                        return this._network
                    })
                }
                get ready() {
                    return (0, E.poll)(() => this._ready().then(e => e, e => {
                        if (e.code !== d.Logger.errors.NETWORK_ERROR || "noNetwork" !== e.event) throw e
                    }))
                }
                static getFormatter() {
                    return null == G && (G = new S.Mb), G
                }
                static getNetwork(e) {
                    return function(e) {
                        if (null == e) return null;
                        if ("number" == typeof e) {
                            for (let r in y) {
                                let n = y[r];
                                if (n.chainId === e) return {
                                    name: n.name,
                                    chainId: n.chainId,
                                    ensAddress: n.ensAddress || null,
                                    _defaultProvider: n._defaultProvider || null
                                }
                            }
                            return {
                                chainId: e,
                                name: "unknown"
                            }
                        }
                        if ("string" == typeof e) {
                            let i = y[e];
                            return null == i ? null : {
                                name: i.name,
                                chainId: i.chainId,
                                ensAddress: i.ensAddress,
                                _defaultProvider: i._defaultProvider || null
                            }
                        }
                        let o = y[e.name];
                        if (!o) return "number" != typeof e.chainId && h.throwArgumentError("invalid network chainId", "network", e), e;
                        0 !== e.chainId && e.chainId !== o.chainId && h.throwArgumentError("network chainId mismatch", "network", e);
                        let a = e._defaultProvider || null;
                        if (null == a && o._defaultProvider) {
                            var s;
                            a = (s = o._defaultProvider) && "function" == typeof s.renetwork ? o._defaultProvider.renetwork(e) : o._defaultProvider
                        }
                        return {
                            name: e.name,
                            chainId: o.chainId,
                            ensAddress: e.ensAddress || o.ensAddress || null,
                            _defaultProvider: a
                        }
                    }(null == e ? "homestead" : e)
                }
                ccipReadFetch(e, r, n) {
                    return _(this, void 0, void 0, function*() {
                        if (this.disableCcipRead || 0 === n.length) return null;
                        let i = e.to.toLowerCase(),
                            o = r.toLowerCase(),
                            a = [];
                        for (let s = 0; s < n.length; s++) {
                            let l = n[s],
                                u = l.replace("{sender}", i).replace("{data}", o),
                                c = l.indexOf("{data}") >= 0 ? null : JSON.stringify({
                                    data: o,
                                    sender: i
                                }),
                                h = yield(0, E.fetchJson)({
                                    url: u,
                                    errorPassThrough: !0
                                }, c, (e, r) => (e.status = r.statusCode, e));
                            if (h.data) return h.data;
                            let f = h.message || "unknown error";
                            if (h.status >= 400 && h.status < 500) return P.throwError(`response not found during CCIP fetch: ${f}`, d.Logger.errors.SERVER_ERROR, {
                                url: l,
                                errorMessage: f
                            });
                            a.push(f)
                        }
                        return P.throwError(`error encountered during CCIP fetch: ${a.map(e=>JSON.stringify(e)).join(", ")}`, d.Logger.errors.SERVER_ERROR, {
                            urls: n,
                            errorMessages: a
                        })
                    })
                }
                _getInternalBlockNumber(e) {
                    return _(this, void 0, void 0, function*() {
                        if (yield this._ready(), e > 0)
                            for (; this._internalBlockNumber;) {
                                let r = this._internalBlockNumber;
                                try {
                                    let n = yield r;
                                    if (B() - n.respTime <= e) return n.blockNumber;
                                    break
                                } catch (i) {
                                    if (this._internalBlockNumber === r) break
                                }
                            }
                        let o = B(),
                            a = (0, b.resolveProperties)({
                                blockNumber: this.perform("getBlockNumber", {}),
                                networkError: this.getNetwork().then(e => null, e => e)
                            }).then(({
                                blockNumber: e,
                                networkError: r
                            }) => {
                                if (r) throw this._internalBlockNumber === a && (this._internalBlockNumber = null), r;
                                let n = B();
                                return (e = s.O$.from(e).toNumber()) < this._maxInternalBlockNumber && (e = this._maxInternalBlockNumber), this._maxInternalBlockNumber = e, this._setFastBlockNumber(e), {
                                    blockNumber: e,
                                    reqTime: o,
                                    respTime: n
                                }
                            });
                        return this._internalBlockNumber = a, a.catch(e => {
                            this._internalBlockNumber === a && (this._internalBlockNumber = null)
                        }), (yield a).blockNumber
                    })
                }
                poll() {
                    return _(this, void 0, void 0, function*() {
                        let e = K++,
                            r = [],
                            n = null;
                        try {
                            n = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2)
                        } catch (i) {
                            this.emit("error", i);
                            return
                        }
                        if (this._setFastBlockNumber(n), this.emit("poll", e, n), n === this._lastBlockNumber) {
                            this.emit("didPoll", e);
                            return
                        }
                        if (-2 === this._emitted.block && (this._emitted.block = n - 1), Math.abs(this._emitted.block - n) > 1e3) P.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${n})`), this.emit("error", P.makeError("network block skew detected", d.Logger.errors.NETWORK_ERROR, {
                            blockNumber: n,
                            event: "blockSkew",
                            previousBlockNumber: this._emitted.block
                        })), this.emit("block", n);
                        else
                            for (let o = this._emitted.block + 1; o <= n; o++) this.emit("block", o);
                        this._emitted.block !== n && (this._emitted.block = n, Object.keys(this._emitted).forEach(e => {
                            if ("block" === e) return;
                            let r = this._emitted[e];
                            "pending" !== r && n - r > 12 && delete this._emitted[e]
                        })), -2 === this._lastBlockNumber && (this._lastBlockNumber = n - 1), this._events.forEach(e => {
                            switch (e.type) {
                                case "tx":
                                    {
                                        let i = e.hash,
                                            o = this.getTransactionReceipt(i).then(e => (e && null != e.blockNumber && (this._emitted["t:" + i] = e.blockNumber, this.emit(i, e)), null)).catch(e => {
                                                this.emit("error", e)
                                            });r.push(o);
                                        break
                                    }
                                case "filter":
                                    if (!e._inflight) {
                                        e._inflight = !0, -2 === e._lastBlockNumber && (e._lastBlockNumber = n - 1);
                                        let a = e.filter;
                                        a.fromBlock = e._lastBlockNumber + 1, a.toBlock = n;
                                        let s = a.toBlock - this._maxFilterBlockRange;
                                        s > a.fromBlock && (a.fromBlock = s), a.fromBlock < 0 && (a.fromBlock = 0);
                                        let l = this.getLogs(a).then(r => {
                                            e._inflight = !1, 0 !== r.length && r.forEach(r => {
                                                r.blockNumber > e._lastBlockNumber && (e._lastBlockNumber = r.blockNumber), this._emitted["b:" + r.blockHash] = r.blockNumber, this._emitted["t:" + r.transactionHash] = r.blockNumber, this.emit(a, r)
                                            })
                                        }).catch(r => {
                                            this.emit("error", r), e._inflight = !1
                                        });
                                        r.push(l)
                                    }
                            }
                        }), this._lastBlockNumber = n, Promise.all(r).then(() => {
                            this.emit("didPoll", e)
                        }).catch(e => {
                            this.emit("error", e)
                        })
                    })
                }
                resetEventsBlock(e) {
                    this._lastBlockNumber = e - 1, this.polling && this.poll()
                }
                get network() {
                    return this._network
                }
                detectNetwork() {
                    return _(this, void 0, void 0, function*() {
                        return P.throwError("provider does not support network detection", d.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "provider.detectNetwork"
                        })
                    })
                }
                getNetwork() {
                    return _(this, void 0, void 0, function*() {
                        let e = yield this._ready(), r = yield this.detectNetwork();
                        if (e.chainId !== r.chainId) {
                            if (this.anyNetwork) return this._network = r, this._lastBlockNumber = -2, this._fastBlockNumber = null, this._fastBlockNumberPromise = null, this._fastQueryDate = 0, this._emitted.block = -2, this._maxInternalBlockNumber = -1024, this._internalBlockNumber = null, this.emit("network", r, e), yield O(0), this._network;
                            let n = P.makeError("underlying network changed", d.Logger.errors.NETWORK_ERROR, {
                                event: "changed",
                                network: e,
                                detectedNetwork: r
                            });
                            throw this.emit("error", n), n
                        }
                        return e
                    })
                }
                get blockNumber() {
                    return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(e => {
                        this._setFastBlockNumber(e)
                    }, e => {}), null != this._fastBlockNumber ? this._fastBlockNumber : -1
                }
                get polling() {
                    return null != this._poller
                }
                set polling(e) {
                    e && !this._poller ? (this._poller = setInterval(() => {
                        this.poll()
                    }, this.pollingInterval), this._bootstrapPoll || (this._bootstrapPoll = setTimeout(() => {
                        this.poll(), this._bootstrapPoll = setTimeout(() => {
                            this._poller || this.poll(), this._bootstrapPoll = null
                        }, this.pollingInterval)
                    }, 0))) : !e && this._poller && (clearInterval(this._poller), this._poller = null)
                }
                get pollingInterval() {
                    return this._pollingInterval
                }
                set pollingInterval(e) {
                    if ("number" != typeof e || e <= 0 || parseInt(String(e)) != e) throw Error("invalid polling interval");
                    this._pollingInterval = e, this._poller && (clearInterval(this._poller), this._poller = setInterval(() => {
                        this.poll()
                    }, this._pollingInterval))
                }
                _getFastBlockNumber() {
                    let e = B();
                    return e - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = e, this._fastBlockNumberPromise = this.getBlockNumber().then(e => ((null == this._fastBlockNumber || e > this._fastBlockNumber) && (this._fastBlockNumber = e), this._fastBlockNumber))), this._fastBlockNumberPromise
                }
                _setFastBlockNumber(e) {
                    (null == this._fastBlockNumber || !(e < this._fastBlockNumber)) && (this._fastQueryDate = B(), (null == this._fastBlockNumber || e > this._fastBlockNumber) && (this._fastBlockNumber = e, this._fastBlockNumberPromise = Promise.resolve(e)))
                }
                waitForTransaction(e, r, n) {
                    return _(this, void 0, void 0, function*() {
                        return this._waitForTransaction(e, null == r ? 1 : r, n || 0, null)
                    })
                }
                _waitForTransaction(e, r, n, i) {
                    return _(this, void 0, void 0, function*() {
                        let o = yield this.getTransactionReceipt(e);
                        return (o ? o.confirmations : 0) >= r ? o : new Promise((o, a) => {
                            let s = [],
                                l = !1,
                                u = function() {
                                    return !!l || (l = !0, s.forEach(e => {
                                        e()
                                    }), !1)
                                },
                                c = e => {
                                    e.confirmations < r || u() || o(e)
                                };
                            if (this.on(e, c), s.push(() => {
                                    this.removeListener(e, c)
                                }), i) {
                                let h = i.startBlock,
                                    f = null,
                                    p = n => _(this, void 0, void 0, function*() {
                                        l || (yield O(1e3), this.getTransactionCount(i.from).then(o => _(this, void 0, void 0, function*() {
                                            if (!l) {
                                                if (o <= i.nonce) h = n;
                                                else {
                                                    {
                                                        let s = yield this.getTransaction(e);
                                                        if (s && null != s.blockNumber) return
                                                    }
                                                    for (null == f && (f = h - 3) < i.startBlock && (f = i.startBlock); f <= n;) {
                                                        if (l) return;
                                                        let c = yield this.getBlockWithTransactions(f);
                                                        for (let m = 0; m < c.transactions.length; m++) {
                                                            let g = c.transactions[m];
                                                            if (g.hash === e) return;
                                                            if (g.from === i.from && g.nonce === i.nonce) {
                                                                if (l) return;
                                                                let v = yield this.waitForTransaction(g.hash, r);
                                                                if (u()) return;
                                                                let y = "replaced";
                                                                g.data === i.data && g.to === i.to && g.value.eq(i.value) ? y = "repriced" : "0x" === g.data && g.from === g.to && g.value.isZero() && (y = "cancelled"), a(P.makeError("transaction was replaced", d.Logger.errors.TRANSACTION_REPLACED, {
                                                                    cancelled: "replaced" === y || "cancelled" === y,
                                                                    reason: y,
                                                                    replacement: this._wrapTransaction(g),
                                                                    hash: e,
                                                                    receipt: v
                                                                }));
                                                                return
                                                            }
                                                        }
                                                        f++
                                                    }
                                                }
                                                l || this.once("block", p)
                                            }
                                        }), e => {
                                            l || this.once("block", p)
                                        }))
                                    });
                                if (l) return;
                                this.once("block", p), s.push(() => {
                                    this.removeListener("block", p)
                                })
                            }
                            if ("number" == typeof n && n > 0) {
                                let m = setTimeout(() => {
                                    u() || a(P.makeError("timeout exceeded", d.Logger.errors.TIMEOUT, {
                                        timeout: n
                                    }))
                                }, n);
                                m.unref && m.unref(), s.push(() => {
                                    clearTimeout(m)
                                })
                            }
                        })
                    })
                }
                getBlockNumber() {
                    return _(this, void 0, void 0, function*() {
                        return this._getInternalBlockNumber(0)
                    })
                }
                getGasPrice() {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let e = yield this.perform("getGasPrice", {});
                        try {
                            return s.O$.from(e)
                        } catch (r) {
                            return P.throwError("bad result from backend", d.Logger.errors.SERVER_ERROR, {
                                method: "getGasPrice",
                                result: e,
                                error: r
                            })
                        }
                    })
                }
                getBalance(e, r) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let n = yield(0, b.resolveProperties)({
                            address: this._getAddress(e),
                            blockTag: this._getBlockTag(r)
                        }), i = yield this.perform("getBalance", n);
                        try {
                            return s.O$.from(i)
                        } catch (o) {
                            return P.throwError("bad result from backend", d.Logger.errors.SERVER_ERROR, {
                                method: "getBalance",
                                params: n,
                                result: i,
                                error: o
                            })
                        }
                    })
                }
                getTransactionCount(e, r) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let n = yield(0, b.resolveProperties)({
                            address: this._getAddress(e),
                            blockTag: this._getBlockTag(r)
                        }), i = yield this.perform("getTransactionCount", n);
                        try {
                            return s.O$.from(i).toNumber()
                        } catch (o) {
                            return P.throwError("bad result from backend", d.Logger.errors.SERVER_ERROR, {
                                method: "getTransactionCount",
                                params: n,
                                result: i,
                                error: o
                            })
                        }
                    })
                }
                getCode(e, r) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let n = yield(0, b.resolveProperties)({
                            address: this._getAddress(e),
                            blockTag: this._getBlockTag(r)
                        }), i = yield this.perform("getCode", n);
                        try {
                            return (0, l.hexlify)(i)
                        } catch (o) {
                            return P.throwError("bad result from backend", d.Logger.errors.SERVER_ERROR, {
                                method: "getCode",
                                params: n,
                                result: i,
                                error: o
                            })
                        }
                    })
                }
                getStorageAt(e, r, n) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let i = yield(0, b.resolveProperties)({
                            address: this._getAddress(e),
                            blockTag: this._getBlockTag(n),
                            position: Promise.resolve(r).then(e => (0, l.hexValue)(e))
                        }), o = yield this.perform("getStorageAt", i);
                        try {
                            return (0, l.hexlify)(o)
                        } catch (a) {
                            return P.throwError("bad result from backend", d.Logger.errors.SERVER_ERROR, {
                                method: "getStorageAt",
                                params: i,
                                result: o,
                                error: a
                            })
                        }
                    })
                }
                _wrapTransaction(e, r, n) {
                    if (null != r && 32 !== (0, l.hexDataLength)(r)) throw Error("invalid response - sendTransaction");
                    let i = e;
                    return null != r && e.hash !== r && P.throwError("Transaction hash mismatch from Provider.sendTransaction.", d.Logger.errors.UNKNOWN_ERROR, {
                        expectedHash: e.hash,
                        returnedHash: r
                    }), i.wait = (r, i) => _(this, void 0, void 0, function*() {
                        let o;
                        null == r && (r = 1), null == i && (i = 0), 0 !== r && null != n && (o = {
                            data: e.data,
                            from: e.from,
                            nonce: e.nonce,
                            to: e.to,
                            value: e.value,
                            startBlock: n
                        });
                        let a = yield this._waitForTransaction(e.hash, r, i, o);
                        return null == a && 0 === r ? null : (this._emitted["t:" + e.hash] = a.blockNumber, 0 === a.status && P.throwError("transaction failed", d.Logger.errors.CALL_EXCEPTION, {
                            transactionHash: e.hash,
                            transaction: e,
                            receipt: a
                        }), a)
                    }), i
                }
                sendTransaction(e) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let r = yield Promise.resolve(e).then(e => (0, l.hexlify)(e)), n = this.formatter.transaction(e);
                        null == n.confirmations && (n.confirmations = 0);
                        let i = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                        try {
                            let o = yield this.perform("sendTransaction", {
                                signedTransaction: r
                            });
                            return this._wrapTransaction(n, o, i)
                        } catch (a) {
                            throw a.transaction = n, a.transactionHash = n.hash, a
                        }
                    })
                }
                _getTransactionRequest(e) {
                    return _(this, void 0, void 0, function*() {
                        let r = yield e, n = {};
                        return ["from", "to"].forEach(e => {
                            null != r[e] && (n[e] = Promise.resolve(r[e]).then(e => e ? this._getAddress(e) : null))
                        }), ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach(e => {
                            null != r[e] && (n[e] = Promise.resolve(r[e]).then(e => e ? s.O$.from(e) : null))
                        }), ["type"].forEach(e => {
                            null != r[e] && (n[e] = Promise.resolve(r[e]).then(e => null != e ? e : null))
                        }), r.accessList && (n.accessList = this.formatter.accessList(r.accessList)), ["data"].forEach(e => {
                            null != r[e] && (n[e] = Promise.resolve(r[e]).then(e => e ? (0, l.hexlify)(e) : null))
                        }), this.formatter.transactionRequest((yield(0, b.resolveProperties)(n)))
                    })
                }
                _getFilter(e) {
                    return _(this, void 0, void 0, function*() {
                        e = yield e;
                        let r = {};
                        return null != e.address && (r.address = this._getAddress(e.address)), ["blockHash", "topics"].forEach(n => {
                            null != e[n] && (r[n] = e[n])
                        }), ["fromBlock", "toBlock"].forEach(n => {
                            null != e[n] && (r[n] = this._getBlockTag(e[n]))
                        }), this.formatter.filter((yield(0, b.resolveProperties)(r)))
                    })
                }
                _call(e, r, n) {
                    return _(this, void 0, void 0, function*() {
                        n >= 10 && P.throwError("CCIP read exceeded maximum redirections", d.Logger.errors.SERVER_ERROR, {
                            redirects: n,
                            transaction: e
                        });
                        let i = e.to,
                            o = yield this.perform("call", {
                                transaction: e,
                                blockTag: r
                            });
                        if (n >= 0 && "latest" === r && null != i && "0x556f1830" === o.substring(0, 10) && (0, l.hexDataLength)(o) % 32 == 4) try {
                            let a = (0, l.hexDataSlice)(o, 4),
                                u = (0, l.hexDataSlice)(a, 0, 32);
                            s.O$.from(u).eq(i) || P.throwError("CCIP Read sender did not match", d.Logger.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: e,
                                data: o
                            });
                            let c = [],
                                h = s.O$.from((0, l.hexDataSlice)(a, 32, 64)).toNumber(),
                                f = s.O$.from((0, l.hexDataSlice)(a, h, h + 32)).toNumber(),
                                p = (0, l.hexDataSlice)(a, h + 32);
                            for (let m = 0; m < f; m++) {
                                let g = U(p, 32 * m);
                                null == g && P.throwError("CCIP Read contained corrupt URL string", d.Logger.errors.CALL_EXCEPTION, {
                                    name: "OffchainLookup",
                                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                    transaction: e,
                                    data: o
                                }), c.push(g)
                            }
                            let v = $(a, 64);
                            s.O$.from((0, l.hexDataSlice)(a, 100, 128)).isZero() || P.throwError("CCIP Read callback selector included junk", d.Logger.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: e,
                                data: o
                            });
                            let y = (0, l.hexDataSlice)(a, 96, 100),
                                b = $(a, 128),
                                w = yield this.ccipReadFetch(e, v, c);
                            null == w && P.throwError("CCIP Read disabled or provided no URLs", d.Logger.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: e,
                                data: o
                            });
                            let x = {
                                to: i,
                                data: (0, l.hexConcat)([y, V([w, b])])
                            };
                            return this._call(x, r, n + 1)
                        } catch (E) {
                            if (E.code === d.Logger.errors.SERVER_ERROR) throw E
                        }
                        try {
                            return (0, l.hexlify)(o)
                        } catch (C) {
                            return P.throwError("bad result from backend", d.Logger.errors.SERVER_ERROR, {
                                method: "call",
                                params: {
                                    transaction: e,
                                    blockTag: r
                                },
                                result: o,
                                error: C
                            })
                        }
                    })
                }
                call(e, r) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let n = yield(0, b.resolveProperties)({
                            transaction: this._getTransactionRequest(e),
                            blockTag: this._getBlockTag(r),
                            ccipReadEnabled: Promise.resolve(e.ccipReadEnabled)
                        });
                        return this._call(n.transaction, n.blockTag, n.ccipReadEnabled ? 0 : -1)
                    })
                }
                estimateGas(e) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let r = yield(0, b.resolveProperties)({
                            transaction: this._getTransactionRequest(e)
                        }), n = yield this.perform("estimateGas", r);
                        try {
                            return s.O$.from(n)
                        } catch (i) {
                            return P.throwError("bad result from backend", d.Logger.errors.SERVER_ERROR, {
                                method: "estimateGas",
                                params: r,
                                result: n,
                                error: i
                            })
                        }
                    })
                }
                _getAddress(e) {
                    return _(this, void 0, void 0, function*() {
                        "string" != typeof(e = yield e) && P.throwArgumentError("invalid address or ENS name", "name", e);
                        let r = yield this.resolveName(e);
                        return null == r && P.throwError("ENS name not configured", d.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: `resolveName(${JSON.stringify(e)})`
                        }), r
                    })
                }
                _getBlock(e, r) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork(), e = yield e;
                        let n = -128,
                            i = {
                                includeTransactions: !!r
                            };
                        if ((0, l.isHexString)(e, 32)) i.blockHash = e;
                        else try {
                            i.blockTag = yield this._getBlockTag(e), (0, l.isHexString)(i.blockTag) && (n = parseInt(i.blockTag.substring(2), 16))
                        } catch (o) {
                            P.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", e)
                        }
                        return (0, E.poll)(() => _(this, void 0, void 0, function*() {
                            let e = yield this.perform("getBlock", i);
                            if (null == e) return null != i.blockHash && null == this._emitted["b:" + i.blockHash] || null != i.blockTag && n > this._emitted.block ? null : void 0;
                            if (r) {
                                let o = null;
                                for (let a = 0; a < e.transactions.length; a++) {
                                    let s = e.transactions[a];
                                    if (null == s.blockNumber) s.confirmations = 0;
                                    else if (null == s.confirmations) {
                                        null == o && (o = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval));
                                        let l = o - s.blockNumber + 1;
                                        l <= 0 && (l = 1), s.confirmations = l
                                    }
                                }
                                let u = this.formatter.blockWithTransactions(e);
                                return u.transactions = u.transactions.map(e => this._wrapTransaction(e)), u
                            }
                            return this.formatter.block(e)
                        }), {
                            oncePoll: this
                        })
                    })
                }
                getBlock(e) {
                    return this._getBlock(e, !1)
                }
                getBlockWithTransactions(e) {
                    return this._getBlock(e, !0)
                }
                getTransaction(e) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork(), e = yield e;
                        let r = {
                            transactionHash: this.formatter.hash(e, !0)
                        };
                        return (0, E.poll)(() => _(this, void 0, void 0, function*() {
                            let n = yield this.perform("getTransaction", r);
                            if (null == n) return null == this._emitted["t:" + e] ? null : void 0;
                            let i = this.formatter.transactionResponse(n);
                            if (null == i.blockNumber) i.confirmations = 0;
                            else if (null == i.confirmations) {
                                let o = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval), a = o - i.blockNumber + 1;
                                a <= 0 && (a = 1), i.confirmations = a
                            }
                            return this._wrapTransaction(i)
                        }), {
                            oncePoll: this
                        })
                    })
                }
                getTransactionReceipt(e) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork(), e = yield e;
                        let r = {
                            transactionHash: this.formatter.hash(e, !0)
                        };
                        return (0, E.poll)(() => _(this, void 0, void 0, function*() {
                            let n = yield this.perform("getTransactionReceipt", r);
                            if (null == n) return null == this._emitted["t:" + e] ? null : void 0;
                            if (null == n.blockHash) return;
                            let i = this.formatter.receipt(n);
                            if (null == i.blockNumber) i.confirmations = 0;
                            else if (null == i.confirmations) {
                                let o = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval), a = o - i.blockNumber + 1;
                                a <= 0 && (a = 1), i.confirmations = a
                            }
                            return i
                        }), {
                            oncePoll: this
                        })
                    })
                }
                getLogs(e) {
                    return _(this, void 0, void 0, function*() {
                        yield this.getNetwork();
                        let r = yield(0, b.resolveProperties)({
                            filter: this._getFilter(e)
                        }), n = yield this.perform("getLogs", r);
                        return n.forEach(e => {
                            null == e.removed && (e.removed = !1)
                        }), S.Mb.arrayOf(this.formatter.filterLog.bind(this.formatter))(n)
                    })
                }
                getEtherPrice() {
                    return _(this, void 0, void 0, function*() {
                        return yield this.getNetwork(), this.perform("getEtherPrice", {})
                    })
                }
                _getBlockTag(e) {
                    return _(this, void 0, void 0, function*() {
                        if ("number" == typeof(e = yield e) && e < 0) {
                            e % 1 && P.throwArgumentError("invalid BlockTag", "blockTag", e);
                            let r = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                            return (r += e) < 0 && (r = 0), this.formatter.blockTag(r)
                        }
                        return this.formatter.blockTag(e)
                    })
                }
                getResolver(e) {
                    return _(this, void 0, void 0, function*() {
                        let r = e;
                        for (;;) {
                            if ("" === r || "." === r || "eth" !== e && "eth" === r) return null;
                            let n = yield this._getResolver(r, "getResolver");
                            if (null != n) {
                                let i = new H(this, n, e);
                                if (r !== e && !(yield i.supportsWildcard())) return null;
                                return i
                            }
                            r = r.split(".").slice(1).join(".")
                        }
                    })
                }
                _getResolver(e, r) {
                    return _(this, void 0, void 0, function*() {
                        null == r && (r = "ENS");
                        let n = yield this.getNetwork();
                        n.ensAddress || P.throwError("network does not support ENS", d.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: r,
                            network: n.name
                        });
                        try {
                            let i = yield this.call({
                                to: n.ensAddress,
                                data: "0x0178b8bf" + (0, c.VM)(e).substring(2)
                            });
                            return this.formatter.callAddress(i)
                        } catch (o) {}
                        return null
                    })
                }
                resolveName(e) {
                    return _(this, void 0, void 0, function*() {
                        e = yield e;
                        try {
                            return Promise.resolve(this.formatter.address(e))
                        } catch (r) {
                            if ((0, l.isHexString)(e)) throw r
                        }
                        "string" != typeof e && P.throwArgumentError("invalid ENS name", "name", e);
                        let n = yield this.getResolver(e);
                        return n ? yield n.getAddress(): null
                    })
                }
                lookupAddress(e) {
                    return _(this, void 0, void 0, function*() {
                        e = yield e, e = this.formatter.address(e);
                        let r = e.substring(2).toLowerCase() + ".addr.reverse",
                            n = yield this._getResolver(r, "lookupAddress");
                        if (null == n) return null;
                        let i = U((yield this.call({
                                to: n,
                                data: "0x691f3431" + (0, c.VM)(r).substring(2)
                            })), 0),
                            o = yield this.resolveName(i);
                        return o != e ? null : i
                    })
                }
                getAvatar(e) {
                    return _(this, void 0, void 0, function*() {
                        let r = null;
                        if ((0, l.isHexString)(e)) {
                            let n = this.formatter.address(e),
                                i = n.substring(2).toLowerCase() + ".addr.reverse",
                                o = yield this._getResolver(i, "getAvatar");
                            if (!o) return null;
                            r = new H(this, o, i);
                            try {
                                let a = yield r.getAvatar();
                                if (a) return a.url
                            } catch (s) {
                                if (s.code !== d.Logger.errors.CALL_EXCEPTION) throw s
                            }
                            try {
                                let u = U((yield this.call({
                                    to: o,
                                    data: "0x691f3431" + (0, c.VM)(i).substring(2)
                                })), 0);
                                r = yield this.getResolver(u)
                            } catch (h) {
                                if (h.code !== d.Logger.errors.CALL_EXCEPTION) throw h;
                                return null
                            }
                        } else if (!(r = yield this.getResolver(e))) return null;
                        let f = yield r.getAvatar();
                        return null == f ? null : f.url
                    })
                }
                perform(e, r) {
                    return P.throwError(e + " not implemented", d.Logger.errors.NOT_IMPLEMENTED, {
                        operation: e
                    })
                }
                _startEvent(e) {
                    this.polling = this._events.filter(e => e.pollable()).length > 0
                }
                _stopEvent(e) {
                    this.polling = this._events.filter(e => e.pollable()).length > 0
                }
                _addEventListener(e, r, n) {
                    let i = new I(R(e), r, n);
                    return this._events.push(i), this._startEvent(i), this
                }
                on(e, r) {
                    return this._addEventListener(e, r, !1)
                }
                once(e, r) {
                    return this._addEventListener(e, r, !0)
                }
                emit(e, ...r) {
                    let n = !1,
                        i = [],
                        o = R(e);
                    return this._events = this._events.filter(e => e.tag !== o || (setTimeout(() => {
                        e.listener.apply(this, r)
                    }, 0), n = !0, !e.once || (i.push(e), !1))), i.forEach(e => {
                        this._stopEvent(e)
                    }), n
                }
                listenerCount(e) {
                    if (!e) return this._events.length;
                    let r = R(e);
                    return this._events.filter(e => e.tag === r).length
                }
                listeners(e) {
                    if (null == e) return this._events.map(e => e.listener);
                    let r = R(e);
                    return this._events.filter(e => e.tag === r).map(e => e.listener)
                }
                off(e, r) {
                    if (null == r) return this.removeAllListeners(e);
                    let n = [],
                        i = !1,
                        o = R(e);
                    return this._events = this._events.filter(e => e.tag !== o || e.listener != r || !!i || (i = !0, n.push(e), !1)), n.forEach(e => {
                        this._stopEvent(e)
                    }), this
                }
                removeAllListeners(e) {
                    let r = [];
                    if (null == e) r = this._events, this._events = [];
                    else {
                        let n = R(e);
                        this._events = this._events.filter(e => e.tag !== n || (r.push(e), !1))
                    }
                    return r.forEach(e => {
                        this._stopEvent(e)
                    }), this
                }
            }
        },
        30032: function(e, r, n) {
            "use strict";
            n.d(r, {
                Gp: function() {
                    return p
                },
                Mb: function() {
                    return f
                },
                vh: function() {
                    return g
                }
            });
            var i = n(19485),
                o = n(2593),
                a = n(16441),
                s = n(9279),
                l = n(6881),
                u = n(83875),
                c = n(1581),
                d = n(34216);
            let h = new c.Logger(d.i);
            class f {
                constructor() {
                    this.formats = this.getDefaultFormats()
                }
                getDefaultFormats() {
                    let e = {},
                        r = this.address.bind(this),
                        n = this.bigNumber.bind(this),
                        i = this.blockTag.bind(this),
                        o = this.data.bind(this),
                        a = this.hash.bind(this),
                        s = this.hex.bind(this),
                        u = this.number.bind(this),
                        c = this.type.bind(this),
                        d = e => this.data(e, !0);
                    return e.transaction = {
                        hash: a,
                        type: c,
                        accessList: f.allowNull(this.accessList.bind(this), null),
                        blockHash: f.allowNull(a, null),
                        blockNumber: f.allowNull(u, null),
                        transactionIndex: f.allowNull(u, null),
                        confirmations: f.allowNull(u, null),
                        from: r,
                        gasPrice: f.allowNull(n),
                        maxPriorityFeePerGas: f.allowNull(n),
                        maxFeePerGas: f.allowNull(n),
                        gasLimit: n,
                        to: f.allowNull(r, null),
                        value: n,
                        nonce: u,
                        data: o,
                        r: f.allowNull(this.uint256),
                        s: f.allowNull(this.uint256),
                        v: f.allowNull(u),
                        creates: f.allowNull(r, null),
                        raw: f.allowNull(o)
                    }, e.transactionRequest = {
                        from: f.allowNull(r),
                        nonce: f.allowNull(u),
                        gasLimit: f.allowNull(n),
                        gasPrice: f.allowNull(n),
                        maxPriorityFeePerGas: f.allowNull(n),
                        maxFeePerGas: f.allowNull(n),
                        to: f.allowNull(r),
                        value: f.allowNull(n),
                        data: f.allowNull(d),
                        type: f.allowNull(u),
                        accessList: f.allowNull(this.accessList.bind(this), null)
                    }, e.receiptLog = {
                        transactionIndex: u,
                        blockNumber: u,
                        transactionHash: a,
                        address: r,
                        topics: f.arrayOf(a),
                        data: o,
                        logIndex: u,
                        blockHash: a
                    }, e.receipt = {
                        to: f.allowNull(this.address, null),
                        from: f.allowNull(this.address, null),
                        contractAddress: f.allowNull(r, null),
                        transactionIndex: u,
                        root: f.allowNull(s),
                        gasUsed: n,
                        logsBloom: f.allowNull(o),
                        blockHash: a,
                        transactionHash: a,
                        logs: f.arrayOf(this.receiptLog.bind(this)),
                        blockNumber: u,
                        confirmations: f.allowNull(u, null),
                        cumulativeGasUsed: n,
                        effectiveGasPrice: f.allowNull(n),
                        status: f.allowNull(u),
                        type: c
                    }, e.block = {
                        hash: f.allowNull(a),
                        parentHash: a,
                        number: u,
                        timestamp: u,
                        nonce: f.allowNull(s),
                        difficulty: this.difficulty.bind(this),
                        gasLimit: n,
                        gasUsed: n,
                        miner: f.allowNull(r),
                        extraData: o,
                        transactions: f.allowNull(f.arrayOf(a)),
                        baseFeePerGas: f.allowNull(n)
                    }, e.blockWithTransactions = (0, l.shallowCopy)(e.block), e.blockWithTransactions.transactions = f.allowNull(f.arrayOf(this.transactionResponse.bind(this))), e.filter = {
                        fromBlock: f.allowNull(i, void 0),
                        toBlock: f.allowNull(i, void 0),
                        blockHash: f.allowNull(a, void 0),
                        address: f.allowNull(r, void 0),
                        topics: f.allowNull(this.topics.bind(this), void 0)
                    }, e.filterLog = {
                        blockNumber: f.allowNull(u),
                        blockHash: f.allowNull(a),
                        transactionIndex: u,
                        removed: f.allowNull(this.boolean.bind(this)),
                        address: r,
                        data: f.allowFalsish(o, "0x"),
                        topics: f.arrayOf(a),
                        transactionHash: a,
                        logIndex: u
                    }, e
                }
                accessList(e) {
                    return (0, u.accessListify)(e || [])
                }
                number(e) {
                    return "0x" === e ? 0 : o.O$.from(e).toNumber()
                }
                type(e) {
                    return "0x" === e || null == e ? 0 : o.O$.from(e).toNumber()
                }
                bigNumber(e) {
                    return o.O$.from(e)
                }
                boolean(e) {
                    if ("boolean" == typeof e) return e;
                    if ("string" == typeof e) {
                        if ("true" === (e = e.toLowerCase())) return !0;
                        if ("false" === e) return !1
                    }
                    throw Error("invalid boolean - " + e)
                }
                hex(e, r) {
                    return "string" == typeof e && (r || "0x" === e.substring(0, 2) || (e = "0x" + e), (0, a.isHexString)(e)) ? e.toLowerCase() : h.throwArgumentError("invalid hash", "value", e)
                }
                data(e, r) {
                    let n = this.hex(e, r);
                    if (n.length % 2 != 0) throw Error("invalid data; odd-length - " + e);
                    return n
                }
                address(e) {
                    return (0, i.getAddress)(e)
                }
                callAddress(e) {
                    if (!(0, a.isHexString)(e, 32)) return null;
                    let r = (0, i.getAddress)((0, a.hexDataSlice)(e, 12));
                    return r === s.d ? null : r
                }
                contractAddress(e) {
                    return (0, i.getContractAddress)(e)
                }
                blockTag(e) {
                    if (null == e) return "latest";
                    if ("earliest" === e) return "0x0";
                    switch (e) {
                        case "earliest":
                            return "0x0";
                        case "latest":
                        case "pending":
                        case "safe":
                        case "finalized":
                            return e
                    }
                    if ("number" == typeof e || (0, a.isHexString)(e)) return (0, a.hexValue)(e);
                    throw Error("invalid blockTag")
                }
                hash(e, r) {
                    let n = this.hex(e, r);
                    return 32 !== (0, a.hexDataLength)(n) ? h.throwArgumentError("invalid hash", "value", e) : n
                }
                difficulty(e) {
                    if (null == e) return null;
                    let r = o.O$.from(e);
                    try {
                        return r.toNumber()
                    } catch (n) {}
                    return null
                }
                uint256(e) {
                    if (!(0, a.isHexString)(e)) throw Error("invalid uint256");
                    return (0, a.hexZeroPad)(e, 32)
                }
                _block(e, r) {
                    null != e.author && null == e.miner && (e.miner = e.author);
                    let n = null != e._difficulty ? e._difficulty : e.difficulty,
                        i = f.check(r, e);
                    return i._difficulty = null == n ? null : o.O$.from(n), i
                }
                block(e) {
                    return this._block(e, this.formats.block)
                }
                blockWithTransactions(e) {
                    return this._block(e, this.formats.blockWithTransactions)
                }
                transactionRequest(e) {
                    return f.check(this.formats.transactionRequest, e)
                }
                transactionResponse(e) {
                    null != e.gas && null == e.gasLimit && (e.gasLimit = e.gas), e.to && o.O$.from(e.to).isZero() && (e.to = "0x0000000000000000000000000000000000000000"), null != e.input && null == e.data && (e.data = e.input), null == e.to && null == e.creates && (e.creates = this.contractAddress(e)), (1 === e.type || 2 === e.type) && null == e.accessList && (e.accessList = []);
                    let r = f.check(this.formats.transaction, e);
                    if (null != e.chainId) {
                        let n = e.chainId;
                        (0, a.isHexString)(n) && (n = o.O$.from(n).toNumber()), r.chainId = n
                    } else {
                        let i = e.networkId;
                        null == i && null == r.v && (i = e.chainId), (0, a.isHexString)(i) && (i = o.O$.from(i).toNumber()), "number" != typeof i && null != r.v && ((i = (r.v - 35) / 2) < 0 && (i = 0), i = parseInt(i)), "number" != typeof i && (i = 0), r.chainId = i
                    }
                    return r.blockHash && "x" === r.blockHash.replace(/0/g, "") && (r.blockHash = null), r
                }
                transaction(e) {
                    return (0, u.parse)(e)
                }
                receiptLog(e) {
                    return f.check(this.formats.receiptLog, e)
                }
                receipt(e) {
                    let r = f.check(this.formats.receipt, e);
                    if (null != r.root) {
                        if (r.root.length <= 4) {
                            let n = o.O$.from(r.root).toNumber();
                            0 === n || 1 === n ? (null != r.status && r.status !== n && h.throwArgumentError("alt-root-status/status mismatch", "value", {
                                root: r.root,
                                status: r.status
                            }), r.status = n, delete r.root) : h.throwArgumentError("invalid alt-root-status", "value.root", r.root)
                        } else 66 !== r.root.length && h.throwArgumentError("invalid root hash", "value.root", r.root)
                    }
                    return null != r.status && (r.byzantium = !0), r
                }
                topics(e) {
                    return Array.isArray(e) ? e.map(e => this.topics(e)) : null != e ? this.hash(e, !0) : null
                }
                filter(e) {
                    return f.check(this.formats.filter, e)
                }
                filterLog(e) {
                    return f.check(this.formats.filterLog, e)
                }
                static check(e, r) {
                    let n = {};
                    for (let i in e) try {
                        let o = e[i](r[i]);
                        void 0 !== o && (n[i] = o)
                    } catch (a) {
                        throw a.checkKey = i, a.checkValue = r[i], a
                    }
                    return n
                }
                static allowNull(e, r) {
                    return function(n) {
                        return null == n ? r : e(n)
                    }
                }
                static allowFalsish(e, r) {
                    return function(n) {
                        return n ? e(n) : r
                    }
                }
                static arrayOf(e) {
                    return function(r) {
                        if (!Array.isArray(r)) throw Error("not an array");
                        let n = [];
                        return r.forEach(function(r) {
                            n.push(e(r))
                        }), n
                    }
                }
            }

            function p(e) {
                return e && "function" == typeof e.isCommunityResource && e.isCommunityResource()
            }
            let m = !1;

            function g() {
                m || (m = !0, console.log("========= NOTICE ========="), console.log("Request-Rate Exceeded  (this message will not be repeated)"), console.log(""), console.log("The default API keys for each service are provided as a highly-throttled,"), console.log("community resource for low-traffic projects and early prototyping."), console.log(""), console.log("While your application will continue to function, we highly recommended"), console.log("signing up for your own API keys to improve performance, increase your"), console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."), console.log(""), console.log("For more details: https://docs.ethers.io/api-keys/"), console.log("=========================="))
            }
        },
        82169: function(e, r, n) {
            "use strict";
            n.d(r, {
                r: function() {
                    return _
                }
            });
            var i = n(48088),
                o = n(2593),
                a = n(16441),
                s = n(67827),
                l = n(6881),
                u = n(29251),
                c = n(83875),
                d = n(37707),
                h = n(1581),
                f = n(34216),
                p = n(57408),
                m = function(e, r, n, i) {
                    return new(n || (n = Promise))(function(o, a) {
                        function s(e) {
                            try {
                                u(i.next(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function l(e) {
                            try {
                                u(i.throw(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? o(e.value) : ((r = e.value) instanceof n ? r : new n(function(e) {
                                e(r)
                            })).then(s, l)
                        }
                        u((i = i.apply(e, r || [])).next())
                    })
                };
            let g = new h.Logger(f.i),
                v = ["call", "estimateGas"];

            function y(e, r) {
                if (null == e) return null;
                if ("string" == typeof e.message && e.message.match("reverted")) {
                    let n = (0, a.isHexString)(e.data) ? e.data : null;
                    if (!r || n) return {
                        message: e.message,
                        data: n
                    }
                }
                if ("object" == typeof e) {
                    for (let i in e) {
                        let o = y(e[i], r);
                        if (o) return o
                    }
                    return null
                }
                if ("string" == typeof e) try {
                    return y(JSON.parse(e), r)
                } catch (s) {}
                return null
            }

            function b(e, r, n) {
                let i = n.transaction || n.signedTransaction;
                if ("call" === e) {
                    let o = y(r, !0);
                    if (o) return o.data;
                    g.throwError("missing revert data in call exception; Transaction reverted without a reason string", h.Logger.errors.CALL_EXCEPTION, {
                        data: "0x",
                        transaction: i,
                        error: r
                    })
                }
                if ("estimateGas" === e) {
                    let a = y(r.body, !1);
                    null == a && (a = y(r, !1)), a && g.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", h.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                        reason: a.message,
                        method: e,
                        transaction: i,
                        error: r
                    })
                }
                let s = r.message;
                throw r.code === h.Logger.errors.SERVER_ERROR && r.error && "string" == typeof r.error.message ? s = r.error.message : "string" == typeof r.body ? s = r.body : "string" == typeof r.responseText && (s = r.responseText), (s = (s || "").toLowerCase()).match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i) && g.throwError("insufficient funds for intrinsic transaction cost", h.Logger.errors.INSUFFICIENT_FUNDS, {
                    error: r,
                    method: e,
                    transaction: i
                }), s.match(/nonce (is )?too low/i) && g.throwError("nonce has already been used", h.Logger.errors.NONCE_EXPIRED, {
                    error: r,
                    method: e,
                    transaction: i
                }), s.match(/replacement transaction underpriced|transaction gas price.*too low/i) && g.throwError("replacement fee too low", h.Logger.errors.REPLACEMENT_UNDERPRICED, {
                    error: r,
                    method: e,
                    transaction: i
                }), s.match(/only replay-protected/i) && g.throwError("legacy pre-eip-155 transactions not supported", h.Logger.errors.UNSUPPORTED_OPERATION, {
                    error: r,
                    method: e,
                    transaction: i
                }), v.indexOf(e) >= 0 && s.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/) && g.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", h.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                    error: r,
                    method: e,
                    transaction: i
                }), r
            }

            function w(e) {
                return new Promise(function(r) {
                    setTimeout(r, e)
                })
            }

            function x(e) {
                if (e.error) {
                    let r = Error(e.error.message);
                    throw r.code = e.error.code, r.data = e.error.data, r
                }
                return e.result
            }

            function E(e) {
                return e ? e.toLowerCase() : e
            }
            let C = {};
            class A extends i.E {
                constructor(e, r, n) {
                    if (super(), e !== C) throw Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
                    (0, l.defineReadOnly)(this, "provider", r), null == n && (n = 0), "string" == typeof n ? ((0, l.defineReadOnly)(this, "_address", this.provider.formatter.address(n)), (0, l.defineReadOnly)(this, "_index", null)) : "number" == typeof n ? ((0, l.defineReadOnly)(this, "_index", n), (0, l.defineReadOnly)(this, "_address", null)) : g.throwArgumentError("invalid address or index", "addressOrIndex", n)
                }
                connect(e) {
                    return g.throwError("cannot alter JSON-RPC Signer connection", h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "connect"
                    })
                }
                connectUnchecked() {
                    return new k(C, this.provider, this._address || this._index)
                }
                getAddress() {
                    return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then(e => (e.length <= this._index && g.throwError("unknown account #" + this._index, h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "getAddress"
                    }), this.provider.formatter.address(e[this._index])))
                }
                sendUncheckedTransaction(e) {
                    e = (0, l.shallowCopy)(e);
                    let r = this.getAddress().then(e => (e && (e = e.toLowerCase()), e));
                    if (null == e.gasLimit) {
                        let n = (0, l.shallowCopy)(e);
                        n.from = r, e.gasLimit = this.provider.estimateGas(n)
                    }
                    return null != e.to && (e.to = Promise.resolve(e.to).then(e => m(this, void 0, void 0, function*() {
                        if (null == e) return null;
                        let r = yield this.provider.resolveName(e);
                        return null == r && g.throwArgumentError("provided ENS name resolves to null", "tx.to", e), r
                    }))), (0, l.resolveProperties)({
                        tx: (0, l.resolveProperties)(e),
                        sender: r
                    }).then(({
                        tx: r,
                        sender: n
                    }) => {
                        null != r.from ? r.from.toLowerCase() !== n && g.throwArgumentError("from address mismatch", "transaction", e) : r.from = n;
                        let i = this.provider.constructor.hexlifyTransaction(r, {
                            from: !0
                        });
                        return this.provider.send("eth_sendTransaction", [i]).then(e => e, e => ("string" == typeof e.message && e.message.match(/user denied/i) && g.throwError("user rejected transaction", h.Logger.errors.ACTION_REJECTED, {
                            action: "sendTransaction",
                            transaction: r
                        }), b("sendTransaction", e, i)))
                    })
                }
                signTransaction(e) {
                    return g.throwError("signing transactions is unsupported", h.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "signTransaction"
                    })
                }
                sendTransaction(e) {
                    return m(this, void 0, void 0, function*() {
                        let r = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval), n = yield this.sendUncheckedTransaction(e);
                        try {
                            return yield(0, d.poll)(() => m(this, void 0, void 0, function*() {
                                let e = yield this.provider.getTransaction(n);
                                if (null !== e) return this.provider._wrapTransaction(e, n, r)
                            }), {
                                oncePoll: this.provider
                            })
                        } catch (i) {
                            throw i.transactionHash = n, i
                        }
                    })
                }
                signMessage(e) {
                    return m(this, void 0, void 0, function*() {
                        let r = "string" == typeof e ? (0, u.Y0)(e) : e,
                            n = yield this.getAddress();
                        try {
                            return yield this.provider.send("personal_sign", [(0, a.hexlify)(r), n.toLowerCase()])
                        } catch (i) {
                            throw "string" == typeof i.message && i.message.match(/user denied/i) && g.throwError("user rejected signing", h.Logger.errors.ACTION_REJECTED, {
                                action: "signMessage",
                                from: n,
                                messageData: e
                            }), i
                        }
                    })
                }
                _legacySignMessage(e) {
                    return m(this, void 0, void 0, function*() {
                        let r = "string" == typeof e ? (0, u.Y0)(e) : e,
                            n = yield this.getAddress();
                        try {
                            return yield this.provider.send("eth_sign", [n.toLowerCase(), (0, a.hexlify)(r)])
                        } catch (i) {
                            throw "string" == typeof i.message && i.message.match(/user denied/i) && g.throwError("user rejected signing", h.Logger.errors.ACTION_REJECTED, {
                                action: "_legacySignMessage",
                                from: n,
                                messageData: e
                            }), i
                        }
                    })
                }
                _signTypedData(e, r, n) {
                    return m(this, void 0, void 0, function*() {
                        let i = yield s.E.resolveNames(e, r, n, e => this.provider.resolveName(e)), o = yield this.getAddress();
                        try {
                            return yield this.provider.send("eth_signTypedData_v4", [o.toLowerCase(), JSON.stringify(s.E.getPayload(i.domain, r, i.value))])
                        } catch (a) {
                            throw "string" == typeof a.message && a.message.match(/user denied/i) && g.throwError("user rejected signing", h.Logger.errors.ACTION_REJECTED, {
                                action: "_signTypedData",
                                from: o,
                                messageData: {
                                    domain: i.domain,
                                    types: r,
                                    value: i.value
                                }
                            }), a
                        }
                    })
                }
                unlock(e) {
                    return m(this, void 0, void 0, function*() {
                        let r = this.provider,
                            n = yield this.getAddress();
                        return r.send("personal_unlockAccount", [n.toLowerCase(), e, null])
                    })
                }
            }
            class k extends A {
                sendTransaction(e) {
                    return this.sendUncheckedTransaction(e).then(e => ({
                        hash: e,
                        nonce: null,
                        gasLimit: null,
                        gasPrice: null,
                        data: null,
                        value: null,
                        chainId: null,
                        confirmations: 0,
                        from: null,
                        wait: r => this.provider.waitForTransaction(e, r)
                    }))
                }
            }
            let S = {
                chainId: !0,
                data: !0,
                gasLimit: !0,
                gasPrice: !0,
                nonce: !0,
                to: !0,
                value: !0,
                type: !0,
                accessList: !0,
                maxFeePerGas: !0,
                maxPriorityFeePerGas: !0
            };
            class _ extends p.Zk {
                constructor(e, r) {
                    let n = r;
                    null == n && (n = new Promise((e, r) => {
                        setTimeout(() => {
                            this.detectNetwork().then(r => {
                                e(r)
                            }, e => {
                                r(e)
                            })
                        }, 0)
                    })), super(n), e || (e = (0, l.getStatic)(this.constructor, "defaultUrl")()), "string" == typeof e ? (0, l.defineReadOnly)(this, "connection", Object.freeze({
                        url: e
                    })) : (0, l.defineReadOnly)(this, "connection", Object.freeze((0, l.shallowCopy)(e))), this._nextId = 42
                }
                get _cache() {
                    return null == this._eventLoopCache && (this._eventLoopCache = {}), this._eventLoopCache
                }
                static defaultUrl() {
                    return "http://localhost:8545"
                }
                detectNetwork() {
                    return this._cache.detectNetwork || (this._cache.detectNetwork = this._uncachedDetectNetwork(), setTimeout(() => {
                        this._cache.detectNetwork = null
                    }, 0)), this._cache.detectNetwork
                }
                _uncachedDetectNetwork() {
                    return m(this, void 0, void 0, function*() {
                        yield w(0);
                        let e = null;
                        try {
                            e = yield this.send("eth_chainId", [])
                        } catch (n) {
                            try {
                                e = yield this.send("net_version", [])
                            } catch (r) {}
                        }
                        if (null != e) {
                            let i = (0, l.getStatic)(this.constructor, "getNetwork");
                            try {
                                return i(o.O$.from(e).toNumber())
                            } catch (a) {
                                return g.throwError("could not detect network", h.Logger.errors.NETWORK_ERROR, {
                                    chainId: e,
                                    event: "invalidNetwork",
                                    serverError: a
                                })
                            }
                        }
                        return g.throwError("could not detect network", h.Logger.errors.NETWORK_ERROR, {
                            event: "noNetwork"
                        })
                    })
                }
                getSigner(e) {
                    return new A(C, this, e)
                }
                getUncheckedSigner(e) {
                    return this.getSigner(e).connectUnchecked()
                }
                listAccounts() {
                    return this.send("eth_accounts", []).then(e => e.map(e => this.formatter.address(e)))
                }
                send(e, r) {
                    let n = {
                        method: e,
                        params: r,
                        id: this._nextId++,
                        jsonrpc: "2.0"
                    };
                    this.emit("debug", {
                        action: "request",
                        request: (0, l.deepCopy)(n),
                        provider: this
                    });
                    let i = ["eth_chainId", "eth_blockNumber"].indexOf(e) >= 0;
                    if (i && this._cache[e]) return this._cache[e];
                    let o = (0, d.fetchJson)(this.connection, JSON.stringify(n), x).then(e => (this.emit("debug", {
                        action: "response",
                        request: n,
                        response: e,
                        provider: this
                    }), e), e => {
                        throw this.emit("debug", {
                            action: "response",
                            error: e,
                            request: n,
                            provider: this
                        }), e
                    });
                    return i && (this._cache[e] = o, setTimeout(() => {
                        this._cache[e] = null
                    }, 0)), o
                }
                prepareRequest(e, r) {
                    switch (e) {
                        case "getBlockNumber":
                            return ["eth_blockNumber", []];
                        case "getGasPrice":
                            return ["eth_gasPrice", []];
                        case "getBalance":
                            return ["eth_getBalance", [E(r.address), r.blockTag]];
                        case "getTransactionCount":
                            return ["eth_getTransactionCount", [E(r.address), r.blockTag]];
                        case "getCode":
                            return ["eth_getCode", [E(r.address), r.blockTag]];
                        case "getStorageAt":
                            return ["eth_getStorageAt", [E(r.address), (0, a.hexZeroPad)(r.position, 32), r.blockTag]];
                        case "sendTransaction":
                            return ["eth_sendRawTransaction", [r.signedTransaction]];
                        case "getBlock":
                            if (r.blockTag) return ["eth_getBlockByNumber", [r.blockTag, !!r.includeTransactions]];
                            if (r.blockHash) return ["eth_getBlockByHash", [r.blockHash, !!r.includeTransactions]];
                            break;
                        case "getTransaction":
                            return ["eth_getTransactionByHash", [r.transactionHash]];
                        case "getTransactionReceipt":
                            return ["eth_getTransactionReceipt", [r.transactionHash]];
                        case "call":
                            {
                                let n = (0, l.getStatic)(this.constructor, "hexlifyTransaction");
                                return ["eth_call", [n(r.transaction, {
                                    from: !0
                                }), r.blockTag]]
                            }
                        case "estimateGas":
                            {
                                let i = (0, l.getStatic)(this.constructor, "hexlifyTransaction");
                                return ["eth_estimateGas", [i(r.transaction, {
                                    from: !0
                                })]]
                            }
                        case "getLogs":
                            return r.filter && null != r.filter.address && (r.filter.address = E(r.filter.address)), ["eth_getLogs", [r.filter]]
                    }
                    return null
                }
                perform(e, r) {
                    return m(this, void 0, void 0, function*() {
                        if ("call" === e || "estimateGas" === e) {
                            let n = r.transaction;
                            if (n && null != n.type && o.O$.from(n.type).isZero() && null == n.maxFeePerGas && null == n.maxPriorityFeePerGas) {
                                let i = yield this.getFeeData();
                                null == i.maxFeePerGas && null == i.maxPriorityFeePerGas && ((r = (0, l.shallowCopy)(r)).transaction = (0, l.shallowCopy)(n), delete r.transaction.type)
                            }
                        }
                        let a = this.prepareRequest(e, r);
                        null == a && g.throwError(e + " not implemented", h.Logger.errors.NOT_IMPLEMENTED, {
                            operation: e
                        });
                        try {
                            return yield this.send(a[0], a[1])
                        } catch (s) {
                            return b(e, s, r)
                        }
                    })
                }
                _startEvent(e) {
                    "pending" === e.tag && this._startPending(), super._startEvent(e)
                }
                _startPending() {
                    if (null != this._pendingFilter) return;
                    let e = this,
                        r = this.send("eth_newPendingTransactionFilter", []);
                    this._pendingFilter = r, r.then(function(n) {
                        return function i() {
                            e.send("eth_getFilterChanges", [n]).then(function(n) {
                                if (e._pendingFilter != r) return null;
                                let i = Promise.resolve();
                                return n.forEach(function(r) {
                                    e._emitted["t:" + r.toLowerCase()] = "pending", i = i.then(function() {
                                        return e.getTransaction(r).then(function(r) {
                                            return e.emit("pending", r), null
                                        })
                                    })
                                }), i.then(function() {
                                    return w(1e3)
                                })
                            }).then(function() {
                                if (e._pendingFilter != r) {
                                    e.send("eth_uninstallFilter", [n]);
                                    return
                                }
                                return setTimeout(function() {
                                    i()
                                }, 0), null
                            }).catch(e => {})
                        }(), n
                    }).catch(e => {})
                }
                _stopEvent(e) {
                    "pending" === e.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null), super._stopEvent(e)
                }
                static hexlifyTransaction(e, r) {
                    let n = (0, l.shallowCopy)(S);
                    if (r)
                        for (let i in r) r[i] && (n[i] = !0);
                    (0, l.checkProperties)(e, n);
                    let s = {};
                    return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function(r) {
                        if (null == e[r]) return;
                        let n = (0, a.hexValue)(o.O$.from(e[r]));
                        "gasLimit" === r && (r = "gas"), s[r] = n
                    }), ["from", "to", "data"].forEach(function(r) {
                        null != e[r] && (s[r] = (0, a.hexlify)(e[r]))
                    }), e.accessList && (s.accessList = (0, c.accessListify)(e.accessList)), s
                }
            }
        },
        241: function(e, r, n) {
            "use strict";
            n.d(r, {
                Q: function() {
                    return d
                }
            });
            var i = n(6881),
                o = n(1581),
                a = n(34216),
                s = n(82169);
            let l = new o.Logger(a.i),
                u = 1;

            function c(e, r) {
                let n = "Web3LegacyFetcher";
                return function(e, o) {
                    let a = {
                        method: e,
                        params: o,
                        id: u++,
                        jsonrpc: "2.0"
                    };
                    return new Promise((e, o) => {
                        this.emit("debug", {
                            action: "request",
                            fetcher: n,
                            request: (0, i.deepCopy)(a),
                            provider: this
                        }), r(a, (r, i) => {
                            if (r) return this.emit("debug", {
                                action: "response",
                                fetcher: n,
                                error: r,
                                request: a,
                                provider: this
                            }), o(r);
                            if (this.emit("debug", {
                                    action: "response",
                                    fetcher: n,
                                    request: a,
                                    response: i,
                                    provider: this
                                }), i.error) {
                                let s = Error(i.error.message);
                                return s.code = i.error.code, s.data = i.error.data, o(s)
                            }
                            e(i.result)
                        })
                    })
                }
            }
            class d extends s.r {
                constructor(e, r) {
                    null == e && l.throwArgumentError("missing provider", "provider", e);
                    let n = null,
                        o = null,
                        a = null;
                    "function" == typeof e ? (n = "unknown:", o = e) : (((n = e.host || e.path || "") || !e.isMetaMask || (n = "metamask"), a = e, e.request) ? ("" === n && (n = "eip-1193:"), o = function(r, n) {
                        null == n && (n = []);
                        let o = {
                            method: r,
                            params: n
                        };
                        return this.emit("debug", {
                            action: "request",
                            fetcher: "Eip1193Fetcher",
                            request: (0, i.deepCopy)(o),
                            provider: this
                        }), e.request(o).then(e => (this.emit("debug", {
                            action: "response",
                            fetcher: "Eip1193Fetcher",
                            request: o,
                            response: e,
                            provider: this
                        }), e), e => {
                            throw this.emit("debug", {
                                action: "response",
                                fetcher: "Eip1193Fetcher",
                                request: o,
                                error: e,
                                provider: this
                            }), e
                        })
                    }) : e.sendAsync ? o = c(e, e.sendAsync.bind(e)) : e.send ? o = c(e, e.send.bind(e)) : l.throwArgumentError("unsupported provider", "provider", e), n || (n = "unknown:")), super(n, r), (0, i.defineReadOnly)(this, "jsonRpcFetchFunc", o), (0, i.defineReadOnly)(this, "provider", a)
                }
                send(e, r) {
                    return this.jsonRpcFetchFunc(e, r)
                }
            }
        },
        22118: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                randomBytes: function() {
                    return i.O
                },
                shuffled: function() {
                    return o.y
                }
            });
            var i = n(5634),
                o = n(52472)
        },
        5634: function(e, r, n) {
            "use strict";
            n.d(r, {
                O: function() {
                    return u
                }
            });
            var i = n(16441),
                o = n(1581);
            let a = new o.Logger("random/5.7.0"),
                s = function() {
                    if ("undefined" != typeof self) return self;
                    if ("undefined" != typeof window) return window;
                    if (void 0 !== n.g) return n.g;
                    throw Error("unable to locate global object")
                }(),
                l = s.crypto || s.msCrypto;

            function u(e) {
                (e <= 0 || e > 1024 || e % 1 || e != e) && a.throwArgumentError("invalid length", "length", e);
                let r = new Uint8Array(e);
                return l.getRandomValues(r), (0, i.arrayify)(r)
            }
            l && l.getRandomValues || (a.warn("WARNING: Missing strong random number source"), l = {
                getRandomValues: function(e) {
                    return a.throwError("no secure random source avaialble", o.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "crypto.getRandomValues"
                    })
                }
            })
        },
        52472: function(e, r, n) {
            "use strict";

            function i(e) {
                e = e.slice();
                for (let r = e.length - 1; r > 0; r--) {
                    let n = Math.floor(Math.random() * (r + 1)),
                        i = e[r];
                    e[r] = e[n], e[n] = i
                }
                return e
            }
            n.d(r, {
                y: function() {
                    return i
                }
            })
        },
        59052: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                decode: function() {
                    return h
                },
                encode: function() {
                    return u
                }
            });
            var i = n(16441),
                o = n(1581);
            let a = new o.Logger("rlp/5.7.0");

            function s(e) {
                let r = [];
                for (; e;) r.unshift(255 & e), e >>= 8;
                return r
            }

            function l(e, r, n) {
                let i = 0;
                for (let o = 0; o < n; o++) i = 256 * i + e[r + o];
                return i
            }

            function u(e) {
                return (0, i.hexlify)(function e(r) {
                    if (Array.isArray(r)) {
                        let n = [];
                        if (r.forEach(function(r) {
                                n = n.concat(e(r))
                            }), n.length <= 55) return n.unshift(192 + n.length), n;
                        let o = s(n.length);
                        return o.unshift(247 + o.length), o.concat(n)
                    }(0, i.isBytesLike)(r) || a.throwArgumentError("RLP object must be BytesLike", "object", r);
                    let l = Array.prototype.slice.call((0, i.arrayify)(r));
                    if (1 === l.length && l[0] <= 127) return l;
                    if (l.length <= 55) return l.unshift(128 + l.length), l;
                    let u = s(l.length);
                    return u.unshift(183 + u.length), u.concat(l)
                }(e))
            }

            function c(e, r, n, i) {
                let s = [];
                for (; n < r + 1 + i;) {
                    let l = d(e, n);
                    s.push(l.result), (n += l.consumed) > r + 1 + i && a.throwError("child data too short", o.Logger.errors.BUFFER_OVERRUN, {})
                }
                return {
                    consumed: 1 + i,
                    result: s
                }
            }

            function d(e, r) {
                if (0 === e.length && a.throwError("data too short", o.Logger.errors.BUFFER_OVERRUN, {}), e[r] >= 248) {
                    let n = e[r] - 247;
                    r + 1 + n > e.length && a.throwError("data short segment too short", o.Logger.errors.BUFFER_OVERRUN, {});
                    let s = l(e, r + 1, n);
                    return r + 1 + n + s > e.length && a.throwError("data long segment too short", o.Logger.errors.BUFFER_OVERRUN, {}), c(e, r, r + 1 + n, n + s)
                }
                if (e[r] >= 192) {
                    let u = e[r] - 192;
                    return r + 1 + u > e.length && a.throwError("data array too short", o.Logger.errors.BUFFER_OVERRUN, {}), c(e, r, r + 1, u)
                }
                if (e[r] >= 184) {
                    let d = e[r] - 183;
                    r + 1 + d > e.length && a.throwError("data array too short", o.Logger.errors.BUFFER_OVERRUN, {});
                    let h = l(e, r + 1, d);
                    r + 1 + d + h > e.length && a.throwError("data array too short", o.Logger.errors.BUFFER_OVERRUN, {});
                    let f = (0, i.hexlify)(e.slice(r + 1 + d, r + 1 + d + h));
                    return {
                        consumed: 1 + d + h,
                        result: f
                    }
                }
                if (e[r] >= 128) {
                    let p = e[r] - 128;
                    r + 1 + p > e.length && a.throwError("data too short", o.Logger.errors.BUFFER_OVERRUN, {});
                    let m = (0, i.hexlify)(e.slice(r + 1, r + 1 + p));
                    return {
                        consumed: 1 + p,
                        result: m
                    }
                }
                return {
                    consumed: 1,
                    result: (0, i.hexlify)(e[r])
                }
            }

            function h(e) {
                let r = (0, i.arrayify)(e),
                    n = d(r, 0);
                return n.consumed !== r.length && a.throwArgumentError("invalid rlp data", "data", e), n.result
            }
        },
        91278: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                SupportedAlgorithm: function() {
                    return o.p
                },
                computeHmac: function() {
                    return i.Gy
                },
                ripemd160: function() {
                    return i.bP
                },
                sha256: function() {
                    return i.JQ
                },
                sha512: function() {
                    return i.o
                }
            });
            var i = n(2006),
                o = n(21261)
        },
        2006: function(e, r, n) {
            "use strict";
            n.d(r, {
                Gy: function() {
                    return f
                },
                bP: function() {
                    return c
                },
                JQ: function() {
                    return d
                },
                o: function() {
                    return h
                }
            });
            var i = n(33715),
                o = n.n(i),
                a = n(16441),
                s = n(21261),
                l = n(1581);
            let u = new l.Logger("sha2/5.7.0");

            function c(e) {
                return "0x" + o().ripemd160().update((0, a.arrayify)(e)).digest("hex")
            }

            function d(e) {
                return "0x" + o().sha256().update((0, a.arrayify)(e)).digest("hex")
            }

            function h(e) {
                return "0x" + o().sha512().update((0, a.arrayify)(e)).digest("hex")
            }

            function f(e, r, n) {
                return s.p[e] || u.throwError("unsupported algorithm " + e, l.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "hmac",
                    algorithm: e
                }), "0x" + o().hmac(o()[e], (0, a.arrayify)(r)).update((0, a.arrayify)(n)).digest("hex")
            }
        },
        21261: function(e, r, n) {
            "use strict";
            var i, o;
            n.d(r, {
                p: function() {
                    return i
                }
            }), (o = i || (i = {})).sha256 = "sha256", o.sha512 = "sha512"
        },
        67669: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                SigningKey: function() {
                    return W
                },
                computePublicKey: function() {
                    return H
                },
                recoverPublicKey: function() {
                    return V
                }
            });
            var i = n(13550),
                o = n.n(i),
                a = n(33715),
                s = n.n(a);

            function l(e, r, n) {
                return e(n = {
                    path: r,
                    exports: {},
                    require: function(e, r) {
                        return function() {
                            throw Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                        }(e, null == r ? n.path : r)
                    }
                }, n.exports), n.exports
            }
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== n.g ? n.g : "undefined" != typeof self && self;
            var u = c;

            function c(e, r) {
                if (!e) throw Error(r || "Assertion failed")
            }
            c.equal = function(e, r, n) {
                if (e != r) throw Error(n || "Assertion failed: " + e + " != " + r)
            };
            var d = l(function(e, r) {
                    var n = r;

                    function i(e) {
                        return 1 === e.length ? "0" + e : e
                    }

                    function o(e) {
                        for (var r = "", n = 0; n < e.length; n++) r += i(e[n].toString(16));
                        return r
                    }
                    n.toArray = function(e, r) {
                        if (Array.isArray(e)) return e.slice();
                        if (!e) return [];
                        var n = [];
                        if ("string" != typeof e) {
                            for (var i = 0; i < e.length; i++) n[i] = 0 | e[i];
                            return n
                        }
                        if ("hex" === r) {
                            (e = e.replace(/[^a-z0-9]+/ig, "")).length % 2 != 0 && (e = "0" + e);
                            for (var i = 0; i < e.length; i += 2) n.push(parseInt(e[i] + e[i + 1], 16))
                        } else
                            for (var i = 0; i < e.length; i++) {
                                var o = e.charCodeAt(i),
                                    a = o >> 8,
                                    s = 255 & o;
                                a ? n.push(a, s) : n.push(s)
                            }
                        return n
                    }, n.zero2 = i, n.toHex = o, n.encode = function(e, r) {
                        return "hex" === r ? o(e) : e
                    }
                }),
                h = l(function(e, r) {
                    var n = r;
                    n.assert = u, n.toArray = d.toArray, n.zero2 = d.zero2, n.toHex = d.toHex, n.encode = d.encode, n.getNAF = function(e, r, n) {
                        var i = Array(Math.max(e.bitLength(), n) + 1);
                        i.fill(0);
                        for (var o = 1 << r + 1, a = e.clone(), s = 0; s < i.length; s++) {
                            var l, u = a.andln(o - 1);
                            a.isOdd() ? (l = u > (o >> 1) - 1 ? (o >> 1) - u : u, a.isubn(l)) : l = 0, i[s] = l, a.iushrn(1)
                        }
                        return i
                    }, n.getJSF = function(e, r) {
                        var n = [
                            [],
                            []
                        ];
                        e = e.clone(), r = r.clone();
                        for (var i = 0, o = 0; e.cmpn(-i) > 0 || r.cmpn(-o) > 0;) {
                            var a, s, l, u = e.andln(3) + i & 3,
                                c = r.andln(3) + o & 3;
                            3 === u && (u = -1), 3 === c && (c = -1), s = (1 & u) == 0 ? 0 : (3 == (a = e.andln(7) + i & 7) || 5 === a) && 2 === c ? -u : u, n[0].push(s), l = (1 & c) == 0 ? 0 : (3 == (a = r.andln(7) + o & 7) || 5 === a) && 2 === u ? -c : c, n[1].push(l), 2 * i === s + 1 && (i = 1 - i), 2 * o === l + 1 && (o = 1 - o), e.iushrn(1), r.iushrn(1)
                        }
                        return n
                    }, n.cachedProperty = function(e, r, n) {
                        var i = "_" + r;
                        e.prototype[r] = function() {
                            return void 0 !== this[i] ? this[i] : this[i] = n.call(this)
                        }
                    }, n.parseBytes = function(e) {
                        return "string" == typeof e ? n.toArray(e, "hex") : e
                    }, n.intFromLE = function(e) {
                        return new(o())(e, "hex", "le")
                    }
                }),
                f = h.getNAF,
                p = h.getJSF,
                m = h.assert;

            function g(e, r) {
                this.type = e, this.p = new(o())(r.p, 16), this.red = r.prime ? o().red(r.prime) : o().mont(this.p), this.zero = new(o())(0).toRed(this.red), this.one = new(o())(1).toRed(this.red), this.two = new(o())(2).toRed(this.red), this.n = r.n && new(o())(r.n, 16), this.g = r.g && this.pointFromJSON(r.g, r.gRed), this._wnafT1 = [, , , , ], this._wnafT2 = [, , , , ], this._wnafT3 = [, , , , ], this._wnafT4 = [, , , , ], this._bitLength = this.n ? this.n.bitLength() : 0;
                var n = this.n && this.p.div(this.n);
                !n || n.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
            }

            function v(e, r) {
                this.curve = e, this.type = r, this.precomputed = null
            }
            g.prototype.point = function() {
                throw Error("Not implemented")
            }, g.prototype.validate = function() {
                throw Error("Not implemented")
            }, g.prototype._fixedNafMul = function(e, r) {
                m(e.precomputed);
                var n, i, o = e._getDoubles(),
                    a = f(r, 1, this._bitLength),
                    s = (1 << o.step + 1) - (o.step % 2 == 0 ? 2 : 1);
                s /= 3;
                var l = [];
                for (n = 0; n < a.length; n += o.step) {
                    i = 0;
                    for (var u = n + o.step - 1; u >= n; u--) i = (i << 1) + a[u];
                    l.push(i)
                }
                for (var c = this.jpoint(null, null, null), d = this.jpoint(null, null, null), h = s; h > 0; h--) {
                    for (n = 0; n < l.length; n++)(i = l[n]) === h ? d = d.mixedAdd(o.points[n]) : i === -h && (d = d.mixedAdd(o.points[n].neg()));
                    c = c.add(d)
                }
                return c.toP()
            }, g.prototype._wnafMul = function(e, r) {
                var n = 4,
                    i = e._getNAFPoints(n);
                n = i.wnd;
                for (var o = i.points, a = f(r, n, this._bitLength), s = this.jpoint(null, null, null), l = a.length - 1; l >= 0; l--) {
                    for (var u = 0; l >= 0 && 0 === a[l]; l--) u++;
                    if (l >= 0 && u++, s = s.dblp(u), l < 0) break;
                    var c = a[l];
                    m(0 !== c), s = "affine" === e.type ? c > 0 ? s.mixedAdd(o[c - 1 >> 1]) : s.mixedAdd(o[-c - 1 >> 1].neg()) : c > 0 ? s.add(o[c - 1 >> 1]) : s.add(o[-c - 1 >> 1].neg())
                }
                return "affine" === e.type ? s.toP() : s
            }, g.prototype._wnafMulAdd = function(e, r, n, i, o) {
                var a, s, l, u = this._wnafT1,
                    c = this._wnafT2,
                    d = this._wnafT3,
                    h = 0;
                for (a = 0; a < i; a++) {
                    var m = (l = r[a])._getNAFPoints(e);
                    u[a] = m.wnd, c[a] = m.points
                }
                for (a = i - 1; a >= 1; a -= 2) {
                    var g = a - 1,
                        v = a;
                    if (1 !== u[g] || 1 !== u[v]) {
                        d[g] = f(n[g], u[g], this._bitLength), d[v] = f(n[v], u[v], this._bitLength), h = Math.max(d[g].length, h), h = Math.max(d[v].length, h);
                        continue
                    }
                    var y = [r[g], null, null, r[v]];
                    0 === r[g].y.cmp(r[v].y) ? (y[1] = r[g].add(r[v]), y[2] = r[g].toJ().mixedAdd(r[v].neg())) : 0 === r[g].y.cmp(r[v].y.redNeg()) ? (y[1] = r[g].toJ().mixedAdd(r[v]), y[2] = r[g].add(r[v].neg())) : (y[1] = r[g].toJ().mixedAdd(r[v]), y[2] = r[g].toJ().mixedAdd(r[v].neg()));
                    var b = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                        w = p(n[g], n[v]);
                    for (s = 0, h = Math.max(w[0].length, h), d[g] = Array(h), d[v] = Array(h); s < h; s++) {
                        var x = 0 | w[0][s],
                            E = 0 | w[1][s];
                        d[g][s] = b[(x + 1) * 3 + (E + 1)], d[v][s] = 0, c[g] = y
                    }
                }
                var C = this.jpoint(null, null, null),
                    A = this._wnafT4;
                for (a = h; a >= 0; a--) {
                    for (var k = 0; a >= 0;) {
                        var S = !0;
                        for (s = 0; s < i; s++) A[s] = 0 | d[s][a], 0 !== A[s] && (S = !1);
                        if (!S) break;
                        k++, a--
                    }
                    if (a >= 0 && k++, C = C.dblp(k), a < 0) break;
                    for (s = 0; s < i; s++) {
                        var _ = A[s];
                        0 !== _ && (_ > 0 ? l = c[s][_ - 1 >> 1] : _ < 0 && (l = c[s][-_ - 1 >> 1].neg()), C = "affine" === l.type ? C.mixedAdd(l) : C.add(l))
                    }
                }
                for (a = 0; a < i; a++) c[a] = null;
                return o ? C : C.toP()
            }, g.BasePoint = v, v.prototype.eq = function() {
                throw Error("Not implemented")
            }, v.prototype.validate = function() {
                return this.curve.validate(this)
            }, g.prototype.decodePoint = function(e, r) {
                e = h.toArray(e, r);
                var n = this.p.byteLength();
                if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 == 2 * n) return 6 === e[0] ? m(e[e.length - 1] % 2 == 0) : 7 === e[0] && m(e[e.length - 1] % 2 == 1), this.point(e.slice(1, 1 + n), e.slice(1 + n, 1 + 2 * n));
                if ((2 === e[0] || 3 === e[0]) && e.length - 1 === n) return this.pointFromX(e.slice(1, 1 + n), 3 === e[0]);
                throw Error("Unknown point format")
            }, v.prototype.encodeCompressed = function(e) {
                return this.encode(e, !0)
            }, v.prototype._encode = function(e) {
                var r = this.curve.p.byteLength(),
                    n = this.getX().toArray("be", r);
                return e ? [this.getY().isEven() ? 2 : 3].concat(n) : [4].concat(n, this.getY().toArray("be", r))
            }, v.prototype.encode = function(e, r) {
                return h.encode(this._encode(r), e)
            }, v.prototype.precompute = function(e) {
                if (this.precomputed) return this;
                var r = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return r.naf = this._getNAFPoints(8), r.doubles = this._getDoubles(4, e), r.beta = this._getBeta(), this.precomputed = r, this
            }, v.prototype._hasDoubles = function(e) {
                if (!this.precomputed) return !1;
                var r = this.precomputed.doubles;
                return !!r && r.points.length >= Math.ceil((e.bitLength() + 1) / r.step)
            }, v.prototype._getDoubles = function(e, r) {
                if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                for (var n = [this], i = this, o = 0; o < r; o += e) {
                    for (var a = 0; a < e; a++) i = i.dbl();
                    n.push(i)
                }
                return {
                    step: e,
                    points: n
                }
            }, v.prototype._getNAFPoints = function(e) {
                if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                for (var r = [this], n = (1 << e) - 1, i = 1 === n ? null : this.dbl(), o = 1; o < n; o++) r[o] = r[o - 1].add(i);
                return {
                    wnd: e,
                    points: r
                }
            }, v.prototype._getBeta = function() {
                return null
            }, v.prototype.dblp = function(e) {
                for (var r = this, n = 0; n < e; n++) r = r.dbl();
                return r
            };
            var y = l(function(e) {
                    "function" == typeof Object.create ? e.exports = function(e, r) {
                        r && (e.super_ = r, e.prototype = Object.create(r.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }))
                    } : e.exports = function(e, r) {
                        if (r) {
                            e.super_ = r;
                            var n = function() {};
                            n.prototype = r.prototype, e.prototype = new n, e.prototype.constructor = e
                        }
                    }
                }),
                b = h.assert;

            function w(e) {
                g.call(this, "short", e), this.a = new(o())(e.a, 16).toRed(this.red), this.b = new(o())(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e), this._endoWnafT1 = [, , , , ], this._endoWnafT2 = [, , , , ]
            }

            function x(e, r, n, i) {
                g.BasePoint.call(this, e, "affine"), null === r && null === n ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new(o())(r, 16), this.y = new(o())(n, 16), i && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
            }

            function E(e, r, n, i) {
                g.BasePoint.call(this, e, "jacobian"), null === r && null === n && null === i ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new(o())(0)) : (this.x = new(o())(r, 16), this.y = new(o())(n, 16), this.z = new(o())(i, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
            }
            y(w, g), w.prototype._getEndomorphism = function(e) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    if (e.beta) r = new(o())(e.beta, 16).toRed(this.red);
                    else {
                        var r, n, i, a = this._getEndoRoots(this.p);
                        r = (r = 0 > a[0].cmp(a[1]) ? a[0] : a[1]).toRed(this.red)
                    }
                    if (e.lambda) n = new(o())(e.lambda, 16);
                    else {
                        var s = this._getEndoRoots(this.n);
                        0 === this.g.mul(s[0]).x.cmp(this.g.x.redMul(r)) ? n = s[0] : (n = s[1], b(0 === this.g.mul(n).x.cmp(this.g.x.redMul(r))))
                    }
                    return i = e.basis ? e.basis.map(function(e) {
                        return {
                            a: new(o())(e.a, 16),
                            b: new(o())(e.b, 16)
                        }
                    }) : this._getEndoBasis(n), {
                        beta: r,
                        lambda: n,
                        basis: i
                    }
                }
            }, w.prototype._getEndoRoots = function(e) {
                var r = e === this.p ? this.red : o().mont(e),
                    n = new(o())(2).toRed(r).redInvm(),
                    i = n.redNeg(),
                    a = new(o())(3).toRed(r).redNeg().redSqrt().redMul(n);
                return [i.redAdd(a).fromRed(), i.redSub(a).fromRed()]
            }, w.prototype._getEndoBasis = function(e) {
                for (var r, n, i, a, s, l, u, c, d, h = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), f = e, p = this.n.clone(), m = new(o())(1), g = new(o())(0), v = new(o())(0), y = new(o())(1), b = 0; 0 !== f.cmpn(0);) {
                    var w = p.div(f);
                    c = p.sub(w.mul(f)), d = v.sub(w.mul(m));
                    var x = y.sub(w.mul(g));
                    if (!i && 0 > c.cmp(h)) r = u.neg(), n = m, i = c.neg(), a = d;
                    else if (i && 2 == ++b) break;
                    u = c, p = f, f = c, v = m, m = d, y = g, g = x
                }
                s = c.neg(), l = d;
                var E = i.sqr().add(a.sqr());
                return s.sqr().add(l.sqr()).cmp(E) >= 0 && (s = r, l = n), i.negative && (i = i.neg(), a = a.neg()), s.negative && (s = s.neg(), l = l.neg()), [{
                    a: i,
                    b: a
                }, {
                    a: s,
                    b: l
                }]
            }, w.prototype._endoSplit = function(e) {
                var r = this.endo.basis,
                    n = r[0],
                    i = r[1],
                    o = i.b.mul(e).divRound(this.n),
                    a = n.b.neg().mul(e).divRound(this.n),
                    s = o.mul(n.a),
                    l = a.mul(i.a),
                    u = o.mul(n.b),
                    c = a.mul(i.b);
                return {
                    k1: e.sub(s).sub(l),
                    k2: u.add(c).neg()
                }
            }, w.prototype.pointFromX = function(e, r) {
                (e = new(o())(e, 16)).red || (e = e.toRed(this.red));
                var n = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),
                    i = n.redSqrt();
                if (0 !== i.redSqr().redSub(n).cmp(this.zero)) throw Error("invalid point");
                var a = i.fromRed().isOdd();
                return (r && !a || !r && a) && (i = i.redNeg()), this.point(e, i)
            }, w.prototype.validate = function(e) {
                if (e.inf) return !0;
                var r = e.x,
                    n = e.y,
                    i = this.a.redMul(r),
                    o = r.redSqr().redMul(r).redIAdd(i).redIAdd(this.b);
                return 0 === n.redSqr().redISub(o).cmpn(0)
            }, w.prototype._endoWnafMulAdd = function(e, r, n) {
                for (var i = this._endoWnafT1, o = this._endoWnafT2, a = 0; a < e.length; a++) {
                    var s = this._endoSplit(r[a]),
                        l = e[a],
                        u = l._getBeta();
                    s.k1.negative && (s.k1.ineg(), l = l.neg(!0)), s.k2.negative && (s.k2.ineg(), u = u.neg(!0)), i[2 * a] = l, i[2 * a + 1] = u, o[2 * a] = s.k1, o[2 * a + 1] = s.k2
                }
                for (var c = this._wnafMulAdd(1, i, o, 2 * a, n), d = 0; d < 2 * a; d++) i[d] = null, o[d] = null;
                return c
            }, y(x, g.BasePoint), w.prototype.point = function(e, r, n) {
                return new x(this, e, r, n)
            }, w.prototype.pointFromJSON = function(e, r) {
                return x.fromJSON(this, e, r)
            }, x.prototype._getBeta = function() {
                if (this.curve.endo) {
                    var e = this.precomputed;
                    if (e && e.beta) return e.beta;
                    var r = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (e) {
                        var n = this.curve,
                            i = function(e) {
                                return n.point(e.x.redMul(n.endo.beta), e.y)
                            };
                        e.beta = r, r.precomputed = {
                            beta: null,
                            naf: e.naf && {
                                wnd: e.naf.wnd,
                                points: e.naf.points.map(i)
                            },
                            doubles: e.doubles && {
                                step: e.doubles.step,
                                points: e.doubles.points.map(i)
                            }
                        }
                    }
                    return r
                }
            }, x.prototype.toJSON = function() {
                return this.precomputed ? [this.x, this.y, this.precomputed && {
                    doubles: this.precomputed.doubles && {
                        step: this.precomputed.doubles.step,
                        points: this.precomputed.doubles.points.slice(1)
                    },
                    naf: this.precomputed.naf && {
                        wnd: this.precomputed.naf.wnd,
                        points: this.precomputed.naf.points.slice(1)
                    }
                }] : [this.x, this.y]
            }, x.fromJSON = function(e, r, n) {
                "string" == typeof r && (r = JSON.parse(r));
                var i = e.point(r[0], r[1], n);
                if (!r[2]) return i;

                function o(r) {
                    return e.point(r[0], r[1], n)
                }
                var a = r[2];
                return i.precomputed = {
                    beta: null,
                    doubles: a.doubles && {
                        step: a.doubles.step,
                        points: [i].concat(a.doubles.points.map(o))
                    },
                    naf: a.naf && {
                        wnd: a.naf.wnd,
                        points: [i].concat(a.naf.points.map(o))
                    }
                }, i
            }, x.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
            }, x.prototype.isInfinity = function() {
                return this.inf
            }, x.prototype.add = function(e) {
                if (this.inf) return e;
                if (e.inf) return this;
                if (this.eq(e)) return this.dbl();
                if (this.neg().eq(e) || 0 === this.x.cmp(e.x)) return this.curve.point(null, null);
                var r = this.y.redSub(e.y);
                0 !== r.cmpn(0) && (r = r.redMul(this.x.redSub(e.x).redInvm()));
                var n = r.redSqr().redISub(this.x).redISub(e.x),
                    i = r.redMul(this.x.redSub(n)).redISub(this.y);
                return this.curve.point(n, i)
            }, x.prototype.dbl = function() {
                if (this.inf) return this;
                var e = this.y.redAdd(this.y);
                if (0 === e.cmpn(0)) return this.curve.point(null, null);
                var r = this.curve.a,
                    n = this.x.redSqr(),
                    i = e.redInvm(),
                    o = n.redAdd(n).redIAdd(n).redIAdd(r).redMul(i),
                    a = o.redSqr().redISub(this.x.redAdd(this.x)),
                    s = o.redMul(this.x.redSub(a)).redISub(this.y);
                return this.curve.point(a, s)
            }, x.prototype.getX = function() {
                return this.x.fromRed()
            }, x.prototype.getY = function() {
                return this.y.fromRed()
            }, x.prototype.mul = function(e) {
                return (e = new(o())(e, 16), this.isInfinity()) ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e)
            }, x.prototype.mulAdd = function(e, r, n) {
                var i = [this, r],
                    o = [e, n];
                return this.curve.endo ? this.curve._endoWnafMulAdd(i, o) : this.curve._wnafMulAdd(1, i, o, 2)
            }, x.prototype.jmulAdd = function(e, r, n) {
                var i = [this, r],
                    o = [e, n];
                return this.curve.endo ? this.curve._endoWnafMulAdd(i, o, !0) : this.curve._wnafMulAdd(1, i, o, 2, !0)
            }, x.prototype.eq = function(e) {
                return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y))
            }, x.prototype.neg = function(e) {
                if (this.inf) return this;
                var r = this.curve.point(this.x, this.y.redNeg());
                if (e && this.precomputed) {
                    var n = this.precomputed,
                        i = function(e) {
                            return e.neg()
                        };
                    r.precomputed = {
                        naf: n.naf && {
                            wnd: n.naf.wnd,
                            points: n.naf.points.map(i)
                        },
                        doubles: n.doubles && {
                            step: n.doubles.step,
                            points: n.doubles.points.map(i)
                        }
                    }
                }
                return r
            }, x.prototype.toJ = function() {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
            }, y(E, g.BasePoint), w.prototype.jpoint = function(e, r, n) {
                return new E(this, e, r, n)
            }, E.prototype.toP = function() {
                if (this.isInfinity()) return this.curve.point(null, null);
                var e = this.z.redInvm(),
                    r = e.redSqr(),
                    n = this.x.redMul(r),
                    i = this.y.redMul(r).redMul(e);
                return this.curve.point(n, i)
            }, E.prototype.neg = function() {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
            }, E.prototype.add = function(e) {
                if (this.isInfinity()) return e;
                if (e.isInfinity()) return this;
                var r = e.z.redSqr(),
                    n = this.z.redSqr(),
                    i = this.x.redMul(r),
                    o = e.x.redMul(n),
                    a = this.y.redMul(r.redMul(e.z)),
                    s = e.y.redMul(n.redMul(this.z)),
                    l = i.redSub(o),
                    u = a.redSub(s);
                if (0 === l.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var c = l.redSqr(),
                    d = c.redMul(l),
                    h = i.redMul(c),
                    f = u.redSqr().redIAdd(d).redISub(h).redISub(h),
                    p = u.redMul(h.redISub(f)).redISub(a.redMul(d)),
                    m = this.z.redMul(e.z).redMul(l);
                return this.curve.jpoint(f, p, m)
            }, E.prototype.mixedAdd = function(e) {
                if (this.isInfinity()) return e.toJ();
                if (e.isInfinity()) return this;
                var r = this.z.redSqr(),
                    n = this.x,
                    i = e.x.redMul(r),
                    o = this.y,
                    a = e.y.redMul(r).redMul(this.z),
                    s = n.redSub(i),
                    l = o.redSub(a);
                if (0 === s.cmpn(0)) return 0 !== l.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var u = s.redSqr(),
                    c = u.redMul(s),
                    d = n.redMul(u),
                    h = l.redSqr().redIAdd(c).redISub(d).redISub(d),
                    f = l.redMul(d.redISub(h)).redISub(o.redMul(c)),
                    p = this.z.redMul(s);
                return this.curve.jpoint(h, f, p)
            }, E.prototype.dblp = function(e) {
                if (0 === e || this.isInfinity()) return this;
                if (!e) return this.dbl();
                if (this.curve.zeroA || this.curve.threeA) {
                    var r, n = this;
                    for (r = 0; r < e; r++) n = n.dbl();
                    return n
                }
                var i = this.curve.a,
                    o = this.curve.tinv,
                    a = this.x,
                    s = this.y,
                    l = this.z,
                    u = l.redSqr().redSqr(),
                    c = s.redAdd(s);
                for (r = 0; r < e; r++) {
                    var d = a.redSqr(),
                        h = c.redSqr(),
                        f = h.redSqr(),
                        p = d.redAdd(d).redIAdd(d).redIAdd(i.redMul(u)),
                        m = a.redMul(h),
                        g = p.redSqr().redISub(m.redAdd(m)),
                        v = m.redISub(g),
                        y = p.redMul(v);
                    y = y.redIAdd(y).redISub(f);
                    var b = c.redMul(l);
                    r + 1 < e && (u = u.redMul(f)), a = g, l = b, c = y
                }
                return this.curve.jpoint(a, c.redMul(o), l)
            }, E.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
            }, E.prototype._zeroDbl = function() {
                if (this.zOne) {
                    var e, r, n, i = this.x.redSqr(),
                        o = this.y.redSqr(),
                        a = o.redSqr(),
                        s = this.x.redAdd(o).redSqr().redISub(i).redISub(a);
                    s = s.redIAdd(s);
                    var l = i.redAdd(i).redIAdd(i),
                        u = l.redSqr().redISub(s).redISub(s),
                        c = a.redIAdd(a);
                    c = (c = c.redIAdd(c)).redIAdd(c), e = u, r = l.redMul(s.redISub(u)).redISub(c), n = this.y.redAdd(this.y)
                } else {
                    var d = this.x.redSqr(),
                        h = this.y.redSqr(),
                        f = h.redSqr(),
                        p = this.x.redAdd(h).redSqr().redISub(d).redISub(f);
                    p = p.redIAdd(p);
                    var m = d.redAdd(d).redIAdd(d),
                        g = m.redSqr(),
                        v = f.redIAdd(f);
                    v = (v = v.redIAdd(v)).redIAdd(v), e = g.redISub(p).redISub(p), r = m.redMul(p.redISub(e)).redISub(v), n = (n = this.y.redMul(this.z)).redIAdd(n)
                }
                return this.curve.jpoint(e, r, n)
            }, E.prototype._threeDbl = function() {
                if (this.zOne) {
                    var e, r, n, i = this.x.redSqr(),
                        o = this.y.redSqr(),
                        a = o.redSqr(),
                        s = this.x.redAdd(o).redSqr().redISub(i).redISub(a);
                    s = s.redIAdd(s);
                    var l = i.redAdd(i).redIAdd(i).redIAdd(this.curve.a),
                        u = l.redSqr().redISub(s).redISub(s);
                    e = u;
                    var c = a.redIAdd(a);
                    c = (c = c.redIAdd(c)).redIAdd(c), r = l.redMul(s.redISub(u)).redISub(c), n = this.y.redAdd(this.y)
                } else {
                    var d = this.z.redSqr(),
                        h = this.y.redSqr(),
                        f = this.x.redMul(h),
                        p = this.x.redSub(d).redMul(this.x.redAdd(d));
                    p = p.redAdd(p).redIAdd(p);
                    var m = f.redIAdd(f),
                        g = (m = m.redIAdd(m)).redAdd(m);
                    e = p.redSqr().redISub(g), n = this.y.redAdd(this.z).redSqr().redISub(h).redISub(d);
                    var v = h.redSqr();
                    v = (v = (v = v.redIAdd(v)).redIAdd(v)).redIAdd(v), r = p.redMul(m.redISub(e)).redISub(v)
                }
                return this.curve.jpoint(e, r, n)
            }, E.prototype._dbl = function() {
                var e = this.curve.a,
                    r = this.x,
                    n = this.y,
                    i = this.z,
                    o = i.redSqr().redSqr(),
                    a = r.redSqr(),
                    s = n.redSqr(),
                    l = a.redAdd(a).redIAdd(a).redIAdd(e.redMul(o)),
                    u = r.redAdd(r),
                    c = (u = u.redIAdd(u)).redMul(s),
                    d = l.redSqr().redISub(c.redAdd(c)),
                    h = c.redISub(d),
                    f = s.redSqr();
                f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                var p = l.redMul(h).redISub(f),
                    m = n.redAdd(n).redMul(i);
                return this.curve.jpoint(d, p, m)
            }, E.prototype.trpl = function() {
                if (!this.curve.zeroA) return this.dbl().add(this);
                var e = this.x.redSqr(),
                    r = this.y.redSqr(),
                    n = this.z.redSqr(),
                    i = r.redSqr(),
                    o = e.redAdd(e).redIAdd(e),
                    a = o.redSqr(),
                    s = this.x.redAdd(r).redSqr().redISub(e).redISub(i),
                    l = (s = (s = (s = s.redIAdd(s)).redAdd(s).redIAdd(s)).redISub(a)).redSqr(),
                    u = i.redIAdd(i);
                u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
                var c = o.redIAdd(s).redSqr().redISub(a).redISub(l).redISub(u),
                    d = r.redMul(c);
                d = (d = d.redIAdd(d)).redIAdd(d);
                var h = this.x.redMul(l).redISub(d);
                h = (h = h.redIAdd(h)).redIAdd(h);
                var f = this.y.redMul(c.redMul(u.redISub(c)).redISub(s.redMul(l)));
                f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                var p = this.z.redAdd(s).redSqr().redISub(n).redISub(l);
                return this.curve.jpoint(h, f, p)
            }, E.prototype.mul = function(e, r) {
                return e = new(o())(e, r), this.curve._wnafMul(this, e)
            }, E.prototype.eq = function(e) {
                if ("affine" === e.type) return this.eq(e.toJ());
                if (this === e) return !0;
                var r = this.z.redSqr(),
                    n = e.z.redSqr();
                if (0 !== this.x.redMul(n).redISub(e.x.redMul(r)).cmpn(0)) return !1;
                var i = r.redMul(this.z),
                    o = n.redMul(e.z);
                return 0 === this.y.redMul(o).redISub(e.y.redMul(i)).cmpn(0)
            }, E.prototype.eqXToP = function(e) {
                var r = this.z.redSqr(),
                    n = e.toRed(this.curve.red).redMul(r);
                if (0 === this.x.cmp(n)) return !0;
                for (var i = e.clone(), o = this.curve.redN.redMul(r);;) {
                    if (i.iadd(this.curve.n), i.cmp(this.curve.p) >= 0) return !1;
                    if (n.redIAdd(o), 0 === this.x.cmp(n)) return !0
                }
            }, E.prototype.inspect = function() {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
            }, E.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0)
            };
            var C = l(function(e, r) {
                    var n = r;
                    n.base = g, n.short = w, n.mont = null, n.edwards = null
                }),
                A = l(function(e, r) {
                    var n, i = r,
                        o = h.assert;

                    function a(e) {
                        "short" === e.type ? this.curve = new C.short(e) : "edwards" === e.type ? this.curve = new C.edwards(e) : this.curve = new C.mont(e), this.g = this.curve.g, this.n = this.curve.n, this.hash = e.hash, o(this.g.validate(), "Invalid curve"), o(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                    }

                    function l(e, r) {
                        Object.defineProperty(i, e, {
                            configurable: !0,
                            enumerable: !0,
                            get: function() {
                                var n = new a(r);
                                return Object.defineProperty(i, e, {
                                    configurable: !0,
                                    enumerable: !0,
                                    value: n
                                }), n
                            }
                        })
                    }
                    i.PresetCurve = a, l("p192", {
                        type: "short",
                        prime: "p192",
                        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                        hash: s().sha256,
                        gRed: !1,
                        g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                    }), l("p224", {
                        type: "short",
                        prime: "p224",
                        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                        hash: s().sha256,
                        gRed: !1,
                        g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                    }), l("p256", {
                        type: "short",
                        prime: null,
                        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                        hash: s().sha256,
                        gRed: !1,
                        g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                    }), l("p384", {
                        type: "short",
                        prime: null,
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                        hash: s().sha384,
                        gRed: !1,
                        g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                    }), l("p521", {
                        type: "short",
                        prime: null,
                        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                        hash: s().sha512,
                        gRed: !1,
                        g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                    }), l("curve25519", {
                        type: "mont",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "76d06",
                        b: "1",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: s().sha256,
                        gRed: !1,
                        g: ["9"]
                    }), l("ed25519", {
                        type: "edwards",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "-1",
                        c: "1",
                        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: s().sha256,
                        gRed: !1,
                        g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                    });
                    try {
                        n = null.crash()
                    } catch (u) {
                        n = void 0
                    }
                    l("secp256k1", {
                        type: "short",
                        prime: "k256",
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                        a: "0",
                        b: "7",
                        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                        h: "1",
                        hash: s().sha256,
                        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                        basis: [{
                            a: "3086d221a7d46bcde86c90e49284eb15",
                            b: "-e4437ed6010e88286f547fa90abfe4c3"
                        }, {
                            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                            b: "3086d221a7d46bcde86c90e49284eb15"
                        }],
                        gRed: !1,
                        g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n]
                    })
                });

            function k(e) {
                if (!(this instanceof k)) return new k(e);
                this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                var r = d.toArray(e.entropy, e.entropyEnc || "hex"),
                    n = d.toArray(e.nonce, e.nonceEnc || "hex"),
                    i = d.toArray(e.pers, e.persEnc || "hex");
                u(r.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(r, n, i)
            }
            k.prototype._init = function(e, r, n) {
                var i = e.concat(r).concat(n);
                this.K = Array(this.outLen / 8), this.V = Array(this.outLen / 8);
                for (var o = 0; o < this.V.length; o++) this.K[o] = 0, this.V[o] = 1;
                this._update(i), this._reseed = 1, this.reseedInterval = 281474976710656
            }, k.prototype._hmac = function() {
                return new(s()).hmac(this.hash, this.K)
            }, k.prototype._update = function(e) {
                var r = this._hmac().update(this.V).update([0]);
                e && (r = r.update(e)), this.K = r.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(), this.V = this._hmac().update(this.V).digest())
            }, k.prototype.reseed = function(e, r, n, i) {
                "string" != typeof r && (i = n, n = r, r = null), e = d.toArray(e, r), n = d.toArray(n, i), u(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(n || [])), this._reseed = 1
            }, k.prototype.generate = function(e, r, n, i) {
                if (this._reseed > this.reseedInterval) throw Error("Reseed is required");
                "string" != typeof r && (i = n, n = r, r = null), n && (n = d.toArray(n, i || "hex"), this._update(n));
                for (var o = []; o.length < e;) this.V = this._hmac().update(this.V).digest(), o = o.concat(this.V);
                var a = o.slice(0, e);
                return this._update(n), this._reseed++, d.encode(a, r)
            };
            var S = h.assert;

            function _(e, r) {
                this.ec = e, this.priv = null, this.pub = null, r.priv && this._importPrivate(r.priv, r.privEnc), r.pub && this._importPublic(r.pub, r.pubEnc)
            }
            _.fromPublic = function(e, r, n) {
                return r instanceof _ ? r : new _(e, {
                    pub: r,
                    pubEnc: n
                })
            }, _.fromPrivate = function(e, r, n) {
                return r instanceof _ ? r : new _(e, {
                    priv: r,
                    privEnc: n
                })
            }, _.prototype.validate = function() {
                var e = this.getPublic();
                return e.isInfinity() ? {
                    result: !1,
                    reason: "Invalid public key"
                } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                    result: !0,
                    reason: null
                } : {
                    result: !1,
                    reason: "Public key * N != O"
                } : {
                    result: !1,
                    reason: "Public key is not a point"
                }
            }, _.prototype.getPublic = function(e, r) {
                return ("string" == typeof e && (r = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r) ? this.pub.encode(r, e) : this.pub
            }, _.prototype.getPrivate = function(e) {
                return "hex" === e ? this.priv.toString(16, 2) : this.priv
            }, _.prototype._importPrivate = function(e, r) {
                this.priv = new(o())(e, r || 16), this.priv = this.priv.umod(this.ec.curve.n)
            }, _.prototype._importPublic = function(e, r) {
                if (e.x || e.y) {
                    "mont" === this.ec.curve.type ? S(e.x, "Need x coordinate") : ("short" === this.ec.curve.type || "edwards" === this.ec.curve.type) && S(e.x && e.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(e.x, e.y);
                    return
                }
                this.pub = this.ec.curve.decodePoint(e, r)
            }, _.prototype.derive = function(e) {
                return e.validate() || S(e.validate(), "public point not validated"), e.mul(this.priv).getX()
            }, _.prototype.sign = function(e, r, n) {
                return this.ec.sign(e, this, r, n)
            }, _.prototype.verify = function(e, r) {
                return this.ec.verify(e, r, this)
            }, _.prototype.inspect = function() {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
            };
            var P = h.assert;

            function j(e, r) {
                if (e instanceof j) return e;
                this._importDER(e, r) || (P(e.r && e.s, "Signature without r or s"), this.r = new(o())(e.r, 16), this.s = new(o())(e.s, 16), void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam)
            }

            function T() {
                this.place = 0
            }

            function R(e, r) {
                var n = e[r.place++];
                if (!(128 & n)) return n;
                var i = 15 & n;
                if (0 === i || i > 4) return !1;
                for (var o = 0, a = 0, s = r.place; a < i; a++, s++) o <<= 8, o |= e[s], o >>>= 0;
                return !(o <= 127) && (r.place = s, o)
            }

            function B(e) {
                for (var r = 0, n = e.length - 1; !e[r] && !(128 & e[r + 1]) && r < n;) r++;
                return 0 === r ? e : e.slice(r)
            }

            function O(e, r) {
                if (r < 128) {
                    e.push(r);
                    return
                }
                var n = 1 + (Math.log(r) / Math.LN2 >>> 3);
                for (e.push(128 | n); --n;) e.push(r >>> (n << 3) & 255);
                e.push(r)
            }
            j.prototype._importDER = function(e, r) {
                e = h.toArray(e, r);
                var n = new T;
                if (48 !== e[n.place++]) return !1;
                var i = R(e, n);
                if (!1 === i || i + n.place !== e.length || 2 !== e[n.place++]) return !1;
                var a = R(e, n);
                if (!1 === a) return !1;
                var s = e.slice(n.place, a + n.place);
                if (n.place += a, 2 !== e[n.place++]) return !1;
                var l = R(e, n);
                if (!1 === l || e.length !== l + n.place) return !1;
                var u = e.slice(n.place, l + n.place);
                if (0 === s[0]) {
                    if (!(128 & s[1])) return !1;
                    s = s.slice(1)
                }
                if (0 === u[0]) {
                    if (!(128 & u[1])) return !1;
                    u = u.slice(1)
                }
                return this.r = new(o())(s), this.s = new(o())(u), this.recoveryParam = null, !0
            }, j.prototype.toDER = function(e) {
                var r = this.r.toArray(),
                    n = this.s.toArray();
                for (128 & r[0] && (r = [0].concat(r)), 128 & n[0] && (n = [0].concat(n)), r = B(r), n = B(n); !n[0] && !(128 & n[1]);) n = n.slice(1);
                var i = [2];
                O(i, r.length), (i = i.concat(r)).push(2), O(i, n.length);
                var o = i.concat(n),
                    a = [48];
                return O(a, o.length), a = a.concat(o), h.encode(a, e)
            };
            var M = function() {
                    throw Error("unsupported")
                },
                I = h.assert;

            function N(e) {
                if (!(this instanceof N)) return new N(e);
                "string" == typeof e && (I(Object.prototype.hasOwnProperty.call(A, e), "Unknown curve " + e), e = A[e]), e instanceof A.PresetCurve && (e = {
                    curve: e
                }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash
            }
            N.prototype.keyPair = function(e) {
                return new _(this, e)
            }, N.prototype.keyFromPrivate = function(e, r) {
                return _.fromPrivate(this, e, r)
            }, N.prototype.keyFromPublic = function(e, r) {
                return _.fromPublic(this, e, r)
            }, N.prototype.genKeyPair = function(e) {
                e || (e = {});
                for (var r = new k({
                        hash: this.hash,
                        pers: e.pers,
                        persEnc: e.persEnc || "utf8",
                        entropy: e.entropy || M(this.hash.hmacStrength),
                        entropyEnc: e.entropy && e.entropyEnc || "utf8",
                        nonce: this.n.toArray()
                    }), n = this.n.byteLength(), i = this.n.sub(new(o())(2));;) {
                    var a = new(o())(r.generate(n));
                    if (!(a.cmp(i) > 0)) return a.iaddn(1), this.keyFromPrivate(a)
                }
            }, N.prototype._truncateToN = function(e, r) {
                var n = 8 * e.byteLength() - this.n.bitLength();
                return (n > 0 && (e = e.ushrn(n)), !r && e.cmp(this.n) >= 0) ? e.sub(this.n) : e
            }, N.prototype.sign = function(e, r, n, i) {
                "object" == typeof n && (i = n, n = null), i || (i = {}), r = this.keyFromPrivate(r, n), e = this._truncateToN(new(o())(e, 16));
                for (var a = this.n.byteLength(), s = r.getPrivate().toArray("be", a), l = e.toArray("be", a), u = new k({
                        hash: this.hash,
                        entropy: s,
                        nonce: l,
                        pers: i.pers,
                        persEnc: i.persEnc || "utf8"
                    }), c = this.n.sub(new(o())(1)), d = 0;; d++) {
                    var h = i.k ? i.k(d) : new(o())(u.generate(this.n.byteLength()));
                    if (!(0 >= (h = this._truncateToN(h, !0)).cmpn(1) || h.cmp(c) >= 0)) {
                        var f = this.g.mul(h);
                        if (!f.isInfinity()) {
                            var p = f.getX(),
                                m = p.umod(this.n);
                            if (0 !== m.cmpn(0)) {
                                var g = h.invm(this.n).mul(m.mul(r.getPrivate()).iadd(e));
                                if (0 !== (g = g.umod(this.n)).cmpn(0)) {
                                    var v = (f.getY().isOdd() ? 1 : 0) | (0 !== p.cmp(m) ? 2 : 0);
                                    return i.canonical && g.cmp(this.nh) > 0 && (g = this.n.sub(g), v ^= 1), new j({
                                        r: m,
                                        s: g,
                                        recoveryParam: v
                                    })
                                }
                            }
                        }
                    }
                }
            }, N.prototype.verify = function(e, r, n, i) {
                e = this._truncateToN(new(o())(e, 16)), n = this.keyFromPublic(n, i);
                var a, s = (r = new j(r, "hex")).r,
                    l = r.s;
                if (0 > s.cmpn(1) || s.cmp(this.n) >= 0 || 0 > l.cmpn(1) || l.cmp(this.n) >= 0) return !1;
                var u = l.invm(this.n),
                    c = u.mul(e).umod(this.n),
                    d = u.mul(s).umod(this.n);
                return this.curve._maxwellTrick ? !(a = this.g.jmulAdd(c, n.getPublic(), d)).isInfinity() && a.eqXToP(s) : !(a = this.g.mulAdd(c, n.getPublic(), d)).isInfinity() && 0 === a.getX().umod(this.n).cmp(s)
            }, N.prototype.recoverPubKey = function(e, r, n, i) {
                I((3 & n) === n, "The recovery param is more than two bits"), r = new j(r, i);
                var a = this.n,
                    s = new(o())(e),
                    l = r.r,
                    u = r.s,
                    c = 1 & n,
                    d = n >> 1;
                if (l.cmp(this.curve.p.umod(this.curve.n)) >= 0 && d) throw Error("Unable to find sencond key candinate");
                l = d ? this.curve.pointFromX(l.add(this.curve.n), c) : this.curve.pointFromX(l, c);
                var h = r.r.invm(a),
                    f = a.sub(s).mul(h).umod(a),
                    p = u.mul(h).umod(a);
                return this.g.mulAdd(f, l, p)
            }, N.prototype.getKeyRecoveryParam = function(e, r, n, i) {
                if (null !== (r = new j(r, i)).recoveryParam) return r.recoveryParam;
                for (var o, a = 0; a < 4; a++) {
                    try {
                        o = this.recoverPubKey(e, r, a)
                    } catch (s) {
                        continue
                    }
                    if (o.eq(n)) return a
                }
                throw Error("Unable to find valid recovery factor")
            };
            var F = l(function(e, r) {
                    var n = r;
                    n.version = "6.5.4", n.utils = h, n.rand = function() {
                        throw Error("unsupported")
                    }, n.curve = C, n.curves = A, n.ec = N, n.eddsa = null
                }).ec,
                L = n(16441),
                D = n(6881),
                z = n(1581);
            let U = new z.Logger("signing-key/5.7.0"),
                $ = null;

            function q() {
                return $ || ($ = new F("secp256k1")), $
            }
            class W {
                constructor(e) {
                    (0, D.defineReadOnly)(this, "curve", "secp256k1"), (0, D.defineReadOnly)(this, "privateKey", (0, L.hexlify)(e)), 32 !== (0, L.hexDataLength)(this.privateKey) && U.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
                    let r = q().keyFromPrivate((0, L.arrayify)(this.privateKey));
                    (0, D.defineReadOnly)(this, "publicKey", "0x" + r.getPublic(!1, "hex")), (0, D.defineReadOnly)(this, "compressedPublicKey", "0x" + r.getPublic(!0, "hex")), (0, D.defineReadOnly)(this, "_isSigningKey", !0)
                }
                _addPoint(e) {
                    let r = q().keyFromPublic((0, L.arrayify)(this.publicKey)),
                        n = q().keyFromPublic((0, L.arrayify)(e));
                    return "0x" + r.pub.add(n.pub).encodeCompressed("hex")
                }
                signDigest(e) {
                    let r = q().keyFromPrivate((0, L.arrayify)(this.privateKey)),
                        n = (0, L.arrayify)(e);
                    32 !== n.length && U.throwArgumentError("bad digest length", "digest", e);
                    let i = r.sign(n, {
                        canonical: !0
                    });
                    return (0, L.splitSignature)({
                        recoveryParam: i.recoveryParam,
                        r: (0, L.hexZeroPad)("0x" + i.r.toString(16), 32),
                        s: (0, L.hexZeroPad)("0x" + i.s.toString(16), 32)
                    })
                }
                computeSharedSecret(e) {
                    let r = q().keyFromPrivate((0, L.arrayify)(this.privateKey)),
                        n = q().keyFromPublic((0, L.arrayify)(H(e)));
                    return (0, L.hexZeroPad)("0x" + r.derive(n.getPublic()).toString(16), 32)
                }
                static isSigningKey(e) {
                    return !!(e && e._isSigningKey)
                }
            }

            function V(e, r) {
                let n = (0, L.splitSignature)(r),
                    i = {
                        r: (0, L.arrayify)(n.r),
                        s: (0, L.arrayify)(n.s)
                    };
                return "0x" + q().recoverPubKey((0, L.arrayify)(e), i, n.recoveryParam).encode("hex", !1)
            }

            function H(e, r) {
                let n = (0, L.arrayify)(e);
                if (32 === n.length) {
                    let i = new W(n);
                    return r ? "0x" + q().keyFromPrivate(n).getPublic(!0, "hex") : i.publicKey
                }
                return 33 === n.length ? r ? (0, L.hexlify)(n) : "0x" + q().keyFromPublic(n).getPublic(!1, "hex") : 65 === n.length ? r ? "0x" + q().keyFromPublic(n).getPublic(!0, "hex") : (0, L.hexlify)(n) : U.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
            }
        },
        31886: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                keccak256: function() {
                    return m
                },
                pack: function() {
                    return p
                },
                sha256: function() {
                    return g
                }
            });
            var i = n(2593),
                o = n(16441),
                a = n(38197),
                s = n(2006),
                l = n(29251),
                u = n(1581);
            let c = RegExp("^bytes([0-9]+)$"),
                d = RegExp("^(u?int)([0-9]*)$"),
                h = RegExp("^(.*)\\[([0-9]*)\\]$"),
                f = new u.Logger("solidity/5.7.0");

            function p(e, r) {
                e.length != r.length && f.throwArgumentError("wrong number of values; expected ${ types.length }", "values", r);
                let n = [];
                return e.forEach(function(e, a) {
                    n.push(function e(r, n, a) {
                        switch (r) {
                            case "address":
                                if (a) return (0, o.zeroPad)(n, 32);
                                return (0, o.arrayify)(n);
                            case "string":
                                return (0, l.Y0)(n);
                            case "bytes":
                                return (0, o.arrayify)(n);
                            case "bool":
                                if (n = n ? "0x01" : "0x00", a) return (0, o.zeroPad)(n, 32);
                                return (0, o.arrayify)(n)
                        }
                        let s = r.match(d);
                        if (s) {
                            let u = parseInt(s[2] || "256");
                            return (s[2] && String(u) !== s[2] || u % 8 != 0 || 0 === u || u > 256) && f.throwArgumentError("invalid number type", "type", r), a && (u = 256), n = i.O$.from(n).toTwos(u), (0, o.zeroPad)(n, u / 8)
                        }
                        if (s = r.match(c)) {
                            let p = parseInt(s[1]);
                            return ((String(p) !== s[1] || 0 === p || p > 32) && f.throwArgumentError("invalid bytes type", "type", r), (0, o.arrayify)(n).byteLength !== p && f.throwArgumentError(`invalid value for ${r}`, "value", n), a) ? (0, o.arrayify)((n + "0000000000000000000000000000000000000000000000000000000000000000").substring(0, 66)) : n
                        }
                        if ((s = r.match(h)) && Array.isArray(n)) {
                            let m = s[1],
                                g = parseInt(s[2] || String(n.length));
                            g != n.length && f.throwArgumentError(`invalid array length for ${r}`, "value", n);
                            let v = [];
                            return n.forEach(function(r) {
                                v.push(e(m, r, !0))
                            }), (0, o.concat)(v)
                        }
                        return f.throwArgumentError("invalid type", "type", r)
                    }(e, r[a]))
                }), (0, o.hexlify)((0, o.concat)(n))
            }

            function m(e, r) {
                return (0, a.keccak256)(p(e, r))
            }

            function g(e, r) {
                return (0, s.JQ)(p(e, r))
            }
        },
        22384: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                UnicodeNormalizationForm: function() {
                    return a.Uj
                },
                Utf8ErrorFuncs: function() {
                    return a.te
                },
                Utf8ErrorReason: function() {
                    return a.Uw
                },
                _toEscapedUtf8String: function() {
                    return a.U$
                },
                formatBytes32String: function() {
                    return s
                },
                nameprep: function() {
                    return b
                },
                parseBytes32String: function() {
                    return l
                },
                toUtf8Bytes: function() {
                    return a.Y0
                },
                toUtf8CodePoints: function() {
                    return a.XL
                },
                toUtf8String: function() {
                    return a.ZN
                }
            });
            var i = n(57218),
                o = n(16441),
                a = n(29251);

            function s(e) {
                let r = (0, a.Y0)(e);
                if (r.length > 31) throw Error("bytes32 string must be less than 32 bytes");
                return (0, o.hexlify)((0, o.concat)([r, i.R]).slice(0, 32))
            }

            function l(e) {
                let r = (0, o.arrayify)(e);
                if (32 !== r.length) throw Error("invalid bytes32 - not 32 bytes long");
                if (0 !== r[31]) throw Error("invalid bytes32 string - no null terminator");
                let n = 31;
                for (; 0 === r[n - 1];) n--;
                return (0, a.ZN)(r.slice(0, n))
            }

            function u(e, r) {
                r || (r = function(e) {
                    return [parseInt(e, 16)]
                });
                let n = 0,
                    i = {};
                return e.split(",").forEach(e => {
                    let o = e.split(":");
                    i[n += parseInt(o[0], 16)] = r(o[1])
                }), i
            }

            function c(e) {
                let r = 0;
                return e.split(",").map(e => {
                    let n = e.split("-");
                    return 1 === n.length ? n[1] = "0" : "" === n[1] && (n[1] = "1"), {
                        l: r + parseInt(n[0], 16),
                        h: r = parseInt(n[1], 16)
                    }
                })
            }

            function d(e, r) {
                let n = 0;
                for (let i = 0; i < r.length; i++) {
                    let o = r[i];
                    if (e >= (n += o.l) && e <= n + o.h && (e - n) % (o.d || 1) == 0) {
                        if (o.e && -1 !== o.e.indexOf(e - n)) continue;
                        return o
                    }
                }
                return null
            }
            let h = c("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),
                f = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(e => parseInt(e, 16)),
                p = [{
                    h: 25,
                    s: 32,
                    l: 65
                }, {
                    h: 30,
                    s: 32,
                    e: [23],
                    l: 127
                }, {
                    h: 54,
                    s: 1,
                    e: [48],
                    l: 64,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 57,
                    d: 2
                }, {
                    h: 44,
                    s: 1,
                    l: 17,
                    d: 2
                }, {
                    h: 10,
                    s: 1,
                    e: [2, 6, 8],
                    l: 61,
                    d: 2
                }, {
                    h: 16,
                    s: 1,
                    l: 68,
                    d: 2
                }, {
                    h: 84,
                    s: 1,
                    e: [18, 24, 66],
                    l: 19,
                    d: 2
                }, {
                    h: 26,
                    s: 32,
                    e: [17],
                    l: 435
                }, {
                    h: 22,
                    s: 1,
                    l: 71,
                    d: 2
                }, {
                    h: 15,
                    s: 80,
                    l: 40
                }, {
                    h: 31,
                    s: 32,
                    l: 16
                }, {
                    h: 32,
                    s: 1,
                    l: 80,
                    d: 2
                }, {
                    h: 52,
                    s: 1,
                    l: 42,
                    d: 2
                }, {
                    h: 12,
                    s: 1,
                    l: 55,
                    d: 2
                }, {
                    h: 40,
                    s: 1,
                    e: [38],
                    l: 15,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 48,
                    d: 2
                }, {
                    h: 37,
                    s: 48,
                    l: 49
                }, {
                    h: 148,
                    s: 1,
                    l: 6351,
                    d: 2
                }, {
                    h: 88,
                    s: 1,
                    l: 160,
                    d: 2
                }, {
                    h: 15,
                    s: 16,
                    l: 704
                }, {
                    h: 25,
                    s: 26,
                    l: 854
                }, {
                    h: 25,
                    s: 32,
                    l: 55915
                }, {
                    h: 37,
                    s: 40,
                    l: 1247
                }, {
                    h: 25,
                    s: -119711,
                    l: 53248
                }, {
                    h: 25,
                    s: -119763,
                    l: 52
                }, {
                    h: 25,
                    s: -119815,
                    l: 52
                }, {
                    h: 25,
                    s: -119867,
                    e: [1, 4, 5, 7, 8, 11, 12, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -119919,
                    l: 52
                }, {
                    h: 24,
                    s: -119971,
                    e: [2, 7, 8, 17],
                    l: 52
                }, {
                    h: 24,
                    s: -120023,
                    e: [2, 7, 13, 15, 16, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -120075,
                    l: 52
                }, {
                    h: 25,
                    s: -120127,
                    l: 52
                }, {
                    h: 25,
                    s: -120179,
                    l: 52
                }, {
                    h: 25,
                    s: -120231,
                    l: 52
                }, {
                    h: 25,
                    s: -120283,
                    l: 52
                }, {
                    h: 25,
                    s: -120335,
                    l: 52
                }, {
                    h: 24,
                    s: -119543,
                    e: [17],
                    l: 56
                }, {
                    h: 24,
                    s: -119601,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119659,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119717,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119775,
                    e: [17],
                    l: 58
                }],
                m = u("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),
                g = u("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),
                v = u("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", function(e) {
                    if (e.length % 4 != 0) throw Error("bad data");
                    let r = [];
                    for (let n = 0; n < e.length; n += 4) r.push(parseInt(e.substring(n, n + 4), 16));
                    return r
                }),
                y = c("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");

            function b(e) {
                if (e.match(/^[a-z0-9-]*$/i) && e.length <= 59) return e.toLowerCase();
                let r = (0, a.XL)(e);
                r = r.map(e => f.indexOf(e) >= 0 || e >= 65024 && e <= 65039 ? [] : function(e) {
                    let r = d(e, p);
                    if (r) return [e + r.s];
                    let n = m[e];
                    if (n) return n;
                    let i = g[e];
                    return i ? [e + i[0]] : v[e] || null
                }(e) || [e]).reduce((e, r) => (r.forEach(r => {
                    e.push(r)
                }), e), []), (r = (0, a.XL)((0, a.uu)(r), a.Uj.NFKC)).forEach(e => {
                    if (d(e, y)) throw Error("STRINGPREP_CONTAINS_PROHIBITED")
                }), r.forEach(e => {
                    if (d(e, h)) throw Error("STRINGPREP_CONTAINS_UNASSIGNED")
                });
                let n = (0, a.uu)(r);
                if ("-" === n.substring(0, 1) || "--" === n.substring(2, 4) || "-" === n.substring(n.length - 1)) throw Error("invalid hyphen");
                return n
            }
        },
        29251: function(e, r, n) {
            "use strict";
            n.d(r, {
                Uj: function() {
                    return a
                },
                te: function() {
                    return h
                },
                Uw: function() {
                    return s
                },
                U$: function() {
                    return g
                },
                uu: function() {
                    return v
                },
                Y0: function() {
                    return p
                },
                XL: function() {
                    return b
                },
                ZN: function() {
                    return y
                }
            });
            var i, o, a, s, l = n(16441),
                u = n(1581);
            let c = new u.Logger("strings/5.7.0");

            function d(e, r, n, i, o) {
                if (e === s.BAD_PREFIX || e === s.UNEXPECTED_CONTINUE) {
                    let a = 0;
                    for (let l = r + 1; l < n.length && n[l] >> 6 == 2; l++) a++;
                    return a
                }
                return e === s.OVERRUN ? n.length - r - 1 : 0
            }(i = a || (a = {})).current = "", i.NFC = "NFC", i.NFD = "NFD", i.NFKC = "NFKC", i.NFKD = "NFKD", (o = s || (s = {})).UNEXPECTED_CONTINUE = "unexpected continuation byte", o.BAD_PREFIX = "bad codepoint prefix", o.OVERRUN = "string overrun", o.MISSING_CONTINUE = "missing continuation byte", o.OUT_OF_RANGE = "out of UTF-8 range", o.UTF16_SURROGATE = "UTF-16 surrogate", o.OVERLONG = "overlong representation";
            let h = Object.freeze({
                error: function(e, r, n, i, o) {
                    return c.throwArgumentError(`invalid codepoint at offset ${r}; ${e}`, "bytes", n)
                },
                ignore: d,
                replace: function(e, r, n, i, o) {
                    return e === s.OVERLONG ? (i.push(o), 0) : (i.push(65533), d(e, r, n, i, o))
                }
            });

            function f(e, r) {
                null == r && (r = h.error), e = (0, l.arrayify)(e);
                let n = [],
                    i = 0;
                for (; i < e.length;) {
                    let o = e[i++];
                    if (o >> 7 == 0) {
                        n.push(o);
                        continue
                    }
                    let a = null,
                        u = null;
                    if ((224 & o) == 192) a = 1, u = 127;
                    else if ((240 & o) == 224) a = 2, u = 2047;
                    else if ((248 & o) == 240) a = 3, u = 65535;
                    else {
                        (192 & o) == 128 ? i += r(s.UNEXPECTED_CONTINUE, i - 1, e, n) : i += r(s.BAD_PREFIX, i - 1, e, n);
                        continue
                    }
                    if (i - 1 + a >= e.length) {
                        i += r(s.OVERRUN, i - 1, e, n);
                        continue
                    }
                    let c = o & (1 << 8 - a - 1) - 1;
                    for (let d = 0; d < a; d++) {
                        let f = e[i];
                        if ((192 & f) != 128) {
                            i += r(s.MISSING_CONTINUE, i, e, n), c = null;
                            break
                        }
                        c = c << 6 | 63 & f, i++
                    }
                    if (null !== c) {
                        if (c > 1114111) {
                            i += r(s.OUT_OF_RANGE, i - 1 - a, e, n, c);
                            continue
                        }
                        if (c >= 55296 && c <= 57343) {
                            i += r(s.UTF16_SURROGATE, i - 1 - a, e, n, c);
                            continue
                        }
                        if (c <= u) {
                            i += r(s.OVERLONG, i - 1 - a, e, n, c);
                            continue
                        }
                        n.push(c)
                    }
                }
                return n
            }

            function p(e, r = a.current) {
                r != a.current && (c.checkNormalize(), e = e.normalize(r));
                let n = [];
                for (let i = 0; i < e.length; i++) {
                    let o = e.charCodeAt(i);
                    if (o < 128) n.push(o);
                    else if (o < 2048) n.push(o >> 6 | 192), n.push(63 & o | 128);
                    else if ((64512 & o) == 55296) {
                        i++;
                        let s = e.charCodeAt(i);
                        if (i >= e.length || (64512 & s) != 56320) throw Error("invalid utf-8 string");
                        let u = 65536 + ((1023 & o) << 10) + (1023 & s);
                        n.push(u >> 18 | 240), n.push(u >> 12 & 63 | 128), n.push(u >> 6 & 63 | 128), n.push(63 & u | 128)
                    } else n.push(o >> 12 | 224), n.push(o >> 6 & 63 | 128), n.push(63 & o | 128)
                }
                return (0, l.arrayify)(n)
            }

            function m(e) {
                let r = "0000" + e.toString(16);
                return "\\u" + r.substring(r.length - 4)
            }

            function g(e, r) {
                return '"' + f(e, r).map(e => {
                    if (e < 256) {
                        switch (e) {
                            case 8:
                                return "\\b";
                            case 9:
                                return "\\t";
                            case 10:
                                return "\\n";
                            case 13:
                                return "\\r";
                            case 34:
                                return '\\"';
                            case 92:
                                return "\\\\"
                        }
                        if (e >= 32 && e < 127) return String.fromCharCode(e)
                    }
                    return e <= 65535 ? m(e) : m(((e -= 65536) >> 10 & 1023) + 55296) + m((1023 & e) + 56320)
                }).join("") + '"'
            }

            function v(e) {
                return e.map(e => e <= 65535 ? String.fromCharCode(e) : String.fromCharCode(((e -= 65536) >> 10 & 1023) + 55296, (1023 & e) + 56320)).join("")
            }

            function y(e, r) {
                return v(f(e, r))
            }

            function b(e, r = a.current) {
                return f(p(e, r))
            }
        },
        83875: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                TransactionTypes: function() {
                    return o
                },
                accessListify: function() {
                    return A
                },
                computeAddress: function() {
                    return w
                },
                parse: function() {
                    return T
                },
                recoverAddress: function() {
                    return x
                },
                serialize: function() {
                    return P
                }
            });
            var i, o, a = n(19485),
                s = n(2593),
                l = n(16441),
                u = n(21046),
                c = n(38197),
                d = n(6881),
                h = n(59052),
                f = n(67669),
                p = n(1581);
            let m = new p.Logger("transactions/5.7.0");

            function g(e) {
                return "0x" === e ? null : (0, a.getAddress)(e)
            }

            function v(e) {
                return "0x" === e ? u._Y : s.O$.from(e)
            }(i = o || (o = {}))[i.legacy = 0] = "legacy", i[i.eip2930 = 1] = "eip2930", i[i.eip1559 = 2] = "eip1559";
            let y = [{
                    name: "nonce",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "gasPrice",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "gasLimit",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "to",
                    length: 20
                }, {
                    name: "value",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "data"
                }],
                b = {
                    chainId: !0,
                    data: !0,
                    gasLimit: !0,
                    gasPrice: !0,
                    nonce: !0,
                    to: !0,
                    type: !0,
                    value: !0
                };

            function w(e) {
                let r = (0, f.computePublicKey)(e);
                return (0, a.getAddress)((0, l.hexDataSlice)((0, c.keccak256)((0, l.hexDataSlice)(r, 1)), 12))
            }

            function x(e, r) {
                return w((0, f.recoverPublicKey)((0, l.arrayify)(e), r))
            }

            function E(e, r) {
                let n = (0, l.stripZeros)(s.O$.from(e).toHexString());
                return n.length > 32 && m.throwArgumentError("invalid length for " + r, "transaction:" + r, e), n
            }

            function C(e, r) {
                return {
                    address: (0, a.getAddress)(e),
                    storageKeys: (r || []).map((r, n) => (32 !== (0, l.hexDataLength)(r) && m.throwArgumentError("invalid access list storageKey", `accessList[${e}:${n}]`, r), r.toLowerCase()))
                }
            }

            function A(e) {
                if (Array.isArray(e)) return e.map((e, r) => Array.isArray(e) ? (e.length > 2 && m.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${r}]`, e), C(e[0], e[1])) : C(e.address, e.storageKeys));
                let r = Object.keys(e).map(r => {
                    let n = e[r].reduce((e, r) => (e[r] = !0, e), {});
                    return C(r, Object.keys(n).sort())
                });
                return r.sort((e, r) => e.address.localeCompare(r.address)), r
            }

            function k(e) {
                return A(e).map(e => [e.address, e.storageKeys])
            }

            function S(e, r) {
                if (null != e.gasPrice) {
                    let n = s.O$.from(e.gasPrice),
                        i = s.O$.from(e.maxFeePerGas || 0);
                    n.eq(i) || m.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                        gasPrice: n,
                        maxFeePerGas: i
                    })
                }
                let o = [E(e.chainId || 0, "chainId"), E(e.nonce || 0, "nonce"), E(e.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), E(e.maxFeePerGas || 0, "maxFeePerGas"), E(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, a.getAddress)(e.to) : "0x", E(e.value || 0, "value"), e.data || "0x", k(e.accessList || [])];
                if (r) {
                    let u = (0, l.splitSignature)(r);
                    o.push(E(u.recoveryParam, "recoveryParam")), o.push((0, l.stripZeros)(u.r)), o.push((0, l.stripZeros)(u.s))
                }
                return (0, l.hexConcat)(["0x02", h.encode(o)])
            }

            function _(e, r) {
                let n = [E(e.chainId || 0, "chainId"), E(e.nonce || 0, "nonce"), E(e.gasPrice || 0, "gasPrice"), E(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, a.getAddress)(e.to) : "0x", E(e.value || 0, "value"), e.data || "0x", k(e.accessList || [])];
                if (r) {
                    let i = (0, l.splitSignature)(r);
                    n.push(E(i.recoveryParam, "recoveryParam")), n.push((0, l.stripZeros)(i.r)), n.push((0, l.stripZeros)(i.s))
                }
                return (0, l.hexConcat)(["0x01", h.encode(n)])
            }

            function P(e, r) {
                if (null == e.type || 0 === e.type) return null != e.accessList && m.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", e),
                    function(e, r) {
                        (0, d.checkProperties)(e, b);
                        let n = [];
                        y.forEach(function(r) {
                            let i = e[r.name] || [],
                                o = {};
                            r.numeric && (o.hexPad = "left"), i = (0, l.arrayify)((0, l.hexlify)(i, o)), r.length && i.length !== r.length && i.length > 0 && m.throwArgumentError("invalid length for " + r.name, "transaction:" + r.name, i), r.maxLength && (i = (0, l.stripZeros)(i)).length > r.maxLength && m.throwArgumentError("invalid length for " + r.name, "transaction:" + r.name, i), n.push((0, l.hexlify)(i))
                        });
                        let i = 0;
                        if (null != e.chainId ? "number" != typeof(i = e.chainId) && m.throwArgumentError("invalid transaction.chainId", "transaction", e) : r && !(0, l.isBytesLike)(r) && r.v > 28 && (i = Math.floor((r.v - 35) / 2)), 0 !== i && (n.push((0, l.hexlify)(i)), n.push("0x"), n.push("0x")), !r) return h.encode(n);
                        let o = (0, l.splitSignature)(r),
                            a = 27 + o.recoveryParam;
                        return 0 !== i ? (n.pop(), n.pop(), n.pop(), a += 2 * i + 8, o.v > 28 && o.v !== a && m.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", r)) : o.v !== a && m.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", r), n.push((0, l.hexlify)(a)), n.push((0, l.stripZeros)((0, l.arrayify)(o.r))), n.push((0, l.stripZeros)((0, l.arrayify)(o.s))), h.encode(n)
                    }(e, r);
                switch (e.type) {
                    case 1:
                        return _(e, r);
                    case 2:
                        return S(e, r)
                }
                return m.throwError(`unsupported transaction type: ${e.type}`, p.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "serializeTransaction",
                    transactionType: e.type
                })
            }

            function j(e, r, n) {
                try {
                    let i = v(r[0]).toNumber();
                    if (0 !== i && 1 !== i) throw Error("bad recid");
                    e.v = i
                } catch (o) {
                    m.throwArgumentError("invalid v for transaction type: 1", "v", r[0])
                }
                e.r = (0, l.hexZeroPad)(r[1], 32), e.s = (0, l.hexZeroPad)(r[2], 32);
                try {
                    let a = (0, c.keccak256)(n(e));
                    e.from = x(a, {
                        r: e.r,
                        s: e.s,
                        recoveryParam: e.v
                    })
                } catch (s) {}
            }

            function T(e) {
                let r = (0, l.arrayify)(e);
                if (r[0] > 127) return function(e) {
                    let r = h.decode(e);
                    9 !== r.length && 6 !== r.length && m.throwArgumentError("invalid raw transaction", "rawTransaction", e);
                    let n = {
                        nonce: v(r[0]).toNumber(),
                        gasPrice: v(r[1]),
                        gasLimit: v(r[2]),
                        to: g(r[3]),
                        value: v(r[4]),
                        data: r[5],
                        chainId: 0
                    };
                    if (6 === r.length) return n;
                    try {
                        n.v = s.O$.from(r[6]).toNumber()
                    } catch (i) {
                        return n
                    }
                    if (n.r = (0, l.hexZeroPad)(r[7], 32), n.s = (0, l.hexZeroPad)(r[8], 32), s.O$.from(n.r).isZero() && s.O$.from(n.s).isZero()) n.chainId = n.v, n.v = 0;
                    else {
                        n.chainId = Math.floor((n.v - 35) / 2), n.chainId < 0 && (n.chainId = 0);
                        let o = n.v - 27,
                            a = r.slice(0, 6);
                        0 !== n.chainId && (a.push((0, l.hexlify)(n.chainId)), a.push("0x"), a.push("0x"), o -= 2 * n.chainId + 8);
                        let u = (0, c.keccak256)(h.encode(a));
                        try {
                            n.from = x(u, {
                                r: (0, l.hexlify)(n.r),
                                s: (0, l.hexlify)(n.s),
                                recoveryParam: o
                            })
                        } catch (d) {}
                        n.hash = (0, c.keccak256)(e)
                    }
                    return n.type = null, n
                }(r);
                switch (r[0]) {
                    case 1:
                        return function(e) {
                            let r = h.decode(e.slice(1));
                            8 !== r.length && 11 !== r.length && m.throwArgumentError("invalid component count for transaction type: 1", "payload", (0, l.hexlify)(e));
                            let n = {
                                type: 1,
                                chainId: v(r[0]).toNumber(),
                                nonce: v(r[1]).toNumber(),
                                gasPrice: v(r[2]),
                                gasLimit: v(r[3]),
                                to: g(r[4]),
                                value: v(r[5]),
                                data: r[6],
                                accessList: A(r[7])
                            };
                            return 8 === r.length || (n.hash = (0, c.keccak256)(e), j(n, r.slice(8), _)), n
                        }(r);
                    case 2:
                        return function(e) {
                            let r = h.decode(e.slice(1));
                            9 !== r.length && 12 !== r.length && m.throwArgumentError("invalid component count for transaction type: 2", "payload", (0, l.hexlify)(e));
                            let n = v(r[2]),
                                i = v(r[3]),
                                o = {
                                    type: 2,
                                    chainId: v(r[0]).toNumber(),
                                    nonce: v(r[1]).toNumber(),
                                    maxPriorityFeePerGas: n,
                                    maxFeePerGas: i,
                                    gasPrice: null,
                                    gasLimit: v(r[4]),
                                    to: g(r[5]),
                                    value: v(r[6]),
                                    data: r[7],
                                    accessList: A(r[8])
                                };
                            return 9 === r.length || (o.hash = (0, c.keccak256)(e), j(o, r.slice(9), S)), o
                        }(r)
                }
                return m.throwError(`unsupported transaction type: ${r[0]}`, p.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "parseTransaction",
                    transactionType: r[0]
                })
            }
        },
        35553: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                commify: function() {
                    return C
                },
                formatEther: function() {
                    return S
                },
                formatUnits: function() {
                    return A
                },
                parseEther: function() {
                    return _
                },
                parseUnits: function() {
                    return k
                }
            });
            var i = n(16441),
                o = n(1581),
                a = n(48794),
                s = n(2593);
            let l = new o.Logger(a.i),
                u = {},
                c = s.O$.from(0),
                d = s.O$.from(-1);

            function h(e, r, n, i) {
                let a = {
                    fault: r,
                    operation: n
                };
                return void 0 !== i && (a.value = i), l.throwError(e, o.Logger.errors.NUMERIC_FAULT, a)
            }
            let f = "0";
            for (; f.length < 256;) f += f;

            function p(e) {
                if ("number" != typeof e) try {
                    e = s.O$.from(e).toNumber()
                } catch (r) {}
                return "number" == typeof e && e >= 0 && e <= 256 && !(e % 1) ? "1" + f.substring(0, e) : l.throwArgumentError("invalid decimal size", "decimals", e)
            }

            function m(e, r) {
                null == r && (r = 0);
                let n = p(r);
                e = s.O$.from(e);
                let i = e.lt(c);
                i && (e = e.mul(d));
                let o = e.mod(n).toString();
                for (; o.length < n.length - 1;) o = "0" + o;
                o = o.match(/^([0-9]*[1-9]|0)(0*)/)[1];
                let a = e.div(n).toString();
                return e = 1 === n.length ? a : a + "." + o, i && (e = "-" + e), e
            }

            function g(e, r) {
                null == r && (r = 0);
                let n = p(r);
                "string" == typeof e && e.match(/^-?[0-9.]+$/) || l.throwArgumentError("invalid decimal value", "value", e);
                let i = "-" === e.substring(0, 1);
                i && (e = e.substring(1)), "." === e && l.throwArgumentError("missing value", "value", e);
                let o = e.split(".");
                o.length > 2 && l.throwArgumentError("too many decimal points", "value", e);
                let a = o[0],
                    u = o[1];
                for (a || (a = "0"), u || (u = "0");
                    "0" === u[u.length - 1];) u = u.substring(0, u.length - 1);
                for (u.length > n.length - 1 && h("fractional component exceeds decimals", "underflow", "parseFixed"), "" === u && (u = "0"); u.length < n.length - 1;) u += "0";
                let c = s.O$.from(a),
                    f = s.O$.from(u),
                    m = c.mul(n).add(f);
                return i && (m = m.mul(d)), m
            }
            class v {
                constructor(e, r, n, i) {
                    e !== u && l.throwError("cannot use FixedFormat constructor; use FixedFormat.from", o.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "new FixedFormat"
                    }), this.signed = r, this.width = n, this.decimals = i, this.name = (r ? "" : "u") + "fixed" + String(n) + "x" + String(i), this._multiplier = p(i), Object.freeze(this)
                }
                static from(e) {
                    if (e instanceof v) return e;
                    "number" == typeof e && (e = `fixed128x${e}`);
                    let r = !0,
                        n = 128,
                        i = 18;
                    if ("string" == typeof e) {
                        if ("fixed" === e);
                        else if ("ufixed" === e) r = !1;
                        else {
                            let o = e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                            o || l.throwArgumentError("invalid fixed format", "format", e), r = "u" !== o[1], n = parseInt(o[2]), i = parseInt(o[3])
                        }
                    } else if (e) {
                        let a = (r, n, i) => null == e[r] ? i : (typeof e[r] !== n && l.throwArgumentError("invalid fixed format (" + r + " not " + n + ")", "format." + r, e[r]), e[r]);
                        r = a("signed", "boolean", r), n = a("width", "number", n), i = a("decimals", "number", i)
                    }
                    return n % 8 && l.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", n), i > 80 && l.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", i), new v(u, r, n, i)
                }
            }
            class y {
                constructor(e, r, n, i) {
                    e !== u && l.throwError("cannot use FixedNumber constructor; use FixedNumber.from", o.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "new FixedFormat"
                    }), this.format = i, this._hex = r, this._value = n, this._isFixedNumber = !0, Object.freeze(this)
                }
                _checkFormat(e) {
                    this.format.name !== e.format.name && l.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", e)
                }
                addUnsafe(e) {
                    this._checkFormat(e);
                    let r = g(this._value, this.format.decimals),
                        n = g(e._value, e.format.decimals);
                    return y.fromValue(r.add(n), this.format.decimals, this.format)
                }
                subUnsafe(e) {
                    this._checkFormat(e);
                    let r = g(this._value, this.format.decimals),
                        n = g(e._value, e.format.decimals);
                    return y.fromValue(r.sub(n), this.format.decimals, this.format)
                }
                mulUnsafe(e) {
                    this._checkFormat(e);
                    let r = g(this._value, this.format.decimals),
                        n = g(e._value, e.format.decimals);
                    return y.fromValue(r.mul(n).div(this.format._multiplier), this.format.decimals, this.format)
                }
                divUnsafe(e) {
                    this._checkFormat(e);
                    let r = g(this._value, this.format.decimals),
                        n = g(e._value, e.format.decimals);
                    return y.fromValue(r.mul(this.format._multiplier).div(n), this.format.decimals, this.format)
                }
                floor() {
                    let e = this.toString().split(".");
                    1 === e.length && e.push("0");
                    let r = y.from(e[0], this.format),
                        n = !e[1].match(/^(0*)$/);
                    return this.isNegative() && n && (r = r.subUnsafe(b.toFormat(r.format))), r
                }
                ceiling() {
                    let e = this.toString().split(".");
                    1 === e.length && e.push("0");
                    let r = y.from(e[0], this.format),
                        n = !e[1].match(/^(0*)$/);
                    return !this.isNegative() && n && (r = r.addUnsafe(b.toFormat(r.format))), r
                }
                round(e) {
                    null == e && (e = 0);
                    let r = this.toString().split(".");
                    if (1 === r.length && r.push("0"), (e < 0 || e > 80 || e % 1) && l.throwArgumentError("invalid decimal count", "decimals", e), r[1].length <= e) return this;
                    let n = y.from("1" + f.substring(0, e), this.format),
                        i = w.toFormat(this.format);
                    return this.mulUnsafe(n).addUnsafe(i).floor().divUnsafe(n)
                }
                isZero() {
                    return "0.0" === this._value || "0" === this._value
                }
                isNegative() {
                    return "-" === this._value[0]
                }
                toString() {
                    return this._value
                }
                toHexString(e) {
                    if (null == e) return this._hex;
                    e % 8 && l.throwArgumentError("invalid byte width", "width", e);
                    let r = s.O$.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString();
                    return (0, i.hexZeroPad)(r, e / 8)
                }
                toUnsafeFloat() {
                    return parseFloat(this.toString())
                }
                toFormat(e) {
                    return y.fromString(this._value, e)
                }
                static fromValue(e, r, n) {
                    return null != n || null == r || (0, s.Zm)(r) || (n = r, r = null), null == r && (r = 0), null == n && (n = "fixed"), y.fromString(m(e, r), v.from(n))
                }
                static fromString(e, r) {
                    null == r && (r = "fixed");
                    let n = v.from(r),
                        o = g(e, n.decimals);
                    !n.signed && o.lt(c) && h("unsigned value cannot be negative", "overflow", "value", e);
                    let a = null;
                    n.signed ? a = o.toTwos(n.width).toHexString() : (a = o.toHexString(), a = (0, i.hexZeroPad)(a, n.width / 8));
                    let s = m(o, n.decimals);
                    return new y(u, a, s, n)
                }
                static fromBytes(e, r) {
                    null == r && (r = "fixed");
                    let n = v.from(r);
                    if ((0, i.arrayify)(e).length > n.width / 8) throw Error("overflow");
                    let o = s.O$.from(e);
                    n.signed && (o = o.fromTwos(n.width));
                    let a = o.toTwos((n.signed ? 0 : 1) + n.width).toHexString(),
                        l = m(o, n.decimals);
                    return new y(u, a, l, n)
                }
                static from(e, r) {
                    if ("string" == typeof e) return y.fromString(e, r);
                    if ((0, i.isBytes)(e)) return y.fromBytes(e, r);
                    try {
                        return y.fromValue(e, 0, r)
                    } catch (n) {
                        if (n.code !== o.Logger.errors.INVALID_ARGUMENT) throw n
                    }
                    return l.throwArgumentError("invalid FixedNumber value", "value", e)
                }
                static isFixedNumber(e) {
                    return !!(e && e._isFixedNumber)
                }
            }
            let b = y.from(1),
                w = y.from("0.5"),
                x = new o.Logger("units/5.7.0"),
                E = ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"];

            function C(e) {
                let r = String(e).split(".");
                (r.length > 2 || !r[0].match(/^-?[0-9]*$/) || r[1] && !r[1].match(/^[0-9]*$/) || "." === e || "-." === e) && x.throwArgumentError("invalid value", "value", e);
                let n = r[0],
                    i = "";
                for ("-" === n.substring(0, 1) && (i = "-", n = n.substring(1));
                    "0" === n.substring(0, 1);) n = n.substring(1);
                "" === n && (n = "0");
                let o = "";
                for (2 === r.length && (o = "." + (r[1] || "0")); o.length > 2 && "0" === o[o.length - 1];) o = o.substring(0, o.length - 1);
                let a = [];
                for (; n.length;) {
                    if (n.length <= 3) {
                        a.unshift(n);
                        break
                    } {
                        let s = n.length - 3;
                        a.unshift(n.substring(s)), n = n.substring(0, s)
                    }
                }
                return i + a.join(",") + o
            }

            function A(e, r) {
                if ("string" == typeof r) {
                    let n = E.indexOf(r); - 1 !== n && (r = 3 * n)
                }
                return m(e, null != r ? r : 18)
            }

            function k(e, r) {
                if ("string" != typeof e && x.throwArgumentError("value must be a string", "value", e), "string" == typeof r) {
                    let n = E.indexOf(r); - 1 !== n && (r = 3 * n)
                }
                return g(e, null != r ? r : 18)
            }

            function S(e) {
                return A(e, 18)
            }

            function _(e) {
                return k(e, 18)
            }
        },
        79911: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                Wallet: function() {
                    return x
                },
                verifyMessage: function() {
                    return E
                },
                verifyTypedData: function() {
                    return C
                }
            });
            var i = n(19485),
                o = n(81556),
                a = n(48088),
                s = n(16441),
                l = n(93684),
                u = n(67827),
                c = n(86507),
                d = n(38197),
                h = n(6881),
                f = n(5634),
                p = n(67669),
                m = n(81964),
                g = n(45659),
                v = n(83875),
                y = n(1581),
                b = function(e, r, n, i) {
                    return new(n || (n = Promise))(function(o, a) {
                        function s(e) {
                            try {
                                u(i.next(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function l(e) {
                            try {
                                u(i.throw(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? o(e.value) : ((r = e.value) instanceof n ? r : new n(function(e) {
                                e(r)
                            })).then(s, l)
                        }
                        u((i = i.apply(e, r || [])).next())
                    })
                };
            let w = new y.Logger("wallet/5.7.0");
            class x extends a.E {
                constructor(e, r) {
                    var n;
                    if (super(), null != (n = e) && (0, s.isHexString)(n.privateKey, 32) && null != n.address) {
                        let a = new p.SigningKey(e.privateKey);
                        if ((0, h.defineReadOnly)(this, "_signingKey", () => a), (0, h.defineReadOnly)(this, "address", (0, v.computeAddress)(this.publicKey)), this.address !== (0, i.getAddress)(e.address) && w.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]"), function(e) {
                                let r = e.mnemonic;
                                return r && r.phrase
                            }(e)) {
                            let l = e.mnemonic;
                            (0, h.defineReadOnly)(this, "_mnemonic", () => ({
                                phrase: l.phrase,
                                path: l.path || c.defaultPath,
                                locale: l.locale || "en"
                            }));
                            let u = this.mnemonic,
                                d = c.HDNode.fromMnemonic(u.phrase, null, u.locale).derivePath(u.path);
                            (0, v.computeAddress)(d.privateKey) !== this.address && w.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]")
                        } else(0, h.defineReadOnly)(this, "_mnemonic", () => null)
                    } else {
                        if (p.SigningKey.isSigningKey(e)) "secp256k1" !== e.curve && w.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]"), (0, h.defineReadOnly)(this, "_signingKey", () => e);
                        else {
                            "string" == typeof e && e.match(/^[0-9a-f]*$/i) && 64 === e.length && (e = "0x" + e);
                            let f = new p.SigningKey(e);
                            (0, h.defineReadOnly)(this, "_signingKey", () => f)
                        }(0, h.defineReadOnly)(this, "_mnemonic", () => null), (0, h.defineReadOnly)(this, "address", (0, v.computeAddress)(this.publicKey))
                    }
                    r && !o.zt.isProvider(r) && w.throwArgumentError("invalid provider", "provider", r), (0, h.defineReadOnly)(this, "provider", r || null)
                }
                get mnemonic() {
                    return this._mnemonic()
                }
                get privateKey() {
                    return this._signingKey().privateKey
                }
                get publicKey() {
                    return this._signingKey().publicKey
                }
                getAddress() {
                    return Promise.resolve(this.address)
                }
                connect(e) {
                    return new x(this, e)
                }
                signTransaction(e) {
                    return (0, h.resolveProperties)(e).then(r => {
                        null != r.from && ((0, i.getAddress)(r.from) !== this.address && w.throwArgumentError("transaction from address mismatch", "transaction.from", e.from), delete r.from);
                        let n = this._signingKey().signDigest((0, d.keccak256)((0, v.serialize)(r)));
                        return (0, v.serialize)(r, n)
                    })
                }
                signMessage(e) {
                    return b(this, void 0, void 0, function*() {
                        return (0, s.joinSignature)(this._signingKey().signDigest((0, l.r)(e)))
                    })
                }
                _signTypedData(e, r, n) {
                    return b(this, void 0, void 0, function*() {
                        let i = yield u.E.resolveNames(e, r, n, e => (null == this.provider && w.throwError("cannot resolve ENS names without a provider", y.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "resolveName",
                            value: e
                        }), this.provider.resolveName(e)));
                        return (0, s.joinSignature)(this._signingKey().signDigest(u.E.hash(i.domain, r, i.value)))
                    })
                }
                encrypt(e, r, n) {
                    if ("function" != typeof r || n || (n = r, r = {}), n && "function" != typeof n) throw Error("invalid callback");
                    return r || (r = {}), (0, m.HI)(this, e, r, n)
                }
                static createRandom(e) {
                    let r = (0, f.O)(16);
                    e || (e = {}), e.extraEntropy && (r = (0, s.arrayify)((0, s.hexDataSlice)((0, d.keccak256)((0, s.concat)([r, e.extraEntropy])), 0, 16)));
                    let n = (0, c.entropyToMnemonic)(r, e.locale);
                    return x.fromMnemonic(n, e.path, e.locale)
                }
                static fromEncryptedJson(e, r, n) {
                    return (0, g.decryptJsonWallet)(e, r, n).then(e => new x(e))
                }
                static fromEncryptedJsonSync(e, r) {
                    return new x((0, g.decryptJsonWalletSync)(e, r))
                }
                static fromMnemonic(e, r, n) {
                    return r || (r = c.defaultPath), new x(c.HDNode.fromMnemonic(e, null, n).derivePath(r))
                }
            }

            function E(e, r) {
                return (0, v.recoverAddress)((0, l.r)(e), r)
            }

            function C(e, r, n, i) {
                return (0, v.recoverAddress)(u.E.hash(e, r, n), i)
            }
        },
        37707: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                _fetchData: function() {
                    return h
                },
                fetchJson: function() {
                    return f
                },
                poll: function() {
                    return p
                }
            });
            var i = n(59567),
                o = n(16441),
                a = n(6881),
                s = n(29251),
                l = n(1581);
            let u = new l.Logger("web/5.7.1");

            function c(e) {
                return new Promise(r => {
                    setTimeout(r, e)
                })
            }

            function d(e, r) {
                if (null == e) return null;
                if ("string" == typeof e) return e;
                if ((0, o.isBytesLike)(e)) {
                    if (r && ("text" === r.split("/")[0] || "application/json" === r.split(";")[0].trim())) try {
                        return (0, s.ZN)(e)
                    } catch (n) {}
                    return (0, o.hexlify)(e)
                }
                return e
            }

            function h(e, r, n) {
                let h = "object" == typeof e && null != e.throttleLimit ? e.throttleLimit : 12;
                u.assertArgument(h > 0 && h % 1 == 0, "invalid connection throttle limit", "connection.throttleLimit", h);
                let f = "object" == typeof e ? e.throttleCallback : null,
                    p = "object" == typeof e && "number" == typeof e.throttleSlotInterval ? e.throttleSlotInterval : 100;
                u.assertArgument(p > 0 && p % 1 == 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", p);
                let m = "object" == typeof e && !!e.errorPassThrough,
                    g = {},
                    v = null,
                    y = {
                        method: "GET"
                    },
                    b = !1,
                    w = 12e4;
                if ("string" == typeof e) v = e;
                else if ("object" == typeof e) {
                    if ((null == e || null == e.url) && u.throwArgumentError("missing URL", "connection.url", e), v = e.url, "number" == typeof e.timeout && e.timeout > 0 && (w = e.timeout), e.headers)
                        for (let x in e.headers) g[x.toLowerCase()] = {
                            key: x,
                            value: String(e.headers[x])
                        }, ["if-none-match", "if-modified-since"].indexOf(x.toLowerCase()) >= 0 && (b = !0);
                    if (y.allowGzip = !!e.allowGzip, null != e.user && null != e.password) {
                        "https:" !== v.substring(0, 6) && !0 !== e.allowInsecureAuthentication && u.throwError("basic authentication requires a secure https url", l.Logger.errors.INVALID_ARGUMENT, {
                            argument: "url",
                            url: v,
                            user: e.user,
                            password: "[REDACTED]"
                        });
                        let E = e.user + ":" + e.password;
                        g.authorization = {
                            key: "Authorization",
                            value: "Basic " + (0, i.c)((0, s.Y0)(E))
                        }
                    }
                    null != e.skipFetchSetup && (y.skipFetchSetup = !!e.skipFetchSetup), null != e.fetchOptions && (y.fetchOptions = (0, a.shallowCopy)(e.fetchOptions))
                }
                let C = RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"),
                    A = v ? v.match(C) : null;
                if (A) try {
                    var k;
                    let S = {
                            statusCode: 200,
                            statusMessage: "OK",
                            headers: {
                                "content-type": A[1] || "text/plain"
                            },
                            body: A[2] ? (0, i.J)(A[3]) : (k = A[3], (0, s.Y0)(k.replace(/%([0-9a-f][0-9a-f])/gi, (e, r) => String.fromCharCode(parseInt(r, 16)))))
                        },
                        _ = S.body;
                    return n && (_ = n(S.body, S)), Promise.resolve(_)
                } catch (P) {
                    u.throwError("processing response error", l.Logger.errors.SERVER_ERROR, {
                        body: d(A[1], A[2]),
                        error: P,
                        requestBody: null,
                        requestMethod: "GET",
                        url: v
                    })
                }
                r && (y.method = "POST", y.body = r, null == g["content-type"] && (g["content-type"] = {
                    key: "Content-Type",
                    value: "application/octet-stream"
                }), null == g["content-length"] && (g["content-length"] = {
                    key: "Content-Length",
                    value: String(r.length)
                }));
                let j = {};
                Object.keys(g).forEach(e => {
                    let r = g[e];
                    j[r.key] = r.value
                }), y.headers = j;
                let T = function() {
                        let e = null,
                            r = new Promise(function(r, n) {
                                w && (e = setTimeout(() => {
                                    null != e && (e = null, n(u.makeError("timeout", l.Logger.errors.TIMEOUT, {
                                        requestBody: d(y.body, j["content-type"]),
                                        requestMethod: y.method,
                                        timeout: w,
                                        url: v
                                    })))
                                }, w))
                            });
                        return {
                            promise: r,
                            cancel: function() {
                                null != e && (clearTimeout(e), e = null)
                            }
                        }
                    }(),
                    R = function() {
                        var e, r, i, a;
                        return e = this, r = void 0, i = void 0, a = function*() {
                            for (let e = 0; e < h; e++) {
                                let r = null;
                                try {
                                    if (r = yield function(e, r) {
                                            var n, i, a, s;
                                            return n = this, i = void 0, a = void 0, s = function*() {
                                                null == r && (r = {});
                                                let n = {
                                                    method: r.method || "GET",
                                                    headers: r.headers || {},
                                                    body: r.body || void 0
                                                };
                                                if (!0 !== r.skipFetchSetup && (n.mode = "cors", n.cache = "no-cache", n.credentials = "same-origin", n.redirect = "follow", n.referrer = "client"), null != r.fetchOptions) {
                                                    let i = r.fetchOptions;
                                                    i.mode && (n.mode = i.mode), i.cache && (n.cache = i.cache), i.credentials && (n.credentials = i.credentials), i.redirect && (n.redirect = i.redirect), i.referrer && (n.referrer = i.referrer)
                                                }
                                                let a = yield fetch(e, n), s = yield a.arrayBuffer(), l = {};
                                                return a.headers.forEach ? a.headers.forEach((e, r) => {
                                                    l[r.toLowerCase()] = e
                                                }) : a.headers.keys().forEach(e => {
                                                    l[e.toLowerCase()] = a.headers.get(e)
                                                }), {
                                                    headers: l,
                                                    statusCode: a.status,
                                                    statusMessage: a.statusText,
                                                    body: (0, o.arrayify)(new Uint8Array(s))
                                                }
                                            }, new(a || (a = Promise))(function(e, r) {
                                                function o(e) {
                                                    try {
                                                        u(s.next(e))
                                                    } catch (n) {
                                                        r(n)
                                                    }
                                                }

                                                function l(e) {
                                                    try {
                                                        u(s.throw(e))
                                                    } catch (n) {
                                                        r(n)
                                                    }
                                                }

                                                function u(r) {
                                                    var n;
                                                    r.done ? e(r.value) : ((n = r.value) instanceof a ? n : new a(function(e) {
                                                        e(n)
                                                    })).then(o, l)
                                                }
                                                u((s = s.apply(n, i || [])).next())
                                            })
                                        }(v, y), e < h) {
                                        if (301 === r.statusCode || 302 === r.statusCode) {
                                            let i = r.headers.location || "";
                                            if ("GET" === y.method && i.match(/^https:/)) {
                                                v = r.headers.location;
                                                continue
                                            }
                                        } else if (429 === r.statusCode) {
                                            let a = !0;
                                            if (f && (a = yield f(e, v)), a) {
                                                let s = r.headers["retry-after"];
                                                yield c("string" == typeof s && s.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(s) : p * parseInt(String(Math.random() * Math.pow(2, e))));
                                                continue
                                            }
                                        }
                                    }
                                } catch (g) {
                                    null == (r = g.response) && (T.cancel(), u.throwError("missing response", l.Logger.errors.SERVER_ERROR, {
                                        requestBody: d(y.body, j["content-type"]),
                                        requestMethod: y.method,
                                        serverError: g,
                                        url: v
                                    }))
                                }
                                let w = r.body;
                                if (b && 304 === r.statusCode ? w = null : !m && (r.statusCode < 200 || r.statusCode >= 300) && (T.cancel(), u.throwError("bad response", l.Logger.errors.SERVER_ERROR, {
                                        status: r.statusCode,
                                        headers: r.headers,
                                        body: d(w, r.headers ? r.headers["content-type"] : null),
                                        requestBody: d(y.body, j["content-type"]),
                                        requestMethod: y.method,
                                        url: v
                                    })), n) try {
                                    let x = yield n(w, r);
                                    return T.cancel(), x
                                } catch (A) {
                                    if (A.throttleRetry && e < h) {
                                        let E = !0;
                                        if (f && (E = yield f(e, v)), E) {
                                            let C = p * parseInt(String(Math.random() * Math.pow(2, e)));
                                            yield c(C);
                                            continue
                                        }
                                    }
                                    T.cancel(), u.throwError("processing response error", l.Logger.errors.SERVER_ERROR, {
                                        body: d(w, r.headers ? r.headers["content-type"] : null),
                                        error: A,
                                        requestBody: d(y.body, j["content-type"]),
                                        requestMethod: y.method,
                                        url: v
                                    })
                                }
                                return T.cancel(), w
                            }
                            return u.throwError("failed response", l.Logger.errors.SERVER_ERROR, {
                                requestBody: d(y.body, j["content-type"]),
                                requestMethod: y.method,
                                url: v
                            })
                        }, new(i || (i = Promise))(function(n, o) {
                            function s(e) {
                                try {
                                    u(a.next(e))
                                } catch (r) {
                                    o(r)
                                }
                            }

                            function l(e) {
                                try {
                                    u(a.throw(e))
                                } catch (r) {
                                    o(r)
                                }
                            }

                            function u(e) {
                                var r;
                                e.done ? n(e.value) : ((r = e.value) instanceof i ? r : new i(function(e) {
                                    e(r)
                                })).then(s, l)
                            }
                            u((a = a.apply(e, r || [])).next())
                        })
                    }();
                return Promise.race([T.promise, R])
            }

            function f(e, r, n) {
                let i = (e, r) => {
                        let i = null;
                        if (null != e) try {
                            i = JSON.parse((0, s.ZN)(e))
                        } catch (o) {
                            u.throwError("invalid JSON", l.Logger.errors.SERVER_ERROR, {
                                body: e,
                                error: o
                            })
                        }
                        return n && (i = n(i, r)), i
                    },
                    o = null;
                if (null != r) {
                    o = (0, s.Y0)(r);
                    let c = "string" == typeof e ? {
                        url: e
                    } : (0, a.shallowCopy)(e);
                    if (c.headers) {
                        let d = 0 !== Object.keys(c.headers).filter(e => "content-type" === e.toLowerCase()).length;
                        d || (c.headers = (0, a.shallowCopy)(c.headers), c.headers["content-type"] = "application/json")
                    } else c.headers = {
                        "content-type": "application/json"
                    };
                    e = c
                }
                return h(e, o, i)
            }

            function p(e, r) {
                return r || (r = {}), null == (r = (0, a.shallowCopy)(r)).floor && (r.floor = 0), null == r.ceiling && (r.ceiling = 1e4), null == r.interval && (r.interval = 250), new Promise(function(n, i) {
                    let o = null,
                        a = !1,
                        s = () => !a && (a = !0, o && clearTimeout(o), !0);
                    r.timeout && (o = setTimeout(() => {
                        s() && i(Error("timeout"))
                    }, r.timeout));
                    let l = r.retryLimit,
                        u = 0;
                    ! function o() {
                        return e().then(function(e) {
                            if (void 0 !== e) s() && n(e);
                            else if (r.oncePoll) r.oncePoll.once("poll", o);
                            else if (r.onceBlock) r.onceBlock.once("block", o);
                            else if (!a) {
                                if (++u > l) {
                                    s() && i(Error("retry limit reached"));
                                    return
                                }
                                let c = r.interval * parseInt(String(Math.random() * Math.pow(2, u)));
                                c < r.floor && (c = r.floor), c > r.ceiling && (c = r.ceiling), setTimeout(o, c)
                            }
                            return null
                        }, function(e) {
                            s() && i(e)
                        })
                    }()
                })
            }
        },
        78826: function(e) {
            "use strict";
            ! function(r) {
                function n(e) {
                    return parseInt(e) === e
                }

                function i(e) {
                    if (!n(e.length)) return !1;
                    for (var r = 0; r < e.length; r++)
                        if (!n(e[r]) || e[r] < 0 || e[r] > 255) return !1;
                    return !0
                }

                function o(e, r) {
                    if (e.buffer && ArrayBuffer.isView(e) && "Uint8Array" === e.name) return r && (e = e.slice ? e.slice() : Array.prototype.slice.call(e)), e;
                    if (Array.isArray(e)) {
                        if (!i(e)) throw Error("Array contains invalid value: " + e);
                        return new Uint8Array(e)
                    }
                    if (n(e.length) && i(e)) return new Uint8Array(e);
                    throw Error("unsupported array-like object")
                }

                function a(e) {
                    return new Uint8Array(e)
                }

                function s(e, r, n, i, o) {
                    (null != i || null != o) && (e = e.slice ? e.slice(i, o) : Array.prototype.slice.call(e, i, o)), r.set(e, n)
                }
                var l, u = (l = "0123456789abcdef", {
                        toBytes: function(e) {
                            for (var r = [], n = 0; n < e.length; n += 2) r.push(parseInt(e.substr(n, 2), 16));
                            return r
                        },
                        fromBytes: function(e) {
                            for (var r = [], n = 0; n < e.length; n++) {
                                var i = e[n];
                                r.push(l[(240 & i) >> 4] + l[15 & i])
                            }
                            return r.join("")
                        }
                    }),
                    c = {
                        16: 10,
                        24: 12,
                        32: 14
                    },
                    d = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145],
                    h = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22],
                    f = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125],
                    p = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986],
                    m = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766],
                    g = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126],
                    v = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436],
                    y = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890],
                    b = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935],
                    w = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600],
                    x = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480],
                    E = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795],
                    C = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855],
                    A = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150],
                    k = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];

                function S(e) {
                    for (var r = [], n = 0; n < e.length; n += 4) r.push(e[n] << 24 | e[n + 1] << 16 | e[n + 2] << 8 | e[n + 3]);
                    return r
                }
                var _ = function(e) {
                    if (!(this instanceof _)) throw Error("AES must be instanitated with `new`");
                    Object.defineProperty(this, "key", {
                        value: o(e, !0)
                    }), this._prepare()
                };
                _.prototype._prepare = function() {
                    var e = c[this.key.length];
                    if (null == e) throw Error("invalid key size (must be 16, 24 or 32 bytes)");
                    this._Ke = [], this._Kd = [];
                    for (var r = 0; r <= e; r++) this._Ke.push([0, 0, 0, 0]), this._Kd.push([0, 0, 0, 0]);
                    for (var n = (e + 1) * 4, i = this.key.length / 4, o = S(this.key), r = 0; r < i; r++) a = r >> 2, this._Ke[a][r % 4] = o[r], this._Kd[e - a][r % 4] = o[r];
                    for (var a, s, l = 0, u = i; u < n;) {
                        if (s = o[i - 1], o[0] ^= h[s >> 16 & 255] << 24 ^ h[s >> 8 & 255] << 16 ^ h[255 & s] << 8 ^ h[s >> 24 & 255] ^ d[l] << 24, l += 1, 8 != i)
                            for (var r = 1; r < i; r++) o[r] ^= o[r - 1];
                        else {
                            for (var r = 1; r < i / 2; r++) o[r] ^= o[r - 1];
                            s = o[i / 2 - 1], o[i / 2] ^= h[255 & s] ^ h[s >> 8 & 255] << 8 ^ h[s >> 16 & 255] << 16 ^ h[s >> 24 & 255] << 24;
                            for (var r = i / 2 + 1; r < i; r++) o[r] ^= o[r - 1]
                        }
                        for (var f, p, r = 0; r < i && u < n;) f = u >> 2, p = u % 4, this._Ke[f][p] = o[r], this._Kd[e - f][p] = o[r++], u++
                    }
                    for (var f = 1; f < e; f++)
                        for (var p = 0; p < 4; p++) s = this._Kd[f][p], this._Kd[f][p] = E[s >> 24 & 255] ^ C[s >> 16 & 255] ^ A[s >> 8 & 255] ^ k[255 & s]
                }, _.prototype.encrypt = function(e) {
                    if (16 != e.length) throw Error("invalid plaintext size (must be 16 bytes)");
                    for (var r = this._Ke.length - 1, n = [0, 0, 0, 0], i = S(e), o = 0; o < 4; o++) i[o] ^= this._Ke[0][o];
                    for (var s = 1; s < r; s++) {
                        for (var o = 0; o < 4; o++) n[o] = p[i[o] >> 24 & 255] ^ m[i[(o + 1) % 4] >> 16 & 255] ^ g[i[(o + 2) % 4] >> 8 & 255] ^ v[255 & i[(o + 3) % 4]] ^ this._Ke[s][o];
                        i = n.slice()
                    }
                    for (var l, u = a(16), o = 0; o < 4; o++) l = this._Ke[r][o], u[4 * o] = (h[i[o] >> 24 & 255] ^ l >> 24) & 255, u[4 * o + 1] = (h[i[(o + 1) % 4] >> 16 & 255] ^ l >> 16) & 255, u[4 * o + 2] = (h[i[(o + 2) % 4] >> 8 & 255] ^ l >> 8) & 255, u[4 * o + 3] = (h[255 & i[(o + 3) % 4]] ^ l) & 255;
                    return u
                }, _.prototype.decrypt = function(e) {
                    if (16 != e.length) throw Error("invalid ciphertext size (must be 16 bytes)");
                    for (var r = this._Kd.length - 1, n = [0, 0, 0, 0], i = S(e), o = 0; o < 4; o++) i[o] ^= this._Kd[0][o];
                    for (var s = 1; s < r; s++) {
                        for (var o = 0; o < 4; o++) n[o] = y[i[o] >> 24 & 255] ^ b[i[(o + 3) % 4] >> 16 & 255] ^ w[i[(o + 2) % 4] >> 8 & 255] ^ x[255 & i[(o + 1) % 4]] ^ this._Kd[s][o];
                        i = n.slice()
                    }
                    for (var l, u = a(16), o = 0; o < 4; o++) l = this._Kd[r][o], u[4 * o] = (f[i[o] >> 24 & 255] ^ l >> 24) & 255, u[4 * o + 1] = (f[i[(o + 3) % 4] >> 16 & 255] ^ l >> 16) & 255, u[4 * o + 2] = (f[i[(o + 2) % 4] >> 8 & 255] ^ l >> 8) & 255, u[4 * o + 3] = (f[255 & i[(o + 1) % 4]] ^ l) & 255;
                    return u
                };
                var P = function(e) {
                    if (!(this instanceof P)) throw Error("AES must be instanitated with `new`");
                    this.description = "Electronic Code Block", this.name = "ecb", this._aes = new _(e)
                };
                P.prototype.encrypt = function(e) {
                    if ((e = o(e)).length % 16 != 0) throw Error("invalid plaintext size (must be multiple of 16 bytes)");
                    for (var r = a(e.length), n = a(16), i = 0; i < e.length; i += 16) s(e, n, 0, i, i + 16), s(n = this._aes.encrypt(n), r, i);
                    return r
                }, P.prototype.decrypt = function(e) {
                    if ((e = o(e)).length % 16 != 0) throw Error("invalid ciphertext size (must be multiple of 16 bytes)");
                    for (var r = a(e.length), n = a(16), i = 0; i < e.length; i += 16) s(e, n, 0, i, i + 16), s(n = this._aes.decrypt(n), r, i);
                    return r
                };
                var j = function(e, r) {
                    if (!(this instanceof j)) throw Error("AES must be instanitated with `new`");
                    if (this.description = "Cipher Block Chaining", this.name = "cbc", r) {
                        if (16 != r.length) throw Error("invalid initialation vector size (must be 16 bytes)")
                    } else r = a(16);
                    this._lastCipherblock = o(r, !0), this._aes = new _(e)
                };
                j.prototype.encrypt = function(e) {
                    if ((e = o(e)).length % 16 != 0) throw Error("invalid plaintext size (must be multiple of 16 bytes)");
                    for (var r = a(e.length), n = a(16), i = 0; i < e.length; i += 16) {
                        s(e, n, 0, i, i + 16);
                        for (var l = 0; l < 16; l++) n[l] ^= this._lastCipherblock[l];
                        this._lastCipherblock = this._aes.encrypt(n), s(this._lastCipherblock, r, i)
                    }
                    return r
                }, j.prototype.decrypt = function(e) {
                    if ((e = o(e)).length % 16 != 0) throw Error("invalid ciphertext size (must be multiple of 16 bytes)");
                    for (var r = a(e.length), n = a(16), i = 0; i < e.length; i += 16) {
                        s(e, n, 0, i, i + 16), n = this._aes.decrypt(n);
                        for (var l = 0; l < 16; l++) r[i + l] = n[l] ^ this._lastCipherblock[l];
                        s(e, this._lastCipherblock, 0, i, i + 16)
                    }
                    return r
                };
                var T = function(e, r, n) {
                    if (!(this instanceof T)) throw Error("AES must be instanitated with `new`");
                    if (this.description = "Cipher Feedback", this.name = "cfb", r) {
                        if (16 != r.length) throw Error("invalid initialation vector size (must be 16 size)")
                    } else r = a(16);
                    n || (n = 1), this.segmentSize = n, this._shiftRegister = o(r, !0), this._aes = new _(e)
                };
                T.prototype.encrypt = function(e) {
                    if (e.length % this.segmentSize != 0) throw Error("invalid plaintext size (must be segmentSize bytes)");
                    for (var r, n = o(e, !0), i = 0; i < n.length; i += this.segmentSize) {
                        r = this._aes.encrypt(this._shiftRegister);
                        for (var a = 0; a < this.segmentSize; a++) n[i + a] ^= r[a];
                        s(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), s(n, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize)
                    }
                    return n
                }, T.prototype.decrypt = function(e) {
                    if (e.length % this.segmentSize != 0) throw Error("invalid ciphertext size (must be segmentSize bytes)");
                    for (var r, n = o(e, !0), i = 0; i < n.length; i += this.segmentSize) {
                        r = this._aes.encrypt(this._shiftRegister);
                        for (var a = 0; a < this.segmentSize; a++) n[i + a] ^= r[a];
                        s(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), s(e, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize)
                    }
                    return n
                };
                var R = function(e, r) {
                    if (!(this instanceof R)) throw Error("AES must be instanitated with `new`");
                    if (this.description = "Output Feedback", this.name = "ofb", r) {
                        if (16 != r.length) throw Error("invalid initialation vector size (must be 16 bytes)")
                    } else r = a(16);
                    this._lastPrecipher = o(r, !0), this._lastPrecipherIndex = 16, this._aes = new _(e)
                };
                R.prototype.encrypt = function(e) {
                    for (var r = o(e, !0), n = 0; n < r.length; n++) 16 === this._lastPrecipherIndex && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher), this._lastPrecipherIndex = 0), r[n] ^= this._lastPrecipher[this._lastPrecipherIndex++];
                    return r
                }, R.prototype.decrypt = R.prototype.encrypt;
                var B = function(e) {
                    if (!(this instanceof B)) throw Error("Counter must be instanitated with `new`");
                    0 === e || e || (e = 1), "number" == typeof e ? (this._counter = a(16), this.setValue(e)) : this.setBytes(e)
                };
                B.prototype.setValue = function(e) {
                    if ("number" != typeof e || parseInt(e) != e) throw Error("invalid counter value (must be an integer)");
                    for (var r = 15; r >= 0; --r) this._counter[r] = e % 256, e >>= 8
                }, B.prototype.setBytes = function(e) {
                    if (16 != (e = o(e, !0)).length) throw Error("invalid counter bytes size (must be 16 bytes)");
                    this._counter = e
                }, B.prototype.increment = function() {
                    for (var e = 15; e >= 0; e--)
                        if (255 === this._counter[e]) this._counter[e] = 0;
                        else {
                            this._counter[e]++;
                            break
                        }
                };
                var O = function(e, r) {
                    if (!(this instanceof O)) throw Error("AES must be instanitated with `new`");
                    this.description = "Counter", this.name = "ctr", r instanceof B || (r = new B(r)), this._counter = r, this._remainingCounter = null, this._remainingCounterIndex = 16, this._aes = new _(e)
                };
                O.prototype.encrypt = function(e) {
                    for (var r = o(e, !0), n = 0; n < r.length; n++) 16 === this._remainingCounterIndex && (this._remainingCounter = this._aes.encrypt(this._counter._counter), this._remainingCounterIndex = 0, this._counter.increment()), r[n] ^= this._remainingCounter[this._remainingCounterIndex++];
                    return r
                }, O.prototype.decrypt = O.prototype.encrypt, e.exports = {
                    AES: _,
                    Counter: B,
                    ModeOfOperation: {
                        ecb: P,
                        cbc: j,
                        cfb: T,
                        ofb: R,
                        ctr: O
                    },
                    utils: {
                        hex: u,
                        utf8: {
                            toBytes: function(e) {
                                var r = [],
                                    n = 0;
                                for (e = encodeURI(e); n < e.length;) {
                                    var i = e.charCodeAt(n++);
                                    37 === i ? (r.push(parseInt(e.substr(n, 2), 16)), n += 2) : r.push(i)
                                }
                                return o(r)
                            },
                            fromBytes: function(e) {
                                for (var r = [], n = 0; n < e.length;) {
                                    var i = e[n];
                                    i < 128 ? (r.push(String.fromCharCode(i)), n++) : i > 191 && i < 224 ? (r.push(String.fromCharCode((31 & i) << 6 | 63 & e[n + 1])), n += 2) : (r.push(String.fromCharCode((15 & i) << 12 | (63 & e[n + 1]) << 6 | 63 & e[n + 2])), n += 3)
                                }
                                return r.join("")
                            }
                        }
                    },
                    padding: {
                        pkcs7: {
                            pad: function(e) {
                                var r = 16 - (e = o(e, !0)).length % 16,
                                    n = a(e.length + r);
                                s(e, n);
                                for (var i = e.length; i < n.length; i++) n[i] = r;
                                return n
                            },
                            strip: function(e) {
                                if ((e = o(e, !0)).length < 16) throw Error("PKCS#7 invalid length");
                                var r = e[e.length - 1];
                                if (r > 16) throw Error("PKCS#7 padding byte out of range");
                                for (var n = e.length - r, i = 0; i < r; i++)
                                    if (e[n + i] !== r) throw Error("PKCS#7 invalid padding byte");
                                var l = a(n);
                                return s(e, l, 0, 0, n), l
                            }
                        }
                    },
                    _arrayTest: {
                        coerceArray: o,
                        createArray: a,
                        copyArray: s
                    }
                }
            }(0)
        },
        92882: function(e) {
            "use strict";
            for (var r = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", n = {}, i = 0; i < r.length; i++) {
                var o = r.charAt(i);
                if (void 0 !== n[o]) throw TypeError(o + " is ambiguous");
                n[o] = i
            }

            function a(e) {
                var r = e >> 25;
                return (33554431 & e) << 5 ^ 996825010 & -(r >> 0 & 1) ^ 642813549 & -(r >> 1 & 1) ^ 513874426 & -(r >> 2 & 1) ^ 1027748829 & -(r >> 3 & 1) ^ 705979059 & -(r >> 4 & 1)
            }

            function s(e) {
                for (var r = 1, n = 0; n < e.length; ++n) {
                    var i = e.charCodeAt(n);
                    if (i < 33 || i > 126) return "Invalid prefix (" + e + ")";
                    r = a(r) ^ i >> 5
                }
                for (n = 0, r = a(r); n < e.length; ++n) {
                    var o = e.charCodeAt(n);
                    r = a(r) ^ 31 & o
                }
                return r
            }

            function l(e, r) {
                if (r = r || 90, e.length < 8) return e + " too short";
                if (e.length > r) return "Exceeds length limit";
                var i = e.toLowerCase(),
                    o = e.toUpperCase();
                if (e !== i && e !== o) return "Mixed-case string " + e;
                var l = (e = i).lastIndexOf("1");
                if (-1 === l) return "No separator character for " + e;
                if (0 === l) return "Missing prefix for " + e;
                var u = e.slice(0, l),
                    c = e.slice(l + 1);
                if (c.length < 6) return "Data too short";
                var d = s(u);
                if ("string" == typeof d) return d;
                for (var h = [], f = 0; f < c.length; ++f) {
                    var p = c.charAt(f),
                        m = n[p];
                    if (void 0 === m) return "Unknown character " + p;
                    d = a(d) ^ m, f + 6 >= c.length || h.push(m)
                }
                return 1 !== d ? "Invalid checksum for " + e : {
                    prefix: u,
                    words: h
                }
            }

            function u(e, r, n, i) {
                for (var o = 0, a = 0, s = (1 << n) - 1, l = [], u = 0; u < e.length; ++u)
                    for (o = o << r | e[u], a += r; a >= n;) l.push(o >> (a -= n) & s);
                if (i) a > 0 && l.push(o << n - a & s);
                else {
                    if (a >= r) return "Excess padding";
                    if (o << n - a & s) return "Non-zero padding"
                }
                return l
            }
            e.exports = {
                decodeUnsafe: function() {
                    var e = l.apply(null, arguments);
                    if ("object" == typeof e) return e
                },
                decode: function(e) {
                    var r = l.apply(null, arguments);
                    if ("object" == typeof r) return r;
                    throw Error(r)
                },
                encode: function(e, n, i) {
                    if (i = i || 90, e.length + 7 + n.length > i) throw TypeError("Exceeds length limit");
                    var o = s(e = e.toLowerCase());
                    if ("string" == typeof o) throw Error(o);
                    for (var l = e + "1", u = 0; u < n.length; ++u) {
                        var c = n[u];
                        if (c >> 5 != 0) throw Error("Non 5-bit word");
                        o = a(o) ^ c, l += r.charAt(c)
                    }
                    for (u = 0; u < 6; ++u) o = a(o);
                    for (o ^= 1, u = 0; u < 6; ++u) {
                        var d = o >> (5 - u) * 5 & 31;
                        l += r.charAt(d)
                    }
                    return l
                },
                toWordsUnsafe: function(e) {
                    var r = u(e, 8, 5, !0);
                    if (Array.isArray(r)) return r
                },
                toWords: function(e) {
                    var r = u(e, 8, 5, !0);
                    if (Array.isArray(r)) return r;
                    throw Error(r)
                },
                fromWordsUnsafe: function(e) {
                    var r = u(e, 5, 8, !1);
                    if (Array.isArray(r)) return r
                },
                fromWords: function(e) {
                    var r = u(e, 5, 8, !1);
                    if (Array.isArray(r)) return r;
                    throw Error(r)
                }
            }
        },
        13550: function(e, r, n) {
            ! function(e, r) {
                "use strict";

                function i(e, r) {
                    if (!e) throw Error(r || "Assertion failed")
                }

                function o(e, r) {
                    e.super_ = r;
                    var n = function() {};
                    n.prototype = r.prototype, e.prototype = new n, e.prototype.constructor = e
                }

                function a(e, r, n) {
                    if (a.isBN(e)) return e;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== e && (("le" === r || "be" === r) && (n = r, r = 10), this._init(e || 0, r || 10, n || "be"))
                }
                "object" == typeof e ? e.exports = a : r.BN = a, a.BN = a, a.wordSize = 26;
                try {
                    p = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : n(46601).Buffer
                } catch (s) {}

                function l(e, r) {
                    var n = e.charCodeAt(r);
                    return n >= 48 && n <= 57 ? n - 48 : n >= 65 && n <= 70 ? n - 55 : n >= 97 && n <= 102 ? n - 87 : void i(!1, "Invalid character in " + e)
                }

                function u(e, r, n) {
                    var i = l(e, n);
                    return n - 1 >= r && (i |= l(e, n - 1) << 4), i
                }

                function c(e, r, n, o) {
                    for (var a = 0, s = 0, l = Math.min(e.length, n), u = r; u < l; u++) {
                        var c = e.charCodeAt(u) - 48;
                        a *= o, s = c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c, i(c >= 0 && s < o, "Invalid character"), a += s
                    }
                    return a
                }

                function d(e, r) {
                    e.words = r.words, e.length = r.length, e.negative = r.negative, e.red = r.red
                }
                if (a.isBN = function(e) {
                        return e instanceof a || null !== e && "object" == typeof e && e.constructor.wordSize === a.wordSize && Array.isArray(e.words)
                    }, a.max = function(e, r) {
                        return e.cmp(r) > 0 ? e : r
                    }, a.min = function(e, r) {
                        return 0 > e.cmp(r) ? e : r
                    }, a.prototype._init = function(e, r, n) {
                        if ("number" == typeof e) return this._initNumber(e, r, n);
                        if ("object" == typeof e) return this._initArray(e, r, n);
                        "hex" === r && (r = 16), i(r === (0 | r) && r >= 2 && r <= 36);
                        var o = 0;
                        "-" === (e = e.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < e.length && (16 === r ? this._parseHex(e, o, n) : (this._parseBase(e, r, o), "le" === n && this._initArray(this.toArray(), r, n)))
                    }, a.prototype._initNumber = function(e, r, n) {
                        e < 0 && (this.negative = 1, e = -e), e < 67108864 ? (this.words = [67108863 & e], this.length = 1) : e < 4503599627370496 ? (this.words = [67108863 & e, e / 67108864 & 67108863], this.length = 2) : (i(e < 9007199254740992), this.words = [67108863 & e, e / 67108864 & 67108863, 1], this.length = 3), "le" === n && this._initArray(this.toArray(), r, n)
                    }, a.prototype._initArray = function(e, r, n) {
                        if (i("number" == typeof e.length), e.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(e.length / 3), this.words = Array(this.length);
                        for (var o, a, s = 0; s < this.length; s++) this.words[s] = 0;
                        var l = 0;
                        if ("be" === n)
                            for (s = e.length - 1, o = 0; s >= 0; s -= 3) a = e[s] | e[s - 1] << 8 | e[s - 2] << 16, this.words[o] |= a << l & 67108863, this.words[o + 1] = a >>> 26 - l & 67108863, (l += 24) >= 26 && (l -= 26, o++);
                        else if ("le" === n)
                            for (s = 0, o = 0; s < e.length; s += 3) a = e[s] | e[s + 1] << 8 | e[s + 2] << 16, this.words[o] |= a << l & 67108863, this.words[o + 1] = a >>> 26 - l & 67108863, (l += 24) >= 26 && (l -= 26, o++);
                        return this._strip()
                    }, a.prototype._parseHex = function(e, r, n) {
                        this.length = Math.ceil((e.length - r) / 6), this.words = Array(this.length);
                        for (var i, o = 0; o < this.length; o++) this.words[o] = 0;
                        var a = 0,
                            s = 0;
                        if ("be" === n)
                            for (o = e.length - 1; o >= r; o -= 2) i = u(e, r, o) << a, this.words[s] |= 67108863 & i, a >= 18 ? (a -= 18, s += 1, this.words[s] |= i >>> 26) : a += 8;
                        else
                            for (o = (e.length - r) % 2 == 0 ? r + 1 : r; o < e.length; o += 2) i = u(e, r, o) << a, this.words[s] |= 67108863 & i, a >= 18 ? (a -= 18, s += 1, this.words[s] |= i >>> 26) : a += 8;
                        this._strip()
                    }, a.prototype._parseBase = function(e, r, n) {
                        this.words = [0], this.length = 1;
                        for (var i = 0, o = 1; o <= 67108863; o *= r) i++;
                        i--, o = o / r | 0;
                        for (var a = e.length - n, s = a % i, l = Math.min(a, a - s) + n, u = 0, d = n; d < l; d += i) u = c(e, d, d + i, r), this.imuln(o), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var h = 1;
                            for (u = c(e, d, e.length, r), d = 0; d < s; d++) h *= r;
                            this.imuln(h), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                        }
                        this._strip()
                    }, a.prototype.copy = function(e) {
                        e.words = Array(this.length);
                        for (var r = 0; r < this.length; r++) e.words[r] = this.words[r];
                        e.length = this.length, e.negative = this.negative, e.red = this.red
                    }, a.prototype._move = function(e) {
                        d(e, this)
                    }, a.prototype.clone = function() {
                        var e = new a(null);
                        return this.copy(e), e
                    }, a.prototype._expand = function(e) {
                        for (; this.length < e;) this.words[this.length++] = 0;
                        return this
                    }, a.prototype._strip = function() {
                        for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                        return this._normSign()
                    }, a.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                    a.prototype[Symbol.for("nodejs.util.inspect.custom")] = f
                } catch (h) {
                    a.prototype.inspect = f
                } else a.prototype.inspect = f;

                function f() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                }
                var p, m = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    g = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    v = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function y(e, r, n) {
                    n.negative = r.negative ^ e.negative;
                    var i = e.length + r.length | 0;
                    n.length = i, i = i - 1 | 0;
                    var o = 0 | e.words[0],
                        a = 0 | r.words[0],
                        s = o * a,
                        l = 67108863 & s,
                        u = s / 67108864 | 0;
                    n.words[0] = l;
                    for (var c = 1; c < i; c++) {
                        for (var d = u >>> 26, h = 67108863 & u, f = Math.min(c, r.length - 1), p = Math.max(0, c - e.length + 1); p <= f; p++) {
                            var m = c - p | 0;
                            d += (s = (o = 0 | e.words[m]) * (a = 0 | r.words[p]) + h) / 67108864 | 0, h = 67108863 & s
                        }
                        n.words[c] = 0 | h, u = 0 | d
                    }
                    return 0 !== u ? n.words[c] = 0 | u : n.length--, n._strip()
                }
                a.prototype.toString = function(e, r) {
                    if (r = 0 | r || 1, 16 === (e = e || 10) || "hex" === e) {
                        n = "";
                        for (var n, o = 0, a = 0, s = 0; s < this.length; s++) {
                            var l = this.words[s],
                                u = ((l << o | a) & 16777215).toString(16);
                            a = l >>> 24 - o & 16777215, (o += 2) >= 26 && (o -= 26, s--), n = 0 !== a || s !== this.length - 1 ? m[6 - u.length] + u + n : u + n
                        }
                        for (0 !== a && (n = a.toString(16) + n); n.length % r != 0;) n = "0" + n;
                        return 0 !== this.negative && (n = "-" + n), n
                    }
                    if (e === (0 | e) && e >= 2 && e <= 36) {
                        var c = g[e],
                            d = v[e];
                        n = "";
                        var h = this.clone();
                        for (h.negative = 0; !h.isZero();) {
                            var f = h.modrn(d).toString(e);
                            n = (h = h.idivn(d)).isZero() ? f + n : m[c - f.length] + f + n
                        }
                        for (this.isZero() && (n = "0" + n); n.length % r != 0;) n = "0" + n;
                        return 0 !== this.negative && (n = "-" + n), n
                    }
                    i(!1, "Base should be between 2 and 36")
                }, a.prototype.toNumber = function() {
                    var e = this.words[0];
                    return 2 === this.length ? e += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -e : e
                }, a.prototype.toJSON = function() {
                    return this.toString(16, 2)
                }, p && (a.prototype.toBuffer = function(e, r) {
                    return this.toArrayLike(p, e, r)
                }), a.prototype.toArray = function(e, r) {
                    return this.toArrayLike(Array, e, r)
                }, a.prototype.toArrayLike = function(e, r, n) {
                    this._strip();
                    var o = this.byteLength(),
                        a = n || Math.max(1, o);
                    i(o <= a, "byte array longer than desired length"), i(a > 0, "Requested array length <= 0");
                    var s = e.allocUnsafe ? e.allocUnsafe(a) : new e(a);
                    return this["_toArrayLike" + ("le" === r ? "LE" : "BE")](s, o), s
                }, a.prototype._toArrayLikeLE = function(e, r) {
                    for (var n = 0, i = 0, o = 0, a = 0; o < this.length; o++) {
                        var s = this.words[o] << a | i;
                        e[n++] = 255 & s, n < e.length && (e[n++] = s >> 8 & 255), n < e.length && (e[n++] = s >> 16 & 255), 6 === a ? (n < e.length && (e[n++] = s >> 24 & 255), i = 0, a = 0) : (i = s >>> 24, a += 2)
                    }
                    if (n < e.length)
                        for (e[n++] = i; n < e.length;) e[n++] = 0
                }, a.prototype._toArrayLikeBE = function(e, r) {
                    for (var n = e.length - 1, i = 0, o = 0, a = 0; o < this.length; o++) {
                        var s = this.words[o] << a | i;
                        e[n--] = 255 & s, n >= 0 && (e[n--] = s >> 8 & 255), n >= 0 && (e[n--] = s >> 16 & 255), 6 === a ? (n >= 0 && (e[n--] = s >> 24 & 255), i = 0, a = 0) : (i = s >>> 24, a += 2)
                    }
                    if (n >= 0)
                        for (e[n--] = i; n >= 0;) e[n--] = 0
                }, Math.clz32 ? a.prototype._countBits = function(e) {
                    return 32 - Math.clz32(e)
                } : a.prototype._countBits = function(e) {
                    var r = e,
                        n = 0;
                    return r >= 4096 && (n += 13, r >>>= 13), r >= 64 && (n += 7, r >>>= 7), r >= 8 && (n += 4, r >>>= 4), r >= 2 && (n += 2, r >>>= 2), n + r
                }, a.prototype._zeroBits = function(e) {
                    if (0 === e) return 26;
                    var r = e,
                        n = 0;
                    return (8191 & r) == 0 && (n += 13, r >>>= 13), (127 & r) == 0 && (n += 7, r >>>= 7), (15 & r) == 0 && (n += 4, r >>>= 4), (3 & r) == 0 && (n += 2, r >>>= 2), (1 & r) == 0 && n++, n
                }, a.prototype.bitLength = function() {
                    var e = this.words[this.length - 1],
                        r = this._countBits(e);
                    return (this.length - 1) * 26 + r
                }, a.prototype.zeroBits = function() {
                    if (this.isZero()) return 0;
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = this._zeroBits(this.words[r]);
                        if (e += n, 26 !== n) break
                    }
                    return e
                }, a.prototype.byteLength = function() {
                    return Math.ceil(this.bitLength() / 8)
                }, a.prototype.toTwos = function(e) {
                    return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone()
                }, a.prototype.fromTwos = function(e) {
                    return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone()
                }, a.prototype.isNeg = function() {
                    return 0 !== this.negative
                }, a.prototype.neg = function() {
                    return this.clone().ineg()
                }, a.prototype.ineg = function() {
                    return this.isZero() || (this.negative ^= 1), this
                }, a.prototype.iuor = function(e) {
                    for (; this.length < e.length;) this.words[this.length++] = 0;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] | e.words[r];
                    return this._strip()
                }, a.prototype.ior = function(e) {
                    return i((this.negative | e.negative) == 0), this.iuor(e)
                }, a.prototype.or = function(e) {
                    return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this)
                }, a.prototype.uor = function(e) {
                    return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this)
                }, a.prototype.iuand = function(e) {
                    var r;
                    r = this.length > e.length ? e : this;
                    for (var n = 0; n < r.length; n++) this.words[n] = this.words[n] & e.words[n];
                    return this.length = r.length, this._strip()
                }, a.prototype.iand = function(e) {
                    return i((this.negative | e.negative) == 0), this.iuand(e)
                }, a.prototype.and = function(e) {
                    return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this)
                }, a.prototype.uand = function(e) {
                    return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this)
                }, a.prototype.iuxor = function(e) {
                    this.length > e.length ? (r = this, n = e) : (r = e, n = this);
                    for (var r, n, i = 0; i < n.length; i++) this.words[i] = r.words[i] ^ n.words[i];
                    if (this !== r)
                        for (; i < r.length; i++) this.words[i] = r.words[i];
                    return this.length = r.length, this._strip()
                }, a.prototype.ixor = function(e) {
                    return i((this.negative | e.negative) == 0), this.iuxor(e)
                }, a.prototype.xor = function(e) {
                    return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this)
                }, a.prototype.uxor = function(e) {
                    return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this)
                }, a.prototype.inotn = function(e) {
                    i("number" == typeof e && e >= 0);
                    var r = 0 | Math.ceil(e / 26),
                        n = e % 26;
                    this._expand(r), n > 0 && r--;
                    for (var o = 0; o < r; o++) this.words[o] = 67108863 & ~this.words[o];
                    return n > 0 && (this.words[o] = ~this.words[o] & 67108863 >> 26 - n), this._strip()
                }, a.prototype.notn = function(e) {
                    return this.clone().inotn(e)
                }, a.prototype.setn = function(e, r) {
                    i("number" == typeof e && e >= 0);
                    var n = e / 26 | 0,
                        o = e % 26;
                    return this._expand(n + 1), r ? this.words[n] = this.words[n] | 1 << o : this.words[n] = this.words[n] & ~(1 << o), this._strip()
                }, a.prototype.iadd = function(e) {
                    if (0 !== this.negative && 0 === e.negative) return this.negative = 0, r = this.isub(e), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== e.negative) return e.negative = 0, r = this.isub(e), e.negative = 1, r._normSign();
                    this.length > e.length ? (n = this, i = e) : (n = e, i = this);
                    for (var r, n, i, o = 0, a = 0; a < i.length; a++) r = (0 | n.words[a]) + (0 | i.words[a]) + o, this.words[a] = 67108863 & r, o = r >>> 26;
                    for (; 0 !== o && a < n.length; a++) r = (0 | n.words[a]) + o, this.words[a] = 67108863 & r, o = r >>> 26;
                    if (this.length = n.length, 0 !== o) this.words[this.length] = o, this.length++;
                    else if (n !== this)
                        for (; a < n.length; a++) this.words[a] = n.words[a];
                    return this
                }, a.prototype.add = function(e) {
                    var r;
                    return 0 !== e.negative && 0 === this.negative ? (e.negative = 0, r = this.sub(e), e.negative ^= 1, r) : 0 === e.negative && 0 !== this.negative ? (this.negative = 0, r = e.sub(this), this.negative = 1, r) : this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this)
                }, a.prototype.isub = function(e) {
                    if (0 !== e.negative) {
                        e.negative = 0;
                        var r, n, i = this.iadd(e);
                        return e.negative = 1, i._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(e), this.negative = 1, this._normSign();
                    var o = this.cmp(e);
                    if (0 === o) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    o > 0 ? (r = this, n = e) : (r = e, n = this);
                    for (var a = 0, s = 0; s < n.length; s++) a = (i = (0 | r.words[s]) - (0 | n.words[s]) + a) >> 26, this.words[s] = 67108863 & i;
                    for (; 0 !== a && s < r.length; s++) a = (i = (0 | r.words[s]) + a) >> 26, this.words[s] = 67108863 & i;
                    if (0 === a && s < r.length && r !== this)
                        for (; s < r.length; s++) this.words[s] = r.words[s];
                    return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this._strip()
                }, a.prototype.sub = function(e) {
                    return this.clone().isub(e)
                };
                var b = function(e, r, n) {
                    var i, o, a, s = e.words,
                        l = r.words,
                        u = n.words,
                        c = 0,
                        d = 0 | s[0],
                        h = 8191 & d,
                        f = d >>> 13,
                        p = 0 | s[1],
                        m = 8191 & p,
                        g = p >>> 13,
                        v = 0 | s[2],
                        y = 8191 & v,
                        b = v >>> 13,
                        w = 0 | s[3],
                        x = 8191 & w,
                        E = w >>> 13,
                        C = 0 | s[4],
                        A = 8191 & C,
                        k = C >>> 13,
                        S = 0 | s[5],
                        _ = 8191 & S,
                        P = S >>> 13,
                        j = 0 | s[6],
                        T = 8191 & j,
                        R = j >>> 13,
                        B = 0 | s[7],
                        O = 8191 & B,
                        M = B >>> 13,
                        I = 0 | s[8],
                        N = 8191 & I,
                        F = I >>> 13,
                        L = 0 | s[9],
                        D = 8191 & L,
                        z = L >>> 13,
                        U = 0 | l[0],
                        $ = 8191 & U,
                        q = U >>> 13,
                        W = 0 | l[1],
                        V = 8191 & W,
                        H = W >>> 13,
                        G = 0 | l[2],
                        K = 8191 & G,
                        Q = G >>> 13,
                        J = 0 | l[3],
                        Y = 8191 & J,
                        X = J >>> 13,
                        Z = 0 | l[4],
                        ee = 8191 & Z,
                        et = Z >>> 13,
                        er = 0 | l[5],
                        en = 8191 & er,
                        ei = er >>> 13,
                        eo = 0 | l[6],
                        ea = 8191 & eo,
                        es = eo >>> 13,
                        el = 0 | l[7],
                        eu = 8191 & el,
                        ec = el >>> 13,
                        ed = 0 | l[8],
                        eh = 8191 & ed,
                        ef = ed >>> 13,
                        ep = 0 | l[9],
                        em = 8191 & ep,
                        eg = ep >>> 13;
                    n.negative = e.negative ^ r.negative, n.length = 19;
                    var ev = (c + (i = Math.imul(h, $)) | 0) + ((8191 & (o = (o = Math.imul(h, q)) + Math.imul(f, $) | 0)) << 13) | 0;
                    c = ((a = Math.imul(f, q)) + (o >>> 13) | 0) + (ev >>> 26) | 0, ev &= 67108863, i = Math.imul(m, $), o = (o = Math.imul(m, q)) + Math.imul(g, $) | 0, a = Math.imul(g, q);
                    var ey = (c + (i = i + Math.imul(h, V) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(h, H) | 0) + Math.imul(f, V) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(f, H) | 0) + (o >>> 13) | 0) + (ey >>> 26) | 0, ey &= 67108863, i = Math.imul(y, $), o = (o = Math.imul(y, q)) + Math.imul(b, $) | 0, a = Math.imul(b, q), i = i + Math.imul(m, V) | 0, o = (o = o + Math.imul(m, H) | 0) + Math.imul(g, V) | 0, a = a + Math.imul(g, H) | 0;
                    var eb = (c + (i = i + Math.imul(h, K) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(h, Q) | 0) + Math.imul(f, K) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(f, Q) | 0) + (o >>> 13) | 0) + (eb >>> 26) | 0, eb &= 67108863, i = Math.imul(x, $), o = (o = Math.imul(x, q)) + Math.imul(E, $) | 0, a = Math.imul(E, q), i = i + Math.imul(y, V) | 0, o = (o = o + Math.imul(y, H) | 0) + Math.imul(b, V) | 0, a = a + Math.imul(b, H) | 0, i = i + Math.imul(m, K) | 0, o = (o = o + Math.imul(m, Q) | 0) + Math.imul(g, K) | 0, a = a + Math.imul(g, Q) | 0;
                    var ew = (c + (i = i + Math.imul(h, Y) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(h, X) | 0) + Math.imul(f, Y) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(f, X) | 0) + (o >>> 13) | 0) + (ew >>> 26) | 0, ew &= 67108863, i = Math.imul(A, $), o = (o = Math.imul(A, q)) + Math.imul(k, $) | 0, a = Math.imul(k, q), i = i + Math.imul(x, V) | 0, o = (o = o + Math.imul(x, H) | 0) + Math.imul(E, V) | 0, a = a + Math.imul(E, H) | 0, i = i + Math.imul(y, K) | 0, o = (o = o + Math.imul(y, Q) | 0) + Math.imul(b, K) | 0, a = a + Math.imul(b, Q) | 0, i = i + Math.imul(m, Y) | 0, o = (o = o + Math.imul(m, X) | 0) + Math.imul(g, Y) | 0, a = a + Math.imul(g, X) | 0;
                    var ex = (c + (i = i + Math.imul(h, ee) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(h, et) | 0) + Math.imul(f, ee) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(f, et) | 0) + (o >>> 13) | 0) + (ex >>> 26) | 0, ex &= 67108863, i = Math.imul(_, $), o = (o = Math.imul(_, q)) + Math.imul(P, $) | 0, a = Math.imul(P, q), i = i + Math.imul(A, V) | 0, o = (o = o + Math.imul(A, H) | 0) + Math.imul(k, V) | 0, a = a + Math.imul(k, H) | 0, i = i + Math.imul(x, K) | 0, o = (o = o + Math.imul(x, Q) | 0) + Math.imul(E, K) | 0, a = a + Math.imul(E, Q) | 0, i = i + Math.imul(y, Y) | 0, o = (o = o + Math.imul(y, X) | 0) + Math.imul(b, Y) | 0, a = a + Math.imul(b, X) | 0, i = i + Math.imul(m, ee) | 0, o = (o = o + Math.imul(m, et) | 0) + Math.imul(g, ee) | 0, a = a + Math.imul(g, et) | 0;
                    var eE = (c + (i = i + Math.imul(h, en) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(h, ei) | 0) + Math.imul(f, en) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(f, ei) | 0) + (o >>> 13) | 0) + (eE >>> 26) | 0, eE &= 67108863, i = Math.imul(T, $), o = (o = Math.imul(T, q)) + Math.imul(R, $) | 0, a = Math.imul(R, q), i = i + Math.imul(_, V) | 0, o = (o = o + Math.imul(_, H) | 0) + Math.imul(P, V) | 0, a = a + Math.imul(P, H) | 0, i = i + Math.imul(A, K) | 0, o = (o = o + Math.imul(A, Q) | 0) + Math.imul(k, K) | 0, a = a + Math.imul(k, Q) | 0, i = i + Math.imul(x, Y) | 0, o = (o = o + Math.imul(x, X) | 0) + Math.imul(E, Y) | 0, a = a + Math.imul(E, X) | 0, i = i + Math.imul(y, ee) | 0, o = (o = o + Math.imul(y, et) | 0) + Math.imul(b, ee) | 0, a = a + Math.imul(b, et) | 0, i = i + Math.imul(m, en) | 0, o = (o = o + Math.imul(m, ei) | 0) + Math.imul(g, en) | 0, a = a + Math.imul(g, ei) | 0;
                    var eC = (c + (i = i + Math.imul(h, ea) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(h, es) | 0) + Math.imul(f, ea) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(f, es) | 0) + (o >>> 13) | 0) + (eC >>> 26) | 0, eC &= 67108863, i = Math.imul(O, $), o = (o = Math.imul(O, q)) + Math.imul(M, $) | 0, a = Math.imul(M, q), i = i + Math.imul(T, V) | 0, o = (o = o + Math.imul(T, H) | 0) + Math.imul(R, V) | 0, a = a + Math.imul(R, H) | 0, i = i + Math.imul(_, K) | 0, o = (o = o + Math.imul(_, Q) | 0) + Math.imul(P, K) | 0, a = a + Math.imul(P, Q) | 0, i = i + Math.imul(A, Y) | 0, o = (o = o + Math.imul(A, X) | 0) + Math.imul(k, Y) | 0, a = a + Math.imul(k, X) | 0, i = i + Math.imul(x, ee) | 0, o = (o = o + Math.imul(x, et) | 0) + Math.imul(E, ee) | 0, a = a + Math.imul(E, et) | 0, i = i + Math.imul(y, en) | 0, o = (o = o + Math.imul(y, ei) | 0) + Math.imul(b, en) | 0, a = a + Math.imul(b, ei) | 0, i = i + Math.imul(m, ea) | 0, o = (o = o + Math.imul(m, es) | 0) + Math.imul(g, ea) | 0, a = a + Math.imul(g, es) | 0;
                    var eA = (c + (i = i + Math.imul(h, eu) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(h, ec) | 0) + Math.imul(f, eu) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(f, ec) | 0) + (o >>> 13) | 0) + (eA >>> 26) | 0, eA &= 67108863, i = Math.imul(N, $), o = (o = Math.imul(N, q)) + Math.imul(F, $) | 0, a = Math.imul(F, q), i = i + Math.imul(O, V) | 0, o = (o = o + Math.imul(O, H) | 0) + Math.imul(M, V) | 0, a = a + Math.imul(M, H) | 0, i = i + Math.imul(T, K) | 0, o = (o = o + Math.imul(T, Q) | 0) + Math.imul(R, K) | 0, a = a + Math.imul(R, Q) | 0, i = i + Math.imul(_, Y) | 0, o = (o = o + Math.imul(_, X) | 0) + Math.imul(P, Y) | 0, a = a + Math.imul(P, X) | 0, i = i + Math.imul(A, ee) | 0, o = (o = o + Math.imul(A, et) | 0) + Math.imul(k, ee) | 0, a = a + Math.imul(k, et) | 0, i = i + Math.imul(x, en) | 0, o = (o = o + Math.imul(x, ei) | 0) + Math.imul(E, en) | 0, a = a + Math.imul(E, ei) | 0, i = i + Math.imul(y, ea) | 0, o = (o = o + Math.imul(y, es) | 0) + Math.imul(b, ea) | 0, a = a + Math.imul(b, es) | 0, i = i + Math.imul(m, eu) | 0, o = (o = o + Math.imul(m, ec) | 0) + Math.imul(g, eu) | 0, a = a + Math.imul(g, ec) | 0;
                    var ek = (c + (i = i + Math.imul(h, eh) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(h, ef) | 0) + Math.imul(f, eh) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(f, ef) | 0) + (o >>> 13) | 0) + (ek >>> 26) | 0, ek &= 67108863, i = Math.imul(D, $), o = (o = Math.imul(D, q)) + Math.imul(z, $) | 0, a = Math.imul(z, q), i = i + Math.imul(N, V) | 0, o = (o = o + Math.imul(N, H) | 0) + Math.imul(F, V) | 0, a = a + Math.imul(F, H) | 0, i = i + Math.imul(O, K) | 0, o = (o = o + Math.imul(O, Q) | 0) + Math.imul(M, K) | 0, a = a + Math.imul(M, Q) | 0, i = i + Math.imul(T, Y) | 0, o = (o = o + Math.imul(T, X) | 0) + Math.imul(R, Y) | 0, a = a + Math.imul(R, X) | 0, i = i + Math.imul(_, ee) | 0, o = (o = o + Math.imul(_, et) | 0) + Math.imul(P, ee) | 0, a = a + Math.imul(P, et) | 0, i = i + Math.imul(A, en) | 0, o = (o = o + Math.imul(A, ei) | 0) + Math.imul(k, en) | 0, a = a + Math.imul(k, ei) | 0, i = i + Math.imul(x, ea) | 0, o = (o = o + Math.imul(x, es) | 0) + Math.imul(E, ea) | 0, a = a + Math.imul(E, es) | 0, i = i + Math.imul(y, eu) | 0, o = (o = o + Math.imul(y, ec) | 0) + Math.imul(b, eu) | 0, a = a + Math.imul(b, ec) | 0, i = i + Math.imul(m, eh) | 0, o = (o = o + Math.imul(m, ef) | 0) + Math.imul(g, eh) | 0, a = a + Math.imul(g, ef) | 0;
                    var eS = (c + (i = i + Math.imul(h, em) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(h, eg) | 0) + Math.imul(f, em) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(f, eg) | 0) + (o >>> 13) | 0) + (eS >>> 26) | 0, eS &= 67108863, i = Math.imul(D, V), o = (o = Math.imul(D, H)) + Math.imul(z, V) | 0, a = Math.imul(z, H), i = i + Math.imul(N, K) | 0, o = (o = o + Math.imul(N, Q) | 0) + Math.imul(F, K) | 0, a = a + Math.imul(F, Q) | 0, i = i + Math.imul(O, Y) | 0, o = (o = o + Math.imul(O, X) | 0) + Math.imul(M, Y) | 0, a = a + Math.imul(M, X) | 0, i = i + Math.imul(T, ee) | 0, o = (o = o + Math.imul(T, et) | 0) + Math.imul(R, ee) | 0, a = a + Math.imul(R, et) | 0, i = i + Math.imul(_, en) | 0, o = (o = o + Math.imul(_, ei) | 0) + Math.imul(P, en) | 0, a = a + Math.imul(P, ei) | 0, i = i + Math.imul(A, ea) | 0, o = (o = o + Math.imul(A, es) | 0) + Math.imul(k, ea) | 0, a = a + Math.imul(k, es) | 0, i = i + Math.imul(x, eu) | 0, o = (o = o + Math.imul(x, ec) | 0) + Math.imul(E, eu) | 0, a = a + Math.imul(E, ec) | 0, i = i + Math.imul(y, eh) | 0, o = (o = o + Math.imul(y, ef) | 0) + Math.imul(b, eh) | 0, a = a + Math.imul(b, ef) | 0;
                    var e_ = (c + (i = i + Math.imul(m, em) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(m, eg) | 0) + Math.imul(g, em) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(g, eg) | 0) + (o >>> 13) | 0) + (e_ >>> 26) | 0, e_ &= 67108863, i = Math.imul(D, K), o = (o = Math.imul(D, Q)) + Math.imul(z, K) | 0, a = Math.imul(z, Q), i = i + Math.imul(N, Y) | 0, o = (o = o + Math.imul(N, X) | 0) + Math.imul(F, Y) | 0, a = a + Math.imul(F, X) | 0, i = i + Math.imul(O, ee) | 0, o = (o = o + Math.imul(O, et) | 0) + Math.imul(M, ee) | 0, a = a + Math.imul(M, et) | 0, i = i + Math.imul(T, en) | 0, o = (o = o + Math.imul(T, ei) | 0) + Math.imul(R, en) | 0, a = a + Math.imul(R, ei) | 0, i = i + Math.imul(_, ea) | 0, o = (o = o + Math.imul(_, es) | 0) + Math.imul(P, ea) | 0, a = a + Math.imul(P, es) | 0, i = i + Math.imul(A, eu) | 0, o = (o = o + Math.imul(A, ec) | 0) + Math.imul(k, eu) | 0, a = a + Math.imul(k, ec) | 0, i = i + Math.imul(x, eh) | 0, o = (o = o + Math.imul(x, ef) | 0) + Math.imul(E, eh) | 0, a = a + Math.imul(E, ef) | 0;
                    var eP = (c + (i = i + Math.imul(y, em) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(y, eg) | 0) + Math.imul(b, em) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(b, eg) | 0) + (o >>> 13) | 0) + (eP >>> 26) | 0, eP &= 67108863, i = Math.imul(D, Y), o = (o = Math.imul(D, X)) + Math.imul(z, Y) | 0, a = Math.imul(z, X), i = i + Math.imul(N, ee) | 0, o = (o = o + Math.imul(N, et) | 0) + Math.imul(F, ee) | 0, a = a + Math.imul(F, et) | 0, i = i + Math.imul(O, en) | 0, o = (o = o + Math.imul(O, ei) | 0) + Math.imul(M, en) | 0, a = a + Math.imul(M, ei) | 0, i = i + Math.imul(T, ea) | 0, o = (o = o + Math.imul(T, es) | 0) + Math.imul(R, ea) | 0, a = a + Math.imul(R, es) | 0, i = i + Math.imul(_, eu) | 0, o = (o = o + Math.imul(_, ec) | 0) + Math.imul(P, eu) | 0, a = a + Math.imul(P, ec) | 0, i = i + Math.imul(A, eh) | 0, o = (o = o + Math.imul(A, ef) | 0) + Math.imul(k, eh) | 0, a = a + Math.imul(k, ef) | 0;
                    var ej = (c + (i = i + Math.imul(x, em) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(x, eg) | 0) + Math.imul(E, em) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(E, eg) | 0) + (o >>> 13) | 0) + (ej >>> 26) | 0, ej &= 67108863, i = Math.imul(D, ee), o = (o = Math.imul(D, et)) + Math.imul(z, ee) | 0, a = Math.imul(z, et), i = i + Math.imul(N, en) | 0, o = (o = o + Math.imul(N, ei) | 0) + Math.imul(F, en) | 0, a = a + Math.imul(F, ei) | 0, i = i + Math.imul(O, ea) | 0, o = (o = o + Math.imul(O, es) | 0) + Math.imul(M, ea) | 0, a = a + Math.imul(M, es) | 0, i = i + Math.imul(T, eu) | 0, o = (o = o + Math.imul(T, ec) | 0) + Math.imul(R, eu) | 0, a = a + Math.imul(R, ec) | 0, i = i + Math.imul(_, eh) | 0, o = (o = o + Math.imul(_, ef) | 0) + Math.imul(P, eh) | 0, a = a + Math.imul(P, ef) | 0;
                    var eT = (c + (i = i + Math.imul(A, em) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(A, eg) | 0) + Math.imul(k, em) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(k, eg) | 0) + (o >>> 13) | 0) + (eT >>> 26) | 0, eT &= 67108863, i = Math.imul(D, en), o = (o = Math.imul(D, ei)) + Math.imul(z, en) | 0, a = Math.imul(z, ei), i = i + Math.imul(N, ea) | 0, o = (o = o + Math.imul(N, es) | 0) + Math.imul(F, ea) | 0, a = a + Math.imul(F, es) | 0, i = i + Math.imul(O, eu) | 0, o = (o = o + Math.imul(O, ec) | 0) + Math.imul(M, eu) | 0, a = a + Math.imul(M, ec) | 0, i = i + Math.imul(T, eh) | 0, o = (o = o + Math.imul(T, ef) | 0) + Math.imul(R, eh) | 0, a = a + Math.imul(R, ef) | 0;
                    var eR = (c + (i = i + Math.imul(_, em) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(_, eg) | 0) + Math.imul(P, em) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(P, eg) | 0) + (o >>> 13) | 0) + (eR >>> 26) | 0, eR &= 67108863, i = Math.imul(D, ea), o = (o = Math.imul(D, es)) + Math.imul(z, ea) | 0, a = Math.imul(z, es), i = i + Math.imul(N, eu) | 0, o = (o = o + Math.imul(N, ec) | 0) + Math.imul(F, eu) | 0, a = a + Math.imul(F, ec) | 0, i = i + Math.imul(O, eh) | 0, o = (o = o + Math.imul(O, ef) | 0) + Math.imul(M, eh) | 0, a = a + Math.imul(M, ef) | 0;
                    var eB = (c + (i = i + Math.imul(T, em) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(T, eg) | 0) + Math.imul(R, em) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(R, eg) | 0) + (o >>> 13) | 0) + (eB >>> 26) | 0, eB &= 67108863, i = Math.imul(D, eu), o = (o = Math.imul(D, ec)) + Math.imul(z, eu) | 0, a = Math.imul(z, ec), i = i + Math.imul(N, eh) | 0, o = (o = o + Math.imul(N, ef) | 0) + Math.imul(F, eh) | 0, a = a + Math.imul(F, ef) | 0;
                    var eO = (c + (i = i + Math.imul(O, em) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(O, eg) | 0) + Math.imul(M, em) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(M, eg) | 0) + (o >>> 13) | 0) + (eO >>> 26) | 0, eO &= 67108863, i = Math.imul(D, eh), o = (o = Math.imul(D, ef)) + Math.imul(z, eh) | 0, a = Math.imul(z, ef);
                    var eM = (c + (i = i + Math.imul(N, em) | 0) | 0) + ((8191 & (o = (o = o + Math.imul(N, eg) | 0) + Math.imul(F, em) | 0)) << 13) | 0;
                    c = ((a = a + Math.imul(F, eg) | 0) + (o >>> 13) | 0) + (eM >>> 26) | 0, eM &= 67108863;
                    var eI = (c + (i = Math.imul(D, em)) | 0) + ((8191 & (o = (o = Math.imul(D, eg)) + Math.imul(z, em) | 0)) << 13) | 0;
                    return c = ((a = Math.imul(z, eg)) + (o >>> 13) | 0) + (eI >>> 26) | 0, eI &= 67108863, u[0] = ev, u[1] = ey, u[2] = eb, u[3] = ew, u[4] = ex, u[5] = eE, u[6] = eC, u[7] = eA, u[8] = ek, u[9] = eS, u[10] = e_, u[11] = eP, u[12] = ej, u[13] = eT, u[14] = eR, u[15] = eB, u[16] = eO, u[17] = eM, u[18] = eI, 0 !== c && (u[19] = c, n.length++), n
                };

                function w(e, r, n) {
                    n.negative = r.negative ^ e.negative, n.length = e.length + r.length;
                    for (var i = 0, o = 0, a = 0; a < n.length - 1; a++) {
                        var s = o;
                        o = 0;
                        for (var l = 67108863 & i, u = Math.min(a, r.length - 1), c = Math.max(0, a - e.length + 1); c <= u; c++) {
                            var d = a - c,
                                h = (0 | e.words[d]) * (0 | r.words[c]),
                                f = 67108863 & h;
                            s = s + (h / 67108864 | 0) | 0, l = 67108863 & (f = f + l | 0), o += (s = s + (f >>> 26) | 0) >>> 26, s &= 67108863
                        }
                        n.words[a] = l, i = s, s = o
                    }
                    return 0 !== i ? n.words[a] = i : n.length--, n._strip()
                }

                function x(e, r) {
                    this.x = e, this.y = r
                }
                Math.imul || (b = y), a.prototype.mulTo = function(e, r) {
                    var n, i = this.length + e.length;
                    return 10 === this.length && 10 === e.length ? b(this, e, r) : i < 63 ? y(this, e, r) : w(this, e, r)
                }, x.prototype.makeRBT = function(e) {
                    for (var r = Array(e), n = a.prototype._countBits(e) - 1, i = 0; i < e; i++) r[i] = this.revBin(i, n, e);
                    return r
                }, x.prototype.revBin = function(e, r, n) {
                    if (0 === e || e === n - 1) return e;
                    for (var i = 0, o = 0; o < r; o++) i |= (1 & e) << r - o - 1, e >>= 1;
                    return i
                }, x.prototype.permute = function(e, r, n, i, o, a) {
                    for (var s = 0; s < a; s++) i[s] = r[e[s]], o[s] = n[e[s]]
                }, x.prototype.transform = function(e, r, n, i, o, a) {
                    this.permute(a, e, r, n, i, o);
                    for (var s = 1; s < o; s <<= 1)
                        for (var l = s << 1, u = Math.cos(2 * Math.PI / l), c = Math.sin(2 * Math.PI / l), d = 0; d < o; d += l)
                            for (var h = u, f = c, p = 0; p < s; p++) {
                                var m = n[d + p],
                                    g = i[d + p],
                                    v = n[d + p + s],
                                    y = i[d + p + s],
                                    b = h * v - f * y;
                                y = h * y + f * v, v = b, n[d + p] = m + v, i[d + p] = g + y, n[d + p + s] = m - v, i[d + p + s] = g - y, p !== l && (b = u * h - c * f, f = u * f + c * h, h = b)
                            }
                }, x.prototype.guessLen13b = function(e, r) {
                    var n = 1 | Math.max(r, e),
                        i = 1 & n,
                        o = 0;
                    for (n = n / 2 | 0; n; n >>>= 1) o++;
                    return 1 << o + 1 + i
                }, x.prototype.conjugate = function(e, r, n) {
                    if (!(n <= 1))
                        for (var i = 0; i < n / 2; i++) {
                            var o = e[i];
                            e[i] = e[n - i - 1], e[n - i - 1] = o, o = r[i], r[i] = -r[n - i - 1], r[n - i - 1] = -o
                        }
                }, x.prototype.normalize13b = function(e, r) {
                    for (var n = 0, i = 0; i < r / 2; i++) {
                        var o = 8192 * Math.round(e[2 * i + 1] / r) + Math.round(e[2 * i] / r) + n;
                        e[i] = 67108863 & o, n = o < 67108864 ? 0 : o / 67108864 | 0
                    }
                    return e
                }, x.prototype.convert13b = function(e, r, n, o) {
                    for (var a = 0, s = 0; s < r; s++) a += 0 | e[s], n[2 * s] = 8191 & a, a >>>= 13, n[2 * s + 1] = 8191 & a, a >>>= 13;
                    for (s = 2 * r; s < o; ++s) n[s] = 0;
                    i(0 === a), i((-8192 & a) == 0)
                }, x.prototype.stub = function(e) {
                    for (var r = Array(e), n = 0; n < e; n++) r[n] = 0;
                    return r
                }, x.prototype.mulp = function(e, r, n) {
                    var i = 2 * this.guessLen13b(e.length, r.length),
                        o = this.makeRBT(i),
                        a = this.stub(i),
                        s = Array(i),
                        l = Array(i),
                        u = Array(i),
                        c = Array(i),
                        d = Array(i),
                        h = Array(i),
                        f = n.words;
                    f.length = i, this.convert13b(e.words, e.length, s, i), this.convert13b(r.words, r.length, c, i), this.transform(s, a, l, u, i, o), this.transform(c, a, d, h, i, o);
                    for (var p = 0; p < i; p++) {
                        var m = l[p] * d[p] - u[p] * h[p];
                        u[p] = l[p] * h[p] + u[p] * d[p], l[p] = m
                    }
                    return this.conjugate(l, u, i), this.transform(l, u, f, a, i, o), this.conjugate(f, a, i), this.normalize13b(f, i), n.negative = e.negative ^ r.negative, n.length = e.length + r.length, n._strip()
                }, a.prototype.mul = function(e) {
                    var r = new a(null);
                    return r.words = Array(this.length + e.length), this.mulTo(e, r)
                }, a.prototype.mulf = function(e) {
                    var r = new a(null);
                    return r.words = Array(this.length + e.length), w(this, e, r)
                }, a.prototype.imul = function(e) {
                    return this.clone().mulTo(e, this)
                }, a.prototype.imuln = function(e) {
                    var r = e < 0;
                    r && (e = -e), i("number" == typeof e), i(e < 67108864);
                    for (var n = 0, o = 0; o < this.length; o++) {
                        var a = (0 | this.words[o]) * e,
                            s = (67108863 & a) + (67108863 & n);
                        n >>= 26, n += (a / 67108864 | 0) + (s >>> 26), this.words[o] = 67108863 & s
                    }
                    return 0 !== n && (this.words[o] = n, this.length++), r ? this.ineg() : this
                }, a.prototype.muln = function(e) {
                    return this.clone().imuln(e)
                }, a.prototype.sqr = function() {
                    return this.mul(this)
                }, a.prototype.isqr = function() {
                    return this.imul(this.clone())
                }, a.prototype.pow = function(e) {
                    var r = function(e) {
                        for (var r = Array(e.bitLength()), n = 0; n < r.length; n++) {
                            var i = n / 26 | 0,
                                o = n % 26;
                            r[n] = e.words[i] >>> o & 1
                        }
                        return r
                    }(e);
                    if (0 === r.length) return new a(1);
                    for (var n = this, i = 0; i < r.length && 0 === r[i]; i++, n = n.sqr());
                    if (++i < r.length)
                        for (var o = n.sqr(); i < r.length; i++, o = o.sqr()) 0 !== r[i] && (n = n.mul(o));
                    return n
                }, a.prototype.iushln = function(e) {
                    i("number" == typeof e && e >= 0);
                    var r, n = e % 26,
                        o = (e - n) / 26,
                        a = 67108863 >>> 26 - n << 26 - n;
                    if (0 !== n) {
                        var s = 0;
                        for (r = 0; r < this.length; r++) {
                            var l = this.words[r] & a,
                                u = (0 | this.words[r]) - l << n;
                            this.words[r] = u | s, s = l >>> 26 - n
                        }
                        s && (this.words[r] = s, this.length++)
                    }
                    if (0 !== o) {
                        for (r = this.length - 1; r >= 0; r--) this.words[r + o] = this.words[r];
                        for (r = 0; r < o; r++) this.words[r] = 0;
                        this.length += o
                    }
                    return this._strip()
                }, a.prototype.ishln = function(e) {
                    return i(0 === this.negative), this.iushln(e)
                }, a.prototype.iushrn = function(e, r, n) {
                    i("number" == typeof e && e >= 0), o = r ? (r - r % 26) / 26 : 0;
                    var o, a = e % 26,
                        s = Math.min((e - a) / 26, this.length),
                        l = 67108863 ^ 67108863 >>> a << a,
                        u = n;
                    if (o -= s, o = Math.max(0, o), u) {
                        for (var c = 0; c < s; c++) u.words[c] = this.words[c];
                        u.length = s
                    }
                    if (0 === s);
                    else if (this.length > s)
                        for (this.length -= s, c = 0; c < this.length; c++) this.words[c] = this.words[c + s];
                    else this.words[0] = 0, this.length = 1;
                    var d = 0;
                    for (c = this.length - 1; c >= 0 && (0 !== d || c >= o); c--) {
                        var h = 0 | this.words[c];
                        this.words[c] = d << 26 - a | h >>> a, d = h & l
                    }
                    return u && 0 !== d && (u.words[u.length++] = d), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip()
                }, a.prototype.ishrn = function(e, r, n) {
                    return i(0 === this.negative), this.iushrn(e, r, n)
                }, a.prototype.shln = function(e) {
                    return this.clone().ishln(e)
                }, a.prototype.ushln = function(e) {
                    return this.clone().iushln(e)
                }, a.prototype.shrn = function(e) {
                    return this.clone().ishrn(e)
                }, a.prototype.ushrn = function(e) {
                    return this.clone().iushrn(e)
                }, a.prototype.testn = function(e) {
                    i("number" == typeof e && e >= 0);
                    var r = e % 26,
                        n = (e - r) / 26;
                    return !(this.length <= n) && !!(this.words[n] & 1 << r)
                }, a.prototype.imaskn = function(e) {
                    i("number" == typeof e && e >= 0);
                    var r = e % 26,
                        n = (e - r) / 26;
                    return (i(0 === this.negative, "imaskn works only with positive numbers"), this.length <= n) ? this : (0 !== r && n++, this.length = Math.min(n, this.length), 0 !== r && (this.words[this.length - 1] &= 67108863 ^ 67108863 >>> r << r), this._strip())
                }, a.prototype.maskn = function(e) {
                    return this.clone().imaskn(e)
                }, a.prototype.iaddn = function(e) {
                    return (i("number" == typeof e), i(e < 67108864), e < 0) ? this.isubn(-e) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= e ? (this.words[0] = e - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(e), this.negative = 1, this) : this._iaddn(e)
                }, a.prototype._iaddn = function(e) {
                    this.words[0] += e;
                    for (var r = 0; r < this.length && this.words[r] >= 67108864; r++) this.words[r] -= 67108864, r === this.length - 1 ? this.words[r + 1] = 1 : this.words[r + 1]++;
                    return this.length = Math.max(this.length, r + 1), this
                }, a.prototype.isubn = function(e) {
                    if (i("number" == typeof e), i(e < 67108864), e < 0) return this.iaddn(-e);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(e), this.negative = 1, this;
                    if (this.words[0] -= e, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var r = 0; r < this.length && this.words[r] < 0; r++) this.words[r] += 67108864, this.words[r + 1] -= 1;
                    return this._strip()
                }, a.prototype.addn = function(e) {
                    return this.clone().iaddn(e)
                }, a.prototype.subn = function(e) {
                    return this.clone().isubn(e)
                }, a.prototype.iabs = function() {
                    return this.negative = 0, this
                }, a.prototype.abs = function() {
                    return this.clone().iabs()
                }, a.prototype._ishlnsubmul = function(e, r, n) {
                    var o, a, s = e.length + n;
                    this._expand(s);
                    var l = 0;
                    for (o = 0; o < e.length; o++) {
                        a = (0 | this.words[o + n]) + l;
                        var u = (0 | e.words[o]) * r;
                        a -= 67108863 & u, l = (a >> 26) - (u / 67108864 | 0), this.words[o + n] = 67108863 & a
                    }
                    for (; o < this.length - n; o++) l = (a = (0 | this.words[o + n]) + l) >> 26, this.words[o + n] = 67108863 & a;
                    if (0 === l) return this._strip();
                    for (i(-1 === l), l = 0, o = 0; o < this.length; o++) l = (a = -(0 | this.words[o]) + l) >> 26, this.words[o] = 67108863 & a;
                    return this.negative = 1, this._strip()
                }, a.prototype._wordDiv = function(e, r) {
                    var n, i = this.length - e.length,
                        o = this.clone(),
                        s = e,
                        l = 0 | s.words[s.length - 1];
                    0 != (i = 26 - this._countBits(l)) && (s = s.ushln(i), o.iushln(i), l = 0 | s.words[s.length - 1]);
                    var u = o.length - s.length;
                    if ("mod" !== r) {
                        (n = new a(null)).length = u + 1, n.words = Array(n.length);
                        for (var c = 0; c < n.length; c++) n.words[c] = 0
                    }
                    var d = o.clone()._ishlnsubmul(s, 1, u);
                    0 === d.negative && (o = d, n && (n.words[u] = 1));
                    for (var h = u - 1; h >= 0; h--) {
                        var f = (0 | o.words[s.length + h]) * 67108864 + (0 | o.words[s.length + h - 1]);
                        for (f = Math.min(f / l | 0, 67108863), o._ishlnsubmul(s, f, h); 0 !== o.negative;) f--, o.negative = 0, o._ishlnsubmul(s, 1, h), o.isZero() || (o.negative ^= 1);
                        n && (n.words[h] = f)
                    }
                    return n && n._strip(), o._strip(), "div" !== r && 0 !== i && o.iushrn(i), {
                        div: n || null,
                        mod: o
                    }
                }, a.prototype.divmod = function(e, r, n) {
                    var o, s, l;
                    return (i(!e.isZero()), this.isZero()) ? {
                        div: new a(0),
                        mod: new a(0)
                    } : 0 !== this.negative && 0 === e.negative ? (l = this.neg().divmod(e, r), "mod" !== r && (o = l.div.neg()), "div" !== r && (s = l.mod.neg(), n && 0 !== s.negative && s.iadd(e)), {
                        div: o,
                        mod: s
                    }) : 0 === this.negative && 0 !== e.negative ? (l = this.divmod(e.neg(), r), "mod" !== r && (o = l.div.neg()), {
                        div: o,
                        mod: l.mod
                    }) : (this.negative & e.negative) != 0 ? (l = this.neg().divmod(e.neg(), r), "div" !== r && (s = l.mod.neg(), n && 0 !== s.negative && s.isub(e)), {
                        div: l.div,
                        mod: s
                    }) : e.length > this.length || 0 > this.cmp(e) ? {
                        div: new a(0),
                        mod: this
                    } : 1 === e.length ? "div" === r ? {
                        div: this.divn(e.words[0]),
                        mod: null
                    } : "mod" === r ? {
                        div: null,
                        mod: new a(this.modrn(e.words[0]))
                    } : {
                        div: this.divn(e.words[0]),
                        mod: new a(this.modrn(e.words[0]))
                    } : this._wordDiv(e, r)
                }, a.prototype.div = function(e) {
                    return this.divmod(e, "div", !1).div
                }, a.prototype.mod = function(e) {
                    return this.divmod(e, "mod", !1).mod
                }, a.prototype.umod = function(e) {
                    return this.divmod(e, "mod", !0).mod
                }, a.prototype.divRound = function(e) {
                    var r = this.divmod(e);
                    if (r.mod.isZero()) return r.div;
                    var n = 0 !== r.div.negative ? r.mod.isub(e) : r.mod,
                        i = e.ushrn(1),
                        o = e.andln(1),
                        a = n.cmp(i);
                    return a < 0 || 1 === o && 0 === a ? r.div : 0 !== r.div.negative ? r.div.isubn(1) : r.div.iaddn(1)
                }, a.prototype.modrn = function(e) {
                    var r = e < 0;
                    r && (e = -e), i(e <= 67108863);
                    for (var n = 67108864 % e, o = 0, a = this.length - 1; a >= 0; a--) o = (n * o + (0 | this.words[a])) % e;
                    return r ? -o : o
                }, a.prototype.modn = function(e) {
                    return this.modrn(e)
                }, a.prototype.idivn = function(e) {
                    var r = e < 0;
                    r && (e = -e), i(e <= 67108863);
                    for (var n = 0, o = this.length - 1; o >= 0; o--) {
                        var a = (0 | this.words[o]) + 67108864 * n;
                        this.words[o] = a / e | 0, n = a % e
                    }
                    return this._strip(), r ? this.ineg() : this
                }, a.prototype.divn = function(e) {
                    return this.clone().idivn(e)
                }, a.prototype.egcd = function(e) {
                    i(0 === e.negative), i(!e.isZero());
                    var r = this,
                        n = e.clone();
                    r = 0 !== r.negative ? r.umod(e) : r.clone();
                    for (var o = new a(1), s = new a(0), l = new a(0), u = new a(1), c = 0; r.isEven() && n.isEven();) r.iushrn(1), n.iushrn(1), ++c;
                    for (var d = n.clone(), h = r.clone(); !r.isZero();) {
                        for (var f = 0, p = 1;
                            (r.words[0] & p) == 0 && f < 26; ++f, p <<= 1);
                        if (f > 0)
                            for (r.iushrn(f); f-- > 0;)(o.isOdd() || s.isOdd()) && (o.iadd(d), s.isub(h)), o.iushrn(1), s.iushrn(1);
                        for (var m = 0, g = 1;
                            (n.words[0] & g) == 0 && m < 26; ++m, g <<= 1);
                        if (m > 0)
                            for (n.iushrn(m); m-- > 0;)(l.isOdd() || u.isOdd()) && (l.iadd(d), u.isub(h)), l.iushrn(1), u.iushrn(1);
                        r.cmp(n) >= 0 ? (r.isub(n), o.isub(l), s.isub(u)) : (n.isub(r), l.isub(o), u.isub(s))
                    }
                    return {
                        a: l,
                        b: u,
                        gcd: n.iushln(c)
                    }
                }, a.prototype._invmp = function(e) {
                    i(0 === e.negative), i(!e.isZero());
                    var r, n = this,
                        o = e.clone();
                    n = 0 !== n.negative ? n.umod(e) : n.clone();
                    for (var s = new a(1), l = new a(0), u = o.clone(); n.cmpn(1) > 0 && o.cmpn(1) > 0;) {
                        for (var c = 0, d = 1;
                            (n.words[0] & d) == 0 && c < 26; ++c, d <<= 1);
                        if (c > 0)
                            for (n.iushrn(c); c-- > 0;) s.isOdd() && s.iadd(u), s.iushrn(1);
                        for (var h = 0, f = 1;
                            (o.words[0] & f) == 0 && h < 26; ++h, f <<= 1);
                        if (h > 0)
                            for (o.iushrn(h); h-- > 0;) l.isOdd() && l.iadd(u), l.iushrn(1);
                        n.cmp(o) >= 0 ? (n.isub(o), s.isub(l)) : (o.isub(n), l.isub(s))
                    }
                    return 0 > (r = 0 === n.cmpn(1) ? s : l).cmpn(0) && r.iadd(e), r
                }, a.prototype.gcd = function(e) {
                    if (this.isZero()) return e.abs();
                    if (e.isZero()) return this.abs();
                    var r = this.clone(),
                        n = e.clone();
                    r.negative = 0, n.negative = 0;
                    for (var i = 0; r.isEven() && n.isEven(); i++) r.iushrn(1), n.iushrn(1);
                    for (;;) {
                        for (; r.isEven();) r.iushrn(1);
                        for (; n.isEven();) n.iushrn(1);
                        var o = r.cmp(n);
                        if (o < 0) {
                            var a = r;
                            r = n, n = a
                        } else if (0 === o || 0 === n.cmpn(1)) break;
                        r.isub(n)
                    }
                    return n.iushln(i)
                }, a.prototype.invm = function(e) {
                    return this.egcd(e).a.umod(e)
                }, a.prototype.isEven = function() {
                    return (1 & this.words[0]) == 0
                }, a.prototype.isOdd = function() {
                    return (1 & this.words[0]) == 1
                }, a.prototype.andln = function(e) {
                    return this.words[0] & e
                }, a.prototype.bincn = function(e) {
                    i("number" == typeof e);
                    var r = e % 26,
                        n = (e - r) / 26,
                        o = 1 << r;
                    if (this.length <= n) return this._expand(n + 1), this.words[n] |= o, this;
                    for (var a = o, s = n; 0 !== a && s < this.length; s++) {
                        var l = 0 | this.words[s];
                        l += a, a = l >>> 26, l &= 67108863, this.words[s] = l
                    }
                    return 0 !== a && (this.words[s] = a, this.length++), this
                }, a.prototype.isZero = function() {
                    return 1 === this.length && 0 === this.words[0]
                }, a.prototype.cmpn = function(e) {
                    var r, n = e < 0;
                    if (0 !== this.negative && !n) return -1;
                    if (0 === this.negative && n) return 1;
                    if (this._strip(), this.length > 1) r = 1;
                    else {
                        n && (e = -e), i(e <= 67108863, "Number is too big");
                        var o = 0 | this.words[0];
                        r = o === e ? 0 : o < e ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -r : r
                }, a.prototype.cmp = function(e) {
                    if (0 !== this.negative && 0 === e.negative) return -1;
                    if (0 === this.negative && 0 !== e.negative) return 1;
                    var r = this.ucmp(e);
                    return 0 !== this.negative ? 0 | -r : r
                }, a.prototype.ucmp = function(e) {
                    if (this.length > e.length) return 1;
                    if (this.length < e.length) return -1;
                    for (var r = 0, n = this.length - 1; n >= 0; n--) {
                        var i = 0 | this.words[n],
                            o = 0 | e.words[n];
                        if (i !== o) {
                            i < o ? r = -1 : i > o && (r = 1);
                            break
                        }
                    }
                    return r
                }, a.prototype.gtn = function(e) {
                    return 1 === this.cmpn(e)
                }, a.prototype.gt = function(e) {
                    return 1 === this.cmp(e)
                }, a.prototype.gten = function(e) {
                    return this.cmpn(e) >= 0
                }, a.prototype.gte = function(e) {
                    return this.cmp(e) >= 0
                }, a.prototype.ltn = function(e) {
                    return -1 === this.cmpn(e)
                }, a.prototype.lt = function(e) {
                    return -1 === this.cmp(e)
                }, a.prototype.lten = function(e) {
                    return 0 >= this.cmpn(e)
                }, a.prototype.lte = function(e) {
                    return 0 >= this.cmp(e)
                }, a.prototype.eqn = function(e) {
                    return 0 === this.cmpn(e)
                }, a.prototype.eq = function(e) {
                    return 0 === this.cmp(e)
                }, a.red = function(e) {
                    return new P(e)
                }, a.prototype.toRed = function(e) {
                    return i(!this.red, "Already a number in reduction context"), i(0 === this.negative, "red works only with positives"), e.convertTo(this)._forceRed(e)
                }, a.prototype.fromRed = function() {
                    return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, a.prototype._forceRed = function(e) {
                    return this.red = e, this
                }, a.prototype.forceRed = function(e) {
                    return i(!this.red, "Already a number in reduction context"), this._forceRed(e)
                }, a.prototype.redAdd = function(e) {
                    return i(this.red, "redAdd works only with red numbers"), this.red.add(this, e)
                }, a.prototype.redIAdd = function(e) {
                    return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, e)
                }, a.prototype.redSub = function(e) {
                    return i(this.red, "redSub works only with red numbers"), this.red.sub(this, e)
                }, a.prototype.redISub = function(e) {
                    return i(this.red, "redISub works only with red numbers"), this.red.isub(this, e)
                }, a.prototype.redShl = function(e) {
                    return i(this.red, "redShl works only with red numbers"), this.red.shl(this, e)
                }, a.prototype.redMul = function(e) {
                    return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.mul(this, e)
                }, a.prototype.redIMul = function(e) {
                    return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.imul(this, e)
                }, a.prototype.redSqr = function() {
                    return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, a.prototype.redISqr = function() {
                    return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, a.prototype.redSqrt = function() {
                    return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, a.prototype.redInvm = function() {
                    return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, a.prototype.redNeg = function() {
                    return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, a.prototype.redPow = function(e) {
                    return i(this.red && !e.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, e)
                };
                var E = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function C(e, r) {
                    this.name = e, this.p = new a(r, 16), this.n = this.p.bitLength(), this.k = new a(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function A() {
                    C.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function k() {
                    C.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function S() {
                    C.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function _() {
                    C.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function P(e) {
                    if ("string" == typeof e) {
                        var r = a._prime(e);
                        this.m = r.p, this.prime = r
                    } else i(e.gtn(1), "modulus must be greater than 1"), this.m = e, this.prime = null
                }

                function j(e) {
                    P.call(this, e), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new a(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                C.prototype._tmp = function() {
                    var e = new a(null);
                    return e.words = Array(Math.ceil(this.n / 13)), e
                }, C.prototype.ireduce = function(e) {
                    var r, n = e;
                    do this.split(n, this.tmp), r = (n = (n = this.imulK(n)).iadd(this.tmp)).bitLength(); while (r > this.n);
                    var i = r < this.n ? -1 : n.ucmp(this.p);
                    return 0 === i ? (n.words[0] = 0, n.length = 1) : i > 0 ? n.isub(this.p) : void 0 !== n.strip ? n.strip() : n._strip(), n
                }, C.prototype.split = function(e, r) {
                    e.iushrn(this.n, 0, r)
                }, C.prototype.imulK = function(e) {
                    return e.imul(this.k)
                }, o(A, C), A.prototype.split = function(e, r) {
                    for (var n = Math.min(e.length, 9), i = 0; i < n; i++) r.words[i] = e.words[i];
                    if (r.length = n, e.length <= 9) {
                        e.words[0] = 0, e.length = 1;
                        return
                    }
                    var o = e.words[9];
                    for (i = 10, r.words[r.length++] = 4194303 & o; i < e.length; i++) {
                        var a = 0 | e.words[i];
                        e.words[i - 10] = (4194303 & a) << 4 | o >>> 22, o = a
                    }
                    o >>>= 22, e.words[i - 10] = o, 0 === o && e.length > 10 ? e.length -= 10 : e.length -= 9
                }, A.prototype.imulK = function(e) {
                    e.words[e.length] = 0, e.words[e.length + 1] = 0, e.length += 2;
                    for (var r = 0, n = 0; n < e.length; n++) {
                        var i = 0 | e.words[n];
                        r += 977 * i, e.words[n] = 67108863 & r, r = 64 * i + (r / 67108864 | 0)
                    }
                    return 0 === e.words[e.length - 1] && (e.length--, 0 === e.words[e.length - 1] && e.length--), e
                }, o(k, C), o(S, C), o(_, C), _.prototype.imulK = function(e) {
                    for (var r = 0, n = 0; n < e.length; n++) {
                        var i = (0 | e.words[n]) * 19 + r,
                            o = 67108863 & i;
                        i >>>= 26, e.words[n] = o, r = i
                    }
                    return 0 !== r && (e.words[e.length++] = r), e
                }, a._prime = function(e) {
                    var r;
                    if (E[e]) return E[e];
                    if ("k256" === e) r = new A;
                    else if ("p224" === e) r = new k;
                    else if ("p192" === e) r = new S;
                    else if ("p25519" === e) r = new _;
                    else throw Error("Unknown prime " + e);
                    return E[e] = r, r
                }, P.prototype._verify1 = function(e) {
                    i(0 === e.negative, "red works only with positives"), i(e.red, "red works only with red numbers")
                }, P.prototype._verify2 = function(e, r) {
                    i((e.negative | r.negative) == 0, "red works only with positives"), i(e.red && e.red === r.red, "red works only with red numbers")
                }, P.prototype.imod = function(e) {
                    return this.prime ? this.prime.ireduce(e)._forceRed(this) : (d(e, e.umod(this.m)._forceRed(this)), e)
                }, P.prototype.neg = function(e) {
                    return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this)
                }, P.prototype.add = function(e, r) {
                    this._verify2(e, r);
                    var n = e.add(r);
                    return n.cmp(this.m) >= 0 && n.isub(this.m), n._forceRed(this)
                }, P.prototype.iadd = function(e, r) {
                    this._verify2(e, r);
                    var n = e.iadd(r);
                    return n.cmp(this.m) >= 0 && n.isub(this.m), n
                }, P.prototype.sub = function(e, r) {
                    this._verify2(e, r);
                    var n = e.sub(r);
                    return 0 > n.cmpn(0) && n.iadd(this.m), n._forceRed(this)
                }, P.prototype.isub = function(e, r) {
                    this._verify2(e, r);
                    var n = e.isub(r);
                    return 0 > n.cmpn(0) && n.iadd(this.m), n
                }, P.prototype.shl = function(e, r) {
                    return this._verify1(e), this.imod(e.ushln(r))
                }, P.prototype.imul = function(e, r) {
                    return this._verify2(e, r), this.imod(e.imul(r))
                }, P.prototype.mul = function(e, r) {
                    return this._verify2(e, r), this.imod(e.mul(r))
                }, P.prototype.isqr = function(e) {
                    return this.imul(e, e.clone())
                }, P.prototype.sqr = function(e) {
                    return this.mul(e, e)
                }, P.prototype.sqrt = function(e) {
                    if (e.isZero()) return e.clone();
                    var r = this.m.andln(3);
                    if (i(r % 2 == 1), 3 === r) {
                        var n = this.m.add(new a(1)).iushrn(2);
                        return this.pow(e, n)
                    }
                    for (var o = this.m.subn(1), s = 0; !o.isZero() && 0 === o.andln(1);) s++, o.iushrn(1);
                    i(!o.isZero());
                    var l = new a(1).toRed(this),
                        u = l.redNeg(),
                        c = this.m.subn(1).iushrn(1),
                        d = this.m.bitLength();
                    for (d = new a(2 * d * d).toRed(this); 0 !== this.pow(d, c).cmp(u);) d.redIAdd(u);
                    for (var h = this.pow(d, o), f = this.pow(e, o.addn(1).iushrn(1)), p = this.pow(e, o), m = s; 0 !== p.cmp(l);) {
                        for (var g = p, v = 0; 0 !== g.cmp(l); v++) g = g.redSqr();
                        i(v < m);
                        var y = this.pow(h, new a(1).iushln(m - v - 1));
                        f = f.redMul(y), h = y.redSqr(), p = p.redMul(h), m = v
                    }
                    return f
                }, P.prototype.invm = function(e) {
                    var r = e._invmp(this.m);
                    return 0 !== r.negative ? (r.negative = 0, this.imod(r).redNeg()) : this.imod(r)
                }, P.prototype.pow = function(e, r) {
                    if (r.isZero()) return new a(1).toRed(this);
                    if (0 === r.cmpn(1)) return e.clone();
                    var n = Array(16);
                    n[0] = new a(1).toRed(this), n[1] = e;
                    for (var i = 2; i < n.length; i++) n[i] = this.mul(n[i - 1], e);
                    var o = n[0],
                        s = 0,
                        l = 0,
                        u = r.bitLength() % 26;
                    for (0 === u && (u = 26), i = r.length - 1; i >= 0; i--) {
                        for (var c = r.words[i], d = u - 1; d >= 0; d--) {
                            var h = c >> d & 1;
                            if (o !== n[0] && (o = this.sqr(o)), 0 === h && 0 === s) {
                                l = 0;
                                continue
                            }
                            s <<= 1, s |= h, (4 == ++l || 0 === i && 0 === d) && (o = this.mul(o, n[s]), l = 0, s = 0)
                        }
                        u = 26
                    }
                    return o
                }, P.prototype.convertTo = function(e) {
                    var r = e.umod(this.m);
                    return r === e ? r.clone() : r
                }, P.prototype.convertFrom = function(e) {
                    var r = e.clone();
                    return r.red = null, r
                }, a.mont = function(e) {
                    return new j(e)
                }, o(j, P), j.prototype.convertTo = function(e) {
                    return this.imod(e.ushln(this.shift))
                }, j.prototype.convertFrom = function(e) {
                    var r = this.imod(e.mul(this.rinv));
                    return r.red = null, r
                }, j.prototype.imul = function(e, r) {
                    if (e.isZero() || r.isZero()) return e.words[0] = 0, e.length = 1, e;
                    var n = e.imul(r),
                        i = n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        o = n.isub(i).iushrn(this.shift),
                        a = o;
                    return o.cmp(this.m) >= 0 ? a = o.isub(this.m) : 0 > o.cmpn(0) && (a = o.iadd(this.m)), a._forceRed(this)
                }, j.prototype.mul = function(e, r) {
                    if (e.isZero() || r.isZero()) return new a(0)._forceRed(this);
                    var n = e.mul(r),
                        i = n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        o = n.isub(i).iushrn(this.shift),
                        s = o;
                    return o.cmp(this.m) >= 0 ? s = o.isub(this.m) : 0 > o.cmpn(0) && (s = o.iadd(this.m)), s._forceRed(this)
                }, j.prototype.invm = function(e) {
                    return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(e = n.nmd(e), this)
        },
        65987: function(e) {
            "use strict";
            var r = {
                single_source_shortest_paths: function(e, n, i) {
                    var o, a, s, l, u, c, d, h = {},
                        f = {};
                    f[n] = 0;
                    var p = r.PriorityQueue.make();
                    for (p.push(n, 0); !p.empty();)
                        for (s in a = (o = p.pop()).value, l = o.cost, u = e[a] || {}) u.hasOwnProperty(s) && (c = l + u[s], d = f[s], (void 0 === f[s] || d > c) && (f[s] = c, p.push(s, c), h[s] = a));
                    if (void 0 !== i && void 0 === f[i]) throw Error(["Could not find a path from ", n, " to ", i, "."].join(""));
                    return h
                },
                extract_shortest_path_from_predecessor_list: function(e, r) {
                    for (var n = [], i = r; i;) n.push(i), e[i], i = e[i];
                    return n.reverse(), n
                },
                find_path: function(e, n, i) {
                    var o = r.single_source_shortest_paths(e, n, i);
                    return r.extract_shortest_path_from_predecessor_list(o, i)
                },
                PriorityQueue: {
                    make: function(e) {
                        var n, i = r.PriorityQueue,
                            o = {};
                        for (n in e = e || {}, i) i.hasOwnProperty(n) && (o[n] = i[n]);
                        return o.queue = [], o.sorter = e.sorter || i.default_sorter, o
                    },
                    default_sorter: function(e, r) {
                        return e.cost - r.cost
                    },
                    push: function(e, r) {
                        this.queue.push({
                            value: e,
                            cost: r
                        }), this.queue.sort(this.sorter)
                    },
                    pop: function() {
                        return this.queue.shift()
                    },
                    empty: function() {
                        return 0 === this.queue.length
                    }
                }
            };
            e.exports = r
        },
        62378: function(e) {
            "use strict";
            e.exports = function(e) {
                for (var r = [], n = e.length, i = 0; i < n; i++) {
                    var o = e.charCodeAt(i);
                    if (o >= 55296 && o <= 56319 && n > i + 1) {
                        var a = e.charCodeAt(i + 1);
                        a >= 56320 && a <= 57343 && (o = (o - 55296) * 1024 + a - 56320 + 65536, i += 1)
                    }
                    if (o < 128) {
                        r.push(o);
                        continue
                    }
                    if (o < 2048) {
                        r.push(o >> 6 | 192), r.push(63 & o | 128);
                        continue
                    }
                    if (o < 55296 || o >= 57344 && o < 65536) {
                        r.push(o >> 12 | 224), r.push(o >> 6 & 63 | 128), r.push(63 & o | 128);
                        continue
                    }
                    if (o >= 65536 && o <= 1114111) {
                        r.push(o >> 18 | 240), r.push(o >> 12 & 63 | 128), r.push(o >> 6 & 63 | 128), r.push(63 & o | 128);
                        continue
                    }
                    r.push(239, 191, 189)
                }
                return new Uint8Array(r).buffer
            }
        },
        56371: function(e, r, n) {
            "use strict";
            var i = this && this.__createBinding || (Object.create ? function(e, r, n, i) {
                    void 0 === i && (i = n), Object.defineProperty(e, i, {
                        enumerable: !0,
                        get: function() {
                            return r[n]
                        }
                    })
                } : function(e, r, n, i) {
                    void 0 === i && (i = n), e[i] = r[n]
                }),
                o = this && this.__setModuleDefault || (Object.create ? function(e, r) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: r
                    })
                } : function(e, r) {
                    e.default = r
                }),
                a = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var r = {};
                    if (null != e)
                        for (var n in e) "default" !== n && Object.prototype.hasOwnProperty.call(e, n) && i(r, e, n);
                    return o(r, e), r
                };
            Object.defineProperty(r, "__esModule", {
                value: !0
            }), r.formatBytes32String = r.Utf8ErrorFuncs = r.toUtf8String = r.toUtf8CodePoints = r.toUtf8Bytes = r._toEscapedUtf8String = r.nameprep = r.hexDataSlice = r.hexDataLength = r.hexZeroPad = r.hexValue = r.hexStripZeros = r.hexConcat = r.isHexString = r.hexlify = r.base64 = r.base58 = r.TransactionDescription = r.LogDescription = r.Interface = r.SigningKey = r.HDNode = r.defaultPath = r.isBytesLike = r.isBytes = r.zeroPad = r.stripZeros = r.concat = r.arrayify = r.shallowCopy = r.resolveProperties = r.getStatic = r.defineReadOnly = r.deepCopy = r.checkProperties = r.poll = r.fetchJson = r._fetchData = r.RLP = r.Logger = r.checkResultErrors = r.FormatTypes = r.ParamType = r.FunctionFragment = r.EventFragment = r.ErrorFragment = r.ConstructorFragment = r.Fragment = r.defaultAbiCoder = r.AbiCoder = void 0, r.Indexed = r.Utf8ErrorReason = r.UnicodeNormalizationForm = r.SupportedAlgorithm = r.mnemonicToSeed = r.isValidMnemonic = r.entropyToMnemonic = r.mnemonicToEntropy = r.getAccountPath = r.verifyTypedData = r.verifyMessage = r.recoverPublicKey = r.computePublicKey = r.recoverAddress = r.computeAddress = r.getJsonWalletAddress = r.TransactionTypes = r.serializeTransaction = r.parseTransaction = r.accessListify = r.joinSignature = r.splitSignature = r.soliditySha256 = r.solidityKeccak256 = r.solidityPack = r.shuffled = r.randomBytes = r.sha512 = r.sha256 = r.ripemd160 = r.keccak256 = r.computeHmac = r.commify = r.parseUnits = r.formatUnits = r.parseEther = r.formatEther = r.isAddress = r.getCreate2Address = r.getContractAddress = r.getIcapAddress = r.getAddress = r._TypedDataEncoder = r.id = r.isValidName = r.namehash = r.hashMessage = r.dnsEncode = r.parseBytes32String = void 0;
            var s = n(83893);
            Object.defineProperty(r, "AbiCoder", {
                enumerable: !0,
                get: function() {
                    return s.AbiCoder
                }
            }), Object.defineProperty(r, "checkResultErrors", {
                enumerable: !0,
                get: function() {
                    return s.checkResultErrors
                }
            }), Object.defineProperty(r, "ConstructorFragment", {
                enumerable: !0,
                get: function() {
                    return s.ConstructorFragment
                }
            }), Object.defineProperty(r, "defaultAbiCoder", {
                enumerable: !0,
                get: function() {
                    return s.defaultAbiCoder
                }
            }), Object.defineProperty(r, "ErrorFragment", {
                enumerable: !0,
                get: function() {
                    return s.ErrorFragment
                }
            }), Object.defineProperty(r, "EventFragment", {
                enumerable: !0,
                get: function() {
                    return s.EventFragment
                }
            }), Object.defineProperty(r, "FormatTypes", {
                enumerable: !0,
                get: function() {
                    return s.FormatTypes
                }
            }), Object.defineProperty(r, "Fragment", {
                enumerable: !0,
                get: function() {
                    return s.Fragment
                }
            }), Object.defineProperty(r, "FunctionFragment", {
                enumerable: !0,
                get: function() {
                    return s.FunctionFragment
                }
            }), Object.defineProperty(r, "Indexed", {
                enumerable: !0,
                get: function() {
                    return s.Indexed
                }
            }), Object.defineProperty(r, "Interface", {
                enumerable: !0,
                get: function() {
                    return s.Interface
                }
            }), Object.defineProperty(r, "LogDescription", {
                enumerable: !0,
                get: function() {
                    return s.LogDescription
                }
            }), Object.defineProperty(r, "ParamType", {
                enumerable: !0,
                get: function() {
                    return s.ParamType
                }
            }), Object.defineProperty(r, "TransactionDescription", {
                enumerable: !0,
                get: function() {
                    return s.TransactionDescription
                }
            });
            var l = n(19485);
            Object.defineProperty(r, "getAddress", {
                enumerable: !0,
                get: function() {
                    return l.getAddress
                }
            }), Object.defineProperty(r, "getCreate2Address", {
                enumerable: !0,
                get: function() {
                    return l.getCreate2Address
                }
            }), Object.defineProperty(r, "getContractAddress", {
                enumerable: !0,
                get: function() {
                    return l.getContractAddress
                }
            }), Object.defineProperty(r, "getIcapAddress", {
                enumerable: !0,
                get: function() {
                    return l.getIcapAddress
                }
            }), Object.defineProperty(r, "isAddress", {
                enumerable: !0,
                get: function() {
                    return l.isAddress
                }
            });
            var u = a(n(4089));
            r.base64 = u;
            var c = n(57727);
            Object.defineProperty(r, "base58", {
                enumerable: !0,
                get: function() {
                    return c.Base58
                }
            });
            var d = n(16441);
            Object.defineProperty(r, "arrayify", {
                enumerable: !0,
                get: function() {
                    return d.arrayify
                }
            }), Object.defineProperty(r, "concat", {
                enumerable: !0,
                get: function() {
                    return d.concat
                }
            }), Object.defineProperty(r, "hexConcat", {
                enumerable: !0,
                get: function() {
                    return d.hexConcat
                }
            }), Object.defineProperty(r, "hexDataSlice", {
                enumerable: !0,
                get: function() {
                    return d.hexDataSlice
                }
            }), Object.defineProperty(r, "hexDataLength", {
                enumerable: !0,
                get: function() {
                    return d.hexDataLength
                }
            }), Object.defineProperty(r, "hexlify", {
                enumerable: !0,
                get: function() {
                    return d.hexlify
                }
            }), Object.defineProperty(r, "hexStripZeros", {
                enumerable: !0,
                get: function() {
                    return d.hexStripZeros
                }
            }), Object.defineProperty(r, "hexValue", {
                enumerable: !0,
                get: function() {
                    return d.hexValue
                }
            }), Object.defineProperty(r, "hexZeroPad", {
                enumerable: !0,
                get: function() {
                    return d.hexZeroPad
                }
            }), Object.defineProperty(r, "isBytes", {
                enumerable: !0,
                get: function() {
                    return d.isBytes
                }
            }), Object.defineProperty(r, "isBytesLike", {
                enumerable: !0,
                get: function() {
                    return d.isBytesLike
                }
            }), Object.defineProperty(r, "isHexString", {
                enumerable: !0,
                get: function() {
                    return d.isHexString
                }
            }), Object.defineProperty(r, "joinSignature", {
                enumerable: !0,
                get: function() {
                    return d.joinSignature
                }
            }), Object.defineProperty(r, "zeroPad", {
                enumerable: !0,
                get: function() {
                    return d.zeroPad
                }
            }), Object.defineProperty(r, "splitSignature", {
                enumerable: !0,
                get: function() {
                    return d.splitSignature
                }
            }), Object.defineProperty(r, "stripZeros", {
                enumerable: !0,
                get: function() {
                    return d.stripZeros
                }
            });
            var h = n(75931);
            Object.defineProperty(r, "_TypedDataEncoder", {
                enumerable: !0,
                get: function() {
                    return h._TypedDataEncoder
                }
            }), Object.defineProperty(r, "dnsEncode", {
                enumerable: !0,
                get: function() {
                    return h.dnsEncode
                }
            }), Object.defineProperty(r, "hashMessage", {
                enumerable: !0,
                get: function() {
                    return h.hashMessage
                }
            }), Object.defineProperty(r, "id", {
                enumerable: !0,
                get: function() {
                    return h.id
                }
            }), Object.defineProperty(r, "isValidName", {
                enumerable: !0,
                get: function() {
                    return h.isValidName
                }
            }), Object.defineProperty(r, "namehash", {
                enumerable: !0,
                get: function() {
                    return h.namehash
                }
            });
            var f = n(86507);
            Object.defineProperty(r, "defaultPath", {
                enumerable: !0,
                get: function() {
                    return f.defaultPath
                }
            }), Object.defineProperty(r, "entropyToMnemonic", {
                enumerable: !0,
                get: function() {
                    return f.entropyToMnemonic
                }
            }), Object.defineProperty(r, "getAccountPath", {
                enumerable: !0,
                get: function() {
                    return f.getAccountPath
                }
            }), Object.defineProperty(r, "HDNode", {
                enumerable: !0,
                get: function() {
                    return f.HDNode
                }
            }), Object.defineProperty(r, "isValidMnemonic", {
                enumerable: !0,
                get: function() {
                    return f.isValidMnemonic
                }
            }), Object.defineProperty(r, "mnemonicToEntropy", {
                enumerable: !0,
                get: function() {
                    return f.mnemonicToEntropy
                }
            }), Object.defineProperty(r, "mnemonicToSeed", {
                enumerable: !0,
                get: function() {
                    return f.mnemonicToSeed
                }
            });
            var p = n(45659);
            Object.defineProperty(r, "getJsonWalletAddress", {
                enumerable: !0,
                get: function() {
                    return p.getJsonWalletAddress
                }
            });
            var m = n(38197);
            Object.defineProperty(r, "keccak256", {
                enumerable: !0,
                get: function() {
                    return m.keccak256
                }
            });
            var g = n(1581);
            Object.defineProperty(r, "Logger", {
                enumerable: !0,
                get: function() {
                    return g.Logger
                }
            });
            var v = n(91278);
            Object.defineProperty(r, "computeHmac", {
                enumerable: !0,
                get: function() {
                    return v.computeHmac
                }
            }), Object.defineProperty(r, "ripemd160", {
                enumerable: !0,
                get: function() {
                    return v.ripemd160
                }
            }), Object.defineProperty(r, "sha256", {
                enumerable: !0,
                get: function() {
                    return v.sha256
                }
            }), Object.defineProperty(r, "sha512", {
                enumerable: !0,
                get: function() {
                    return v.sha512
                }
            });
            var y = n(31886);
            Object.defineProperty(r, "solidityKeccak256", {
                enumerable: !0,
                get: function() {
                    return y.keccak256
                }
            }), Object.defineProperty(r, "solidityPack", {
                enumerable: !0,
                get: function() {
                    return y.pack
                }
            }), Object.defineProperty(r, "soliditySha256", {
                enumerable: !0,
                get: function() {
                    return y.sha256
                }
            });
            var b = n(22118);
            Object.defineProperty(r, "randomBytes", {
                enumerable: !0,
                get: function() {
                    return b.randomBytes
                }
            }), Object.defineProperty(r, "shuffled", {
                enumerable: !0,
                get: function() {
                    return b.shuffled
                }
            });
            var w = n(6881);
            Object.defineProperty(r, "checkProperties", {
                enumerable: !0,
                get: function() {
                    return w.checkProperties
                }
            }), Object.defineProperty(r, "deepCopy", {
                enumerable: !0,
                get: function() {
                    return w.deepCopy
                }
            }), Object.defineProperty(r, "defineReadOnly", {
                enumerable: !0,
                get: function() {
                    return w.defineReadOnly
                }
            }), Object.defineProperty(r, "getStatic", {
                enumerable: !0,
                get: function() {
                    return w.getStatic
                }
            }), Object.defineProperty(r, "resolveProperties", {
                enumerable: !0,
                get: function() {
                    return w.resolveProperties
                }
            }), Object.defineProperty(r, "shallowCopy", {
                enumerable: !0,
                get: function() {
                    return w.shallowCopy
                }
            });
            var x = a(n(59052));
            r.RLP = x;
            var E = n(67669);
            Object.defineProperty(r, "computePublicKey", {
                enumerable: !0,
                get: function() {
                    return E.computePublicKey
                }
            }), Object.defineProperty(r, "recoverPublicKey", {
                enumerable: !0,
                get: function() {
                    return E.recoverPublicKey
                }
            }), Object.defineProperty(r, "SigningKey", {
                enumerable: !0,
                get: function() {
                    return E.SigningKey
                }
            });
            var C = n(22384);
            Object.defineProperty(r, "formatBytes32String", {
                enumerable: !0,
                get: function() {
                    return C.formatBytes32String
                }
            }), Object.defineProperty(r, "nameprep", {
                enumerable: !0,
                get: function() {
                    return C.nameprep
                }
            }), Object.defineProperty(r, "parseBytes32String", {
                enumerable: !0,
                get: function() {
                    return C.parseBytes32String
                }
            }), Object.defineProperty(r, "_toEscapedUtf8String", {
                enumerable: !0,
                get: function() {
                    return C._toEscapedUtf8String
                }
            }), Object.defineProperty(r, "toUtf8Bytes", {
                enumerable: !0,
                get: function() {
                    return C.toUtf8Bytes
                }
            }), Object.defineProperty(r, "toUtf8CodePoints", {
                enumerable: !0,
                get: function() {
                    return C.toUtf8CodePoints
                }
            }), Object.defineProperty(r, "toUtf8String", {
                enumerable: !0,
                get: function() {
                    return C.toUtf8String
                }
            }), Object.defineProperty(r, "Utf8ErrorFuncs", {
                enumerable: !0,
                get: function() {
                    return C.Utf8ErrorFuncs
                }
            });
            var A = n(83875);
            Object.defineProperty(r, "accessListify", {
                enumerable: !0,
                get: function() {
                    return A.accessListify
                }
            }), Object.defineProperty(r, "computeAddress", {
                enumerable: !0,
                get: function() {
                    return A.computeAddress
                }
            }), Object.defineProperty(r, "parseTransaction", {
                enumerable: !0,
                get: function() {
                    return A.parse
                }
            }), Object.defineProperty(r, "recoverAddress", {
                enumerable: !0,
                get: function() {
                    return A.recoverAddress
                }
            }), Object.defineProperty(r, "serializeTransaction", {
                enumerable: !0,
                get: function() {
                    return A.serialize
                }
            }), Object.defineProperty(r, "TransactionTypes", {
                enumerable: !0,
                get: function() {
                    return A.TransactionTypes
                }
            });
            var k = n(35553);
            Object.defineProperty(r, "commify", {
                enumerable: !0,
                get: function() {
                    return k.commify
                }
            }), Object.defineProperty(r, "formatEther", {
                enumerable: !0,
                get: function() {
                    return k.formatEther
                }
            }), Object.defineProperty(r, "parseEther", {
                enumerable: !0,
                get: function() {
                    return k.parseEther
                }
            }), Object.defineProperty(r, "formatUnits", {
                enumerable: !0,
                get: function() {
                    return k.formatUnits
                }
            }), Object.defineProperty(r, "parseUnits", {
                enumerable: !0,
                get: function() {
                    return k.parseUnits
                }
            });
            var S = n(79911);
            Object.defineProperty(r, "verifyMessage", {
                enumerable: !0,
                get: function() {
                    return S.verifyMessage
                }
            }), Object.defineProperty(r, "verifyTypedData", {
                enumerable: !0,
                get: function() {
                    return S.verifyTypedData
                }
            });
            var _ = n(37707);
            Object.defineProperty(r, "_fetchData", {
                enumerable: !0,
                get: function() {
                    return _._fetchData
                }
            }), Object.defineProperty(r, "fetchJson", {
                enumerable: !0,
                get: function() {
                    return _.fetchJson
                }
            }), Object.defineProperty(r, "poll", {
                enumerable: !0,
                get: function() {
                    return _.poll
                }
            });
            var P = n(91278);
            Object.defineProperty(r, "SupportedAlgorithm", {
                enumerable: !0,
                get: function() {
                    return P.SupportedAlgorithm
                }
            });
            var j = n(22384);
            Object.defineProperty(r, "UnicodeNormalizationForm", {
                enumerable: !0,
                get: function() {
                    return j.UnicodeNormalizationForm
                }
            }), Object.defineProperty(r, "Utf8ErrorReason", {
                enumerable: !0,
                get: function() {
                    return j.Utf8ErrorReason
                }
            })
        },
        26729: function(e) {
            "use strict";
            var r = Object.prototype.hasOwnProperty,
                n = "~";

            function i() {}

            function o(e, r, n) {
                this.fn = e, this.context = r, this.once = n || !1
            }

            function a(e, r, i, a, s) {
                if ("function" != typeof i) throw TypeError("The listener must be a function");
                var l = new o(i, a || e, s),
                    u = n ? n + r : r;
                return e._events[u] ? e._events[u].fn ? e._events[u] = [e._events[u], l] : e._events[u].push(l) : (e._events[u] = l, e._eventsCount++), e
            }

            function s(e, r) {
                0 == --e._eventsCount ? e._events = new i : delete e._events[r]
            }

            function l() {
                this._events = new i, this._eventsCount = 0
            }
            Object.create && (i.prototype = Object.create(null), new i().__proto__ || (n = !1)), l.prototype.eventNames = function() {
                var e, i, o = [];
                if (0 === this._eventsCount) return o;
                for (i in e = this._events) r.call(e, i) && o.push(n ? i.slice(1) : i);
                return Object.getOwnPropertySymbols ? o.concat(Object.getOwnPropertySymbols(e)) : o
            }, l.prototype.listeners = function(e) {
                var r = n ? n + e : e,
                    i = this._events[r];
                if (!i) return [];
                if (i.fn) return [i.fn];
                for (var o = 0, a = i.length, s = Array(a); o < a; o++) s[o] = i[o].fn;
                return s
            }, l.prototype.listenerCount = function(e) {
                var r = n ? n + e : e,
                    i = this._events[r];
                return i ? i.fn ? 1 : i.length : 0
            }, l.prototype.emit = function(e, r, i, o, a, s) {
                var l = n ? n + e : e;
                if (!this._events[l]) return !1;
                var u, c, d = this._events[l],
                    h = arguments.length;
                if (d.fn) {
                    switch (d.once && this.removeListener(e, d.fn, void 0, !0), h) {
                        case 1:
                            return d.fn.call(d.context), !0;
                        case 2:
                            return d.fn.call(d.context, r), !0;
                        case 3:
                            return d.fn.call(d.context, r, i), !0;
                        case 4:
                            return d.fn.call(d.context, r, i, o), !0;
                        case 5:
                            return d.fn.call(d.context, r, i, o, a), !0;
                        case 6:
                            return d.fn.call(d.context, r, i, o, a, s), !0
                    }
                    for (c = 1, u = Array(h - 1); c < h; c++) u[c - 1] = arguments[c];
                    d.fn.apply(d.context, u)
                } else {
                    var f, p = d.length;
                    for (c = 0; c < p; c++) switch (d[c].once && this.removeListener(e, d[c].fn, void 0, !0), h) {
                        case 1:
                            d[c].fn.call(d[c].context);
                            break;
                        case 2:
                            d[c].fn.call(d[c].context, r);
                            break;
                        case 3:
                            d[c].fn.call(d[c].context, r, i);
                            break;
                        case 4:
                            d[c].fn.call(d[c].context, r, i, o);
                            break;
                        default:
                            if (!u)
                                for (f = 1, u = Array(h - 1); f < h; f++) u[f - 1] = arguments[f];
                            d[c].fn.apply(d[c].context, u)
                    }
                }
                return !0
            }, l.prototype.on = function(e, r, n) {
                return a(this, e, r, n, !1)
            }, l.prototype.once = function(e, r, n) {
                return a(this, e, r, n, !0)
            }, l.prototype.removeListener = function(e, r, i, o) {
                var a = n ? n + e : e;
                if (!this._events[a]) return this;
                if (!r) return s(this, a), this;
                var l = this._events[a];
                if (l.fn) l.fn !== r || o && !l.once || i && l.context !== i || s(this, a);
                else {
                    for (var u = 0, c = [], d = l.length; u < d; u++)(l[u].fn !== r || o && !l[u].once || i && l[u].context !== i) && c.push(l[u]);
                    c.length ? this._events[a] = 1 === c.length ? c[0] : c : s(this, a)
                }
                return this
            }, l.prototype.removeAllListeners = function(e) {
                var r;
                return e ? (r = n ? n + e : e, this._events[r] && s(this, r)) : (this._events = new i, this._eventsCount = 0), this
            }, l.prototype.off = l.prototype.removeListener, l.prototype.addListener = l.prototype.on, l.prefixed = n, l.EventEmitter = l, e.exports = l
        },
        33715: function(e, r, n) {
            var i = r;
            i.utils = n(26436), i.common = n(95772), i.sha = n(89041), i.ripemd = n(12949), i.hmac = n(52344), i.sha1 = i.sha.sha1, i.sha256 = i.sha.sha256, i.sha224 = i.sha.sha224, i.sha384 = i.sha.sha384, i.sha512 = i.sha.sha512, i.ripemd160 = i.ripemd.ripemd160
        },
        95772: function(e, r, n) {
            "use strict";
            var i = n(26436),
                o = n(79746);

            function a() {
                this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32
            }
            r.BlockHash = a, a.prototype.update = function(e, r) {
                if (e = i.toArray(e, r), this.pending ? this.pending = this.pending.concat(e) : this.pending = e, this.pendingTotal += e.length, this.pending.length >= this._delta8) {
                    var n = (e = this.pending).length % this._delta8;
                    this.pending = e.slice(e.length - n, e.length), 0 === this.pending.length && (this.pending = null), e = i.join32(e, 0, e.length - n, this.endian);
                    for (var o = 0; o < e.length; o += this._delta32) this._update(e, o, o + this._delta32)
                }
                return this
            }, a.prototype.digest = function(e) {
                return this.update(this._pad()), o(null === this.pending), this._digest(e)
            }, a.prototype._pad = function() {
                var e = this.pendingTotal,
                    r = this._delta8,
                    n = r - (e + this.padLength) % r,
                    i = Array(n + this.padLength);
                i[0] = 128;
                for (var o = 1; o < n; o++) i[o] = 0;
                if (e <<= 3, "big" === this.endian) {
                    for (var a = 8; a < this.padLength; a++) i[o++] = 0;
                    i[o++] = 0, i[o++] = 0, i[o++] = 0, i[o++] = 0, i[o++] = e >>> 24 & 255, i[o++] = e >>> 16 & 255, i[o++] = e >>> 8 & 255, i[o++] = 255 & e
                } else
                    for (a = 8, i[o++] = 255 & e, i[o++] = e >>> 8 & 255, i[o++] = e >>> 16 & 255, i[o++] = e >>> 24 & 255, i[o++] = 0, i[o++] = 0, i[o++] = 0, i[o++] = 0; a < this.padLength; a++) i[o++] = 0;
                return i
            }
        },
        52344: function(e, r, n) {
            "use strict";
            var i = n(26436),
                o = n(79746);

            function a(e, r, n) {
                if (!(this instanceof a)) return new a(e, r, n);
                this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(i.toArray(r, n))
            }
            e.exports = a, a.prototype._init = function(e) {
                e.length > this.blockSize && (e = new this.Hash().update(e).digest()), o(e.length <= this.blockSize);
                for (var r = e.length; r < this.blockSize; r++) e.push(0);
                for (r = 0; r < e.length; r++) e[r] ^= 54;
                for (r = 0, this.inner = new this.Hash().update(e); r < e.length; r++) e[r] ^= 106;
                this.outer = new this.Hash().update(e)
            }, a.prototype.update = function(e, r) {
                return this.inner.update(e, r), this
            }, a.prototype.digest = function(e) {
                return this.outer.update(this.inner.digest()), this.outer.digest(e)
            }
        },
        12949: function(e, r, n) {
            "use strict";
            var i = n(26436),
                o = n(95772),
                a = i.rotl32,
                s = i.sum32,
                l = i.sum32_3,
                u = i.sum32_4,
                c = o.BlockHash;

            function d() {
                if (!(this instanceof d)) return new d;
                c.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little"
            }

            function h(e, r, n, i) {
                return e <= 15 ? r ^ n ^ i : e <= 31 ? r & n | ~r & i : e <= 47 ? (r | ~n) ^ i : e <= 63 ? r & i | n & ~i : r ^ (n | ~i)
            }
            i.inherits(d, c), r.ripemd160 = d, d.blockSize = 512, d.outSize = 160, d.hmacStrength = 192, d.padLength = 64, d.prototype._update = function(e, r) {
                for (var n = this.h[0], i = this.h[1], o = this.h[2], c = this.h[3], d = this.h[4], v = n, y = i, b = o, w = c, x = d, E = 0; E < 80; E++) {
                    var C, A, k = s(a(u(n, h(E, i, o, c), e[f[E] + r], (C = E) <= 15 ? 0 : C <= 31 ? 1518500249 : C <= 47 ? 1859775393 : C <= 63 ? 2400959708 : 2840853838), m[E]), d);
                    n = d, d = c, c = a(o, 10), o = i, i = k, k = s(a(u(v, h(79 - E, y, b, w), e[p[E] + r], (A = E) <= 15 ? 1352829926 : A <= 31 ? 1548603684 : A <= 47 ? 1836072691 : A <= 63 ? 2053994217 : 0), g[E]), x), v = x, x = w, w = a(b, 10), b = y, y = k
                }
                k = l(this.h[1], o, w), this.h[1] = l(this.h[2], c, x), this.h[2] = l(this.h[3], d, v), this.h[3] = l(this.h[4], n, y), this.h[4] = l(this.h[0], i, b), this.h[0] = k
            }, d.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h, "little") : i.split32(this.h, "little")
            };
            var f = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13],
                p = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11],
                m = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6],
                g = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]
        },
        89041: function(e, r, n) {
            "use strict";
            r.sha1 = n(84761), r.sha224 = n(10799), r.sha256 = n(89344), r.sha384 = n(80772), r.sha512 = n(45900)
        },
        84761: function(e, r, n) {
            "use strict";
            var i = n(26436),
                o = n(95772),
                a = n(37038),
                s = i.rotl32,
                l = i.sum32,
                u = i.sum32_5,
                c = a.ft_1,
                d = o.BlockHash,
                h = [1518500249, 1859775393, 2400959708, 3395469782];

            function f() {
                if (!(this instanceof f)) return new f;
                d.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = Array(80)
            }
            i.inherits(f, d), e.exports = f, f.blockSize = 512, f.outSize = 160, f.hmacStrength = 80, f.padLength = 64, f.prototype._update = function(e, r) {
                for (var n = this.W, i = 0; i < 16; i++) n[i] = e[r + i];
                for (; i < n.length; i++) n[i] = s(n[i - 3] ^ n[i - 8] ^ n[i - 14] ^ n[i - 16], 1);
                var o = this.h[0],
                    a = this.h[1],
                    d = this.h[2],
                    f = this.h[3],
                    p = this.h[4];
                for (i = 0; i < n.length; i++) {
                    var m = ~~(i / 20),
                        g = u(s(o, 5), c(m, a, d, f), p, n[i], h[m]);
                    p = f, f = d, d = s(a, 30), a = o, o = g
                }
                this.h[0] = l(this.h[0], o), this.h[1] = l(this.h[1], a), this.h[2] = l(this.h[2], d), this.h[3] = l(this.h[3], f), this.h[4] = l(this.h[4], p)
            }, f.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h, "big") : i.split32(this.h, "big")
            }
        },
        10799: function(e, r, n) {
            "use strict";
            var i = n(26436),
                o = n(89344);

            function a() {
                if (!(this instanceof a)) return new a;
                o.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]
            }
            i.inherits(a, o), e.exports = a, a.blockSize = 512, a.outSize = 224, a.hmacStrength = 192, a.padLength = 64, a.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h.slice(0, 7), "big") : i.split32(this.h.slice(0, 7), "big")
            }
        },
        89344: function(e, r, n) {
            "use strict";
            var i = n(26436),
                o = n(95772),
                a = n(37038),
                s = n(79746),
                l = i.sum32,
                u = i.sum32_4,
                c = i.sum32_5,
                d = a.ch32,
                h = a.maj32,
                f = a.s0_256,
                p = a.s1_256,
                m = a.g0_256,
                g = a.g1_256,
                v = o.BlockHash,
                y = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];

            function b() {
                if (!(this instanceof b)) return new b;
                v.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = y, this.W = Array(64)
            }
            i.inherits(b, v), e.exports = b, b.blockSize = 512, b.outSize = 256, b.hmacStrength = 192, b.padLength = 64, b.prototype._update = function(e, r) {
                for (var n = this.W, i = 0; i < 16; i++) n[i] = e[r + i];
                for (; i < n.length; i++) n[i] = u(g(n[i - 2]), n[i - 7], m(n[i - 15]), n[i - 16]);
                var o = this.h[0],
                    a = this.h[1],
                    v = this.h[2],
                    y = this.h[3],
                    b = this.h[4],
                    w = this.h[5],
                    x = this.h[6],
                    E = this.h[7];
                for (s(this.k.length === n.length), i = 0; i < n.length; i++) {
                    var C = c(E, p(b), d(b, w, x), this.k[i], n[i]),
                        A = l(f(o), h(o, a, v));
                    E = x, x = w, w = b, b = l(y, C), y = v, v = a, a = o, o = l(C, A)
                }
                this.h[0] = l(this.h[0], o), this.h[1] = l(this.h[1], a), this.h[2] = l(this.h[2], v), this.h[3] = l(this.h[3], y), this.h[4] = l(this.h[4], b), this.h[5] = l(this.h[5], w), this.h[6] = l(this.h[6], x), this.h[7] = l(this.h[7], E)
            }, b.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h, "big") : i.split32(this.h, "big")
            }
        },
        80772: function(e, r, n) {
            "use strict";
            var i = n(26436),
                o = n(45900);

            function a() {
                if (!(this instanceof a)) return new a;
                o.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428]
            }
            i.inherits(a, o), e.exports = a, a.blockSize = 1024, a.outSize = 384, a.hmacStrength = 192, a.padLength = 128, a.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h.slice(0, 12), "big") : i.split32(this.h.slice(0, 12), "big")
            }
        },
        45900: function(e, r, n) {
            "use strict";
            var i = n(26436),
                o = n(95772),
                a = n(79746),
                s = i.rotr64_hi,
                l = i.rotr64_lo,
                u = i.shr64_hi,
                c = i.shr64_lo,
                d = i.sum64,
                h = i.sum64_hi,
                f = i.sum64_lo,
                p = i.sum64_4_hi,
                m = i.sum64_4_lo,
                g = i.sum64_5_hi,
                v = i.sum64_5_lo,
                y = o.BlockHash,
                b = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];

            function w() {
                if (!(this instanceof w)) return new w;
                y.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = b, this.W = Array(160)
            }
            i.inherits(w, y), e.exports = w, w.blockSize = 1024, w.outSize = 512, w.hmacStrength = 192, w.padLength = 128, w.prototype._prepareBlock = function(e, r) {
                for (var n = this.W, i = 0; i < 32; i++) n[i] = e[r + i];
                for (; i < n.length; i += 2) {
                    var o = function(e, r) {
                            var n = s(e, r, 19) ^ s(r, e, 29) ^ u(e, r, 6);
                            return n < 0 && (n += 4294967296), n
                        }(n[i - 4], n[i - 3]),
                        a = function(e, r) {
                            var n = l(e, r, 19) ^ l(r, e, 29) ^ c(e, r, 6);
                            return n < 0 && (n += 4294967296), n
                        }(n[i - 4], n[i - 3]),
                        d = n[i - 14],
                        h = n[i - 13],
                        f = function(e, r) {
                            var n = s(e, r, 1) ^ s(e, r, 8) ^ u(e, r, 7);
                            return n < 0 && (n += 4294967296), n
                        }(n[i - 30], n[i - 29]),
                        g = function(e, r) {
                            var n = l(e, r, 1) ^ l(e, r, 8) ^ c(e, r, 7);
                            return n < 0 && (n += 4294967296), n
                        }(n[i - 30], n[i - 29]),
                        v = n[i - 32],
                        y = n[i - 31];
                    n[i] = p(o, a, d, h, f, g, v, y), n[i + 1] = m(o, a, d, h, f, g, v, y)
                }
            }, w.prototype._update = function(e, r) {
                this._prepareBlock(e, r);
                var n = this.W,
                    i = this.h[0],
                    o = this.h[1],
                    u = this.h[2],
                    c = this.h[3],
                    p = this.h[4],
                    m = this.h[5],
                    y = this.h[6],
                    b = this.h[7],
                    w = this.h[8],
                    x = this.h[9],
                    E = this.h[10],
                    C = this.h[11],
                    A = this.h[12],
                    k = this.h[13],
                    S = this.h[14],
                    _ = this.h[15];
                a(this.k.length === n.length);
                for (var P = 0; P < n.length; P += 2) {
                    var j = S,
                        T = _,
                        R = function(e, r) {
                            var n = s(e, r, 14) ^ s(e, r, 18) ^ s(r, e, 9);
                            return n < 0 && (n += 4294967296), n
                        }(w, x),
                        B = function(e, r) {
                            var n = l(e, r, 14) ^ l(e, r, 18) ^ l(r, e, 9);
                            return n < 0 && (n += 4294967296), n
                        }(w, x),
                        O = function(e, r, n, i, o) {
                            var a = e & n ^ ~e & o;
                            return a < 0 && (a += 4294967296), a
                        }(w, 0, E, 0, A, k),
                        M = function(e, r, n, i, o, a) {
                            var s = r & i ^ ~r & a;
                            return s < 0 && (s += 4294967296), s
                        }(0, x, 0, C, 0, k),
                        I = this.k[P],
                        N = this.k[P + 1],
                        F = n[P],
                        L = n[P + 1],
                        D = g(j, T, R, B, O, M, I, N, F, L),
                        z = v(j, T, R, B, O, M, I, N, F, L);
                    j = function(e, r) {
                        var n = s(e, r, 28) ^ s(r, e, 2) ^ s(r, e, 7);
                        return n < 0 && (n += 4294967296), n
                    }(i, o), T = function(e, r) {
                        var n = l(e, r, 28) ^ l(r, e, 2) ^ l(r, e, 7);
                        return n < 0 && (n += 4294967296), n
                    }(i, o), R = function(e, r, n, i, o) {
                        var a = e & n ^ e & o ^ n & o;
                        return a < 0 && (a += 4294967296), a
                    }(i, 0, u, 0, p, m), B = function(e, r, n, i, o, a) {
                        var s = r & i ^ r & a ^ i & a;
                        return s < 0 && (s += 4294967296), s
                    }(0, o, 0, c, 0, m);
                    var U = h(j, T, R, B),
                        $ = f(j, T, R, B);
                    S = A, _ = k, A = E, k = C, E = w, C = x, w = h(y, b, D, z), x = f(b, b, D, z), y = p, b = m, p = u, m = c, u = i, c = o, i = h(D, z, U, $), o = f(D, z, U, $)
                }
                d(this.h, 0, i, o), d(this.h, 2, u, c), d(this.h, 4, p, m), d(this.h, 6, y, b), d(this.h, 8, w, x), d(this.h, 10, E, C), d(this.h, 12, A, k), d(this.h, 14, S, _)
            }, w.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h, "big") : i.split32(this.h, "big")
            }
        },
        37038: function(e, r, n) {
            "use strict";
            var i = n(26436).rotr32;

            function o(e, r, n) {
                return e & r ^ e & n ^ r & n
            }
            r.ft_1 = function(e, r, n, i) {
                return 0 === e ? r & n ^ ~r & i : 1 === e || 3 === e ? r ^ n ^ i : 2 === e ? o(r, n, i) : void 0
            }, r.ch32 = function(e, r, n) {
                return e & r ^ ~e & n
            }, r.maj32 = o, r.p32 = function(e, r, n) {
                return e ^ r ^ n
            }, r.s0_256 = function(e) {
                return i(e, 2) ^ i(e, 13) ^ i(e, 22)
            }, r.s1_256 = function(e) {
                return i(e, 6) ^ i(e, 11) ^ i(e, 25)
            }, r.g0_256 = function(e) {
                return i(e, 7) ^ i(e, 18) ^ e >>> 3
            }, r.g1_256 = function(e) {
                return i(e, 17) ^ i(e, 19) ^ e >>> 10
            }
        },
        26436: function(e, r, n) {
            "use strict";
            var i = n(79746),
                o = n(35717);

            function a(e) {
                return (e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (255 & e) << 24) >>> 0
            }

            function s(e) {
                return 1 === e.length ? "0" + e : e
            }

            function l(e) {
                if (7 === e.length) return "0" + e;
                if (6 === e.length) return "00" + e;
                if (5 === e.length) return "000" + e;
                if (4 === e.length) return "0000" + e;
                if (3 === e.length) return "00000" + e;
                if (2 === e.length) return "000000" + e;
                if (1 === e.length) return "0000000" + e;
                else return e
            }
            r.inherits = o, r.toArray = function(e, r) {
                if (Array.isArray(e)) return e.slice();
                if (!e) return [];
                var n = [];
                if ("string" == typeof e) {
                    if (r) {
                        if ("hex" === r)
                            for ((e = e.replace(/[^a-z0-9]+/ig, "")).length % 2 != 0 && (e = "0" + e), o = 0; o < e.length; o += 2) n.push(parseInt(e[o] + e[o + 1], 16))
                    } else
                        for (var i = 0, o = 0; o < e.length; o++) {
                            var a, s, l = e.charCodeAt(o);
                            l < 128 ? n[i++] = l : l < 2048 ? (n[i++] = l >> 6 | 192, n[i++] = 63 & l | 128) : (a = e, s = o, (64512 & a.charCodeAt(s)) != 55296 || s < 0 || s + 1 >= a.length ? 1 : (64512 & a.charCodeAt(s + 1)) != 56320) ? (n[i++] = l >> 12 | 224, n[i++] = l >> 6 & 63 | 128, n[i++] = 63 & l | 128) : (l = 65536 + ((1023 & l) << 10) + (1023 & e.charCodeAt(++o)), n[i++] = l >> 18 | 240, n[i++] = l >> 12 & 63 | 128, n[i++] = l >> 6 & 63 | 128, n[i++] = 63 & l | 128)
                        }
                } else
                    for (o = 0; o < e.length; o++) n[o] = 0 | e[o];
                return n
            }, r.toHex = function(e) {
                for (var r = "", n = 0; n < e.length; n++) r += s(e[n].toString(16));
                return r
            }, r.htonl = a, r.toHex32 = function(e, r) {
                for (var n = "", i = 0; i < e.length; i++) {
                    var o = e[i];
                    "little" === r && (o = a(o)), n += l(o.toString(16))
                }
                return n
            }, r.zero2 = s, r.zero8 = l, r.join32 = function(e, r, n, o) {
                var a, s = n - r;
                i(s % 4 == 0);
                for (var l = Array(s / 4), u = 0, c = r; u < l.length; u++, c += 4) a = "big" === o ? e[c] << 24 | e[c + 1] << 16 | e[c + 2] << 8 | e[c + 3] : e[c + 3] << 24 | e[c + 2] << 16 | e[c + 1] << 8 | e[c], l[u] = a >>> 0;
                return l
            }, r.split32 = function(e, r) {
                for (var n = Array(4 * e.length), i = 0, o = 0; i < e.length; i++, o += 4) {
                    var a = e[i];
                    "big" === r ? (n[o] = a >>> 24, n[o + 1] = a >>> 16 & 255, n[o + 2] = a >>> 8 & 255, n[o + 3] = 255 & a) : (n[o + 3] = a >>> 24, n[o + 2] = a >>> 16 & 255, n[o + 1] = a >>> 8 & 255, n[o] = 255 & a)
                }
                return n
            }, r.rotr32 = function(e, r) {
                return e >>> r | e << 32 - r
            }, r.rotl32 = function(e, r) {
                return e << r | e >>> 32 - r
            }, r.sum32 = function(e, r) {
                return e + r >>> 0
            }, r.sum32_3 = function(e, r, n) {
                return e + r + n >>> 0
            }, r.sum32_4 = function(e, r, n, i) {
                return e + r + n + i >>> 0
            }, r.sum32_5 = function(e, r, n, i, o) {
                return e + r + n + i + o >>> 0
            }, r.sum64 = function(e, r, n, i) {
                var o = e[r],
                    a = i + e[r + 1] >>> 0;
                e[r] = (a < i ? 1 : 0) + n + o >>> 0, e[r + 1] = a
            }, r.sum64_hi = function(e, r, n, i) {
                return (r + i >>> 0 < r ? 1 : 0) + e + n >>> 0
            }, r.sum64_lo = function(e, r, n, i) {
                return r + i >>> 0
            }, r.sum64_4_hi = function(e, r, n, i, o, a, s, l) {
                var u, c = r;
                return e + n + o + s + (0 + ((c = c + i >>> 0) < r ? 1 : 0) + ((c = c + a >>> 0) < a ? 1 : 0) + ((c = c + l >>> 0) < l ? 1 : 0)) >>> 0
            }, r.sum64_4_lo = function(e, r, n, i, o, a, s, l) {
                return r + i + a + l >>> 0
            }, r.sum64_5_hi = function(e, r, n, i, o, a, s, l, u, c) {
                var d, h = r;
                return e + n + o + s + u + (0 + ((h = h + i >>> 0) < r ? 1 : 0) + ((h = h + a >>> 0) < a ? 1 : 0) + ((h = h + l >>> 0) < l ? 1 : 0) + ((h = h + c >>> 0) < c ? 1 : 0)) >>> 0
            }, r.sum64_5_lo = function(e, r, n, i, o, a, s, l, u, c) {
                return r + i + a + l + c >>> 0
            }, r.rotr64_hi = function(e, r, n) {
                return (r << 32 - n | e >>> n) >>> 0
            }, r.rotr64_lo = function(e, r, n) {
                return (e << 32 - n | r >>> n) >>> 0
            }, r.shr64_hi = function(e, r, n) {
                return e >>> n
            }, r.shr64_lo = function(e, r, n) {
                return (e << 32 - n | r >>> n) >>> 0
            }
        },
        8679: function(e, r, n) {
            "use strict";
            var i = n(59864),
                o = {
                    childContextTypes: !0,
                    contextType: !0,
                    contextTypes: !0,
                    defaultProps: !0,
                    displayName: !0,
                    getDefaultProps: !0,
                    getDerivedStateFromError: !0,
                    getDerivedStateFromProps: !0,
                    mixins: !0,
                    propTypes: !0,
                    type: !0
                },
                a = {
                    name: !0,
                    length: !0,
                    prototype: !0,
                    caller: !0,
                    callee: !0,
                    arguments: !0,
                    arity: !0
                },
                s = {
                    $$typeof: !0,
                    compare: !0,
                    defaultProps: !0,
                    displayName: !0,
                    propTypes: !0,
                    type: !0
                },
                l = {};

            function u(e) {
                return i.isMemo(e) ? s : l[e.$$typeof] || o
            }
            l[i.ForwardRef] = {
                $$typeof: !0,
                render: !0,
                defaultProps: !0,
                displayName: !0,
                propTypes: !0
            }, l[i.Memo] = s;
            var c = Object.defineProperty,
                d = Object.getOwnPropertyNames,
                h = Object.getOwnPropertySymbols,
                f = Object.getOwnPropertyDescriptor,
                p = Object.getPrototypeOf,
                m = Object.prototype;
            e.exports = function e(r, n, i) {
                if ("string" != typeof n) {
                    if (m) {
                        var o = p(n);
                        o && o !== m && e(r, o, i)
                    }
                    var s = d(n);
                    h && (s = s.concat(h(n)));
                    for (var l = u(r), g = u(n), v = 0; v < s.length; ++v) {
                        var y = s[v];
                        if (!a[y] && !(i && i[y]) && !(g && g[y]) && !(l && l[y])) {
                            var b = f(n, y);
                            try {
                                c(r, y, b)
                            } catch (w) {}
                        }
                    }
                }
                return r
            }
        },
        35717: function(e) {
            "function" == typeof Object.create ? e.exports = function(e, r) {
                r && (e.super_ = r, e.prototype = Object.create(r.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }))
            } : e.exports = function(e, r) {
                if (r) {
                    e.super_ = r;
                    var n = function() {};
                    n.prototype = r.prototype, e.prototype = new n, e.prototype.constructor = e
                }
            }
        },
        91094: function(e, r, n) {
            var i, o = n(34155);
            ! function() {
                "use strict";
                var a = "input is invalid type",
                    s = "object" == typeof window,
                    l = s ? window : {};
                l.JS_SHA3_NO_WINDOW && (s = !1);
                var u = !s && "object" == typeof self;
                !l.JS_SHA3_NO_NODE_JS && "object" == typeof o && o.versions && o.versions.node ? l = n.g : u && (l = self);
                var c = !l.JS_SHA3_NO_COMMON_JS && e.exports,
                    d = n.amdO,
                    h = !l.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,
                    f = "0123456789abcdef".split(""),
                    p = [4, 1024, 262144, 67108864],
                    m = [0, 8, 16, 24],
                    g = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648],
                    v = [224, 256, 384, 512],
                    y = [128, 256],
                    b = ["hex", "buffer", "arrayBuffer", "array", "digest"],
                    w = {
                        128: 168,
                        256: 136
                    };
                (l.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(e) {
                    return "[object Array]" === Object.prototype.toString.call(e)
                }), h && (l.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(e) {
                    return "object" == typeof e && e.buffer && e.buffer.constructor === ArrayBuffer
                });
                for (var x = function(e, r, n) {
                        return function(i) {
                            return new N(e, r, e).update(i)[n]()
                        }
                    }, E = function(e, r, n) {
                        return function(i, o) {
                            return new N(e, r, o).update(i)[n]()
                        }
                    }, C = function(e, r, n) {
                        return function(r, i, o, a) {
                            return P["cshake" + e].update(r, i, o, a)[n]()
                        }
                    }, A = function(e, r, n) {
                        return function(r, i, o, a) {
                            return P["kmac" + e].update(r, i, o, a)[n]()
                        }
                    }, k = function(e, r, n, i) {
                        for (var o = 0; o < b.length; ++o) {
                            var a = b[o];
                            e[a] = r(n, i, a)
                        }
                        return e
                    }, S = function(e, r) {
                        var n = x(e, r, "hex");
                        return n.create = function() {
                            return new N(e, r, e)
                        }, n.update = function(e) {
                            return n.create().update(e)
                        }, k(n, x, e, r)
                    }, _ = [{
                        name: "keccak",
                        padding: [1, 256, 65536, 16777216],
                        bits: v,
                        createMethod: S
                    }, {
                        name: "sha3",
                        padding: [6, 1536, 393216, 100663296],
                        bits: v,
                        createMethod: S
                    }, {
                        name: "shake",
                        padding: [31, 7936, 2031616, 520093696],
                        bits: y,
                        createMethod: function(e, r) {
                            var n = E(e, r, "hex");
                            return n.create = function(n) {
                                return new N(e, r, n)
                            }, n.update = function(e, r) {
                                return n.create(r).update(e)
                            }, k(n, E, e, r)
                        }
                    }, {
                        name: "cshake",
                        padding: p,
                        bits: y,
                        createMethod: function(e, r) {
                            var n = w[e],
                                i = C(e, r, "hex");
                            return i.create = function(i, o, a) {
                                return o || a ? new N(e, r, i).bytepad([o, a], n) : P["shake" + e].create(i)
                            }, i.update = function(e, r, n, o) {
                                return i.create(r, n, o).update(e)
                            }, k(i, C, e, r)
                        }
                    }, {
                        name: "kmac",
                        padding: p,
                        bits: y,
                        createMethod: function(e, r) {
                            var n = w[e],
                                i = A(e, r, "hex");
                            return i.create = function(i, o, a) {
                                return new F(e, r, o).bytepad(["KMAC", a], n).bytepad([i], n)
                            }, i.update = function(e, r, n, o) {
                                return i.create(e, n, o).update(r)
                            }, k(i, A, e, r)
                        }
                    }], P = {}, j = [], T = 0; T < _.length; ++T)
                    for (var R = _[T], B = R.bits, O = 0; O < B.length; ++O) {
                        var M = R.name + "_" + B[O];
                        if (j.push(M), P[M] = R.createMethod(B[O], R.padding), "sha3" !== R.name) {
                            var I = R.name + B[O];
                            j.push(I), P[I] = P[M]
                        }
                    }

                function N(e, r, n) {
                    this.blocks = [], this.s = [], this.padding = r, this.outputBits = n, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (e << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = n >> 5, this.extraBytes = (31 & n) >> 3;
                    for (var i = 0; i < 50; ++i) this.s[i] = 0
                }

                function F(e, r, n) {
                    N.call(this, e, r, n)
                }
                N.prototype.update = function(e) {
                    if (this.finalized) throw Error("finalize already called");
                    var r, n = typeof e;
                    if ("string" !== n) {
                        if ("object" === n) {
                            if (null === e) throw Error(a);
                            if (h && e.constructor === ArrayBuffer) e = new Uint8Array(e);
                            else if (!Array.isArray(e) && (!h || !ArrayBuffer.isView(e))) throw Error(a)
                        } else throw Error(a);
                        r = !0
                    }
                    for (var i, o, s = this.blocks, l = this.byteCount, u = e.length, c = this.blockCount, d = 0, f = this.s; d < u;) {
                        if (this.reset)
                            for (i = 1, this.reset = !1, s[0] = this.block; i < c + 1; ++i) s[i] = 0;
                        if (r)
                            for (i = this.start; d < u && i < l; ++d) s[i >> 2] |= e[d] << m[3 & i++];
                        else
                            for (i = this.start; d < u && i < l; ++d)(o = e.charCodeAt(d)) < 128 ? s[i >> 2] |= o << m[3 & i++] : o < 2048 ? (s[i >> 2] |= (192 | o >> 6) << m[3 & i++], s[i >> 2] |= (128 | 63 & o) << m[3 & i++]) : o < 55296 || o >= 57344 ? (s[i >> 2] |= (224 | o >> 12) << m[3 & i++], s[i >> 2] |= (128 | o >> 6 & 63) << m[3 & i++], s[i >> 2] |= (128 | 63 & o) << m[3 & i++]) : (o = 65536 + ((1023 & o) << 10 | 1023 & e.charCodeAt(++d)), s[i >> 2] |= (240 | o >> 18) << m[3 & i++], s[i >> 2] |= (128 | o >> 12 & 63) << m[3 & i++], s[i >> 2] |= (128 | o >> 6 & 63) << m[3 & i++], s[i >> 2] |= (128 | 63 & o) << m[3 & i++]);
                        if (this.lastByteIndex = i, i >= l) {
                            for (this.start = i - l, this.block = s[c], i = 0; i < c; ++i) f[i] ^= s[i];
                            L(f), this.reset = !0
                        } else this.start = i
                    }
                    return this
                }, N.prototype.encode = function(e, r) {
                    var n = 255 & e,
                        i = 1,
                        o = [n];
                    for (e >>= 8, n = 255 & e; n > 0;) o.unshift(n), e >>= 8, n = 255 & e, ++i;
                    return r ? o.push(i) : o.unshift(i), this.update(o), o.length
                }, N.prototype.encodeString = function(e) {
                    var r, n = typeof e;
                    if ("string" !== n) {
                        if ("object" === n) {
                            if (null === e) throw Error(a);
                            if (h && e.constructor === ArrayBuffer) e = new Uint8Array(e);
                            else if (!Array.isArray(e) && (!h || !ArrayBuffer.isView(e))) throw Error(a)
                        } else throw Error(a);
                        r = !0
                    }
                    var i = 0,
                        o = e.length;
                    if (r) i = o;
                    else
                        for (var s = 0; s < e.length; ++s) {
                            var l = e.charCodeAt(s);
                            l < 128 ? i += 1 : l < 2048 ? i += 2 : l < 55296 || l >= 57344 ? i += 3 : (l = 65536 + ((1023 & l) << 10 | 1023 & e.charCodeAt(++s)), i += 4)
                        }
                    return i += this.encode(8 * i), this.update(e), i
                }, N.prototype.bytepad = function(e, r) {
                    for (var n = this.encode(r), i = 0; i < e.length; ++i) n += this.encodeString(e[i]);
                    var o = r - n % r,
                        a = [];
                    return a.length = o, this.update(a), this
                }, N.prototype.finalize = function() {
                    if (!this.finalized) {
                        this.finalized = !0;
                        var e = this.blocks,
                            r = this.lastByteIndex,
                            n = this.blockCount,
                            i = this.s;
                        if (e[r >> 2] |= this.padding[3 & r], this.lastByteIndex === this.byteCount)
                            for (r = 1, e[0] = e[n]; r < n + 1; ++r) e[r] = 0;
                        for (e[n - 1] |= 2147483648, r = 0; r < n; ++r) i[r] ^= e[r];
                        L(i)
                    }
                }, N.prototype.toString = N.prototype.hex = function() {
                    this.finalize();
                    for (var e, r = this.blockCount, n = this.s, i = this.outputBlocks, o = this.extraBytes, a = 0, s = 0, l = ""; s < i;) {
                        for (a = 0; a < r && s < i; ++a, ++s) l += f[(e = n[a]) >> 4 & 15] + f[15 & e] + f[e >> 12 & 15] + f[e >> 8 & 15] + f[e >> 20 & 15] + f[e >> 16 & 15] + f[e >> 28 & 15] + f[e >> 24 & 15];
                        s % r == 0 && (L(n), a = 0)
                    }
                    return o && (l += f[(e = n[a]) >> 4 & 15] + f[15 & e], o > 1 && (l += f[e >> 12 & 15] + f[e >> 8 & 15]), o > 2 && (l += f[e >> 20 & 15] + f[e >> 16 & 15])), l
                }, N.prototype.arrayBuffer = function() {
                    this.finalize();
                    var e, r = this.blockCount,
                        n = this.s,
                        i = this.outputBlocks,
                        o = this.extraBytes,
                        a = 0,
                        s = 0,
                        l = this.outputBits >> 3;
                    e = new ArrayBuffer(o ? i + 1 << 2 : l);
                    for (var u = new Uint32Array(e); s < i;) {
                        for (a = 0; a < r && s < i; ++a, ++s) u[s] = n[a];
                        s % r == 0 && L(n)
                    }
                    return o && (u[a] = n[a], e = e.slice(0, l)), e
                }, N.prototype.buffer = N.prototype.arrayBuffer, N.prototype.digest = N.prototype.array = function() {
                    this.finalize();
                    for (var e, r, n = this.blockCount, i = this.s, o = this.outputBlocks, a = this.extraBytes, s = 0, l = 0, u = []; l < o;) {
                        for (s = 0; s < n && l < o; ++s, ++l) e = l << 2, r = i[s], u[e] = 255 & r, u[e + 1] = r >> 8 & 255, u[e + 2] = r >> 16 & 255, u[e + 3] = r >> 24 & 255;
                        l % n == 0 && L(i)
                    }
                    return a && (e = l << 2, r = i[s], u[e] = 255 & r, a > 1 && (u[e + 1] = r >> 8 & 255), a > 2 && (u[e + 2] = r >> 16 & 255)), u
                }, F.prototype = new N, F.prototype.finalize = function() {
                    return this.encode(this.outputBits, !0), N.prototype.finalize.call(this)
                };
                var L = function(e) {
                    var r, n, i, o, a, s, l, u, c, d, h, f, p, m, v, y, b, w, x, E, C, A, k, S, _, P, j, T, R, B, O, M, I, N, F, L, D, z, U, $, q, W, V, H, G, K, Q, J, Y, X, Z, ee, et, er, en, ei, eo, ea, es, el, eu, ec, ed;
                    for (i = 0; i < 48; i += 2) o = e[0] ^ e[10] ^ e[20] ^ e[30] ^ e[40], a = e[1] ^ e[11] ^ e[21] ^ e[31] ^ e[41], s = e[2] ^ e[12] ^ e[22] ^ e[32] ^ e[42], l = e[3] ^ e[13] ^ e[23] ^ e[33] ^ e[43], u = e[4] ^ e[14] ^ e[24] ^ e[34] ^ e[44], c = e[5] ^ e[15] ^ e[25] ^ e[35] ^ e[45], d = e[6] ^ e[16] ^ e[26] ^ e[36] ^ e[46], h = e[7] ^ e[17] ^ e[27] ^ e[37] ^ e[47], f = e[8] ^ e[18] ^ e[28] ^ e[38] ^ e[48], p = e[9] ^ e[19] ^ e[29] ^ e[39] ^ e[49], r = f ^ (s << 1 | l >>> 31), n = p ^ (l << 1 | s >>> 31), e[0] ^= r, e[1] ^= n, e[10] ^= r, e[11] ^= n, e[20] ^= r, e[21] ^= n, e[30] ^= r, e[31] ^= n, e[40] ^= r, e[41] ^= n, r = o ^ (u << 1 | c >>> 31), n = a ^ (c << 1 | u >>> 31), e[2] ^= r, e[3] ^= n, e[12] ^= r, e[13] ^= n, e[22] ^= r, e[23] ^= n, e[32] ^= r, e[33] ^= n, e[42] ^= r, e[43] ^= n, r = s ^ (d << 1 | h >>> 31), n = l ^ (h << 1 | d >>> 31), e[4] ^= r, e[5] ^= n, e[14] ^= r, e[15] ^= n, e[24] ^= r, e[25] ^= n, e[34] ^= r, e[35] ^= n, e[44] ^= r, e[45] ^= n, r = u ^ (f << 1 | p >>> 31), n = c ^ (p << 1 | f >>> 31), e[6] ^= r, e[7] ^= n, e[16] ^= r, e[17] ^= n, e[26] ^= r, e[27] ^= n, e[36] ^= r, e[37] ^= n, e[46] ^= r, e[47] ^= n, r = d ^ (o << 1 | a >>> 31), n = h ^ (a << 1 | o >>> 31), e[8] ^= r, e[9] ^= n, e[18] ^= r, e[19] ^= n, e[28] ^= r, e[29] ^= n, e[38] ^= r, e[39] ^= n, e[48] ^= r, e[49] ^= n, m = e[0], v = e[1], K = e[11] << 4 | e[10] >>> 28, Q = e[10] << 4 | e[11] >>> 28, T = e[20] << 3 | e[21] >>> 29, R = e[21] << 3 | e[20] >>> 29, el = e[31] << 9 | e[30] >>> 23, eu = e[30] << 9 | e[31] >>> 23, W = e[40] << 18 | e[41] >>> 14, V = e[41] << 18 | e[40] >>> 14, N = e[2] << 1 | e[3] >>> 31, F = e[3] << 1 | e[2] >>> 31, y = e[13] << 12 | e[12] >>> 20, b = e[12] << 12 | e[13] >>> 20, J = e[22] << 10 | e[23] >>> 22, Y = e[23] << 10 | e[22] >>> 22, B = e[33] << 13 | e[32] >>> 19, O = e[32] << 13 | e[33] >>> 19, ec = e[42] << 2 | e[43] >>> 30, ed = e[43] << 2 | e[42] >>> 30, er = e[5] << 30 | e[4] >>> 2, en = e[4] << 30 | e[5] >>> 2, L = e[14] << 6 | e[15] >>> 26, D = e[15] << 6 | e[14] >>> 26, w = e[25] << 11 | e[24] >>> 21, x = e[24] << 11 | e[25] >>> 21, X = e[34] << 15 | e[35] >>> 17, Z = e[35] << 15 | e[34] >>> 17, M = e[45] << 29 | e[44] >>> 3, I = e[44] << 29 | e[45] >>> 3, S = e[6] << 28 | e[7] >>> 4, _ = e[7] << 28 | e[6] >>> 4, ei = e[17] << 23 | e[16] >>> 9, eo = e[16] << 23 | e[17] >>> 9, z = e[26] << 25 | e[27] >>> 7, U = e[27] << 25 | e[26] >>> 7, E = e[36] << 21 | e[37] >>> 11, C = e[37] << 21 | e[36] >>> 11, ee = e[47] << 24 | e[46] >>> 8, et = e[46] << 24 | e[47] >>> 8, H = e[8] << 27 | e[9] >>> 5, G = e[9] << 27 | e[8] >>> 5, P = e[18] << 20 | e[19] >>> 12, j = e[19] << 20 | e[18] >>> 12, ea = e[29] << 7 | e[28] >>> 25, es = e[28] << 7 | e[29] >>> 25, $ = e[38] << 8 | e[39] >>> 24, q = e[39] << 8 | e[38] >>> 24, A = e[48] << 14 | e[49] >>> 18, k = e[49] << 14 | e[48] >>> 18, e[0] = m ^ ~y & w, e[1] = v ^ ~b & x, e[10] = S ^ ~P & T, e[11] = _ ^ ~j & R, e[20] = N ^ ~L & z, e[21] = F ^ ~D & U, e[30] = H ^ ~K & J, e[31] = G ^ ~Q & Y, e[40] = er ^ ~ei & ea, e[41] = en ^ ~eo & es, e[2] = y ^ ~w & E, e[3] = b ^ ~x & C, e[12] = P ^ ~T & B, e[13] = j ^ ~R & O, e[22] = L ^ ~z & $, e[23] = D ^ ~U & q, e[32] = K ^ ~J & X, e[33] = Q ^ ~Y & Z, e[42] = ei ^ ~ea & el, e[43] = eo ^ ~es & eu, e[4] = w ^ ~E & A, e[5] = x ^ ~C & k, e[14] = T ^ ~B & M, e[15] = R ^ ~O & I, e[24] = z ^ ~$ & W, e[25] = U ^ ~q & V, e[34] = J ^ ~X & ee, e[35] = Y ^ ~Z & et, e[44] = ea ^ ~el & ec, e[45] = es ^ ~eu & ed, e[6] = E ^ ~A & m, e[7] = C ^ ~k & v, e[16] = B ^ ~M & S, e[17] = O ^ ~I & _, e[26] = $ ^ ~W & N, e[27] = q ^ ~V & F, e[36] = X ^ ~ee & H, e[37] = Z ^ ~et & G, e[46] = el ^ ~ec & er, e[47] = eu ^ ~ed & en, e[8] = A ^ ~m & y, e[9] = k ^ ~v & b, e[18] = M ^ ~S & P, e[19] = I ^ ~_ & j, e[28] = W ^ ~N & L, e[29] = V ^ ~F & D, e[38] = ee ^ ~H & K, e[39] = et ^ ~G & Q, e[48] = ec ^ ~er & ei, e[49] = ed ^ ~en & eo, e[0] ^= g[i], e[1] ^= g[i + 1]
                };
                if (c) e.exports = P;
                else {
                    for (T = 0; T < j.length; ++T) l[j[T]] = P[j[T]];
                    d && void 0 !== (i = (function() {
                        return P
                    }).call(r, n, r, e)) && (e.exports = i)
                }
            }()
        },
        38554: function(e, r, n) {
            e = n.nmd(e);
            var i, o, a, s, l, u, c, d, h, f, p = "__lodash_hash_undefined__",
                m = "[object Arguments]",
                g = "[object Function]",
                v = "[object Object]",
                y = /^\[object .+?Constructor\]$/,
                b = /^(?:0|[1-9]\d*)$/,
                w = {};
            w["[object Float32Array]"] = w["[object Float64Array]"] = w["[object Int8Array]"] = w["[object Int16Array]"] = w["[object Int32Array]"] = w["[object Uint8Array]"] = w["[object Uint8ClampedArray]"] = w["[object Uint16Array]"] = w["[object Uint32Array]"] = !0, w[m] = w["[object Array]"] = w["[object ArrayBuffer]"] = w["[object Boolean]"] = w["[object DataView]"] = w["[object Date]"] = w["[object Error]"] = w[g] = w["[object Map]"] = w["[object Number]"] = w[v] = w["[object RegExp]"] = w["[object Set]"] = w["[object String]"] = w["[object WeakMap]"] = !1;
            var x = "object" == typeof n.g && n.g && n.g.Object === Object && n.g,
                E = "object" == typeof self && self && self.Object === Object && self,
                C = x || E || Function("return this")(),
                A = r && !r.nodeType && r,
                k = A && e && !e.nodeType && e,
                S = k && k.exports === A,
                _ = S && x.process,
                P = function() {
                    try {
                        var e = k && k.require && k.require("util").types;
                        if (e) return e;
                        return _ && _.binding && _.binding("util")
                    } catch (r) {}
                }(),
                j = P && P.isTypedArray,
                T = Array.prototype,
                R = Function.prototype,
                B = Object.prototype,
                O = C["__core-js_shared__"],
                M = R.toString,
                I = B.hasOwnProperty,
                N = (u = /[^.]+$/.exec(O && O.keys && O.keys.IE_PROTO || "")) ? "Symbol(src)_1." + u : "",
                F = B.toString,
                L = M.call(Object),
                D = RegExp("^" + M.call(I).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
                z = S ? C.Buffer : void 0,
                U = C.Symbol,
                $ = C.Uint8Array,
                q = z ? z.allocUnsafe : void 0,
                W = (c = Object.getPrototypeOf, d = Object, function(e) {
                    return c(d(e))
                }),
                V = Object.create,
                H = B.propertyIsEnumerable,
                G = T.splice,
                K = U ? U.toStringTag : void 0,
                Q = function() {
                    try {
                        var e = ef(Object, "defineProperty");
                        return e({}, "", {}), e
                    } catch (r) {}
                }(),
                J = z ? z.isBuffer : void 0,
                Y = Math.max,
                X = Date.now,
                Z = ef(C, "Map"),
                ee = ef(Object, "create"),
                et = function() {
                    function e() {}
                    return function(r) {
                        if (!ek(r)) return {};
                        if (V) return V(r);
                        e.prototype = r;
                        var n = new e;
                        return e.prototype = void 0, n
                    }
                }();

            function er(e) {
                var r = -1,
                    n = null == e ? 0 : e.length;
                for (this.clear(); ++r < n;) {
                    var i = e[r];
                    this.set(i[0], i[1])
                }
            }

            function en(e) {
                var r = -1,
                    n = null == e ? 0 : e.length;
                for (this.clear(); ++r < n;) {
                    var i = e[r];
                    this.set(i[0], i[1])
                }
            }

            function ei(e) {
                var r = -1,
                    n = null == e ? 0 : e.length;
                for (this.clear(); ++r < n;) {
                    var i = e[r];
                    this.set(i[0], i[1])
                }
            }

            function eo(e) {
                var r = this.__data__ = new en(e);
                this.size = r.size
            }

            function ea(e, r, n) {
                (void 0 === n || ey(e[r], n)) && (void 0 !== n || r in e) || el(e, r, n)
            }

            function es(e, r) {
                for (var n = e.length; n--;)
                    if (ey(e[n][0], r)) return n;
                return -1
            }

            function el(e, r, n) {
                "__proto__" == r && Q ? Q(e, r, {
                    configurable: !0,
                    enumerable: !0,
                    value: n,
                    writable: !0
                }) : e[r] = n
            }
            er.prototype.clear = function() {
                this.__data__ = ee ? ee(null) : {}, this.size = 0
            }, er.prototype.delete = function(e) {
                var r = this.has(e) && delete this.__data__[e];
                return this.size -= r ? 1 : 0, r
            }, er.prototype.get = function(e) {
                var r = this.__data__;
                if (ee) {
                    var n = r[e];
                    return n === p ? void 0 : n
                }
                return I.call(r, e) ? r[e] : void 0
            }, er.prototype.has = function(e) {
                var r = this.__data__;
                return ee ? void 0 !== r[e] : I.call(r, e)
            }, er.prototype.set = function(e, r) {
                var n = this.__data__;
                return this.size += this.has(e) ? 0 : 1, n[e] = ee && void 0 === r ? p : r, this
            }, en.prototype.clear = function() {
                this.__data__ = [], this.size = 0
            }, en.prototype.delete = function(e) {
                var r = this.__data__,
                    n = es(r, e);
                return !(n < 0) && (n == r.length - 1 ? r.pop() : G.call(r, n, 1), --this.size, !0)
            }, en.prototype.get = function(e) {
                var r = this.__data__,
                    n = es(r, e);
                return n < 0 ? void 0 : r[n][1]
            }, en.prototype.has = function(e) {
                return es(this.__data__, e) > -1
            }, en.prototype.set = function(e, r) {
                var n = this.__data__,
                    i = es(n, e);
                return i < 0 ? (++this.size, n.push([e, r])) : n[i][1] = r, this
            }, ei.prototype.clear = function() {
                this.size = 0, this.__data__ = {
                    hash: new er,
                    map: new(Z || en),
                    string: new er
                }
            }, ei.prototype.delete = function(e) {
                var r = eh(this, e).delete(e);
                return this.size -= r ? 1 : 0, r
            }, ei.prototype.get = function(e) {
                return eh(this, e).get(e)
            }, ei.prototype.has = function(e) {
                return eh(this, e).has(e)
            }, ei.prototype.set = function(e, r) {
                var n = eh(this, e),
                    i = n.size;
                return n.set(e, r), this.size += n.size == i ? 0 : 1, this
            }, eo.prototype.clear = function() {
                this.__data__ = new en, this.size = 0
            }, eo.prototype.delete = function(e) {
                var r = this.__data__,
                    n = r.delete(e);
                return this.size = r.size, n
            }, eo.prototype.get = function(e) {
                return this.__data__.get(e)
            }, eo.prototype.has = function(e) {
                return this.__data__.has(e)
            }, eo.prototype.set = function(e, r) {
                var n = this.__data__;
                if (n instanceof en) {
                    var i = n.__data__;
                    if (!Z || i.length < 199) return i.push([e, r]), this.size = ++n.size, this;
                    n = this.__data__ = new ei(i)
                }
                return n.set(e, r), this.size = n.size, this
            };
            var eu = function(e, r, n) {
                for (var i = -1, o = Object(e), a = n(e), s = a.length; s--;) {
                    var l = a[++i];
                    if (!1 === r(o[l], l, o)) break
                }
                return e
            };

            function ec(e) {
                return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : K && K in Object(e) ? function(e) {
                    var r = I.call(e, K),
                        n = e[K];
                    try {
                        e[K] = void 0;
                        var i = !0
                    } catch (o) {}
                    var a = F.call(e);
                    return i && (r ? e[K] = n : delete e[K]), a
                }(e) : F.call(e)
            }

            function ed(e) {
                return eS(e) && ec(e) == m
            }

            function eh(e, r) {
                var n, i = e.__data__;
                return ("string" == (n = typeof r) || "number" == n || "symbol" == n || "boolean" == n ? "__proto__" !== r : null === r) ? i["string" == typeof r ? "string" : "hash"] : i.map
            }

            function ef(e, r) {
                var n = null == e ? void 0 : e[r];
                return !(!ek(n) || N && N in n) && (eC(n) ? D : y).test(function(e) {
                    if (null != e) {
                        try {
                            return M.call(e)
                        } catch (r) {}
                        try {
                            return e + ""
                        } catch (n) {}
                    }
                    return ""
                }(n)) ? n : void 0
            }

            function ep(e, r) {
                var n = typeof e;
                return !!(r = null == r ? 9007199254740991 : r) && ("number" == n || "symbol" != n && b.test(e)) && e > -1 && e % 1 == 0 && e < r
            }

            function em(e) {
                var r = e && e.constructor,
                    n = "function" == typeof r && r.prototype || B;
                return e === n
            }

            function eg(e, r) {
                if (("constructor" !== r || "function" != typeof e[r]) && "__proto__" != r) return e[r]
            }
            var ev = (i = Q ? function(e, r) {
                return Q(e, "toString", {
                    configurable: !0,
                    enumerable: !1,
                    value: function() {
                        return r
                    },
                    writable: !0
                })
            } : eT, o = 0, a = 0, function() {
                var e = X(),
                    r = 16 - (e - a);
                if (a = e, r > 0) {
                    if (++o >= 800) return arguments[0]
                } else o = 0;
                return i.apply(void 0, arguments)
            });

            function ey(e, r) {
                return e === r || e != e && r != r
            }
            var eb = ed(function() {
                    return arguments
                }()) ? ed : function(e) {
                    return eS(e) && I.call(e, "callee") && !H.call(e, "callee")
                },
                ew = Array.isArray;

            function ex(e) {
                return null != e && eA(e.length) && !eC(e)
            }
            var eE = J || function() {
                return !1
            };

            function eC(e) {
                if (!ek(e)) return !1;
                var r = ec(e);
                return r == g || "[object GeneratorFunction]" == r || "[object AsyncFunction]" == r || "[object Proxy]" == r
            }

            function eA(e) {
                return "number" == typeof e && e > -1 && e % 1 == 0 && e <= 9007199254740991
            }

            function ek(e) {
                var r = typeof e;
                return null != e && ("object" == r || "function" == r)
            }

            function eS(e) {
                return null != e && "object" == typeof e
            }
            var e_ = j ? function(e) {
                return j(e)
            } : function(e) {
                return eS(e) && eA(e.length) && !!w[ec(e)]
            };

            function eP(e) {
                return ex(e) ? function(e, r) {
                    var n = ew(e),
                        i = !n && eb(e),
                        o = !n && !i && eE(e),
                        a = !n && !i && !o && e_(e),
                        s = n || i || o || a,
                        l = s ? function(e, r) {
                            for (var n = -1, i = Array(e); ++n < e;) i[n] = r(n);
                            return i
                        }(e.length, String) : [],
                        u = l.length;
                    for (var c in e)(r || I.call(e, c)) && !(s && ("length" == c || o && ("offset" == c || "parent" == c) || a && ("buffer" == c || "byteLength" == c || "byteOffset" == c) || ep(c, u))) && l.push(c);
                    return l
                }(e, !0) : function(e) {
                    if (!ek(e)) return function(e) {
                        var r = [];
                        if (null != e)
                            for (var n in Object(e)) r.push(n);
                        return r
                    }(e);
                    var r = em(e),
                        n = [];
                    for (var i in e) "constructor" == i && (r || !I.call(e, i)) || n.push(i);
                    return n
                }(e)
            }
            var ej = (h = function(e, r, n, i) {
                ! function e(r, n, i, o, a) {
                    r !== n && eu(n, function(s, l) {
                        if (a || (a = new eo), ek(s))(function(e, r, n, i, o, a, s) {
                            var l = eg(e, n),
                                u = eg(r, n),
                                c = s.get(u);
                            if (c) {
                                ea(e, n, c);
                                return
                            }
                            var d = a ? a(l, u, n + "", e, r, s) : void 0,
                                h = void 0 === d;
                            if (h) {
                                var f, p, m = ew(u),
                                    g = !m && eE(u),
                                    y = !m && !g && e_(u);
                                d = u, m || g || y ? ew(l) ? d = l : eS(l) && ex(l) ? d = function(e, r) {
                                    var n = -1,
                                        i = e.length;
                                    for (r || (r = Array(i)); ++n < i;) r[n] = e[n];
                                    return r
                                }(l) : g ? (h = !1, d = function(e, r) {
                                    if (r) return e.slice();
                                    var n = e.length,
                                        i = q ? q(n) : new e.constructor(n);
                                    return e.copy(i), i
                                }(u, !0)) : y ? (h = !1, p = new(f = u.buffer).constructor(f.byteLength), new $(p).set(new $(f)), d = new u.constructor(p, u.byteOffset, u.length)) : d = [] : function(e) {
                                    if (!eS(e) || ec(e) != v) return !1;
                                    var r = W(e);
                                    if (null === r) return !0;
                                    var n = I.call(r, "constructor") && r.constructor;
                                    return "function" == typeof n && n instanceof n && M.call(n) == L
                                }(u) || eb(u) ? (d = l, eb(l) ? d = function(e, r, n, i) {
                                    var o = !n;
                                    n || (n = {});
                                    for (var a = -1, s = r.length; ++a < s;) {
                                        var l = r[a],
                                            u = i ? i(n[l], e[l], l, n, e) : void 0;
                                        void 0 === u && (u = e[l]), o ? el(n, l, u) : function(e, r, n) {
                                            var i = e[r];
                                            I.call(e, r) && ey(i, n) && (void 0 !== n || r in e) || el(e, r, n)
                                        }(n, l, u)
                                    }
                                    return n
                                }(l, eP(l)) : (!ek(l) || eC(l)) && (d = "function" != typeof u.constructor || em(u) ? {} : et(W(u)))) : h = !1
                            }
                            h && (s.set(u, d), o(d, u, i, a, s), s.delete(u)), ea(e, n, d)
                        })(r, n, l, i, e, o, a);
                        else {
                            var u = o ? o(eg(r, l), s, l + "", r, n, a) : void 0;
                            void 0 === u && (u = s), ea(r, l, u)
                        }
                    }, eP)
                }(e, r, n, i)
            }, ev((s = f = function(e, r) {
                var n = -1,
                    i = r.length,
                    o = i > 1 ? r[i - 1] : void 0,
                    a = i > 2 ? r[2] : void 0;
                for (o = h.length > 3 && "function" == typeof o ? (i--, o) : void 0, a && function(e, r, n) {
                        if (!ek(n)) return !1;
                        var i = typeof r;
                        return ("number" == i ? !!(ex(n) && ep(r, n.length)) : "string" == i && (r in n)) && ey(n[r], e)
                    }(r[0], r[1], a) && (o = i < 3 ? void 0 : o, i = 1), e = Object(e); ++n < i;) {
                    var s = r[n];
                    s && h(e, s, n, o)
                }
                return e
            }, l = Y((l = void 0, s.length - 1), 0), function() {
                for (var e = arguments, r = -1, n = Y(e.length - l, 0), i = Array(n); ++r < n;) i[r] = e[l + r];
                r = -1;
                for (var o = Array(l + 1); ++r < l;) o[r] = e[r];
                return o[l] = eT(i),
                    function(e, r, n) {
                        switch (n.length) {
                            case 0:
                                return e.call(r);
                            case 1:
                                return e.call(r, n[0]);
                            case 2:
                                return e.call(r, n[0], n[1]);
                            case 3:
                                return e.call(r, n[0], n[1], n[2])
                        }
                        return e.apply(r, n)
                    }(s, this, o)
            }), f + ""));

            function eT(e) {
                return e
            }
            e.exports = ej
        },
        79746: function(e) {
            function r(e, r) {
                if (!e) throw Error(r || "Assertion failed")
            }
            e.exports = r, r.equal = function(e, r, n) {
                if (e != r) throw Error(n || "Assertion failed: " + e + " != " + r)
            }
        },
        6840: function(e, r, n) {
            (window.__NEXT_P = window.__NEXT_P || []).push(["/_app", function() {
                return n(63911)
            }])
        },
        80009: function(e, r, n) {
            "use strict";
            n.d(r, {
                Wk: function() {
                    return s
                },
                vs: function() {
                    return l
                }
            });
            var i = n(85893),
                o = n(67294);
            let a = (0, o.createContext)(void 0),
                s = e => {
                    let {
                        children: r
                    } = e, [n, s] = (0, o.useState)(null);
                    return (0, o.useEffect)(() => {
                        let e = window.localStorage.getItem("theme");
                        null !== e && s("dark" === e)
                    }, []), (0, o.useEffect)(() => {
                        null !== n && (window.localStorage.setItem("theme", n ? "dark" : "light"), n ? document.documentElement.classList.add("dark") : document.documentElement.classList.remove("dark"))
                    }, [n]), (0, i.jsx)(a.Provider, {
                        value: {
                            darkMode: n,
                            setDarkMode: s
                        },
                        children: r
                    })
                };

            function l() {
                let e = (0, o.useContext)(a);
                if (!e) throw Error("useDarkMode must be used within a DarkModeProvider");
                return e
            }
        },
        63911: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                default: function() {
                    return pX
                }
            });
            var i, o, a, s, l, u, c, d, h, f, p, m, g, v, y, b, w, x, E, C, A, k, S, _, P, j, T, R, B, O, M, I, N, F, L, D, z, U, $ = n(85893);
            n(84744), n(91170);
            var q = n(50638),
                W = n(80647),
                V = n(51613),
                H = n(241),
                G = n(56371),
                K = /(imtoken|metamask|rainbow|trust wallet)/i,
                Q = class extends W.wR {
                    constructor(e) {
                        super(e), (0, W.Ko)(this, l), (0, W.ov)(this, "id", "walletConnect"), (0, W.ov)(this, "name", "WalletConnect"), (0, W.ov)(this, "ready", !0), (0, W.Ko)(this, s, void 0), (0, W.ov)(this, "onAccountsChanged", e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, G.getAddress)(e[0])
                            })
                        }), (0, W.ov)(this, "onChainChanged", e => {
                            let r = (0, V.Jk)(e),
                                n = this.isChainUnsupported(r);
                            this.emit("change", {
                                chain: {
                                    id: r,
                                    unsupported: n
                                }
                            })
                        }), (0, W.ov)(this, "onDisconnect", () => {
                            this.emit("disconnect")
                        })
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let r = e;
                            if (!r) {
                                let n = (0, V.s3)().lastUsedChainId;
                                n && !this.isChainUnsupported(n) && (r = n)
                            }
                            let i = await this.getProvider({
                                chainId: r,
                                create: !0
                            });
                            i.on("accountsChanged", this.onAccountsChanged), i.on("chainChanged", this.onChainChanged), i.on("disconnect", this.onDisconnect), setTimeout(() => this.emit("message", {
                                type: "connecting"
                            }), 0);
                            let o = await i.enable(),
                                a = (0, G.getAddress)(o[0]),
                                s = await this.getChainId(),
                                c = this.isChainUnsupported(s),
                                d = i.connector ? .peerMeta ? .name ? ? "";
                            return K.test(d) && (this.switchChain = (0, W.U9)(this, l, u)), {
                                account: a,
                                chain: {
                                    id: s,
                                    unsupported: c
                                },
                                provider: new H.Q(i)
                            }
                        } catch (h) {
                            if (/user closed modal/i.test(h.message)) throw new V.ab(h);
                            throw h
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        await e.disconnect(), e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), "undefined" != typeof localStorage && localStorage.removeItem("walletconnect")
                    }
                    async getAccount() {
                        let e = await this.getProvider(),
                            r = e.accounts;
                        return (0, G.getAddress)(r[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider(),
                            r = (0, V.Jk)(e.chainId);
                        return r
                    }
                    async getProvider({
                        chainId: e,
                        create: r
                    } = {}) {
                        if (!(0, W.ac)(this, s) || e || r) {
                            let i = this.options ? .infuraId ? {} : this.chains.reduce((e, r) => ({ ...e,
                                    [r.id]: r.rpcUrls.default.http[0]
                                }), {}),
                                o = (await Promise.all([n.e(194), n.e(300), n.e(563)]).then(n.bind(n, 82300))).default;
                            (0, W.qx)(this, s, new o({ ...this.options,
                                chainId: e,
                                rpc: { ...i,
                                    ...this.options ? .rpc
                                }
                            }))
                        }
                        return (0, W.ac)(this, s)
                    }
                    async getSigner({
                        chainId: e
                    } = {}) {
                        let [r, n] = await Promise.all([this.getProvider({
                            chainId: e
                        }), this.getAccount()]);
                        return new H.Q(r, e).getSigner(n)
                    }
                    async isAuthorized() {
                        try {
                            let e = await this.getAccount();
                            return !!e
                        } catch {
                            return !1
                        }
                    }
                };
            s = new WeakMap, l = new WeakSet, u = async function(e) {
                let r = await this.getProvider(),
                    n = (0, G.hexValue)(e);
                try {
                    return await Promise.race([r.request({
                        method: "wallet_switchEthereumChain",
                        params: [{
                            chainId: n
                        }]
                    }), new Promise(r => this.on("change", ({
                        chain: n
                    }) => {
                        n ? .id === e && r(e)
                    }))]), this.chains.find(r => r.id === e) ? ? {
                        id: e,
                        name: `Chain ${n}`,
                        network: `${n}`,
                        nativeCurrency: {
                            name: "Ether",
                            decimals: 18,
                            symbol: "ETH"
                        },
                        rpcUrls: {
                            default: {
                                http: [""]
                            }
                        }
                    }
                } catch (o) {
                    let i = "string" == typeof o ? o : o ? .message;
                    if (/user rejected request/i.test(i)) throw new V.ab(o);
                    throw new V.x3(o)
                }
            };
            var J = n(23326),
                Y = class extends W.wR {
                    constructor({
                        chains: e,
                        options: r
                    }) {
                        super({
                            chains: e,
                            options: {
                                reloadOnDisconnect: !1,
                                ...r
                            }
                        }), (0, W.Ko)(this, h), (0, W.ov)(this, "id", "coinbaseWallet"), (0, W.ov)(this, "name", "Coinbase Wallet"), (0, W.ov)(this, "ready", !0), (0, W.Ko)(this, c, void 0), (0, W.Ko)(this, d, void 0), (0, W.ov)(this, "onAccountsChanged", e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, G.getAddress)(e[0])
                            })
                        }), (0, W.ov)(this, "onChainChanged", e => {
                            let r = (0, V.Jk)(e),
                                n = this.isChainUnsupported(r);
                            this.emit("change", {
                                chain: {
                                    id: r,
                                    unsupported: n
                                }
                            })
                        }), (0, W.ov)(this, "onDisconnect", () => {
                            this.emit("disconnect")
                        })
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let r = await this.getProvider();
                            r.on("accountsChanged", this.onAccountsChanged), r.on("chainChanged", this.onChainChanged), r.on("disconnect", this.onDisconnect), this.emit("message", {
                                type: "connecting"
                            });
                            let n = await r.enable(),
                                i = (0, G.getAddress)(n[0]),
                                o = await this.getChainId(),
                                a = this.isChainUnsupported(o);
                            if (e && o !== e) {
                                let s = await this.switchChain(e);
                                o = s.id, a = this.isChainUnsupported(o)
                            }
                            return {
                                account: i,
                                chain: {
                                    id: o,
                                    unsupported: a
                                },
                                provider: new H.Q(r)
                            }
                        } catch (l) {
                            if (/(user closed modal|accounts received is empty)/i.test(l.message)) throw new V.ab(l);
                            throw l
                        }
                    }
                    async disconnect() {
                        if (!(0, W.ac)(this, d)) return;
                        let e = await this.getProvider();
                        e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), e.disconnect(), e.close()
                    }
                    async getAccount() {
                        let e = await this.getProvider(),
                            r = await e.request({
                                method: "eth_accounts"
                            });
                        return (0, G.getAddress)(r[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider(),
                            r = (0, V.Jk)(e.chainId);
                        return r
                    }
                    async getProvider() {
                        if (!(0, W.ac)(this, d)) {
                            let e = (await Promise.all([n.e(194), n.e(811), n.e(942)]).then(n.t.bind(n, 45811, 19))).default;
                            "function" != typeof e && "function" == typeof e.default && (e = e.default), (0, W.qx)(this, c, new e(this.options));
                            let r = W.ac(this, c).walletExtension ? .getChainId(),
                                i = this.chains.find(e => this.options.chainId ? e.id === this.options.chainId : e.id === r) || this.chains[0],
                                o = this.options.chainId || i ? .id,
                                a = this.options.jsonRpcUrl || i ? .rpcUrls.default.http[0];
                            (0, W.qx)(this, d, (0, W.ac)(this, c).makeWeb3Provider(a, o))
                        }
                        return (0, W.ac)(this, d)
                    }
                    async getSigner({
                        chainId: e
                    } = {}) {
                        let [r, n] = await Promise.all([this.getProvider(), this.getAccount()]);
                        return new H.Q(r, e).getSigner(n)
                    }
                    async isAuthorized() {
                        try {
                            let e = await this.getAccount();
                            return !!e
                        } catch {
                            return !1
                        }
                    }
                    async switchChain(e) {
                        let r = await this.getProvider(),
                            n = (0, G.hexValue)(e);
                        try {
                            return await r.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: n
                                }]
                            }), this.chains.find(r => r.id === e) ? ? {
                                id: e,
                                name: `Chain ${n}`,
                                network: `${n}`,
                                nativeCurrency: {
                                    name: "Ether",
                                    decimals: 18,
                                    symbol: "ETH"
                                },
                                rpcUrls: {
                                    default: {
                                        http: [""]
                                    }
                                }
                            }
                        } catch (a) {
                            let i = this.chains.find(r => r.id === e);
                            if (!i) throw new V.X4({
                                chainId: e,
                                connectorId: this.id
                            });
                            if (4902 === a.code) try {
                                return await r.request({
                                    method: "wallet_addEthereumChain",
                                    params: [{
                                        chainId: n,
                                        chainName: i.name,
                                        nativeCurrency: i.nativeCurrency,
                                        rpcUrls: [i.rpcUrls.public ? .http[0] ? ? i.rpcUrls.default.http[0]],
                                        blockExplorerUrls: this.getBlockExplorerUrls(i)
                                    }]
                                }), i
                            } catch (o) {
                                if ((0, W.U9)(this, h, f).call(this, o)) throw new V.ab(o);
                                throw new V.iA
                            }
                            if ((0, W.U9)(this, h, f).call(this, a)) throw new V.ab(a);
                            throw new V.x3(a)
                        }
                    }
                    async watchAsset({
                        address: e,
                        decimals: r = 18,
                        image: n,
                        symbol: i
                    }) {
                        let o = await this.getProvider();
                        return o.request({
                            method: "wallet_watchAsset",
                            params: {
                                type: "ERC20",
                                options: {
                                    address: e,
                                    decimals: r,
                                    image: n,
                                    symbol: i
                                }
                            }
                        })
                    }
                };
            c = new WeakMap, d = new WeakMap, h = new WeakSet, f = function(e) {
                return /(user rejected)/i.test(e.message)
            };
            var X = class extends J._ {
                constructor({
                    chains: e,
                    options: r
                } = {}) {
                    let n = {
                        name: "MetaMask",
                        shimDisconnect: !0,
                        shimChainChangedDisconnect: !0,
                        getProvider() {
                            function e(e) {
                                let r = !!e ? .isMetaMask;
                                if (r && (!e.isBraveWallet || e._events || e._state) && !e.isAvalanche && !e.isKuCoinWallet && !e.isPortal && !e.isTokenPocket && !e.isTokenary) return e
                            }
                            if ("undefined" != typeof window) return window.ethereum ? .providers ? window.ethereum.providers.find(e) : e(window.ethereum)
                        },
                        ...r
                    };
                    super({
                        chains: e,
                        options: n
                    }), (0, W.ov)(this, "id", "metaMask"), (0, W.Ko)(this, p, void 0), (0, W.qx)(this, p, n.UNSTABLE_shimOnConnectSelectAccount)
                }
                async connect({
                    chainId: e
                } = {}) {
                    try {
                        let r = await this.getProvider();
                        if (!r) throw new V.Nu;
                        r.on && (r.on("accountsChanged", this.onAccountsChanged), r.on("chainChanged", this.onChainChanged), r.on("disconnect", this.onDisconnect)), this.emit("message", {
                            type: "connecting"
                        });
                        let n = null;
                        if ((0, W.ac)(this, p) && this.options ? .shimDisconnect && !V.s3().storage ? .getItem(this.shimDisconnectKey)) {
                            n = await this.getAccount().catch(() => null);
                            let i = !!n;
                            if (i) try {
                                await r.request({
                                    method: "wallet_requestPermissions",
                                    params: [{
                                        eth_accounts: {}
                                    }]
                                }), n = await this.getAccount()
                            } catch (o) {
                                if (this.isUserRejectedRequestError(o)) throw new V.ab(o)
                            }
                        }
                        if (!n) {
                            let a = await r.request({
                                method: "eth_requestAccounts"
                            });
                            n = (0, G.getAddress)(a[0])
                        }
                        let s = await this.getChainId(),
                            l = this.isChainUnsupported(s);
                        if (e && s !== e) {
                            let u = await this.switchChain(e);
                            s = u.id, l = this.isChainUnsupported(s)
                        }
                        return this.options ? .shimDisconnect && V.s3().storage ? .setItem(this.shimDisconnectKey, !0), {
                            account: n,
                            chain: {
                                id: s,
                                unsupported: l
                            },
                            provider: r
                        }
                    } catch (c) {
                        if (this.isUserRejectedRequestError(c)) throw new V.ab(c);
                        if (-32002 === c.code) throw new V.TA(c);
                        throw c
                    }
                }
            };
            p = new WeakMap;
            var Z = n(67294),
                ee = n.t(Z, 2),
                et = e => () => {
                    let r = -1,
                        n = [],
                        i = [],
                        o = [],
                        a = [];
                    e.forEach(({
                        groupName: e,
                        wallets: n
                    }, a) => {
                        n.forEach(n => {
                            if (r++, (null == n ? void 0 : n.iconAccent) && !(0, q.A7)(null == n ? void 0 : n.iconAccent)) throw Error(`Property \`iconAccent\` is not a hex value for wallet: ${n.name}`);
                            let s = { ...n,
                                groupIndex: a,
                                groupName: e,
                                index: r
                            };
                            "function" == typeof n.hidden ? o.push(s) : i.push(s)
                        })
                    });
                    let s = [...i, ...o];
                    return s.forEach(({
                        createConnector: e,
                        groupIndex: r,
                        groupName: i,
                        hidden: o,
                        index: s,
                        ...l
                    }) => {
                        let u;
                        if ("function" == typeof o) {
                            let c = o({
                                wallets: [...a.map(({
                                    connector: e,
                                    id: r,
                                    installed: n
                                }) => ({
                                    connector: e,
                                    id: r,
                                    installed: n
                                }))]
                            });
                            if (c) return
                        }
                        let {
                            connector: d,
                            ...h
                        } = Object.fromEntries(Object.entries(e()).filter(([e, r]) => void 0 !== r));
                        if ("walletConnect" === l.id && h.qrCode && !(0, q.tq)()) {
                            let {
                                chains: f,
                                options: p
                            } = d;
                            u = new Q({
                                chains: f,
                                options: { ...p,
                                    qrcode: !0
                                }
                            }), n.push(u)
                        }
                        let m = {
                            connector: d,
                            groupIndex: r,
                            groupName: i,
                            index: s,
                            walletConnectModalConnector: u,
                            ...l,
                            ...h
                        };
                        a.push(m), n.includes(d) || (n.push(d), d._wallets = []), d._wallets.push(m)
                    }), n
                },
                er = ({
                    chains: e,
                    shimDisconnect: r
                }) => {
                    var i;
                    return {
                        id: "brave",
                        name: "Brave Wallet",
                        iconUrl: async () => (await n.e(564).then(n.bind(n, 67564))).default,
                        iconBackground: "#fff",
                        installed: "undefined" != typeof window && (null == (i = window.ethereum) ? void 0 : i.isBraveWallet) === !0,
                        downloadUrls: {},
                        createConnector: () => ({
                            connector: new J._({
                                chains: e,
                                options: {
                                    shimDisconnect: r
                                }
                            })
                        })
                    }
                },
                en = ({
                    appName: e,
                    chains: r
                }) => {
                    var i;
                    let o = "undefined" != typeof window && (null == (i = window.ethereum) ? void 0 : i.isCoinbaseWallet) === !0;
                    return {
                        id: "coinbase",
                        name: "Coinbase Wallet",
                        shortName: "Coinbase",
                        iconUrl: async () => (await n.e(22).then(n.bind(n, 21022))).default,
                        iconAccent: "#2c5ff6",
                        iconBackground: "#2c5ff6",
                        installed: o || void 0,
                        downloadUrls: {
                            browserExtension: "https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad",
                            android: "https://play.google.com/store/apps/details?id=org.toshi",
                            ios: "https://apps.apple.com/us/app/coinbase-wallet-store-crypto/id1278383455",
                            qrCode: "https://coinbase-wallet.onelink.me/q5Sx/fdb9b250"
                        },
                        createConnector: () => {
                            let n = (0, q.gn)(),
                                i = new Y({
                                    chains: r,
                                    options: {
                                        appName: e,
                                        headlessMode: !0
                                    }
                                }),
                                o = async () => (await i.getProvider()).qrUrl;
                            return {
                                connector: i,
                                ...n ? {} : {
                                    qrCode: {
                                        getUri: o,
                                        instructions: {
                                            learnMoreUrl: "https://www.coinbase.com/learn/tips-and-tutorials/how-to-set-up-a-crypto-wallet",
                                            steps: [{
                                                description: "We recommend putting Coinbase Wallet on your home screen for quicker access.",
                                                step: "install",
                                                title: "Open the Coinbase Wallet app"
                                            }, {
                                                description: "You can easily backup your wallet using the cloud backup feature.",
                                                step: "create",
                                                title: "Create or Import a Wallet"
                                            }, {
                                                description: "After you scan, a connection prompt will appear for you to connect your wallet.",
                                                step: "scan",
                                                title: "Tap the scan button"
                                            }]
                                        }
                                    },
                                    extension: {
                                        instructions: {
                                            steps: [{
                                                description: "We recommend pinning Coinbase Wallet to your taskbar for quicker access to your wallet.",
                                                step: "install",
                                                title: "Install the Coinbase Wallet extension"
                                            }, {
                                                description: "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                                                step: "create",
                                                title: "Create or Import a Wallet"
                                            }, {
                                                description: "Once you set up your wallet, click below to refresh the browser and load up the extension.",
                                                step: "refresh",
                                                title: "Refresh your browser"
                                            }]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                ei = ({
                    chains: e,
                    shimDisconnect: r
                }) => ({
                    id: "injected",
                    name: "Injected Wallet",
                    iconUrl: async () => (await n.e(258).then(n.bind(n, 82258))).default,
                    iconBackground: "#fff",
                    hidden: ({
                        wallets: e
                    }) => e.some(e => e.installed && (e.connector instanceof J._ || "coinbase" === e.id)),
                    createConnector: () => ({
                        connector: new J._({
                            chains: e,
                            options: {
                                shimDisconnect: r
                            }
                        })
                    })
                }),
                eo = new Map;

            function ea({
                chains: e,
                qrcode: r = !1
            }) {
                let n = {
                        chains: e,
                        options: {
                            qrcode: r
                        }
                    },
                    i = JSON.stringify(n),
                    o = eo.get(i);
                return null != o ? o : function(e) {
                    let r = new Q(e);
                    return eo.set(JSON.stringify(e), r), r
                }(n)
            }
            var es = ({
                    chains: e,
                    shimDisconnect: r
                }) => {
                    let i = "undefined" != typeof window && void 0 !== window.ethereum && function(e) {
                            let r = Boolean(e.isMetaMask);
                            return !!r && (!e.isBraveWallet || !!e._events || !!e._state) && !e.isTokenPocket && !e.isTokenary
                        }(window.ethereum),
                        o = !i;
                    return {
                        id: "metaMask",
                        name: "MetaMask",
                        iconUrl: async () => (await n.e(652).then(n.bind(n, 47652))).default,
                        iconAccent: "#f6851a",
                        iconBackground: "#fff",
                        installed: o ? void 0 : i,
                        downloadUrls: {
                            browserExtension: "https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en",
                            android: "https://play.google.com/store/apps/details?id=io.metamask",
                            ios: "https://apps.apple.com/us/app/metamask/id1438144202",
                            qrCode: "https://metamask.io/download/"
                        },
                        createConnector: () => {
                            let n = o ? ea({
                                    chains: e
                                }) : new X({
                                    chains: e,
                                    options: {
                                        shimDisconnect: r
                                    }
                                }),
                                i = async () => {
                                    let {
                                        uri: e
                                    } = (await n.getProvider()).connector;
                                    return (0, q.Dt)() ? e : `https://metamask.app.link/wc?uri=${encodeURIComponent(e)}`
                                };
                            return {
                                connector: n,
                                mobile: {
                                    getUri: o ? i : void 0
                                },
                                qrCode: o ? {
                                    getUri: i,
                                    instructions: {
                                        learnMoreUrl: "https://metamask.io/faqs/",
                                        steps: [{
                                            description: "We recommend putting MetaMask on your home screen for quicker access.",
                                            step: "install",
                                            title: "Open the MetaMask app"
                                        }, {
                                            description: "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                                            step: "create",
                                            title: "Create or Import a Wallet"
                                        }, {
                                            description: "After you scan, a connection prompt will appear for you to connect your wallet.",
                                            step: "scan",
                                            title: "Tap the scan button"
                                        }]
                                    }
                                } : void 0,
                                extension: {
                                    learnMoreUrl: "https://metamask.io/faqs/",
                                    instructions: {
                                        steps: [{
                                            description: "We recommend pinning MetaMask to your taskbar for quicker access to your wallet.",
                                            step: "install",
                                            title: "Install the MetaMask extension"
                                        }, {
                                            description: "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                                            step: "create",
                                            title: "Create or Import a Wallet"
                                        }, {
                                            description: "Once you set up your wallet, click below to refresh the browser and load up the extension.",
                                            step: "refresh",
                                            title: "Refresh your browser"
                                        }]
                                    }
                                }
                            }
                        }
                    }
                },
                el = ({
                    chains: e,
                    shimDisconnect: r
                }) => {
                    let i = "undefined" != typeof window && void 0 !== window.ethereum && function(e) {
                            let r = Boolean(e.isRainbow);
                            return !!r
                        }(window.ethereum),
                        o = !i;
                    return {
                        id: "rainbow",
                        name: "Rainbow",
                        iconUrl: async () => (await n.e(48).then(n.bind(n, 78048))).default,
                        iconBackground: "#0c2f78",
                        downloadUrls: {
                            android: "https://play.google.com/store/apps/details?id=me.rainbow",
                            ios: "https://apps.apple.com/us/app/rainbow-ethereum-wallet/id1457119021",
                            qrCode: "https://rainbow.download"
                        },
                        createConnector: () => {
                            let n = o ? ea({
                                    chains: e
                                }) : new J._({
                                    chains: e,
                                    options: {
                                        shimDisconnect: r
                                    }
                                }),
                                i = async () => {
                                    let {
                                        uri: e
                                    } = (await n.getProvider()).connector;
                                    return (0, q.Dt)() ? e : `https://rnbwapp.com/wc?uri=${encodeURIComponent(e)}`
                                };
                            return {
                                connector: n,
                                mobile: {
                                    getUri: o ? i : void 0
                                },
                                qrCode: o ? {
                                    getUri: i,
                                    instructions: {
                                        learnMoreUrl: "https://learn.rainbow.me/connect-your-wallet-to-a-website-or-app",
                                        steps: [{
                                            description: "We recommend putting Rainbow on your home screen for faster access to your wallet.",
                                            step: "install",
                                            title: "Open the Rainbow app"
                                        }, {
                                            description: "You can easily backup your wallet using our backup feature on your phone.",
                                            step: "create",
                                            title: "Create or Import a Wallet"
                                        }, {
                                            description: "After you scan, a connection prompt will appear for you to connect your wallet.",
                                            step: "scan",
                                            title: "Tap the scan button"
                                        }]
                                    }
                                } : void 0
                            }
                        }
                    }
                },
                eu = ({
                    chains: e
                }) => ({
                    id: "walletConnect",
                    name: "WalletConnect",
                    iconUrl: async () => (await n.e(430).then(n.bind(n, 20430))).default,
                    iconBackground: "#3b99fc",
                    createConnector: () => {
                        let r = (0, q.gn)(),
                            n = ea({
                                chains: e,
                                qrcode: r
                            }),
                            i = async () => (await n.getProvider()).connector.uri;
                        return {
                            connector: n,
                            ...r ? {} : {
                                mobile: {
                                    getUri: i
                                },
                                qrCode: {
                                    getUri: i
                                }
                            }
                        }
                    }
                });
            q.xZ, q.Bg, q.VQ, q.UG;
            var ec = n(93152),
                ed = "#1A1B1F",
                eh = {
                    blue: {
                        accentColor: "#3898FF",
                        accentColorForeground: "#FFF"
                    },
                    green: {
                        accentColor: "#4BD166",
                        accentColorForeground: ed
                    },
                    orange: {
                        accentColor: "#FF983D",
                        accentColorForeground: ed
                    },
                    pink: {
                        accentColor: "#FF7AB8",
                        accentColorForeground: ed
                    },
                    purple: {
                        accentColor: "#7A70FF",
                        accentColorForeground: "#FFF"
                    },
                    red: {
                        accentColor: "#FF6257",
                        accentColorForeground: "#FFF"
                    }
                },
                ef = eh.blue,
                ep = ({
                    accentColor: e = ef.accentColor,
                    accentColorForeground: r = ef.accentColorForeground,
                    ...n
                } = {}) => ({ ...(0, ec.w)(n),
                    colors: {
                        accentColor: e,
                        accentColorForeground: r,
                        actionButtonBorder: "rgba(255, 255, 255, 0.04)",
                        actionButtonBorderMobile: "rgba(255, 255, 255, 0.08)",
                        actionButtonSecondaryBackground: "rgba(255, 255, 255, 0.08)",
                        closeButton: "rgba(224, 232, 255, 0.6)",
                        closeButtonBackground: "rgba(255, 255, 255, 0.08)",
                        connectButtonBackground: ed,
                        connectButtonBackgroundError: "#FF494A",
                        connectButtonInnerBackground: "linear-gradient(0deg, rgba(255, 255, 255, 0.075), rgba(255, 255, 255, 0.15))",
                        connectButtonText: "#FFF",
                        connectButtonTextError: "#FFF",
                        connectionIndicator: "#30E000",
                        downloadBottomCardBackground: "linear-gradient(126deg, rgba(0, 0, 0, 0) 9.49%, rgba(120, 120, 120, 0.2) 71.04%), #1A1B1F",
                        downloadTopCardBackground: "linear-gradient(126deg, rgba(120, 120, 120, 0.2) 9.49%, rgba(0, 0, 0, 0) 71.04%), #1A1B1F",
                        error: "#FF494A",
                        generalBorder: "rgba(255, 255, 255, 0.08)",
                        generalBorderDim: "rgba(255, 255, 255, 0.04)",
                        menuItemBackground: "rgba(224, 232, 255, 0.1)",
                        modalBackdrop: "rgba(0, 0, 0, 0.5)",
                        modalBackground: "#1A1B1F",
                        modalBorder: "rgba(255, 255, 255, 0.08)",
                        modalText: "#FFF",
                        modalTextDim: "rgba(224, 232, 255, 0.3)",
                        modalTextSecondary: "rgba(255, 255, 255, 0.6)",
                        profileAction: "rgba(224, 232, 255, 0.1)",
                        profileActionHover: "rgba(224, 232, 255, 0.2)",
                        profileForeground: "rgba(224, 232, 255, 0.05)",
                        selectedOptionBorder: "rgba(224, 232, 255, 0.1)",
                        standby: "#FFD641"
                    },
                    shadows: {
                        connectButton: "0px 4px 12px rgba(0, 0, 0, 0.1)",
                        dialog: "0px 8px 32px rgba(0, 0, 0, 0.32)",
                        profileDetailsAction: "0px 2px 6px rgba(37, 41, 46, 0.04)",
                        selectedOption: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                        selectedWallet: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                        walletLogo: "0px 2px 16px rgba(0, 0, 0, 0.16)"
                    }
                });
            ep.accentColors = eh;
            var em = n(69077),
                eg = n(24484),
                ev = n(86501),
                ey = n(9008),
                eb = n.n(ey);

            function ew(e) {
                return (0, $.jsxs)($.Fragment, {
                    children: [(0, $.jsxs)(eb(), {
                        children: [(0, $.jsx)("title", {
                            children: "Duplicate"
                        }), (0, $.jsx)("meta", {
                            name: "description",
                            content: "Deploy and Manage your own token"
                        }), (0, $.jsx)("meta", {
                            property: "og:title",
                            content: "Duplicate Launchpad"
                        }), (0, $.jsx)("meta", {
                            property: "og:description",
                            content: "Deploy and Manage your own token"
                        }), (0, $.jsx)("meta", {
                            property: "og:image",
                            content: "/interface.png"
                        }), (0, $.jsx)("link", {
                            rel: "icon",
                            href: "/favicon.ico"
                        })]
                    }), (0, $.jsx)("header", {}), (0, $.jsx)("main", {
                        children: e.children
                    })]
                })
            }
            var ex = n(6881),
                eE = n(2593),
                eC = n(82169),
                eA = n(1581),
                ek = n(34216);
            let eS = null;
            try {
                if (eS = WebSocket, null == eS) throw Error("inject please")
            } catch (eP) {
                let e_ = new eA.Logger(ek.i);
                eS = function() {
                    e_.throwError("WebSockets not supported in this environment", eA.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "new WebSocket()"
                    })
                }
            }
            var ej = function(e, r, n, i) {
                return new(n || (n = Promise))(function(o, a) {
                    function s(e) {
                        try {
                            u(i.next(e))
                        } catch (r) {
                            a(r)
                        }
                    }

                    function l(e) {
                        try {
                            u(i.throw(e))
                        } catch (r) {
                            a(r)
                        }
                    }

                    function u(e) {
                        var r;
                        e.done ? o(e.value) : ((r = e.value) instanceof n ? r : new n(function(e) {
                            e(r)
                        })).then(s, l)
                    }
                    u((i = i.apply(e, r || [])).next())
                })
            };
            let eT = new eA.Logger(ek.i),
                eR = 1;
            class eB extends eC.r {
                constructor(e, r) {
                    "any" === r && eT.throwError("WebSocketProvider does not support 'any' network yet", eA.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "network:any"
                    }), "string" == typeof e ? super(e, r) : super("_websocket", r), this._pollingInterval = -1, this._wsReady = !1, "string" == typeof e ? (0, ex.defineReadOnly)(this, "_websocket", new eS(this.connection.url)) : (0, ex.defineReadOnly)(this, "_websocket", e), (0, ex.defineReadOnly)(this, "_requests", {}), (0, ex.defineReadOnly)(this, "_subs", {}), (0, ex.defineReadOnly)(this, "_subIds", {}), (0, ex.defineReadOnly)(this, "_detectNetwork", super.detectNetwork()), this.websocket.onopen = () => {
                        this._wsReady = !0, Object.keys(this._requests).forEach(e => {
                            this.websocket.send(this._requests[e].payload)
                        })
                    }, this.websocket.onmessage = e => {
                        let r = e.data,
                            n = JSON.parse(r);
                        if (null != n.id) {
                            let i = String(n.id),
                                o = this._requests[i];
                            if (delete this._requests[i], void 0 !== n.result) o.callback(null, n.result), this.emit("debug", {
                                action: "response",
                                request: JSON.parse(o.payload),
                                response: n.result,
                                provider: this
                            });
                            else {
                                let a = null;
                                n.error ? (a = Error(n.error.message || "unknown error"), (0, ex.defineReadOnly)(a, "code", n.error.code || null), (0, ex.defineReadOnly)(a, "response", r)) : a = Error("unknown error"), o.callback(a, void 0), this.emit("debug", {
                                    action: "response",
                                    error: a,
                                    request: JSON.parse(o.payload),
                                    provider: this
                                })
                            }
                        } else if ("eth_subscription" === n.method) {
                            let s = this._subs[n.params.subscription];
                            s && s.processFunc(n.params.result)
                        } else console.warn("this should not happen")
                    };
                    let n = setInterval(() => {
                        this.emit("poll")
                    }, 1e3);
                    n.unref && n.unref()
                }
                get websocket() {
                    return this._websocket
                }
                detectNetwork() {
                    return this._detectNetwork
                }
                get pollingInterval() {
                    return 0
                }
                resetEventsBlock(e) {
                    eT.throwError("cannot reset events block on WebSocketProvider", eA.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "resetEventBlock"
                    })
                }
                set pollingInterval(e) {
                    eT.throwError("cannot set polling interval on WebSocketProvider", eA.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setPollingInterval"
                    })
                }
                poll() {
                    return ej(this, void 0, void 0, function*() {
                        return null
                    })
                }
                set polling(e) {
                    e && eT.throwError("cannot set polling on WebSocketProvider", eA.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setPolling"
                    })
                }
                send(e, r) {
                    let n = eR++;
                    return new Promise((i, o) => {
                        let a = JSON.stringify({
                            method: e,
                            params: r,
                            id: n,
                            jsonrpc: "2.0"
                        });
                        this.emit("debug", {
                            action: "request",
                            request: JSON.parse(a),
                            provider: this
                        }), this._requests[String(n)] = {
                            callback: function(e, r) {
                                return e ? o(e) : i(r)
                            },
                            payload: a
                        }, this._wsReady && this.websocket.send(a)
                    })
                }
                static defaultUrl() {
                    return "ws://localhost:8546"
                }
                _subscribe(e, r, n) {
                    return ej(this, void 0, void 0, function*() {
                        let i = this._subIds[e];
                        null == i && (i = Promise.all(r).then(e => this.send("eth_subscribe", e)), this._subIds[e] = i);
                        let o = yield i;
                        this._subs[o] = {
                            tag: e,
                            processFunc: n
                        }
                    })
                }
                _startEvent(e) {
                    switch (e.type) {
                        case "block":
                            this._subscribe("block", ["newHeads"], e => {
                                let r = eE.O$.from(e.number).toNumber();
                                this._emitted.block = r, this.emit("block", r)
                            });
                            break;
                        case "pending":
                            this._subscribe("pending", ["newPendingTransactions"], e => {
                                this.emit("pending", e)
                            });
                            break;
                        case "filter":
                            this._subscribe(e.tag, ["logs", this._getFilter(e.filter)], r => {
                                null == r.removed && (r.removed = !1), this.emit(e.filter, this.formatter.filterLog(r))
                            });
                            break;
                        case "tx":
                            {
                                let r = e => {
                                    let r = e.hash;
                                    this.getTransactionReceipt(r).then(e => {
                                        e && this.emit(r, e)
                                    })
                                };r(e),
                                this._subscribe("tx", ["newHeads"], e => {
                                    this._events.filter(e => "tx" === e.type).forEach(r)
                                });
                                break
                            }
                        case "debug":
                        case "poll":
                        case "willPoll":
                        case "didPoll":
                        case "error":
                            break;
                        default:
                            console.log("unhandled:", e)
                    }
                }
                _stopEvent(e) {
                    let r = e.tag;
                    if ("tx" === e.type) {
                        if (this._events.filter(e => "tx" === e.type).length) return;
                        r = "tx"
                    } else if (this.listenerCount(e.event)) return;
                    let n = this._subIds[r];
                    n && (delete this._subIds[r], n.then(e => {
                        this._subs[e] && (delete this._subs[e], this.send("eth_unsubscribe", [e]))
                    }))
                }
                destroy() {
                    return ej(this, void 0, void 0, function*() {
                        this.websocket.readyState === eS.CONNECTING && (yield new Promise(e => {
                            this.websocket.onopen = function() {
                                e(!0)
                            }, this.websocket.onerror = function() {
                                e(!1)
                            }
                        })), this.websocket.close(1e3)
                    })
                }
            }
            var eO = n(30032);
            let eM = new eA.Logger(ek.i);
            class eI extends eC.r {
                detectNetwork() {
                    var e, r, n, i;
                    let o = Object.create(null, {
                        detectNetwork: {
                            get: () => super.detectNetwork
                        }
                    });
                    return e = this, r = void 0, n = void 0, i = function*() {
                        let e = this.network;
                        return null == e && ((e = yield o.detectNetwork.call(this)) || eM.throwError("no network detected", eA.Logger.errors.UNKNOWN_ERROR, {}), null == this._network && ((0, ex.defineReadOnly)(this, "_network", e), this.emit("network", e, null))), e
                    }, new(n || (n = Promise))(function(o, a) {
                        function s(e) {
                            try {
                                u(i.next(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function l(e) {
                            try {
                                u(i.throw(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? o(e.value) : ((r = e.value) instanceof n ? r : new n(function(e) {
                                e(r)
                            })).then(s, l)
                        }
                        u((i = i.apply(e, r || [])).next())
                    })
                }
            }
            class eN extends eI {
                constructor(e, r) {
                    eM.checkAbstract(new.target, eN), e = (0, ex.getStatic)(new.target, "getNetwork")(e), r = (0, ex.getStatic)(new.target, "getApiKey")(r);
                    let n = (0, ex.getStatic)(new.target, "getUrl")(e, r);
                    super(n, e), "string" == typeof r ? (0, ex.defineReadOnly)(this, "apiKey", r) : null != r && Object.keys(r).forEach(e => {
                        (0, ex.defineReadOnly)(this, e, r[e])
                    })
                }
                _startPending() {
                    eM.warn("WARNING: API provider does not support pending filters")
                }
                isCommunityResource() {
                    return !1
                }
                getSigner(e) {
                    return eM.throwError("API provider does not support signing", eA.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "getSigner"
                    })
                }
                listAccounts() {
                    return Promise.resolve([])
                }
                static getApiKey(e) {
                    return e
                }
                static getUrl(e, r) {
                    return eM.throwError("not implemented; sub-classes must override getUrl", eA.Logger.errors.NOT_IMPLEMENTED, {
                        operation: "getUrl"
                    })
                }
            }
            let eF = new eA.Logger(ek.i),
                eL = "84842078b09946638c03157f83405213";
            class eD extends eB {
                constructor(e, r) {
                    let n = new ez(e, r),
                        i = n.connection;
                    i.password && eF.throwError("INFURA WebSocket project secrets unsupported", eA.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "InfuraProvider.getWebSocketProvider()"
                    });
                    let o = i.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
                    super(o, e), (0, ex.defineReadOnly)(this, "apiKey", n.projectId), (0, ex.defineReadOnly)(this, "projectId", n.projectId), (0, ex.defineReadOnly)(this, "projectSecret", n.projectSecret)
                }
                isCommunityResource() {
                    return this.projectId === eL
                }
            }
            class ez extends eN {
                static getWebSocketProvider(e, r) {
                    return new eD(e, r)
                }
                static getApiKey(e) {
                    let r = {
                        apiKey: eL,
                        projectId: eL,
                        projectSecret: null
                    };
                    return null == e || ("string" == typeof e ? r.projectId = e : null != e.projectSecret ? (eF.assertArgument("string" == typeof e.projectId, "projectSecret requires a projectId", "projectId", e.projectId), eF.assertArgument("string" == typeof e.projectSecret, "invalid projectSecret", "projectSecret", "[REDACTED]"), r.projectId = e.projectId, r.projectSecret = e.projectSecret) : e.projectId && (r.projectId = e.projectId), r.apiKey = r.projectId), r
                }
                static getUrl(e, r) {
                    let n = null;
                    switch (e ? e.name : "unknown") {
                        case "homestead":
                            n = "mainnet.infura.io";
                            break;
                        case "goerli":
                            n = "goerli.infura.io";
                            break;
                        case "sepolia":
                            n = "sepolia.infura.io";
                            break;
                        case "matic":
                            n = "polygon-mainnet.infura.io";
                            break;
                        case "maticmum":
                            n = "polygon-mumbai.infura.io";
                            break;
                        case "optimism":
                            n = "optimism-mainnet.infura.io";
                            break;
                        case "optimism-goerli":
                            n = "optimism-goerli.infura.io";
                            break;
                        case "arbitrum":
                            n = "arbitrum-mainnet.infura.io";
                            break;
                        case "arbitrum-goerli":
                            n = "arbitrum-goerli.infura.io";
                            break;
                        default:
                            eF.throwError("unsupported network", eA.Logger.errors.INVALID_ARGUMENT, {
                                argument: "network",
                                value: e
                            })
                    }
                    let i = {
                        allowGzip: !0,
                        url: "https://" + n + "/v3/" + r.projectId,
                        throttleCallback: (e, n) => (r.projectId === eL && (0, eO.vh)(), Promise.resolve(!0))
                    };
                    return null != r.projectSecret && (i.user = "", i.password = r.projectSecret), i
                }
                isCommunityResource() {
                    return this.projectId === eL
                }
            }
            var eU = function() {
                    function e(e) {
                        var r = this;
                        this._insertTag = function(e) {
                            var n;
                            n = 0 === r.tags.length ? r.insertionPoint ? r.insertionPoint.nextSibling : r.prepend ? r.container.firstChild : r.before : r.tags[r.tags.length - 1].nextSibling, r.container.insertBefore(e, n), r.tags.push(e)
                        }, this.isSpeedy = void 0 === e.speedy || e.speedy, this.tags = [], this.ctr = 0, this.nonce = e.nonce, this.key = e.key, this.container = e.container, this.prepend = e.prepend, this.insertionPoint = e.insertionPoint, this.before = null
                    }
                    var r = e.prototype;
                    return r.hydrate = function(e) {
                        e.forEach(this._insertTag)
                    }, r.insert = function(e) {
                        if (this.ctr % (this.isSpeedy ? 65e3 : 1) == 0) {
                            var r;
                            this._insertTag(((r = document.createElement("style")).setAttribute("data-emotion", this.key), void 0 !== this.nonce && r.setAttribute("nonce", this.nonce), r.appendChild(document.createTextNode("")), r.setAttribute("data-s", ""), r))
                        }
                        var n = this.tags[this.tags.length - 1];
                        if (this.isSpeedy) {
                            var i = function(e) {
                                if (e.sheet) return e.sheet;
                                for (var r = 0; r < document.styleSheets.length; r++)
                                    if (document.styleSheets[r].ownerNode === e) return document.styleSheets[r]
                            }(n);
                            try {
                                i.insertRule(e, i.cssRules.length)
                            } catch (o) {}
                        } else n.appendChild(document.createTextNode(e));
                        this.ctr++
                    }, r.flush = function() {
                        this.tags.forEach(function(e) {
                            return e.parentNode && e.parentNode.removeChild(e)
                        }), this.tags = [], this.ctr = 0
                    }, e
                }(),
                e$ = Math.abs,
                eq = String.fromCharCode,
                eW = Object.assign;

            function eV(e, r, n) {
                return e.replace(r, n)
            }

            function eH(e, r) {
                return e.indexOf(r)
            }

            function eG(e, r) {
                return 0 | e.charCodeAt(r)
            }

            function eK(e, r, n) {
                return e.slice(r, n)
            }

            function eQ(e) {
                return e.length
            }

            function eJ(e, r) {
                return r.push(e), e
            }
            var eY = 1,
                eX = 1,
                eZ = 0,
                e0 = 0,
                e1 = 0,
                e2 = "";

            function e3(e, r, n, i, o, a, s) {
                return {
                    value: e,
                    root: r,
                    parent: n,
                    type: i,
                    props: o,
                    children: a,
                    line: eY,
                    column: eX,
                    length: s,
                    return: ""
                }
            }

            function e6(e, r) {
                return eW(e3("", null, null, "", null, null, 0), e, {
                    length: -e.length
                }, r)
            }

            function e5() {
                return e1 = e0 < eZ ? eG(e2, e0++) : 0, eX++, 10 === e1 && (eX = 1, eY++), e1
            }

            function e4() {
                return eG(e2, e0)
            }

            function e7(e) {
                switch (e) {
                    case 0:
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                        return 5;
                    case 33:
                    case 43:
                    case 44:
                    case 47:
                    case 62:
                    case 64:
                    case 126:
                    case 59:
                    case 123:
                    case 125:
                        return 4;
                    case 58:
                        return 3;
                    case 34:
                    case 39:
                    case 40:
                    case 91:
                        return 2;
                    case 41:
                    case 93:
                        return 1
                }
                return 0
            }

            function e8(e) {
                return eY = eX = 1, eZ = eQ(e2 = e), e0 = 0, []
            }

            function e9(e) {
                var r, n;
                return (r = e0 - 1, n = function e(r) {
                    for (; e5();) switch (e1) {
                        case r:
                            return e0;
                        case 34:
                        case 39:
                            34 !== r && 39 !== r && e(e1);
                            break;
                        case 40:
                            41 === r && e(r);
                            break;
                        case 92:
                            e5()
                    }
                    return e0
                }(91 === e ? e + 2 : 40 === e ? e + 1 : e), eK(e2, r, n)).trim()
            }
            var te = "-ms-",
                tt = "-moz-",
                tr = "-webkit-",
                tn = "comm",
                ti = "rule",
                to = "decl",
                ta = "@keyframes";

            function ts(e, r) {
                for (var n = "", i = e.length, o = 0; o < i; o++) n += r(e[o], o, e, r) || "";
                return n
            }

            function tl(e, r, n, i) {
                switch (e.type) {
                    case "@layer":
                        if (e.children.length) break;
                    case "@import":
                    case to:
                        return e.return = e.return || e.value;
                    case tn:
                        return "";
                    case ta:
                        return e.return = e.value + "{" + ts(e.children, i) + "}";
                    case ti:
                        e.value = e.props.join(",")
                }
                return eQ(n = ts(e.children, i)) ? e.return = e.value + "{" + n + "}" : ""
            }

            function tu(e, r, n, i, o, a, s, l, u, c, d) {
                for (var h = o - 1, f = 0 === o ? a : [""], p = f.length, m = 0, g = 0, v = 0; m < i; ++m)
                    for (var y = 0, b = eK(e, h + 1, h = e$(g = s[m])), w = e; y < p; ++y)(w = (g > 0 ? f[y] + " " + b : eV(b, /&\f/g, f[y])).trim()) && (u[v++] = w);
                return e3(e, r, n, 0 === o ? ti : l, u, c, d)
            }

            function tc(e, r, n, i) {
                return e3(e, r, n, to, eK(e, 0, i), eK(e, i + 1, -1), i)
            }
            var td = function(e, r, n) {
                    for (var i = 0, o = 0; i = o, o = e4(), 38 === i && 12 === o && (r[n] = 1), !e7(o);) e5();
                    return eK(e2, e, e0)
                },
                th = function(e, r) {
                    var n = -1,
                        i = 44;
                    do switch (e7(i)) {
                        case 0:
                            38 === i && 12 === e4() && (r[n] = 1), e[n] += td(e0 - 1, r, n);
                            break;
                        case 2:
                            e[n] += e9(i);
                            break;
                        case 4:
                            if (44 === i) {
                                e[++n] = 58 === e4() ? "&\f" : "", r[n] = e[n].length;
                                break
                            }
                        default:
                            e[n] += eq(i)
                    }
                    while (i = e5());
                    return e
                },
                tf = function(e, r) {
                    var n;
                    return n = th(e8(e), r), e2 = "", n
                },
                tp = new WeakMap,
                tm = function(e) {
                    if ("rule" === e.type && e.parent && !(e.length < 1)) {
                        for (var r = e.value, n = e.parent, i = e.column === n.column && e.line === n.line;
                            "rule" !== n.type;)
                            if (!(n = n.parent)) return;
                        if ((1 !== e.props.length || 58 === r.charCodeAt(0) || tp.get(n)) && !i) {
                            tp.set(e, !0);
                            for (var o = [], a = tf(r, o), s = n.props, l = 0, u = 0; l < a.length; l++)
                                for (var c = 0; c < s.length; c++, u++) e.props[u] = o[l] ? a[l].replace(/&\f/g, s[c]) : s[c] + " " + a[l]
                        }
                    }
                },
                tg = function(e) {
                    if ("decl" === e.type) {
                        var r = e.value;
                        108 === r.charCodeAt(0) && 98 === r.charCodeAt(2) && (e.return = "", e.value = "")
                    }
                },
                tv = [function(e, r, n, i) {
                    if (e.length > -1 && !e.return) switch (e.type) {
                        case to:
                            e.return = function e(r, n) {
                                switch (45 ^ eG(r, 0) ? (((n << 2 ^ eG(r, 0)) << 2 ^ eG(r, 1)) << 2 ^ eG(r, 2)) << 2 ^ eG(r, 3) : 0) {
                                    case 5103:
                                        return tr + "print-" + r + r;
                                    case 5737:
                                    case 4201:
                                    case 3177:
                                    case 3433:
                                    case 1641:
                                    case 4457:
                                    case 2921:
                                    case 5572:
                                    case 6356:
                                    case 5844:
                                    case 3191:
                                    case 6645:
                                    case 3005:
                                    case 6391:
                                    case 5879:
                                    case 5623:
                                    case 6135:
                                    case 4599:
                                    case 4855:
                                    case 4215:
                                    case 6389:
                                    case 5109:
                                    case 5365:
                                    case 5621:
                                    case 3829:
                                        return tr + r + r;
                                    case 5349:
                                    case 4246:
                                    case 4810:
                                    case 6968:
                                    case 2756:
                                        return tr + r + tt + r + te + r + r;
                                    case 6828:
                                    case 4268:
                                        return tr + r + te + r + r;
                                    case 6165:
                                        return tr + r + te + "flex-" + r + r;
                                    case 5187:
                                        return tr + r + eV(r, /(\w+).+(:[^]+)/, tr + "box-$1$2" + te + "flex-$1$2") + r;
                                    case 5443:
                                        return tr + r + te + "flex-item-" + eV(r, /flex-|-self/, "") + r;
                                    case 4675:
                                        return tr + r + te + "flex-line-pack" + eV(r, /align-content|flex-|-self/, "") + r;
                                    case 5548:
                                        return tr + r + te + eV(r, "shrink", "negative") + r;
                                    case 5292:
                                        return tr + r + te + eV(r, "basis", "preferred-size") + r;
                                    case 6060:
                                        return tr + "box-" + eV(r, "-grow", "") + tr + r + te + eV(r, "grow", "positive") + r;
                                    case 4554:
                                        return tr + eV(r, /([^-])(transform)/g, "$1" + tr + "$2") + r;
                                    case 6187:
                                        return eV(eV(eV(r, /(zoom-|grab)/, tr + "$1"), /(image-set)/, tr + "$1"), r, "") + r;
                                    case 5495:
                                    case 3959:
                                        return eV(r, /(image-set\([^]*)/, tr + "$1$`$1");
                                    case 4968:
                                        return eV(eV(r, /(.+:)(flex-)?(.*)/, tr + "box-pack:$3" + te + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + tr + r + r;
                                    case 4095:
                                    case 3583:
                                    case 4068:
                                    case 2532:
                                        return eV(r, /(.+)-inline(.+)/, tr + "$1$2") + r;
                                    case 8116:
                                    case 7059:
                                    case 5753:
                                    case 5535:
                                    case 5445:
                                    case 5701:
                                    case 4933:
                                    case 4677:
                                    case 5533:
                                    case 5789:
                                    case 5021:
                                    case 4765:
                                        if (eQ(r) - 1 - n > 6) switch (eG(r, n + 1)) {
                                            case 109:
                                                if (45 !== eG(r, n + 4)) break;
                                            case 102:
                                                return eV(r, /(.+:)(.+)-([^]+)/, "$1" + tr + "$2-$3$1" + tt + (108 == eG(r, n + 3) ? "$3" : "$2-$3")) + r;
                                            case 115:
                                                return ~eH(r, "stretch") ? e(eV(r, "stretch", "fill-available"), n) + r : r
                                        }
                                        break;
                                    case 4949:
                                        if (115 !== eG(r, n + 1)) break;
                                    case 6444:
                                        switch (eG(r, eQ(r) - 3 - (~eH(r, "!important") && 10))) {
                                            case 107:
                                                return eV(r, ":", ":" + tr) + r;
                                            case 101:
                                                return eV(r, /(.+:)([^;!]+)(;|!.+)?/, "$1" + tr + (45 === eG(r, 14) ? "inline-" : "") + "box$3$1" + tr + "$2$3$1" + te + "$2box$3") + r
                                        }
                                        break;
                                    case 5936:
                                        switch (eG(r, n + 11)) {
                                            case 114:
                                                return tr + r + te + eV(r, /[svh]\w+-[tblr]{2}/, "tb") + r;
                                            case 108:
                                                return tr + r + te + eV(r, /[svh]\w+-[tblr]{2}/, "tb-rl") + r;
                                            case 45:
                                                return tr + r + te + eV(r, /[svh]\w+-[tblr]{2}/, "lr") + r
                                        }
                                        return tr + r + te + r + r
                                }
                                return r
                            }(e.value, e.length);
                            break;
                        case ta:
                            return ts([e6(e, {
                                value: eV(e.value, "@", "@" + tr)
                            })], i);
                        case ti:
                            if (e.length) return e.props.map(function(r) {
                                var n;
                                switch (n = r, (n = /(::plac\w+|:read-\w+)/.exec(n)) ? n[0] : n) {
                                    case ":read-only":
                                    case ":read-write":
                                        return ts([e6(e, {
                                            props: [eV(r, /:(read-\w+)/, ":" + tt + "$1")]
                                        })], i);
                                    case "::placeholder":
                                        return ts([e6(e, {
                                            props: [eV(r, /:(plac\w+)/, ":" + tr + "input-$1")]
                                        }), e6(e, {
                                            props: [eV(r, /:(plac\w+)/, ":" + tt + "$1")]
                                        }), e6(e, {
                                            props: [eV(r, /:(plac\w+)/, te + "input-$1")]
                                        })], i)
                                }
                                return ""
                            }).join("")
                    }
                }];

            function ty() {
                return (ty = Object.assign ? Object.assign.bind() : function(e) {
                    for (var r = 1; r < arguments.length; r++) {
                        var n = arguments[r];
                        for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
                    }
                    return e
                }).apply(this, arguments)
            }
            var tb = function(e) {
                    var r = new WeakMap;
                    return function(n) {
                        if (r.has(n)) return r.get(n);
                        var i = e(n);
                        return r.set(n, i), i
                    }
                },
                tw = {
                    animationIterationCount: 1,
                    aspectRatio: 1,
                    borderImageOutset: 1,
                    borderImageSlice: 1,
                    borderImageWidth: 1,
                    boxFlex: 1,
                    boxFlexGroup: 1,
                    boxOrdinalGroup: 1,
                    columnCount: 1,
                    columns: 1,
                    flex: 1,
                    flexGrow: 1,
                    flexPositive: 1,
                    flexShrink: 1,
                    flexNegative: 1,
                    flexOrder: 1,
                    gridRow: 1,
                    gridRowEnd: 1,
                    gridRowSpan: 1,
                    gridRowStart: 1,
                    gridColumn: 1,
                    gridColumnEnd: 1,
                    gridColumnSpan: 1,
                    gridColumnStart: 1,
                    msGridRow: 1,
                    msGridRowSpan: 1,
                    msGridColumn: 1,
                    msGridColumnSpan: 1,
                    fontWeight: 1,
                    lineHeight: 1,
                    opacity: 1,
                    order: 1,
                    orphans: 1,
                    tabSize: 1,
                    widows: 1,
                    zIndex: 1,
                    zoom: 1,
                    WebkitLineClamp: 1,
                    fillOpacity: 1,
                    floodOpacity: 1,
                    stopOpacity: 1,
                    strokeDasharray: 1,
                    strokeDashoffset: 1,
                    strokeMiterlimit: 1,
                    strokeOpacity: 1,
                    strokeWidth: 1
                };

            function tx(e) {
                var r = Object.create(null);
                return function(n) {
                    return void 0 === r[n] && (r[n] = e(n)), r[n]
                }
            }
            var tE = /[A-Z]|^ms/g,
                tC = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
                tA = function(e) {
                    return 45 === e.charCodeAt(1)
                },
                tk = function(e) {
                    return null != e && "boolean" != typeof e
                },
                tS = tx(function(e) {
                    return tA(e) ? e : e.replace(tE, "-$&").toLowerCase()
                }),
                t_ = function(e, r) {
                    switch (e) {
                        case "animation":
                        case "animationName":
                            if ("string" == typeof r) return r.replace(tC, function(e, r, n) {
                                return m = {
                                    name: r,
                                    styles: n,
                                    next: m
                                }, r
                            })
                    }
                    return 1 === tw[e] || tA(e) || "number" != typeof r || 0 === r ? r : r + "px"
                };

            function tP(e, r, n) {
                if (null == n) return "";
                if (void 0 !== n.__emotion_styles) return n;
                switch (typeof n) {
                    case "boolean":
                        return "";
                    case "object":
                        if (1 === n.anim) return m = {
                            name: n.name,
                            styles: n.styles,
                            next: m
                        }, n.name;
                        if (void 0 !== n.styles) {
                            var i = n.next;
                            if (void 0 !== i)
                                for (; void 0 !== i;) m = {
                                    name: i.name,
                                    styles: i.styles,
                                    next: m
                                }, i = i.next;
                            return n.styles + ";"
                        }
                        return function(e, r, n) {
                            var i = "";
                            if (Array.isArray(n))
                                for (var o = 0; o < n.length; o++) i += tP(e, r, n[o]) + ";";
                            else
                                for (var a in n) {
                                    var s = n[a];
                                    if ("object" != typeof s) null != r && void 0 !== r[s] ? i += a + "{" + r[s] + "}" : tk(s) && (i += tS(a) + ":" + t_(a, s) + ";");
                                    else if (Array.isArray(s) && "string" == typeof s[0] && (null == r || void 0 === r[s[0]]))
                                        for (var l = 0; l < s.length; l++) tk(s[l]) && (i += tS(a) + ":" + t_(a, s[l]) + ";");
                                    else {
                                        var u = tP(e, r, s);
                                        switch (a) {
                                            case "animation":
                                            case "animationName":
                                                i += tS(a) + ":" + u + ";";
                                                break;
                                            default:
                                                i += a + "{" + u + "}"
                                        }
                                    }
                                }
                            return i
                        }(e, r, n);
                    case "function":
                        if (void 0 !== e) {
                            var o = m,
                                a = n(e);
                            return m = o, tP(e, r, a)
                        }
                }
                if (null == r) return n;
                var s = r[n];
                return void 0 !== s ? s : n
            }
            var tj = /label:\s*([^\s;\n{]+)\s*(;|$)/g,
                tT = function(e, r, n) {
                    if (1 === e.length && "object" == typeof e[0] && null !== e[0] && void 0 !== e[0].styles) return e[0];
                    var i, o = !0,
                        a = "";
                    m = void 0;
                    var s = e[0];
                    null == s || void 0 === s.raw ? (o = !1, a += tP(n, r, s)) : a += s[0];
                    for (var l = 1; l < e.length; l++) a += tP(n, r, e[l]), o && (a += s[l]);
                    tj.lastIndex = 0;
                    for (var u = ""; null !== (i = tj.exec(a));) u += "-" + i[1];
                    return {
                        name: function(e) {
                            for (var r, n = 0, i = 0, o = e.length; o >= 4; ++i, o -= 4) r = (65535 & (r = 255 & e.charCodeAt(i) | (255 & e.charCodeAt(++i)) << 8 | (255 & e.charCodeAt(++i)) << 16 | (255 & e.charCodeAt(++i)) << 24)) * 1540483477 + ((r >>> 16) * 59797 << 16), r ^= r >>> 24, n = (65535 & r) * 1540483477 + ((r >>> 16) * 59797 << 16) ^ (65535 & n) * 1540483477 + ((n >>> 16) * 59797 << 16);
                            switch (o) {
                                case 3:
                                    n ^= (255 & e.charCodeAt(i + 2)) << 16;
                                case 2:
                                    n ^= (255 & e.charCodeAt(i + 1)) << 8;
                                case 1:
                                    n ^= 255 & e.charCodeAt(i), n = (65535 & n) * 1540483477 + ((n >>> 16) * 59797 << 16)
                            }
                            return n ^= n >>> 13, (((n = (65535 & n) * 1540483477 + ((n >>> 16) * 59797 << 16)) ^ n >>> 15) >>> 0).toString(36)
                        }(a) + u,
                        styles: a,
                        next: m
                    }
                },
                tR = !!ee.useInsertionEffect && ee.useInsertionEffect,
                tB = tR || function(e) {
                    return e()
                },
                tO = tR || Z.useLayoutEffect,
                tM = Z.createContext("undefined" != typeof HTMLElement ? function(e) {
                    var r, n, i, o, a, s = e.key;
                    if ("css" === s) {
                        var l = document.querySelectorAll("style[data-emotion]:not([data-s])");
                        Array.prototype.forEach.call(l, function(e) {
                            -1 !== e.getAttribute("data-emotion").indexOf(" ") && (document.head.appendChild(e), e.setAttribute("data-s", ""))
                        })
                    }
                    var u = e.stylisPlugins || tv,
                        c = {},
                        d = [];
                    o = e.container || document.head, Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="' + s + ' "]'), function(e) {
                        for (var r = e.getAttribute("data-emotion").split(" "), n = 1; n < r.length; n++) c[r[n]] = !0;
                        d.push(e)
                    });
                    var h = (n = (r = [tm, tg].concat(u, [tl, (i = function(e) {
                            a.insert(e)
                        }, function(e) {
                            !e.root && (e = e.return) && i(e)
                        })])).length, function(e, i, o, a) {
                            for (var s = "", l = 0; l < n; l++) s += r[l](e, i, o, a) || "";
                            return s
                        }),
                        f = function(e) {
                            var r, n;
                            return ts((n = function e(r, n, i, o, a, s, l, u, c) {
                                for (var d, h = 0, f = 0, p = l, m = 0, g = 0, v = 0, y = 1, b = 1, w = 1, x = 0, E = "", C = a, A = s, k = o, S = E; b;) switch (v = x, x = e5()) {
                                    case 40:
                                        if (108 != v && 58 == eG(S, p - 1)) {
                                            -1 != eH(S += eV(e9(x), "&", "&\f"), "&\f") && (w = -1);
                                            break
                                        }
                                    case 34:
                                    case 39:
                                    case 91:
                                        S += e9(x);
                                        break;
                                    case 9:
                                    case 10:
                                    case 13:
                                    case 32:
                                        S += function(e) {
                                            for (; e1 = e4();)
                                                if (e1 < 33) e5();
                                                else break;
                                            return e7(e) > 2 || e7(e1) > 3 ? "" : " "
                                        }(v);
                                        break;
                                    case 92:
                                        S += function(e, r) {
                                            for (var n; --r && e5() && !(e1 < 48) && !(e1 > 102) && (!(e1 > 57) || !(e1 < 65)) && (!(e1 > 70) || !(e1 < 97)););
                                            return n = e0 + (r < 6 && 32 == e4() && 32 == e5()), eK(e2, e, n)
                                        }(e0 - 1, 7);
                                        continue;
                                    case 47:
                                        switch (e4()) {
                                            case 42:
                                            case 47:
                                                eJ(e3(d = function(e, r) {
                                                    for (; e5();)
                                                        if (e + e1 === 57) break;
                                                        else if (e + e1 === 84 && 47 === e4()) break;
                                                    return "/*" + eK(e2, r, e0 - 1) + "*" + eq(47 === e ? e : e5())
                                                }(e5(), e0), n, i, tn, eq(e1), eK(d, 2, -2), 0), c);
                                                break;
                                            default:
                                                S += "/"
                                        }
                                        break;
                                    case 123 * y:
                                        u[h++] = eQ(S) * w;
                                    case 125 * y:
                                    case 59:
                                    case 0:
                                        switch (x) {
                                            case 0:
                                            case 125:
                                                b = 0;
                                            case 59 + f:
                                                -1 == w && (S = eV(S, /\f/g, "")), g > 0 && eQ(S) - p && eJ(g > 32 ? tc(S + ";", o, i, p - 1) : tc(eV(S, " ", "") + ";", o, i, p - 2), c);
                                                break;
                                            case 59:
                                                S += ";";
                                            default:
                                                if (eJ(k = tu(S, n, i, h, f, a, u, E, C = [], A = [], p), s), 123 === x) {
                                                    if (0 === f) e(S, n, k, k, C, s, p, u, A);
                                                    else switch (99 === m && 110 === eG(S, 3) ? 100 : m) {
                                                        case 100:
                                                        case 108:
                                                        case 109:
                                                        case 115:
                                                            e(r, k, k, o && eJ(tu(r, k, k, 0, 0, a, u, E, a, C = [], p), A), a, A, p, u, o ? C : A);
                                                            break;
                                                        default:
                                                            e(S, k, k, k, [""], A, 0, u, A)
                                                    }
                                                }
                                        }
                                        h = f = g = 0, y = w = 1, E = S = "", p = l;
                                        break;
                                    case 58:
                                        p = 1 + eQ(S), g = v;
                                    default:
                                        if (y < 1) {
                                            if (123 == x) --y;
                                            else if (125 == x && 0 == y++ && 125 == (e1 = e0 > 0 ? eG(e2, --e0) : 0, eX--, 10 === e1 && (eX = 1, eY--), e1)) continue
                                        }
                                        switch (S += eq(x), x * y) {
                                            case 38:
                                                w = f > 0 ? 1 : (S += "\f", -1);
                                                break;
                                            case 44:
                                                u[h++] = (eQ(S) - 1) * w, w = 1;
                                                break;
                                            case 64:
                                                45 === e4() && (S += e9(e5())), m = e4(), f = p = eQ(E = S += function(e) {
                                                    for (; !e7(e4());) e5();
                                                    return eK(e2, e, e0)
                                                }(e0)), x++;
                                                break;
                                            case 45:
                                                45 === v && 2 == eQ(S) && (y = 0)
                                        }
                                }
                                return s
                            }("", null, null, null, [""], r = e8(r = e), 0, [0], r), e2 = "", n), h)
                        },
                        p = {
                            key: s,
                            sheet: new eU({
                                key: s,
                                container: o,
                                nonce: e.nonce,
                                speedy: e.speedy,
                                prepend: e.prepend,
                                insertionPoint: e.insertionPoint
                            }),
                            nonce: e.nonce,
                            inserted: c,
                            registered: {},
                            insert: function(e, r, n, i) {
                                a = n, f(e ? e + "{" + r.styles + "}" : r.styles), i && (p.inserted[r.name] = !0)
                            }
                        };
                    return p.sheet.hydrate(d), p
                }({
                    key: "css"
                }) : null);
            tM.Provider;
            var tI = function(e) {
                    return (0, Z.forwardRef)(function(r, n) {
                        return e(r, (0, Z.useContext)(tM), n)
                    })
                },
                tN = Z.createContext({}),
                tF = tb(function(e) {
                    return tb(function(r) {
                        return "function" == typeof r ? r(e) : ty({}, e, r)
                    })
                }),
                tL = function(e) {
                    var r = Z.useContext(tN);
                    return e.theme !== r && (r = tF(r)(e.theme)), Z.createElement(tN.Provider, {
                        value: r
                    }, e.children)
                },
                tD = function(e, r, n) {
                    var i = e.key + "-" + r.name;
                    !1 === n && void 0 === e.registered[i] && (e.registered[i] = r.styles)
                },
                tz = function(e, r, n) {
                    tD(e, r, n);
                    var i = e.key + "-" + r.name;
                    if (void 0 === e.inserted[r.name]) {
                        var o = r;
                        do e.insert(r === o ? "." + i : "", o, e.sheet, !0), o = o.next; while (void 0 !== o)
                    }
                };
            n(8679);
            var tU = tI(function(e, r) {
                var n = tT([e.styles], void 0, Z.useContext(tN)),
                    i = Z.useRef();
                return tO(function() {
                    var e = r.key + "-global",
                        o = new r.sheet.constructor({
                            key: e,
                            nonce: r.sheet.nonce,
                            container: r.sheet.container,
                            speedy: r.sheet.isSpeedy
                        }),
                        a = !1,
                        s = document.querySelector('style[data-emotion="' + e + " " + n.name + '"]');
                    return r.sheet.tags.length && (o.before = r.sheet.tags[0]), null !== s && (a = !0, s.setAttribute("data-emotion", e), o.hydrate([s])), i.current = [o, a],
                        function() {
                            o.flush()
                        }
                }, [r]), tO(function() {
                    var e = i.current,
                        o = e[0];
                    if (e[1]) {
                        e[1] = !1;
                        return
                    }
                    if (void 0 !== n.next && tz(r, n.next, !0), o.tags.length) {
                        var a = o.tags[o.tags.length - 1].nextElementSibling;
                        o.before = a, o.flush()
                    }
                    r.insert("", n, o, !1)
                }, [r, n.name]), null
            });

            function t$() {
                for (var e = arguments.length, r = Array(e), n = 0; n < e; n++) r[n] = arguments[n];
                return tT(r)
            }
            var tq = String.raw,
                tW = tq `
  :root,
  :host {
    --chakra-vh: 100vh;
  }

  @supports (height: -webkit-fill-available) {
    :root,
    :host {
      --chakra-vh: -webkit-fill-available;
    }
  }

  @supports (height: -moz-fill-available) {
    :root,
    :host {
      --chakra-vh: -moz-fill-available;
    }
  }

  @supports (height: 100dvh) {
    :root,
    :host {
      --chakra-vh: 100dvh;
    }
  }
`,
                tV = () => (0, $.jsx)(tU, {
                    styles: tW
                }),
                tH = ({
                    scope: e = ""
                }) => (0, $.jsx)(tU, {
                    styles: tq `
      html {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        font-family: system-ui, sans-serif;
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        -moz-osx-font-smoothing: grayscale;
        touch-action: manipulation;
      }

      body {
        position: relative;
        min-height: 100%;
        margin: 0;
        font-feature-settings: "kern";
      }

      ${e} :where(*, *::before, *::after) {
        border-width: 0;
        border-style: solid;
        box-sizing: border-box;
        word-wrap: break-word;
      }

      main {
        display: block;
      }

      ${e} hr {
        border-top-width: 1px;
        box-sizing: content-box;
        height: 0;
        overflow: visible;
      }

      ${e} :where(pre, code, kbd,samp) {
        font-family: SFMono-Regular, Menlo, Monaco, Consolas, monospace;
        font-size: 1em;
      }

      ${e} a {
        background-color: transparent;
        color: inherit;
        text-decoration: inherit;
      }

      ${e} abbr[title] {
        border-bottom: none;
        text-decoration: underline;
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
      }

      ${e} :where(b, strong) {
        font-weight: bold;
      }

      ${e} small {
        font-size: 80%;
      }

      ${e} :where(sub,sup) {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
      }

      ${e} sub {
        bottom: -0.25em;
      }

      ${e} sup {
        top: -0.5em;
      }

      ${e} img {
        border-style: none;
      }

      ${e} :where(button, input, optgroup, select, textarea) {
        font-family: inherit;
        font-size: 100%;
        line-height: 1.15;
        margin: 0;
      }

      ${e} :where(button, input) {
        overflow: visible;
      }

      ${e} :where(button, select) {
        text-transform: none;
      }

      ${e} :where(
          button::-moz-focus-inner,
          [type="button"]::-moz-focus-inner,
          [type="reset"]::-moz-focus-inner,
          [type="submit"]::-moz-focus-inner
        ) {
        border-style: none;
        padding: 0;
      }

      ${e} fieldset {
        padding: 0.35em 0.75em 0.625em;
      }

      ${e} legend {
        box-sizing: border-box;
        color: inherit;
        display: table;
        max-width: 100%;
        padding: 0;
        white-space: normal;
      }

      ${e} progress {
        vertical-align: baseline;
      }

      ${e} textarea {
        overflow: auto;
      }

      ${e} :where([type="checkbox"], [type="radio"]) {
        box-sizing: border-box;
        padding: 0;
      }

      ${e} input[type="number"]::-webkit-inner-spin-button,
      ${e} input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none !important;
      }

      ${e} input[type="number"] {
        -moz-appearance: textfield;
      }

      ${e} input[type="search"] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
      }

      ${e} input[type="search"]::-webkit-search-decoration {
        -webkit-appearance: none !important;
      }

      ${e} ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
      }

      ${e} details {
        display: block;
      }

      ${e} summary {
        display: list-item;
      }

      template {
        display: none;
      }

      [hidden] {
        display: none !important;
      }

      ${e} :where(
          blockquote,
          dl,
          dd,
          h1,
          h2,
          h3,
          h4,
          h5,
          h6,
          hr,
          figure,
          p,
          pre
        ) {
        margin: 0;
      }

      ${e} button {
        background: transparent;
        padding: 0;
      }

      ${e} fieldset {
        margin: 0;
        padding: 0;
      }

      ${e} :where(ol, ul) {
        margin: 0;
        padding: 0;
      }

      ${e} textarea {
        resize: vertical;
      }

      ${e} :where(button, [role="button"]) {
        cursor: pointer;
      }

      ${e} button::-moz-focus-inner {
        border: 0 !important;
      }

      ${e} table {
        border-collapse: collapse;
      }

      ${e} :where(h1, h2, h3, h4, h5, h6) {
        font-size: inherit;
        font-weight: inherit;
      }

      ${e} :where(button, input, optgroup, select, textarea) {
        padding: 0;
        line-height: inherit;
        color: inherit;
      }

      ${e} :where(img, svg, video, canvas, audio, iframe, embed, object) {
        display: block;
      }

      ${e} :where(img, video) {
        max-width: 100%;
        height: auto;
      }

      [data-js-focus-visible]
        :focus:not([data-focus-visible-added]):not(
          [data-focus-visible-disabled]
        ) {
        outline: none;
        box-shadow: none;
      }

      ${e} select::-ms-expand {
        display: none;
      }

      ${tW}
    `
                });

            function tG(e = {}) {
                let {
                    name: r,
                    strict: n = !0,
                    hookName: i = "useContext",
                    providerName: o = "Provider",
                    errorMessage: a,
                    defaultValue: s
                } = e, l = (0, Z.createContext)(s);
                return l.displayName = r, [l.Provider, function e() {
                    var r;
                    let s = (0, Z.useContext)(l);
                    if (!s && n) {
                        let u = Error(null != a ? a : `${i} returned \`undefined\`. Seems you forgot to wrap component within ${o}`);
                        throw u.name = "ContextError", null == (r = Error.captureStackTrace) || r.call(Error, u, e), u
                    }
                    return s
                }, l]
            }
            var [tK, tQ] = tG({
                strict: !1,
                name: "PortalManagerContext"
            });

            function tJ(e) {
                let {
                    children: r,
                    zIndex: n
                } = e;
                return (0, $.jsx)(tK, {
                    value: {
                        zIndex: n
                    },
                    children: r
                })
            }
            tJ.displayName = "PortalManager";
            var tY = (0, Z.createContext)({});

            function tX() {
                let e = (0, Z.useContext)(tY);
                if (void 0 === e) throw Error("useColorMode must be used within a ColorModeProvider");
                return e
            }
            tY.displayName = "ColorModeContext";
            var tZ = (...e) => e.filter(Boolean).join(" ");

            function t0(e) {
                let r = typeof e;
                return null != e && ("object" === r || "function" === r) && !Array.isArray(e)
            }

            function t1(e, ...r) {
                return t2(e) ? e(...r) : e
            }
            var t2 = e => "function" == typeof e,
                t3 = n(38554),
                t6 = e => /!(important)?$/.test(e),
                t5 = e => "string" == typeof e ? e.replace(/!(important)?$/, "").trim() : e,
                t4 = (e, r) => n => {
                    let i = String(r),
                        o = t6(i),
                        a = t5(i),
                        s = e ? `${e}.${a}` : a,
                        l = t0(n.__cssMap) && s in n.__cssMap ? n.__cssMap[s].varRef : r;
                    return l = t5(l), o ? `${l} !important` : l
                };

            function t7(e) {
                let {
                    scale: r,
                    transform: n,
                    compose: i
                } = e, o = (e, o) => {
                    var a;
                    let s = t4(r, e)(o),
                        l = null != (a = null == n ? void 0 : n(s, o)) ? a : s;
                    return i && (l = i(l, o)), l
                };
                return o
            }
            var t8 = (...e) => r => e.reduce((e, r) => r(e), r);

            function t9(e, r) {
                return n => {
                    let i = {
                        property: n,
                        scale: e
                    };
                    return i.transform = t7({
                        scale: e,
                        transform: r
                    }), i
                }
            }
            var re = ({
                    rtl: e,
                    ltr: r
                }) => n => "rtl" === n.direction ? e : r,
                rt = ["rotate(var(--chakra-rotate, 0))", "scaleX(var(--chakra-scale-x, 1))", "scaleY(var(--chakra-scale-y, 1))", "skewX(var(--chakra-skew-x, 0))", "skewY(var(--chakra-skew-y, 0))"],
                rr = {
                    "--chakra-blur": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-brightness": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-contrast": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-grayscale": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-hue-rotate": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-invert": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-saturate": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-sepia": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-drop-shadow": "var(--chakra-empty,/*!*/ /*!*/)",
                    filter: "var(--chakra-blur) var(--chakra-brightness) var(--chakra-contrast) var(--chakra-grayscale) var(--chakra-hue-rotate) var(--chakra-invert) var(--chakra-saturate) var(--chakra-sepia) var(--chakra-drop-shadow)"
                },
                rn = {
                    backdropFilter: "var(--chakra-backdrop-blur) var(--chakra-backdrop-brightness) var(--chakra-backdrop-contrast) var(--chakra-backdrop-grayscale) var(--chakra-backdrop-hue-rotate) var(--chakra-backdrop-invert) var(--chakra-backdrop-opacity) var(--chakra-backdrop-saturate) var(--chakra-backdrop-sepia)",
                    "--chakra-backdrop-blur": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-backdrop-brightness": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-backdrop-contrast": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-backdrop-grayscale": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-backdrop-hue-rotate": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-backdrop-invert": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-backdrop-opacity": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-backdrop-saturate": "var(--chakra-empty,/*!*/ /*!*/)",
                    "--chakra-backdrop-sepia": "var(--chakra-empty,/*!*/ /*!*/)"
                },
                ri = {
                    "row-reverse": {
                        space: "--chakra-space-x-reverse",
                        divide: "--chakra-divide-x-reverse"
                    },
                    "column-reverse": {
                        space: "--chakra-space-y-reverse",
                        divide: "--chakra-divide-y-reverse"
                    }
                },
                ro = {
                    "to-t": "to top",
                    "to-tr": "to top right",
                    "to-r": "to right",
                    "to-br": "to bottom right",
                    "to-b": "to bottom",
                    "to-bl": "to bottom left",
                    "to-l": "to left",
                    "to-tl": "to top left"
                },
                ra = new Set(Object.values(ro)),
                rs = new Set(["none", "-moz-initial", "inherit", "initial", "revert", "unset"]),
                rl = e => e.trim(),
                ru = e => "string" == typeof e && e.includes("(") && e.includes(")"),
                rc = e => {
                    let r = parseFloat(e.toString()),
                        n = e.toString().replace(String(r), "");
                    return {
                        unitless: !n,
                        value: r,
                        unit: n
                    }
                },
                rd = e => r => `${e}(${r})`,
                rh = {
                    filter: e => "auto" !== e ? e : rr,
                    backdropFilter: e => "auto" !== e ? e : rn,
                    ring: e => ({
                        "--chakra-ring-offset-shadow": "var(--chakra-ring-inset) 0 0 0 var(--chakra-ring-offset-width) var(--chakra-ring-offset-color)",
                        "--chakra-ring-shadow": "var(--chakra-ring-inset) 0 0 0 calc(var(--chakra-ring-width) + var(--chakra-ring-offset-width)) var(--chakra-ring-color)",
                        "--chakra-ring-width": rh.px(e),
                        boxShadow: "var(--chakra-ring-offset-shadow), var(--chakra-ring-shadow), var(--chakra-shadow, 0 0 #0000)"
                    }),
                    bgClip: e => "text" === e ? {
                        color: "transparent",
                        backgroundClip: "text"
                    } : {
                        backgroundClip: e
                    },
                    transform: e => "auto" === e ? ["translateX(var(--chakra-translate-x, 0))", "translateY(var(--chakra-translate-y, 0))", ...rt].join(" ") : "auto-gpu" === e ? ["translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)", ...rt].join(" ") : e,
                    vh: e => "$100vh" === e ? "var(--chakra-vh)" : e,
                    px(e) {
                        if (null == e) return e;
                        let {
                            unitless: r
                        } = rc(e);
                        return r || "number" == typeof e ? `${e}px` : e
                    },
                    fraction: e => "number" != typeof e || e > 1 ? e : `${100*e}%`,
                    float: (e, r) => "rtl" === r.direction ? ({
                        left: "right",
                        right: "left"
                    })[e] : e,
                    degree(e) {
                        if (/^var\(--.+\)$/.test(e) || null == e) return e;
                        let r = "string" == typeof e && !e.endsWith("deg");
                        return "number" == typeof e || r ? `${e}deg` : e
                    },
                    gradient: (e, r) => (function(e, r) {
                        if (null == e || rs.has(e)) return e;
                        let n = ru(e) || rs.has(e);
                        if (!n) return `url('${e}')`;
                        let i = /(^[a-z-A-Z]+)\((.*)\)/g.exec(e),
                            o = null == i ? void 0 : i[1],
                            a = null == i ? void 0 : i[2];
                        if (!o || !a) return e;
                        let s = o.includes("-gradient") ? o : `${o}-gradient`,
                            [l, ...u] = a.split(",").map(rl).filter(Boolean);
                        if ((null == u ? void 0 : u.length) === 0) return e;
                        let c = l in ro ? ro[l] : l;
                        u.unshift(c);
                        let d = u.map(e => {
                            if (ra.has(e)) return e;
                            let n = e.indexOf(" "),
                                [i, o] = -1 !== n ? [e.substr(0, n), e.substr(n + 1)] : [e],
                                a = ru(o) ? o : o && o.split(" "),
                                s = `colors.${i}`,
                                l = s in r.__cssMap ? r.__cssMap[s].varRef : i;
                            return a ? [l, ...Array.isArray(a) ? a : [a]].join(" ") : l
                        });
                        return `${s}(${d.join(", ")})`
                    })(e, null != r ? r : {}),
                    blur: rd("blur"),
                    opacity: rd("opacity"),
                    brightness: rd("brightness"),
                    contrast: rd("contrast"),
                    dropShadow: rd("drop-shadow"),
                    grayscale: rd("grayscale"),
                    hueRotate: rd("hue-rotate"),
                    invert: rd("invert"),
                    saturate: rd("saturate"),
                    sepia: rd("sepia"),
                    bgImage(e) {
                        if (null == e) return e;
                        let r = ru(e) || rs.has(e);
                        return r ? e : `url(${e})`
                    },
                    outline(e) {
                        let r = "0" === String(e) || "none" === String(e);
                        return null !== e && r ? {
                            outline: "2px solid transparent",
                            outlineOffset: "2px"
                        } : {
                            outline: e
                        }
                    },
                    flexDirection(e) {
                        var r;
                        let {
                            space: n,
                            divide: i
                        } = null != (r = ri[e]) ? r : {}, o = {
                            flexDirection: e
                        };
                        return n && (o[n] = 1), i && (o[i] = 1), o
                    }
                },
                rf = {
                    borderWidths: t9("borderWidths"),
                    borderStyles: t9("borderStyles"),
                    colors: t9("colors"),
                    borders: t9("borders"),
                    gradients: t9("gradients", rh.gradient),
                    radii: t9("radii", rh.px),
                    space: t9("space", t8(rh.vh, rh.px)),
                    spaceT: t9("space", t8(rh.vh, rh.px)),
                    degreeT: e => ({
                        property: e,
                        transform: rh.degree
                    }),
                    prop: (e, r, n) => ({
                        property: e,
                        scale: r,
                        ...r && {
                            transform: t7({
                                scale: r,
                                transform: n
                            })
                        }
                    }),
                    propT: (e, r) => ({
                        property: e,
                        transform: r
                    }),
                    sizes: t9("sizes", t8(rh.vh, rh.px)),
                    sizesT: t9("sizes", t8(rh.vh, rh.fraction)),
                    shadows: t9("shadows"),
                    logical: function(e) {
                        let {
                            property: r,
                            scale: n,
                            transform: i
                        } = e;
                        return {
                            scale: n,
                            property: re(r),
                            transform: n ? t7({
                                scale: n,
                                compose: i
                            }) : i
                        }
                    },
                    blur: t9("blur", rh.blur)
                },
                rp = {
                    background: rf.colors("background"),
                    backgroundColor: rf.colors("backgroundColor"),
                    backgroundImage: rf.gradients("backgroundImage"),
                    backgroundSize: !0,
                    backgroundPosition: !0,
                    backgroundRepeat: !0,
                    backgroundAttachment: !0,
                    backgroundClip: {
                        transform: rh.bgClip
                    },
                    bgSize: rf.prop("backgroundSize"),
                    bgPosition: rf.prop("backgroundPosition"),
                    bg: rf.colors("background"),
                    bgColor: rf.colors("backgroundColor"),
                    bgPos: rf.prop("backgroundPosition"),
                    bgRepeat: rf.prop("backgroundRepeat"),
                    bgAttachment: rf.prop("backgroundAttachment"),
                    bgGradient: rf.gradients("backgroundImage"),
                    bgClip: {
                        transform: rh.bgClip
                    }
                };
            Object.assign(rp, {
                bgImage: rp.backgroundImage,
                bgImg: rp.backgroundImage
            });
            var rm = {
                border: rf.borders("border"),
                borderWidth: rf.borderWidths("borderWidth"),
                borderStyle: rf.borderStyles("borderStyle"),
                borderColor: rf.colors("borderColor"),
                borderRadius: rf.radii("borderRadius"),
                borderTop: rf.borders("borderTop"),
                borderBlockStart: rf.borders("borderBlockStart"),
                borderTopLeftRadius: rf.radii("borderTopLeftRadius"),
                borderStartStartRadius: rf.logical({
                    scale: "radii",
                    property: {
                        ltr: "borderTopLeftRadius",
                        rtl: "borderTopRightRadius"
                    }
                }),
                borderEndStartRadius: rf.logical({
                    scale: "radii",
                    property: {
                        ltr: "borderBottomLeftRadius",
                        rtl: "borderBottomRightRadius"
                    }
                }),
                borderTopRightRadius: rf.radii("borderTopRightRadius"),
                borderStartEndRadius: rf.logical({
                    scale: "radii",
                    property: {
                        ltr: "borderTopRightRadius",
                        rtl: "borderTopLeftRadius"
                    }
                }),
                borderEndEndRadius: rf.logical({
                    scale: "radii",
                    property: {
                        ltr: "borderBottomRightRadius",
                        rtl: "borderBottomLeftRadius"
                    }
                }),
                borderRight: rf.borders("borderRight"),
                borderInlineEnd: rf.borders("borderInlineEnd"),
                borderBottom: rf.borders("borderBottom"),
                borderBlockEnd: rf.borders("borderBlockEnd"),
                borderBottomLeftRadius: rf.radii("borderBottomLeftRadius"),
                borderBottomRightRadius: rf.radii("borderBottomRightRadius"),
                borderLeft: rf.borders("borderLeft"),
                borderInlineStart: {
                    property: "borderInlineStart",
                    scale: "borders"
                },
                borderInlineStartRadius: rf.logical({
                    scale: "radii",
                    property: {
                        ltr: ["borderTopLeftRadius", "borderBottomLeftRadius"],
                        rtl: ["borderTopRightRadius", "borderBottomRightRadius"]
                    }
                }),
                borderInlineEndRadius: rf.logical({
                    scale: "radii",
                    property: {
                        ltr: ["borderTopRightRadius", "borderBottomRightRadius"],
                        rtl: ["borderTopLeftRadius", "borderBottomLeftRadius"]
                    }
                }),
                borderX: rf.borders(["borderLeft", "borderRight"]),
                borderInline: rf.borders("borderInline"),
                borderY: rf.borders(["borderTop", "borderBottom"]),
                borderBlock: rf.borders("borderBlock"),
                borderTopWidth: rf.borderWidths("borderTopWidth"),
                borderBlockStartWidth: rf.borderWidths("borderBlockStartWidth"),
                borderTopColor: rf.colors("borderTopColor"),
                borderBlockStartColor: rf.colors("borderBlockStartColor"),
                borderTopStyle: rf.borderStyles("borderTopStyle"),
                borderBlockStartStyle: rf.borderStyles("borderBlockStartStyle"),
                borderBottomWidth: rf.borderWidths("borderBottomWidth"),
                borderBlockEndWidth: rf.borderWidths("borderBlockEndWidth"),
                borderBottomColor: rf.colors("borderBottomColor"),
                borderBlockEndColor: rf.colors("borderBlockEndColor"),
                borderBottomStyle: rf.borderStyles("borderBottomStyle"),
                borderBlockEndStyle: rf.borderStyles("borderBlockEndStyle"),
                borderLeftWidth: rf.borderWidths("borderLeftWidth"),
                borderInlineStartWidth: rf.borderWidths("borderInlineStartWidth"),
                borderLeftColor: rf.colors("borderLeftColor"),
                borderInlineStartColor: rf.colors("borderInlineStartColor"),
                borderLeftStyle: rf.borderStyles("borderLeftStyle"),
                borderInlineStartStyle: rf.borderStyles("borderInlineStartStyle"),
                borderRightWidth: rf.borderWidths("borderRightWidth"),
                borderInlineEndWidth: rf.borderWidths("borderInlineEndWidth"),
                borderRightColor: rf.colors("borderRightColor"),
                borderInlineEndColor: rf.colors("borderInlineEndColor"),
                borderRightStyle: rf.borderStyles("borderRightStyle"),
                borderInlineEndStyle: rf.borderStyles("borderInlineEndStyle"),
                borderTopRadius: rf.radii(["borderTopLeftRadius", "borderTopRightRadius"]),
                borderBottomRadius: rf.radii(["borderBottomLeftRadius", "borderBottomRightRadius"]),
                borderLeftRadius: rf.radii(["borderTopLeftRadius", "borderBottomLeftRadius"]),
                borderRightRadius: rf.radii(["borderTopRightRadius", "borderBottomRightRadius"])
            };
            Object.assign(rm, {
                rounded: rm.borderRadius,
                roundedTop: rm.borderTopRadius,
                roundedTopLeft: rm.borderTopLeftRadius,
                roundedTopRight: rm.borderTopRightRadius,
                roundedTopStart: rm.borderStartStartRadius,
                roundedTopEnd: rm.borderStartEndRadius,
                roundedBottom: rm.borderBottomRadius,
                roundedBottomLeft: rm.borderBottomLeftRadius,
                roundedBottomRight: rm.borderBottomRightRadius,
                roundedBottomStart: rm.borderEndStartRadius,
                roundedBottomEnd: rm.borderEndEndRadius,
                roundedLeft: rm.borderLeftRadius,
                roundedRight: rm.borderRightRadius,
                roundedStart: rm.borderInlineStartRadius,
                roundedEnd: rm.borderInlineEndRadius,
                borderStart: rm.borderInlineStart,
                borderEnd: rm.borderInlineEnd,
                borderTopStartRadius: rm.borderStartStartRadius,
                borderTopEndRadius: rm.borderStartEndRadius,
                borderBottomStartRadius: rm.borderEndStartRadius,
                borderBottomEndRadius: rm.borderEndEndRadius,
                borderStartRadius: rm.borderInlineStartRadius,
                borderEndRadius: rm.borderInlineEndRadius,
                borderStartWidth: rm.borderInlineStartWidth,
                borderEndWidth: rm.borderInlineEndWidth,
                borderStartColor: rm.borderInlineStartColor,
                borderEndColor: rm.borderInlineEndColor,
                borderStartStyle: rm.borderInlineStartStyle,
                borderEndStyle: rm.borderInlineEndStyle
            });
            var rg = {
                    color: rf.colors("color"),
                    textColor: rf.colors("color"),
                    fill: rf.colors("fill"),
                    stroke: rf.colors("stroke")
                },
                rv = {
                    boxShadow: rf.shadows("boxShadow"),
                    mixBlendMode: !0,
                    blendMode: rf.prop("mixBlendMode"),
                    backgroundBlendMode: !0,
                    bgBlendMode: rf.prop("backgroundBlendMode"),
                    opacity: !0
                };
            Object.assign(rv, {
                shadow: rv.boxShadow
            });
            var ry = {
                    filter: {
                        transform: rh.filter
                    },
                    blur: rf.blur("--chakra-blur"),
                    brightness: rf.propT("--chakra-brightness", rh.brightness),
                    contrast: rf.propT("--chakra-contrast", rh.contrast),
                    hueRotate: rf.degreeT("--chakra-hue-rotate"),
                    invert: rf.propT("--chakra-invert", rh.invert),
                    saturate: rf.propT("--chakra-saturate", rh.saturate),
                    dropShadow: rf.propT("--chakra-drop-shadow", rh.dropShadow),
                    backdropFilter: {
                        transform: rh.backdropFilter
                    },
                    backdropBlur: rf.blur("--chakra-backdrop-blur"),
                    backdropBrightness: rf.propT("--chakra-backdrop-brightness", rh.brightness),
                    backdropContrast: rf.propT("--chakra-backdrop-contrast", rh.contrast),
                    backdropHueRotate: rf.degreeT("--chakra-backdrop-hue-rotate"),
                    backdropInvert: rf.propT("--chakra-backdrop-invert", rh.invert),
                    backdropSaturate: rf.propT("--chakra-backdrop-saturate", rh.saturate)
                },
                rb = {
                    alignItems: !0,
                    alignContent: !0,
                    justifyItems: !0,
                    justifyContent: !0,
                    flexWrap: !0,
                    flexDirection: {
                        transform: rh.flexDirection
                    },
                    flex: !0,
                    flexFlow: !0,
                    flexGrow: !0,
                    flexShrink: !0,
                    flexBasis: rf.sizes("flexBasis"),
                    justifySelf: !0,
                    alignSelf: !0,
                    order: !0,
                    placeItems: !0,
                    placeContent: !0,
                    placeSelf: !0,
                    gap: rf.space("gap"),
                    rowGap: rf.space("rowGap"),
                    columnGap: rf.space("columnGap")
                };
            Object.assign(rb, {
                flexDir: rb.flexDirection
            });
            var rw = {
                    gridGap: rf.space("gridGap"),
                    gridColumnGap: rf.space("gridColumnGap"),
                    gridRowGap: rf.space("gridRowGap"),
                    gridColumn: !0,
                    gridRow: !0,
                    gridAutoFlow: !0,
                    gridAutoColumns: !0,
                    gridColumnStart: !0,
                    gridColumnEnd: !0,
                    gridRowStart: !0,
                    gridRowEnd: !0,
                    gridAutoRows: !0,
                    gridTemplate: !0,
                    gridTemplateColumns: !0,
                    gridTemplateRows: !0,
                    gridTemplateAreas: !0,
                    gridArea: !0
                },
                rx = {
                    appearance: !0,
                    cursor: !0,
                    resize: !0,
                    userSelect: !0,
                    pointerEvents: !0,
                    outline: {
                        transform: rh.outline
                    },
                    outlineOffset: !0,
                    outlineColor: rf.colors("outlineColor")
                },
                rE = {
                    width: rf.sizesT("width"),
                    inlineSize: rf.sizesT("inlineSize"),
                    height: rf.sizes("height"),
                    blockSize: rf.sizes("blockSize"),
                    boxSize: rf.sizes(["width", "height"]),
                    minWidth: rf.sizes("minWidth"),
                    minInlineSize: rf.sizes("minInlineSize"),
                    minHeight: rf.sizes("minHeight"),
                    minBlockSize: rf.sizes("minBlockSize"),
                    maxWidth: rf.sizes("maxWidth"),
                    maxInlineSize: rf.sizes("maxInlineSize"),
                    maxHeight: rf.sizes("maxHeight"),
                    maxBlockSize: rf.sizes("maxBlockSize"),
                    overflow: !0,
                    overflowX: !0,
                    overflowY: !0,
                    overscrollBehavior: !0,
                    overscrollBehaviorX: !0,
                    overscrollBehaviorY: !0,
                    display: !0,
                    aspectRatio: !0,
                    hideFrom: {
                        scale: "breakpoints",
                        transform: (e, r) => {
                            var n, i, o;
                            let a = null != (o = null == (i = null == (n = r.__breakpoints) ? void 0 : n.get(e)) ? void 0 : i.minW) ? o : e,
                                s = `@media screen and (min-width: ${a})`;
                            return {
                                [s]: {
                                    display: "none"
                                }
                            }
                        }
                    },
                    hideBelow: {
                        scale: "breakpoints",
                        transform: (e, r) => {
                            var n, i, o;
                            let a = null != (o = null == (i = null == (n = r.__breakpoints) ? void 0 : n.get(e)) ? void 0 : i._minW) ? o : e,
                                s = `@media screen and (max-width: ${a})`;
                            return {
                                [s]: {
                                    display: "none"
                                }
                            }
                        }
                    },
                    verticalAlign: !0,
                    boxSizing: !0,
                    boxDecorationBreak: !0,
                    float: rf.propT("float", rh.float),
                    objectFit: !0,
                    objectPosition: !0,
                    visibility: !0,
                    isolation: !0
                };
            Object.assign(rE, {
                w: rE.width,
                h: rE.height,
                minW: rE.minWidth,
                maxW: rE.maxWidth,
                minH: rE.minHeight,
                maxH: rE.maxHeight,
                overscroll: rE.overscrollBehavior,
                overscrollX: rE.overscrollBehaviorX,
                overscrollY: rE.overscrollBehaviorY
            });
            var rC = {
                    listStyleType: !0,
                    listStylePosition: !0,
                    listStylePos: rf.prop("listStylePosition"),
                    listStyleImage: !0,
                    listStyleImg: rf.prop("listStyleImage")
                },
                rA = (e => {
                    let r = new WeakMap,
                        n = (n, i, o, a) => {
                            if (void 0 === n) return e(n, i, o);
                            r.has(n) || r.set(n, new Map);
                            let s = r.get(n);
                            if (s.has(i)) return s.get(i);
                            let l = e(n, i, o, a);
                            return s.set(i, l), l
                        };
                    return n
                })(function(e, r, n, i) {
                    let o = "string" == typeof r ? r.split(".") : [r];
                    for (i = 0; i < o.length && e; i += 1) e = e[o[i]];
                    return void 0 === e ? n : e
                }),
                rk = {
                    border: "0px",
                    clip: "rect(0, 0, 0, 0)",
                    width: "1px",
                    height: "1px",
                    margin: "-1px",
                    padding: "0px",
                    overflow: "hidden",
                    whiteSpace: "nowrap",
                    position: "absolute"
                },
                rS = {
                    position: "static",
                    width: "auto",
                    height: "auto",
                    clip: "auto",
                    padding: "0",
                    margin: "0",
                    overflow: "visible",
                    whiteSpace: "normal"
                },
                r_ = (e, r, n) => {
                    let i = {},
                        o = rA(e, r, {});
                    for (let a in o) {
                        let s = a in n && null != n[a];
                        s || (i[a] = o[a])
                    }
                    return i
                },
                rP = {
                    position: !0,
                    pos: rf.prop("position"),
                    zIndex: rf.prop("zIndex", "zIndices"),
                    inset: rf.spaceT("inset"),
                    insetX: rf.spaceT(["left", "right"]),
                    insetInline: rf.spaceT("insetInline"),
                    insetY: rf.spaceT(["top", "bottom"]),
                    insetBlock: rf.spaceT("insetBlock"),
                    top: rf.spaceT("top"),
                    insetBlockStart: rf.spaceT("insetBlockStart"),
                    bottom: rf.spaceT("bottom"),
                    insetBlockEnd: rf.spaceT("insetBlockEnd"),
                    left: rf.spaceT("left"),
                    insetInlineStart: rf.logical({
                        scale: "space",
                        property: {
                            ltr: "left",
                            rtl: "right"
                        }
                    }),
                    right: rf.spaceT("right"),
                    insetInlineEnd: rf.logical({
                        scale: "space",
                        property: {
                            ltr: "right",
                            rtl: "left"
                        }
                    })
                };
            Object.assign(rP, {
                insetStart: rP.insetInlineStart,
                insetEnd: rP.insetInlineEnd
            });
            var rj = {
                    ring: {
                        transform: rh.ring
                    },
                    ringColor: rf.colors("--chakra-ring-color"),
                    ringOffset: rf.prop("--chakra-ring-offset-width"),
                    ringOffsetColor: rf.colors("--chakra-ring-offset-color"),
                    ringInset: rf.prop("--chakra-ring-inset")
                },
                rT = {
                    margin: rf.spaceT("margin"),
                    marginTop: rf.spaceT("marginTop"),
                    marginBlockStart: rf.spaceT("marginBlockStart"),
                    marginRight: rf.spaceT("marginRight"),
                    marginInlineEnd: rf.spaceT("marginInlineEnd"),
                    marginBottom: rf.spaceT("marginBottom"),
                    marginBlockEnd: rf.spaceT("marginBlockEnd"),
                    marginLeft: rf.spaceT("marginLeft"),
                    marginInlineStart: rf.spaceT("marginInlineStart"),
                    marginX: rf.spaceT(["marginInlineStart", "marginInlineEnd"]),
                    marginInline: rf.spaceT("marginInline"),
                    marginY: rf.spaceT(["marginTop", "marginBottom"]),
                    marginBlock: rf.spaceT("marginBlock"),
                    padding: rf.space("padding"),
                    paddingTop: rf.space("paddingTop"),
                    paddingBlockStart: rf.space("paddingBlockStart"),
                    paddingRight: rf.space("paddingRight"),
                    paddingBottom: rf.space("paddingBottom"),
                    paddingBlockEnd: rf.space("paddingBlockEnd"),
                    paddingLeft: rf.space("paddingLeft"),
                    paddingInlineStart: rf.space("paddingInlineStart"),
                    paddingInlineEnd: rf.space("paddingInlineEnd"),
                    paddingX: rf.space(["paddingInlineStart", "paddingInlineEnd"]),
                    paddingInline: rf.space("paddingInline"),
                    paddingY: rf.space(["paddingTop", "paddingBottom"]),
                    paddingBlock: rf.space("paddingBlock")
                };
            Object.assign(rT, {
                m: rT.margin,
                mt: rT.marginTop,
                mr: rT.marginRight,
                me: rT.marginInlineEnd,
                marginEnd: rT.marginInlineEnd,
                mb: rT.marginBottom,
                ml: rT.marginLeft,
                ms: rT.marginInlineStart,
                marginStart: rT.marginInlineStart,
                mx: rT.marginX,
                my: rT.marginY,
                p: rT.padding,
                pt: rT.paddingTop,
                py: rT.paddingY,
                px: rT.paddingX,
                pb: rT.paddingBottom,
                pl: rT.paddingLeft,
                ps: rT.paddingInlineStart,
                paddingStart: rT.paddingInlineStart,
                pr: rT.paddingRight,
                pe: rT.paddingInlineEnd,
                paddingEnd: rT.paddingInlineEnd
            });
            var rR = {
                    textDecorationColor: rf.colors("textDecorationColor"),
                    textDecoration: !0,
                    textDecor: {
                        property: "textDecoration"
                    },
                    textDecorationLine: !0,
                    textDecorationStyle: !0,
                    textDecorationThickness: !0,
                    textUnderlineOffset: !0,
                    textShadow: rf.shadows("textShadow")
                },
                rB = {
                    clipPath: !0,
                    transform: rf.propT("transform", rh.transform),
                    transformOrigin: !0,
                    translateX: rf.spaceT("--chakra-translate-x"),
                    translateY: rf.spaceT("--chakra-translate-y"),
                    skewX: rf.degreeT("--chakra-skew-x"),
                    skewY: rf.degreeT("--chakra-skew-y"),
                    scaleX: rf.prop("--chakra-scale-x"),
                    scaleY: rf.prop("--chakra-scale-y"),
                    scale: rf.prop(["--chakra-scale-x", "--chakra-scale-y"]),
                    rotate: rf.degreeT("--chakra-rotate")
                },
                rO = {
                    transition: !0,
                    transitionDelay: !0,
                    animation: !0,
                    willChange: !0,
                    transitionDuration: rf.prop("transitionDuration", "transition.duration"),
                    transitionProperty: rf.prop("transitionProperty", "transition.property"),
                    transitionTimingFunction: rf.prop("transitionTimingFunction", "transition.easing")
                },
                rM = {
                    fontFamily: rf.prop("fontFamily", "fonts"),
                    fontSize: rf.prop("fontSize", "fontSizes", rh.px),
                    fontWeight: rf.prop("fontWeight", "fontWeights"),
                    lineHeight: rf.prop("lineHeight", "lineHeights"),
                    letterSpacing: rf.prop("letterSpacing", "letterSpacings"),
                    textAlign: !0,
                    fontStyle: !0,
                    textIndent: !0,
                    wordBreak: !0,
                    overflowWrap: !0,
                    textOverflow: !0,
                    textTransform: !0,
                    whiteSpace: !0,
                    isTruncated: {
                        transform(e) {
                            if (!0 === e) return {
                                overflow: "hidden",
                                textOverflow: "ellipsis",
                                whiteSpace: "nowrap"
                            }
                        }
                    },
                    noOfLines: {
                        static: {
                            overflow: "hidden",
                            textOverflow: "ellipsis",
                            display: "-webkit-box",
                            WebkitBoxOrient: "vertical",
                            WebkitLineClamp: "var(--chakra-line-clamp)"
                        },
                        property: "--chakra-line-clamp"
                    }
                },
                rI = {
                    scrollBehavior: !0,
                    scrollSnapAlign: !0,
                    scrollSnapStop: !0,
                    scrollSnapType: !0,
                    scrollMargin: rf.spaceT("scrollMargin"),
                    scrollMarginTop: rf.spaceT("scrollMarginTop"),
                    scrollMarginBottom: rf.spaceT("scrollMarginBottom"),
                    scrollMarginLeft: rf.spaceT("scrollMarginLeft"),
                    scrollMarginRight: rf.spaceT("scrollMarginRight"),
                    scrollMarginX: rf.spaceT(["scrollMarginLeft", "scrollMarginRight"]),
                    scrollMarginY: rf.spaceT(["scrollMarginTop", "scrollMarginBottom"]),
                    scrollPadding: rf.spaceT("scrollPadding"),
                    scrollPaddingTop: rf.spaceT("scrollPaddingTop"),
                    scrollPaddingBottom: rf.spaceT("scrollPaddingBottom"),
                    scrollPaddingLeft: rf.spaceT("scrollPaddingLeft"),
                    scrollPaddingRight: rf.spaceT("scrollPaddingRight"),
                    scrollPaddingX: rf.spaceT(["scrollPaddingLeft", "scrollPaddingRight"]),
                    scrollPaddingY: rf.spaceT(["scrollPaddingTop", "scrollPaddingBottom"])
                };

            function rN(e) {
                return t0(e) && e.reference ? e.reference : String(e)
            }
            var rF = (e, ...r) => r.map(rN).join(` ${e} `).replace(/calc/g, ""),
                rL = (...e) => `calc(${rF("+",...e)})`,
                rD = (...e) => `calc(${rF("-",...e)})`,
                rz = (...e) => `calc(${rF("*",...e)})`,
                rU = (...e) => `calc(${rF("/",...e)})`,
                r$ = e => {
                    let r = rN(e);
                    return null == r || Number.isNaN(parseFloat(r)) ? rz(r, -1) : String(r).startsWith("-") ? String(r).slice(1) : `-${r}`
                },
                rq = Object.assign(e => ({
                    add: (...r) => rq(rL(e, ...r)),
                    subtract: (...r) => rq(rD(e, ...r)),
                    multiply: (...r) => rq(rz(e, ...r)),
                    divide: (...r) => rq(rU(e, ...r)),
                    negate: () => rq(r$(e)),
                    toString: () => e.toString()
                }), {
                    add: rL,
                    subtract: rD,
                    multiply: rz,
                    divide: rU,
                    negate: r$
                });

            function rW(e, r, n) {
                let i = function(e, r = "") {
                    return function(e) {
                        let r = function(e, r = "-") {
                            return e.replace(/\s+/g, r)
                        }(e.toString());
                        return (function(e) {
                            if (e.includes("\\.")) return e;
                            let r = !Number.isInteger(parseFloat(e.toString()));
                            return r ? e.replace(".", "\\.") : e
                        })(r).replace(/[!-,/:-@[-^`{-~]/g, "\\$&")
                    }(`--${function(e,r=""){return[r,e].filter(Boolean).join("-")}(e,r)}`)
                }(e, n);
                return {
                    variable: i,
                    reference: `var(${i}${r?`, ${r}`:""})`
                }
            }

            function rV(e) {
                if (null == e) return e;
                let {
                    unitless: r
                } = function(e) {
                    let r = parseFloat(e.toString()),
                        n = e.toString().replace(String(r), "");
                    return {
                        unitless: !n,
                        value: r,
                        unit: n
                    }
                }(e);
                return r || "number" == typeof e ? `${e}px` : e
            }
            var rH = (e, r) => parseInt(e[1], 10) > parseInt(r[1], 10) ? 1 : -1,
                rG = e => Object.fromEntries(Object.entries(e).sort(rH));

            function rK(e) {
                let r = rG(e);
                return Object.assign(Object.values(r), r)
            }

            function rQ(e) {
                var r;
                return e ? "number" == typeof(e = null != (r = rV(e)) ? r : e) ? `${e+-.02}` : e.replace(/(\d+\.?\d*)/u, e => `${parseFloat(e)+-.02}`) : e
            }

            function rJ(e, r) {
                let n = ["@media screen"];
                return e && n.push("and", `(min-width: ${rV(e)})`), r && n.push("and", `(max-width: ${rV(r)})`), n.join(" ")
            }
            var rY = {
                    hover: (e, r) => `${e}:hover ${r}, ${e}[data-hover] ${r}`,
                    focus: (e, r) => `${e}:focus ${r}, ${e}[data-focus] ${r}`,
                    focusVisible: (e, r) => `${e}:focus-visible ${r}`,
                    focusWithin: (e, r) => `${e}:focus-within ${r}`,
                    active: (e, r) => `${e}:active ${r}, ${e}[data-active] ${r}`,
                    disabled: (e, r) => `${e}:disabled ${r}, ${e}[data-disabled] ${r}`,
                    invalid: (e, r) => `${e}:invalid ${r}, ${e}[data-invalid] ${r}`,
                    checked: (e, r) => `${e}:checked ${r}, ${e}[data-checked] ${r}`,
                    indeterminate: (e, r) => `${e}:indeterminate ${r}, ${e}[aria-checked=mixed] ${r}, ${e}[data-indeterminate] ${r}`,
                    readOnly: (e, r) => `${e}:read-only ${r}, ${e}[readonly] ${r}, ${e}[data-read-only] ${r}`,
                    expanded: (e, r) => `${e}:read-only ${r}, ${e}[aria-expanded=true] ${r}, ${e}[data-expanded] ${r}`,
                    placeholderShown: (e, r) => `${e}:placeholder-shown ${r}`
                },
                rX = e => r0(r => e(r, "&"), "[role=group]", "[data-group]", ".group"),
                rZ = e => r0(r => e(r, "~ &"), "[data-peer]", ".peer"),
                r0 = (e, ...r) => r.map(e).join(", "),
                r1 = {
                    _hover: "&:hover, &[data-hover]",
                    _active: "&:active, &[data-active]",
                    _focus: "&:focus, &[data-focus]",
                    _highlighted: "&[data-highlighted]",
                    _focusWithin: "&:focus-within",
                    _focusVisible: "&:focus-visible, &[data-focus-visible]",
                    _disabled: "&:disabled, &[disabled], &[aria-disabled=true], &[data-disabled]",
                    _readOnly: "&[aria-readonly=true], &[readonly], &[data-readonly]",
                    _before: "&::before",
                    _after: "&::after",
                    _empty: "&:empty",
                    _expanded: "&[aria-expanded=true], &[data-expanded]",
                    _checked: "&[aria-checked=true], &[data-checked]",
                    _grabbed: "&[aria-grabbed=true], &[data-grabbed]",
                    _pressed: "&[aria-pressed=true], &[data-pressed]",
                    _invalid: "&[aria-invalid=true], &[data-invalid]",
                    _valid: "&[data-valid], &[data-state=valid]",
                    _loading: "&[data-loading], &[aria-busy=true]",
                    _selected: "&[aria-selected=true], &[data-selected]",
                    _hidden: "&[hidden], &[data-hidden]",
                    _autofill: "&:-webkit-autofill",
                    _even: "&:nth-of-type(even)",
                    _odd: "&:nth-of-type(odd)",
                    _first: "&:first-of-type",
                    _firstLetter: "&::first-letter",
                    _last: "&:last-of-type",
                    _notFirst: "&:not(:first-of-type)",
                    _notLast: "&:not(:last-of-type)",
                    _visited: "&:visited",
                    _activeLink: "&[aria-current=page]",
                    _activeStep: "&[aria-current=step]",
                    _indeterminate: "&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]",
                    _groupHover: rX(rY.hover),
                    _peerHover: rZ(rY.hover),
                    _groupFocus: rX(rY.focus),
                    _peerFocus: rZ(rY.focus),
                    _groupFocusVisible: rX(rY.focusVisible),
                    _peerFocusVisible: rZ(rY.focusVisible),
                    _groupActive: rX(rY.active),
                    _peerActive: rZ(rY.active),
                    _groupDisabled: rX(rY.disabled),
                    _peerDisabled: rZ(rY.disabled),
                    _groupInvalid: rX(rY.invalid),
                    _peerInvalid: rZ(rY.invalid),
                    _groupChecked: rX(rY.checked),
                    _peerChecked: rZ(rY.checked),
                    _groupFocusWithin: rX(rY.focusWithin),
                    _peerFocusWithin: rZ(rY.focusWithin),
                    _peerPlaceholderShown: rZ(rY.placeholderShown),
                    _placeholder: "&::placeholder",
                    _placeholderShown: "&:placeholder-shown",
                    _fullScreen: "&:fullscreen",
                    _selection: "&::selection",
                    _rtl: "[dir=rtl] &, &[dir=rtl]",
                    _ltr: "[dir=ltr] &, &[dir=ltr]",
                    _mediaDark: "@media (prefers-color-scheme: dark)",
                    _mediaReduceMotion: "@media (prefers-reduced-motion: reduce)",
                    _dark: ".chakra-ui-dark &:not([data-theme]),[data-theme=dark] &:not([data-theme]),&[data-theme=dark]",
                    _light: ".chakra-ui-light &:not([data-theme]),[data-theme=light] &:not([data-theme]),&[data-theme=light]",
                    _horizontal: "&[data-orientation=horizontal]",
                    _vertical: "&[data-orientation=vertical]"
                },
                r2 = Object.keys(r1);

            function r3(e, r) {
                return rW(String(e).replace(/\./g, "-"), void 0, r)
            }

            function r6(e, r, n = {}) {
                let {
                    stop: i,
                    getKey: o
                } = n;
                return function e(n, a = []) {
                    var s;
                    if ("object" == typeof n && null != n && !Array.isArray(n) || Array.isArray(n)) {
                        let l = {};
                        for (let [u, c] of Object.entries(n)) {
                            let d = null != (s = null == o ? void 0 : o(u)) ? s : u,
                                h = [...a, d];
                            if (null == i ? void 0 : i(n, h)) return r(n, a);
                            l[d] = e(c, h)
                        }
                        return l
                    }
                    return r(n, a)
                }(e)
            }
            var r5 = ["colors", "borders", "borderWidths", "borderStyles", "fonts", "fontSizes", "fontWeights", "gradients", "letterSpacings", "lineHeights", "radii", "space", "shadows", "sizes", "zIndices", "transition", "blur", "breakpoints"],
                r4 = e => r2.includes(e) || "default" === e,
                r7 = t3({}, rp, rm, rg, rb, rE, ry, rj, rx, rw, {
                    srOnly: {
                        transform: e => !0 === e ? rk : "focusable" === e ? rS : {}
                    },
                    layerStyle: {
                        processResult: !0,
                        transform: (e, r, n) => r_(r, `layerStyles.${e}`, n)
                    },
                    textStyle: {
                        processResult: !0,
                        transform: (e, r, n) => r_(r, `textStyles.${e}`, n)
                    },
                    apply: {
                        processResult: !0,
                        transform: (e, r, n) => r_(r, e, n)
                    }
                }, rP, rv, rT, rI, rM, rR, rB, rC, rO);
            Object.keys(Object.assign({}, rT, rE, rb, rw, rP));
            var r8 = [...Object.keys(r7), ...r2],
                r9 = { ...r7,
                    ...r1
                },
                ne = e => e in r9,
                nt = e => r => {
                    if (!r.__breakpoints) return e;
                    let {
                        isResponsive: n,
                        toArrayValue: i,
                        media: o
                    } = r.__breakpoints, a = {};
                    for (let s in e) {
                        let l = t1(e[s], r);
                        if (null == l) continue;
                        if (!Array.isArray(l = t0(l) && n(l) ? i(l) : l)) {
                            a[s] = l;
                            continue
                        }
                        let u = l.slice(0, o.length).length;
                        for (let c = 0; c < u; c += 1) {
                            let d = null == o ? void 0 : o[c];
                            if (!d) {
                                a[s] = l[c];
                                continue
                            }
                            a[d] = a[d] || {}, null != l[c] && (a[d][s] = l[c])
                        }
                    }
                    return a
                },
                nr = (e, r) => e.startsWith("--") && "string" == typeof r && !/^var\(--.+\)$/.test(r),
                nn = (e, r) => {
                    var n, i;
                    if (null == r) return r;
                    let o = r => {
                            var n, i;
                            return null == (i = null == (n = e.__cssMap) ? void 0 : n[r]) ? void 0 : i.varRef
                        },
                        a = e => {
                            var r;
                            return null != (r = o(e)) ? r : e
                        },
                        [s, l] = function(e) {
                            let r = [],
                                n = "",
                                i = !1;
                            for (let o = 0; o < e.length; o++) {
                                let a = e[o];
                                "(" === a ? (i = !0, n += a) : ")" === a ? (i = !1, n += a) : "," !== a || i ? n += a : (r.push(n), n = "")
                            }
                            return (n = n.trim()) && r.push(n), r
                        }(r);
                    return r = null != (i = null != (n = o(s)) ? n : a(l)) ? i : a(r)
                },
                ni = e => r => {
                    let n = function(e) {
                        let {
                            configs: r = {},
                            pseudos: n = {},
                            theme: i
                        } = e, o = (e, a = !1) => {
                            var s, l, u;
                            let c = t1(e, i),
                                d = nt(c)(i),
                                h = {};
                            for (let f in d) {
                                let p = d[f],
                                    m = t1(p, i);
                                f in n && (f = n[f]), nr(f, m) && (m = nn(i, m));
                                let g = r[f];
                                if (!0 === g && (g = {
                                        property: f
                                    }), t0(m)) {
                                    h[f] = null != (s = h[f]) ? s : {}, h[f] = t3({}, h[f], o(m, !0));
                                    continue
                                }
                                let v = null != (u = null == (l = null == g ? void 0 : g.transform) ? void 0 : l.call(g, m, i, c)) ? u : m;
                                v = (null == g ? void 0 : g.processResult) ? o(v, !0) : v;
                                let y = t1(null == g ? void 0 : g.property, i);
                                if (!a && (null == g ? void 0 : g.static)) {
                                    let b = t1(g.static, i);
                                    h = t3({}, h, b)
                                }
                                if (y && Array.isArray(y)) {
                                    for (let w of y) h[w] = v;
                                    continue
                                }
                                if (y) {
                                    "&" === y && t0(v) ? h = t3({}, h, v) : h[y] = v;
                                    continue
                                }
                                if (t0(v)) {
                                    h = t3({}, h, v);
                                    continue
                                }
                                h[f] = v
                            }
                            return h
                        };
                        return o
                    }({
                        theme: r,
                        pseudos: r1,
                        configs: r7
                    });
                    return n(e)
                };

            function no(e) {
                return {
                    definePartsStyle: e => e,
                    defineMultiStyleConfig: r => ({
                        parts: e,
                        ...r
                    })
                }
            }

            function na(e) {
                return function(e, r = []) {
                    let n = Object.assign({}, e);
                    for (let i of r) i in n && delete n[i];
                    return n
                }(e, ["styleConfig", "size", "variant", "colorScheme"])
            }
            var ns = (e => {
                let r = new WeakMap,
                    n = (n, i, o, a) => {
                        if (void 0 === n) return e(n, i, o);
                        r.has(n) || r.set(n, new Map);
                        let s = r.get(n);
                        if (s.has(i)) return s.get(i);
                        let l = e(n, i, o, a);
                        return s.set(i, l), l
                    };
                return n
            })(function(e, r, n, i) {
                let o = "string" == typeof r ? r.split(".") : [r];
                for (i = 0; i < o.length && e; i += 1) e = e[o[i]];
                return void 0 === e ? n : e
            });

            function nl(e, r) {
                let n = {};
                return Object.keys(e).forEach(i => {
                    let o = e[i],
                        a = r(o, i, e);
                    a && (n[i] = o)
                }), n
            }
            var nu = e => nl(e, e => null != e);

            function nc(e, ...r) {
                return "function" == typeof e ? e(...r) : e
            }

            function nd(e) {
                let {
                    cssVarsRoot: r,
                    theme: n,
                    children: i
                } = e, o = (0, Z.useMemo)(() => (function(e) {
                    var r;
                    let n = function(e) {
                            let {
                                __cssMap: r,
                                __cssVars: n,
                                __breakpoints: i,
                                ...o
                            } = e;
                            return o
                        }(e),
                        i = function(e, r) {
                            let n = {};
                            for (let i of r) i in e && (n[i] = e[i]);
                            return n
                        }(n, r5),
                        o = n.semanticTokens,
                        a = function({
                            tokens: e,
                            semanticTokens: r
                        }) {
                            let n = {};
                            return r6(e, (e, r) => {
                                null != e && (n[r.join(".")] = {
                                    isSemantic: !1,
                                    value: e
                                })
                            }), r6(r, (e, r) => {
                                null != e && (n[r.join(".")] = {
                                    isSemantic: !0,
                                    value: e
                                })
                            }, {
                                stop: e => Object.keys(e).every(r4)
                            }), n
                        }({
                            tokens: i,
                            semanticTokens: o
                        }),
                        s = null == (r = n.config) ? void 0 : r.cssVarPrefix,
                        {
                            cssMap: l,
                            cssVars: u
                        } = function(e, r) {
                            let n = {},
                                i = {};
                            for (let [o, a] of Object.entries(e)) {
                                let {
                                    isSemantic: s,
                                    value: l
                                } = a, {
                                    variable: u,
                                    reference: c
                                } = r3(o, null == r ? void 0 : r.cssVarPrefix);
                                if (!s) {
                                    if (o.startsWith("space")) {
                                        let d = o.split("."),
                                            [h, ...f] = d,
                                            p = `${h}.-${f.join(".")}`,
                                            m = rq.negate(l),
                                            g = rq.negate(c);
                                        i[p] = {
                                            value: m,
                                            var: u,
                                            varRef: g
                                        }
                                    }
                                    n[u] = l, i[o] = {
                                        value: l,
                                        var: u,
                                        varRef: c
                                    };
                                    continue
                                }
                                let v = n => {
                                        let i = String(o).split(".")[0],
                                            a = [i, n].join("."),
                                            s = e[a];
                                        if (!s) return n;
                                        let {
                                            reference: l
                                        } = r3(a, null == r ? void 0 : r.cssVarPrefix);
                                        return l
                                    },
                                    y = t0(l) ? l : {
                                        default: l
                                    };
                                n = t3(n, Object.entries(y).reduce((e, [r, n]) => {
                                    var i;
                                    if (!n) return e;
                                    let o = v(`${n}`);
                                    if ("default" === r) return e[u] = o, e;
                                    let a = null != (i = null == r1 ? void 0 : r1[r]) ? i : r;
                                    return e[a] = {
                                        [u]: o
                                    }, e
                                }, {})), i[o] = {
                                    value: c,
                                    var: u,
                                    varRef: c
                                }
                            }
                            return {
                                cssVars: n,
                                cssMap: i
                            }
                        }(a, {
                            cssVarPrefix: s
                        });
                    return Object.assign(n, {
                        __cssVars: {
                            "--chakra-ring-inset": "var(--chakra-empty,/*!*/ /*!*/)",
                            "--chakra-ring-offset-width": "0px",
                            "--chakra-ring-offset-color": "#fff",
                            "--chakra-ring-color": "rgba(66, 153, 225, 0.6)",
                            "--chakra-ring-offset-shadow": "0 0 #0000",
                            "--chakra-ring-shadow": "0 0 #0000",
                            "--chakra-space-x-reverse": "0",
                            "--chakra-space-y-reverse": "0",
                            ...u
                        },
                        __cssMap: l,
                        __breakpoints: function(e) {
                            var r;
                            if (!e) return null;
                            e.base = null != (r = e.base) ? r : "0px";
                            let n = rK(e),
                                i = Object.entries(e).sort(rH).map(([e, r], n, i) => {
                                    var o;
                                    let [, a] = null != (o = i[n + 1]) ? o : [];
                                    return a = parseFloat(a) > 0 ? rQ(a) : void 0, {
                                        _minW: rQ(r),
                                        breakpoint: e,
                                        minW: r,
                                        maxW: a,
                                        maxWQuery: rJ(null, a),
                                        minWQuery: rJ(r),
                                        minMaxQuery: rJ(r, a)
                                    }
                                }),
                                o = function(e) {
                                    let r = Object.keys(rG(e));
                                    return new Set(r)
                                }(e),
                                a = Array.from(o.values());
                            return {
                                keys: o,
                                normalized: n,
                                isResponsive(e) {
                                    let r = Object.keys(e);
                                    return r.length > 0 && r.every(e => o.has(e))
                                },
                                asObject: rG(e),
                                asArray: rK(e),
                                details: i,
                                get: e => i.find(r => r.breakpoint === e),
                                media: [null, ...n.map(e => rJ(e)).slice(1)],
                                toArrayValue(e) {
                                    if (!t0(e)) throw Error("toArrayValue: value must be an object");
                                    let r = a.map(r => {
                                        var n;
                                        return null != (n = e[r]) ? n : null
                                    });
                                    for (; null === function(e) {
                                            let r = null == e ? 0 : e.length;
                                            return r ? e[r - 1] : void 0
                                        }(r);) r.pop();
                                    return r
                                },
                                toObjectValue(e) {
                                    if (!Array.isArray(e)) throw Error("toObjectValue: value must be an array");
                                    return e.reduce((e, r, n) => {
                                        let i = a[n];
                                        return null != i && null != r && (e[i] = r), e
                                    }, {})
                                }
                            }
                        }(n.breakpoints)
                    }), n
                })(n), [n]);
                return (0, $.jsxs)(tL, {
                    theme: o,
                    children: [(0, $.jsx)(nh, {
                        root: r
                    }), i]
                })
            }

            function nh({
                root: e = ":host, :root"
            }) {
                let r = [e, "[data-theme]"].join(",");
                return (0, $.jsx)(tU, {
                    styles: e => ({
                        [r]: e.__cssVars
                    })
                })
            }
            var [nf, np] = function(e = {}) {
                let {
                    strict: r = !0,
                    errorMessage: n = "useContext: `context` is undefined. Seems you forgot to wrap component within the Provider",
                    name: i
                } = e, o = (0, Z.createContext)(void 0);
                return o.displayName = i, [o.Provider, function e() {
                    var i;
                    let a = (0, Z.useContext)(o);
                    if (!a && r) {
                        let s = Error(n);
                        throw s.name = "ContextError", null == (i = Error.captureStackTrace) || i.call(Error, s, e), s
                    }
                    return a
                }, o]
            }({
                name: "StylesContext",
                errorMessage: "useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` "
            });

            function nm() {
                let {
                    colorMode: e
                } = tX();
                return (0, $.jsx)(tU, {
                    styles: r => {
                        let n = ns(r, "styles.global"),
                            i = nc(n, {
                                theme: r,
                                colorMode: e
                            });
                        if (!i) return;
                        let o = ni(i)(r);
                        return o
                    }
                })
            }
            var ng = {
                    light: "chakra-ui-light",
                    dark: "chakra-ui-dark"
                },
                nv = "chakra-ui-color-mode",
                ny = {
                    ssr: !1,
                    type: "localStorage",
                    get(e) {
                        let r;
                        if (!(null == globalThis ? void 0 : globalThis.document)) return e;
                        try {
                            r = localStorage.getItem(nv) || e
                        } catch (n) {}
                        return r || e
                    },
                    set(e) {
                        try {
                            localStorage.setItem(nv, e)
                        } catch (r) {}
                    }
                },
                nb = Boolean(null == globalThis ? void 0 : globalThis.document) ? Z.useLayoutEffect : Z.useEffect,
                nw = () => {};

            function nx(e, r) {
                return "cookie" === e.type && e.ssr ? e.get(r) : r
            }

            function nE(e) {
                let {
                    value: r,
                    children: n,
                    options: {
                        useSystemColorMode: i,
                        initialColorMode: o,
                        disableTransitionOnChange: a
                    } = {},
                    colorModeManager: s = ny
                } = e, l = "dark" === o ? "dark" : "light", [u, c] = (0, Z.useState)(() => nx(s, l)), [d, h] = (0, Z.useState)(() => nx(s)), {
                    getSystemTheme: f,
                    setClassName: p,
                    setDataset: m,
                    addListener: g
                } = (0, Z.useMemo)(() => (function(e = {}) {
                    let {
                        preventTransition: r = !0
                    } = e, n = {
                        setDataset: e => {
                            let i = r ? n.preventTransition() : void 0;
                            document.documentElement.dataset.theme = e, document.documentElement.style.colorScheme = e, null == i || i()
                        },
                        setClassName(e) {
                            document.body.classList.add(e ? ng.dark : ng.light), document.body.classList.remove(e ? ng.light : ng.dark)
                        },
                        query: () => window.matchMedia("(prefers-color-scheme: dark)"),
                        getSystemTheme(e) {
                            var r;
                            let i = null != (r = n.query().matches) ? r : "dark" === e;
                            return i ? "dark" : "light"
                        },
                        addListener(e) {
                            let r = n.query(),
                                i = r => {
                                    e(r.matches ? "dark" : "light")
                                };
                            return "function" == typeof r.addListener ? r.addListener(i) : r.addEventListener("change", i), () => {
                                "function" == typeof r.removeListener ? r.removeListener(i) : r.removeEventListener("change", i)
                            }
                        },
                        preventTransition() {
                            let e = document.createElement("style");
                            return e.appendChild(document.createTextNode("*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")), document.head.appendChild(e), () => {
                                window.getComputedStyle(document.body), requestAnimationFrame(() => {
                                    requestAnimationFrame(() => {
                                        document.head.removeChild(e)
                                    })
                                })
                            }
                        }
                    };
                    return n
                })({
                    preventTransition: a
                }), [a]), v = "system" !== o || u ? u : d, y = (0, Z.useCallback)(e => {
                    let r = "system" === e ? f() : e;
                    c(r), p("dark" === r), m(r), s.set(r)
                }, [s, f, p, m]);
                nb(() => {
                    "system" === o && h(f())
                }, []), (0, Z.useEffect)(() => {
                    let e = s.get();
                    if (e) {
                        y(e);
                        return
                    }
                    if ("system" === o) {
                        y("system");
                        return
                    }
                    y(l)
                }, [s, l, o, y]);
                let b = (0, Z.useCallback)(() => {
                    y("dark" === v ? "light" : "dark")
                }, [v, y]);
                (0, Z.useEffect)(() => {
                    if (i) return g(y)
                }, [i, g, y]);
                let w = (0, Z.useMemo)(() => ({
                    colorMode: null != r ? r : v,
                    toggleColorMode: r ? nw : b,
                    setColorMode: r ? nw : y,
                    forced: void 0 !== r
                }), [v, b, y, r]);
                return (0, $.jsx)(tY.Provider, {
                    value: w,
                    children: n
                })
            }
            nE.displayName = "ColorModeProvider";
            var nC = (0, Z.createContext)({
                getDocument: () => document,
                getWindow: () => window
            });

            function nA(e) {
                let {
                    children: r,
                    environment: n,
                    disabled: i
                } = e, o = (0, Z.useRef)(null), a = (0, Z.useMemo)(() => n || {
                    getDocument: () => {
                        var e, r;
                        return null != (r = null == (e = o.current) ? void 0 : e.ownerDocument) ? r : document
                    },
                    getWindow: () => {
                        var e, r;
                        return null != (r = null == (e = o.current) ? void 0 : e.ownerDocument.defaultView) ? r : window
                    }
                }, [n]);
                return (0, $.jsxs)(nC.Provider, {
                    value: a,
                    children: [r, (!i || !n) && (0, $.jsx)("span", {
                        id: "__chakra_env",
                        hidden: !0,
                        ref: o
                    })]
                })
            }
            nC.displayName = "EnvironmentContext", nA.displayName = "EnvironmentProvider";
            var nk = e => {
                    let {
                        children: r,
                        colorModeManager: n,
                        portalZIndex: i,
                        resetScope: o,
                        resetCSS: a = !0,
                        theme: s = {},
                        environment: l,
                        cssVarsRoot: u,
                        disableEnvironment: c,
                        disableGlobalStyle: d
                    } = e, h = (0, $.jsx)(nA, {
                        environment: l,
                        disabled: c,
                        children: r
                    });
                    return (0, $.jsx)(nd, {
                        theme: s,
                        cssVarsRoot: u,
                        children: (0, $.jsxs)(nE, {
                            colorModeManager: n,
                            options: s.config,
                            children: [a ? (0, $.jsx)(tH, {
                                scope: o
                            }) : (0, $.jsx)(tV, {}), !d && (0, $.jsx)(nm, {}), i ? (0, $.jsx)(tJ, {
                                zIndex: i,
                                children: h
                            }) : h]
                        })
                    })
                },
                nS = {
                    letterSpacings: {
                        tighter: "-0.05em",
                        tight: "-0.025em",
                        normal: "0",
                        wide: "0.025em",
                        wider: "0.05em",
                        widest: "0.1em"
                    },
                    lineHeights: {
                        normal: "normal",
                        none: 1,
                        shorter: 1.25,
                        short: 1.375,
                        base: 1.5,
                        tall: 1.625,
                        taller: "2",
                        3: ".75rem",
                        4: "1rem",
                        5: "1.25rem",
                        6: "1.5rem",
                        7: "1.75rem",
                        8: "2rem",
                        9: "2.25rem",
                        10: "2.5rem"
                    },
                    fontWeights: {
                        hairline: 100,
                        thin: 200,
                        light: 300,
                        normal: 400,
                        medium: 500,
                        semibold: 600,
                        bold: 700,
                        extrabold: 800,
                        black: 900
                    },
                    fonts: {
                        heading: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
                        body: '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
                        mono: 'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace'
                    },
                    fontSizes: {
                        "3xs": "0.45rem",
                        "2xs": "0.625rem",
                        xs: "0.75rem",
                        sm: "0.875rem",
                        md: "1rem",
                        lg: "1.125rem",
                        xl: "1.25rem",
                        "2xl": "1.5rem",
                        "3xl": "1.875rem",
                        "4xl": "2.25rem",
                        "5xl": "3rem",
                        "6xl": "3.75rem",
                        "7xl": "4.5rem",
                        "8xl": "6rem",
                        "9xl": "8rem"
                    }
                },
                n_ = {
                    px: "1px",
                    .5: "0.125rem",
                    1: "0.25rem",
                    1.5: "0.375rem",
                    2: "0.5rem",
                    2.5: "0.625rem",
                    3: "0.75rem",
                    3.5: "0.875rem",
                    4: "1rem",
                    5: "1.25rem",
                    6: "1.5rem",
                    7: "1.75rem",
                    8: "2rem",
                    9: "2.25rem",
                    10: "2.5rem",
                    12: "3rem",
                    14: "3.5rem",
                    16: "4rem",
                    20: "5rem",
                    24: "6rem",
                    28: "7rem",
                    32: "8rem",
                    36: "9rem",
                    40: "10rem",
                    44: "11rem",
                    48: "12rem",
                    52: "13rem",
                    56: "14rem",
                    60: "15rem",
                    64: "16rem",
                    72: "18rem",
                    80: "20rem",
                    96: "24rem"
                },
                nP = { ...n_,
                    max: "max-content",
                    min: "min-content",
                    full: "100%",
                    "3xs": "14rem",
                    "2xs": "16rem",
                    xs: "20rem",
                    sm: "24rem",
                    md: "28rem",
                    lg: "32rem",
                    xl: "36rem",
                    "2xl": "42rem",
                    "3xl": "48rem",
                    "4xl": "56rem",
                    "5xl": "64rem",
                    "6xl": "72rem",
                    "7xl": "80rem",
                    "8xl": "90rem",
                    prose: "60ch",
                    container: {
                        sm: "640px",
                        md: "768px",
                        lg: "1024px",
                        xl: "1280px"
                    }
                },
                nj = {
                    breakpoints: {
                        base: "0em",
                        sm: "30em",
                        md: "48em",
                        lg: "62em",
                        xl: "80em",
                        "2xl": "96em"
                    },
                    zIndices: {
                        hide: -1,
                        auto: "auto",
                        base: 0,
                        docked: 10,
                        dropdown: 1e3,
                        sticky: 1100,
                        banner: 1200,
                        overlay: 1300,
                        modal: 1400,
                        popover: 1500,
                        skipLink: 1600,
                        toast: 1700,
                        tooltip: 1800
                    },
                    radii: {
                        none: "0",
                        sm: "0.125rem",
                        base: "0.25rem",
                        md: "0.375rem",
                        lg: "0.5rem",
                        xl: "0.75rem",
                        "2xl": "1rem",
                        "3xl": "1.5rem",
                        full: "9999px"
                    },
                    blur: {
                        none: 0,
                        sm: "4px",
                        base: "8px",
                        md: "12px",
                        lg: "16px",
                        xl: "24px",
                        "2xl": "40px",
                        "3xl": "64px"
                    },
                    colors: {
                        transparent: "transparent",
                        current: "currentColor",
                        black: "#000000",
                        white: "#FFFFFF",
                        whiteAlpha: {
                            50: "rgba(255, 255, 255, 0.04)",
                            100: "rgba(255, 255, 255, 0.06)",
                            200: "rgba(255, 255, 255, 0.08)",
                            300: "rgba(255, 255, 255, 0.16)",
                            400: "rgba(255, 255, 255, 0.24)",
                            500: "rgba(255, 255, 255, 0.36)",
                            600: "rgba(255, 255, 255, 0.48)",
                            700: "rgba(255, 255, 255, 0.64)",
                            800: "rgba(255, 255, 255, 0.80)",
                            900: "rgba(255, 255, 255, 0.92)"
                        },
                        blackAlpha: {
                            50: "rgba(0, 0, 0, 0.04)",
                            100: "rgba(0, 0, 0, 0.06)",
                            200: "rgba(0, 0, 0, 0.08)",
                            300: "rgba(0, 0, 0, 0.16)",
                            400: "rgba(0, 0, 0, 0.24)",
                            500: "rgba(0, 0, 0, 0.36)",
                            600: "rgba(0, 0, 0, 0.48)",
                            700: "rgba(0, 0, 0, 0.64)",
                            800: "rgba(0, 0, 0, 0.80)",
                            900: "rgba(0, 0, 0, 0.92)"
                        },
                        gray: {
                            50: "#F7FAFC",
                            100: "#EDF2F7",
                            200: "#E2E8F0",
                            300: "#CBD5E0",
                            400: "#A0AEC0",
                            500: "#718096",
                            600: "#4A5568",
                            700: "#2D3748",
                            800: "#1A202C",
                            900: "#171923"
                        },
                        red: {
                            50: "#FFF5F5",
                            100: "#FED7D7",
                            200: "#FEB2B2",
                            300: "#FC8181",
                            400: "#F56565",
                            500: "#E53E3E",
                            600: "#C53030",
                            700: "#9B2C2C",
                            800: "#822727",
                            900: "#63171B"
                        },
                        orange: {
                            50: "#FFFAF0",
                            100: "#FEEBC8",
                            200: "#FBD38D",
                            300: "#F6AD55",
                            400: "#ED8936",
                            500: "#DD6B20",
                            600: "#C05621",
                            700: "#9C4221",
                            800: "#7B341E",
                            900: "#652B19"
                        },
                        yellow: {
                            50: "#FFFFF0",
                            100: "#FEFCBF",
                            200: "#FAF089",
                            300: "#F6E05E",
                            400: "#ECC94B",
                            500: "#D69E2E",
                            600: "#B7791F",
                            700: "#975A16",
                            800: "#744210",
                            900: "#5F370E"
                        },
                        green: {
                            50: "#F0FFF4",
                            100: "#C6F6D5",
                            200: "#9AE6B4",
                            300: "#68D391",
                            400: "#48BB78",
                            500: "#38A169",
                            600: "#2F855A",
                            700: "#276749",
                            800: "#22543D",
                            900: "#1C4532"
                        },
                        teal: {
                            50: "#E6FFFA",
                            100: "#B2F5EA",
                            200: "#81E6D9",
                            300: "#4FD1C5",
                            400: "#38B2AC",
                            500: "#319795",
                            600: "#2C7A7B",
                            700: "#285E61",
                            800: "#234E52",
                            900: "#1D4044"
                        },
                        blue: {
                            50: "#ebf8ff",
                            100: "#bee3f8",
                            200: "#90cdf4",
                            300: "#63b3ed",
                            400: "#4299e1",
                            500: "#3182ce",
                            600: "#2b6cb0",
                            700: "#2c5282",
                            800: "#2a4365",
                            900: "#1A365D"
                        },
                        cyan: {
                            50: "#EDFDFD",
                            100: "#C4F1F9",
                            200: "#9DECF9",
                            300: "#76E4F7",
                            400: "#0BC5EA",
                            500: "#00B5D8",
                            600: "#00A3C4",
                            700: "#0987A0",
                            800: "#086F83",
                            900: "#065666"
                        },
                        purple: {
                            50: "#FAF5FF",
                            100: "#E9D8FD",
                            200: "#D6BCFA",
                            300: "#B794F4",
                            400: "#9F7AEA",
                            500: "#805AD5",
                            600: "#6B46C1",
                            700: "#553C9A",
                            800: "#44337A",
                            900: "#322659"
                        },
                        pink: {
                            50: "#FFF5F7",
                            100: "#FED7E2",
                            200: "#FBB6CE",
                            300: "#F687B3",
                            400: "#ED64A6",
                            500: "#D53F8C",
                            600: "#B83280",
                            700: "#97266D",
                            800: "#702459",
                            900: "#521B41"
                        },
                        linkedin: {
                            50: "#E8F4F9",
                            100: "#CFEDFB",
                            200: "#9BDAF3",
                            300: "#68C7EC",
                            400: "#34B3E4",
                            500: "#00A0DC",
                            600: "#008CC9",
                            700: "#0077B5",
                            800: "#005E93",
                            900: "#004471"
                        },
                        facebook: {
                            50: "#E8F4F9",
                            100: "#D9DEE9",
                            200: "#B7C2DA",
                            300: "#6482C0",
                            400: "#4267B2",
                            500: "#385898",
                            600: "#314E89",
                            700: "#29487D",
                            800: "#223B67",
                            900: "#1E355B"
                        },
                        messenger: {
                            50: "#D0E6FF",
                            100: "#B9DAFF",
                            200: "#A2CDFF",
                            300: "#7AB8FF",
                            400: "#2E90FF",
                            500: "#0078FF",
                            600: "#0063D1",
                            700: "#0052AC",
                            800: "#003C7E",
                            900: "#002C5C"
                        },
                        whatsapp: {
                            50: "#dffeec",
                            100: "#b9f5d0",
                            200: "#90edb3",
                            300: "#65e495",
                            400: "#3cdd78",
                            500: "#22c35e",
                            600: "#179848",
                            700: "#0c6c33",
                            800: "#01421c",
                            900: "#001803"
                        },
                        twitter: {
                            50: "#E5F4FD",
                            100: "#C8E9FB",
                            200: "#A8DCFA",
                            300: "#83CDF7",
                            400: "#57BBF5",
                            500: "#1DA1F2",
                            600: "#1A94DA",
                            700: "#1681BF",
                            800: "#136B9E",
                            900: "#0D4D71"
                        },
                        telegram: {
                            50: "#E3F2F9",
                            100: "#C5E4F3",
                            200: "#A2D4EC",
                            300: "#7AC1E4",
                            400: "#47A9DA",
                            500: "#0088CC",
                            600: "#007AB8",
                            700: "#006BA1",
                            800: "#005885",
                            900: "#003F5E"
                        }
                    },
                    ...nS,
                    sizes: nP,
                    shadows: {
                        xs: "0 0 0 1px rgba(0, 0, 0, 0.05)",
                        sm: "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
                        base: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",
                        md: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
                        lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
                        xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
                        "2xl": "0 25px 50px -12px rgba(0, 0, 0, 0.25)",
                        outline: "0 0 0 3px rgba(66, 153, 225, 0.6)",
                        inner: "inset 0 2px 4px 0 rgba(0,0,0,0.06)",
                        none: "none",
                        "dark-lg": "rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px"
                    },
                    space: n_,
                    borders: {
                        none: 0,
                        "1px": "1px solid",
                        "2px": "2px solid",
                        "4px": "4px solid",
                        "8px": "8px solid"
                    },
                    transition: {
                        property: {
                            common: "background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",
                            colors: "background-color, border-color, color, fill, stroke",
                            dimensions: "width, height",
                            position: "left, right, top, bottom",
                            background: "background-color, background-image, background-position"
                        },
                        easing: {
                            "ease-in": "cubic-bezier(0.4, 0, 1, 1)",
                            "ease-out": "cubic-bezier(0, 0, 0.2, 1)",
                            "ease-in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
                        },
                        duration: {
                            "ultra-fast": "50ms",
                            faster: "100ms",
                            fast: "150ms",
                            normal: "200ms",
                            slow: "300ms",
                            slower: "400ms",
                            "ultra-slow": "500ms"
                        }
                    }
                },
                {
                    defineMultiStyleConfig: nT,
                    definePartsStyle: nR
                } = no(["stepper", "step", "title", "description", "indicator", "separator", "icon", "number"]),
                nB = rW("stepper-indicator-size"),
                nO = rW("stepper-icon-size"),
                nM = rW("stepper-title-font-size"),
                nI = rW("stepper-description-font-size"),
                nN = rW("stepper-accent-color"),
                nF = nR(({
                    colorScheme: e
                }) => ({
                    stepper: {
                        display: "flex",
                        justifyContent: "space-between",
                        gap: "4",
                        "&[data-orientation=vertical]": {
                            flexDirection: "column",
                            alignItems: "flex-start"
                        },
                        "&[data-orientation=horizontal]": {
                            flexDirection: "row",
                            alignItems: "center"
                        },
                        [nN.variable]: `colors.${e}.500`,
                        _dark: {
                            [nN.variable]: `colors.${e}.200`
                        }
                    },
                    title: {
                        fontSize: nM.reference,
                        fontWeight: "medium"
                    },
                    description: {
                        fontSize: nI.reference,
                        color: "chakra-subtle-text"
                    },
                    number: {
                        fontSize: nM.reference
                    },
                    step: {
                        flexShrink: 0,
                        position: "relative",
                        display: "flex",
                        gap: "2",
                        "&[data-orientation=horizontal]": {
                            alignItems: "center"
                        },
                        flex: "1",
                        "&:last-of-type:not([data-stretch])": {
                            flex: "initial"
                        }
                    },
                    icon: {
                        flexShrink: 0,
                        width: nO.reference,
                        height: nO.reference
                    },
                    indicator: {
                        flexShrink: 0,
                        borderRadius: "full",
                        width: nB.reference,
                        height: nB.reference,
                        display: "flex",
                        justifyContent: "center",
                        alignItems: "center",
                        "&[data-status=active]": {
                            borderWidth: "2px",
                            borderColor: nN.reference
                        },
                        "&[data-status=complete]": {
                            bg: nN.reference,
                            color: "chakra-inverse-text"
                        },
                        "&[data-status=incomplete]": {
                            borderWidth: "2px"
                        }
                    },
                    separator: {
                        bg: "chakra-border-color",
                        flex: "1",
                        "&[data-status=complete]": {
                            bg: nN.reference
                        },
                        "&[data-orientation=horizontal]": {
                            width: "100%",
                            height: "2px",
                            marginStart: "2"
                        },
                        "&[data-orientation=vertical]": {
                            width: "2px",
                            position: "absolute",
                            height: "100%",
                            maxHeight: `calc(100% - ${nB.reference} - 8px)`,
                            top: `calc(${nB.reference} + 4px)`,
                            insetStart: `calc(${nB.reference} / 2 - 1px)`
                        }
                    }
                })),
                nL = nT({
                    baseStyle: nF,
                    sizes: {
                        xs: nR({
                            stepper: {
                                [nB.variable]: "sizes.4",
                                [nO.variable]: "sizes.3",
                                [nM.variable]: "fontSizes.xs",
                                [nI.variable]: "fontSizes.xs"
                            }
                        }),
                        sm: nR({
                            stepper: {
                                [nB.variable]: "sizes.6",
                                [nO.variable]: "sizes.4",
                                [nM.variable]: "fontSizes.sm",
                                [nI.variable]: "fontSizes.xs"
                            }
                        }),
                        md: nR({
                            stepper: {
                                [nB.variable]: "sizes.8",
                                [nO.variable]: "sizes.5",
                                [nM.variable]: "fontSizes.md",
                                [nI.variable]: "fontSizes.sm"
                            }
                        }),
                        lg: nR({
                            stepper: {
                                [nB.variable]: "sizes.10",
                                [nO.variable]: "sizes.6",
                                [nM.variable]: "fontSizes.lg",
                                [nI.variable]: "fontSizes.md"
                            }
                        })
                    },
                    defaultProps: {
                        size: "md",
                        colorScheme: "blue"
                    }
                });

            function nD(e, r = {}) {
                let n = !1;

                function i(r) {
                    let n = ["container", "root"].includes(null != r ? r : "") ? [e] : [e, r],
                        i = n.filter(Boolean).join("__"),
                        o = `chakra-${i}`,
                        a = {
                            className: o,
                            selector: `.${o}`,
                            toString: () => r
                        };
                    return a
                }
                return {
                    parts: function(...o) {
                        for (let a of (! function() {
                                if (!n) {
                                    n = !0;
                                    return
                                }
                                throw Error("[anatomy] .part(...) should only be called once. Did you mean to use .extend(...) ?")
                            }(), o)) r[a] = i(a);
                        return nD(e, r)
                    },
                    toPart: i,
                    extend: function(...n) {
                        for (let o of n) o in r || (r[o] = i(o));
                        return nD(e, r)
                    },
                    selectors: function() {
                        let e = Object.fromEntries(Object.entries(r).map(([e, r]) => [e, r.selector]));
                        return e
                    },
                    classnames: function() {
                        let e = Object.fromEntries(Object.entries(r).map(([e, r]) => [e, r.className]));
                        return e
                    },
                    get keys() {
                        return Object.keys(r)
                    },
                    __type: {}
                }
            }
            var nz = nD("accordion").parts("root", "container", "button", "panel").extend("icon"),
                nU = nD("alert").parts("title", "description", "container").extend("icon", "spinner"),
                n$ = nD("avatar").parts("label", "badge", "container").extend("excessLabel", "group"),
                nq = nD("breadcrumb").parts("link", "item", "container").extend("separator");
            nD("button").parts();
            var nW = nD("checkbox").parts("control", "icon", "container").extend("label");
            nD("progress").parts("track", "filledTrack").extend("label");
            var nV = nD("drawer").parts("overlay", "dialogContainer", "dialog").extend("header", "closeButton", "body", "footer"),
                nH = nD("editable").parts("preview", "input", "textarea"),
                nG = nD("form").parts("container", "requiredIndicator", "helperText"),
                nK = nD("formError").parts("text", "icon"),
                nQ = nD("input").parts("addon", "field", "element", "group"),
                nJ = nD("list").parts("container", "item", "icon"),
                nY = nD("menu").parts("button", "list", "item").extend("groupTitle", "icon", "command", "divider"),
                nX = nD("modal").parts("overlay", "dialogContainer", "dialog").extend("header", "closeButton", "body", "footer"),
                nZ = nD("numberinput").parts("root", "field", "stepperGroup", "stepper");
            nD("pininput").parts("field");
            var n0 = nD("popover").parts("content", "header", "body", "footer").extend("popper", "arrow", "closeButton"),
                n1 = nD("progress").parts("label", "filledTrack", "track"),
                n2 = nD("radio").parts("container", "control", "label"),
                n3 = nD("select").parts("field", "icon"),
                n6 = nD("slider").parts("container", "track", "thumb", "filledTrack", "mark"),
                n5 = nD("stat").parts("container", "label", "helpText", "number", "icon"),
                n4 = nD("switch").parts("container", "track", "thumb"),
                n7 = nD("table").parts("table", "thead", "tbody", "tr", "th", "td", "tfoot", "caption"),
                n8 = nD("tabs").parts("root", "tab", "tablist", "tabpanel", "tabpanels", "indicator"),
                n9 = nD("tag").parts("container", "label", "closeButton"),
                ie = nD("card").parts("container", "header", "body", "footer");

            function it(e) {
                let r = function(e, r = "-") {
                    return e.replace(/\s+/g, r)
                }(e.toString());
                return r.includes("\\.") ? e : Number.isInteger(parseFloat(e.toString())) ? e : r.replace(".", "\\.")
            }

            function ir(e, r) {
                var n, i;
                let o = function(e, r = "") {
                    return `--${function(e,r=""){return[r,it(e)].filter(Boolean).join("-")}(e,r)}`
                }(e, null == r ? void 0 : r.prefix);
                return {
                    variable: o,
                    reference: (n = "string" == typeof(i = null == r ? void 0 : r.fallback) ? i : null == i ? void 0 : i.reference, `var(${it(o)}${n?`, ${n}`:""})`)
                }
            }

            function ii(e) {
                return t0(e) && e.reference ? e.reference : String(e)
            }
            var io = (e, ...r) => r.map(ii).join(` ${e} `).replace(/calc/g, ""),
                ia = (...e) => `calc(${io("+",...e)})`,
                is = (...e) => `calc(${io("-",...e)})`,
                il = (...e) => `calc(${io("*",...e)})`,
                iu = (...e) => `calc(${io("/",...e)})`,
                ic = e => {
                    let r = ii(e);
                    return null == r || Number.isNaN(parseFloat(r)) ? il(r, -1) : String(r).startsWith("-") ? String(r).slice(1) : `-${r}`
                },
                id = Object.assign(e => ({
                    add: (...r) => id(ia(e, ...r)),
                    subtract: (...r) => id(is(e, ...r)),
                    multiply: (...r) => id(il(e, ...r)),
                    divide: (...r) => id(iu(e, ...r)),
                    negate: () => id(ic(e)),
                    toString: () => e.toString()
                }), {
                    add: ia,
                    subtract: is,
                    multiply: il,
                    divide: iu,
                    negate: ic
                }),
                {
                    defineMultiStyleConfig: ih,
                    definePartsStyle: ip
                } = no(n4.keys),
                im = ir("switch-track-width"),
                ig = ir("switch-track-height"),
                iv = ir("switch-track-diff"),
                iy = id.subtract(im, ig),
                ib = ir("switch-thumb-x"),
                iw = ir("switch-bg"),
                ix = e => {
                    let {
                        colorScheme: r
                    } = e;
                    return {
                        borderRadius: "full",
                        p: "0.5",
                        width: [im.reference],
                        height: [ig.reference],
                        transitionProperty: "common",
                        transitionDuration: "fast",
                        [iw.variable]: "colors.gray.300",
                        _dark: {
                            [iw.variable]: "colors.whiteAlpha.400"
                        },
                        _focusVisible: {
                            boxShadow: "outline"
                        },
                        _disabled: {
                            opacity: .4,
                            cursor: "not-allowed"
                        },
                        _checked: {
                            [iw.variable]: `colors.${r}.500`,
                            _dark: {
                                [iw.variable]: `colors.${r}.200`
                            }
                        },
                        bg: iw.reference
                    }
                },
                iE = {
                    bg: "white",
                    transitionProperty: "transform",
                    transitionDuration: "normal",
                    borderRadius: "inherit",
                    width: [ig.reference],
                    height: [ig.reference],
                    _checked: {
                        transform: `translateX(${ib.reference})`
                    }
                },
                iC = ih({
                    baseStyle: ip(e => ({
                        container: {
                            [iv.variable]: iy,
                            [ib.variable]: iv.reference,
                            _rtl: {
                                [ib.variable]: id(iv).negate().toString()
                            }
                        },
                        track: ix(e),
                        thumb: iE
                    })),
                    sizes: {
                        sm: ip({
                            container: {
                                [im.variable]: "1.375rem",
                                [ig.variable]: "sizes.3"
                            }
                        }),
                        md: ip({
                            container: {
                                [im.variable]: "1.875rem",
                                [ig.variable]: "sizes.4"
                            }
                        }),
                        lg: ip({
                            container: {
                                [im.variable]: "2.875rem",
                                [ig.variable]: "sizes.6"
                            }
                        })
                    },
                    defaultProps: {
                        size: "md",
                        colorScheme: "blue"
                    }
                });

            function iA(e, r) {
                return n => "dark" === n.colorMode ? r : e
            }

            function ik(e) {
                let {
                    orientation: r,
                    vertical: n,
                    horizontal: i
                } = e;
                return r ? "vertical" === r ? n : i : {}
            }
            var {
                defineMultiStyleConfig: iS,
                definePartsStyle: i_
            } = no(n7.keys), iP = i_({
                table: {
                    fontVariantNumeric: "lining-nums tabular-nums",
                    borderCollapse: "collapse",
                    width: "full"
                },
                th: {
                    fontFamily: "heading",
                    fontWeight: "bold",
                    textTransform: "uppercase",
                    letterSpacing: "wider",
                    textAlign: "start"
                },
                td: {
                    textAlign: "start"
                },
                caption: {
                    mt: 4,
                    fontFamily: "heading",
                    textAlign: "center",
                    fontWeight: "medium"
                }
            }), ij = {
                "&[data-is-numeric=true]": {
                    textAlign: "end"
                }
            }, iT = iS({
                baseStyle: iP,
                variants: {
                    simple: i_(e => {
                        let {
                            colorScheme: r
                        } = e;
                        return {
                            th: {
                                color: iA("gray.600", "gray.400")(e),
                                borderBottom: "1px",
                                borderColor: iA(`${r}.100`, `${r}.700`)(e),
                                ...ij
                            },
                            td: {
                                borderBottom: "1px",
                                borderColor: iA(`${r}.100`, `${r}.700`)(e),
                                ...ij
                            },
                            caption: {
                                color: iA("gray.600", "gray.100")(e)
                            },
                            tfoot: {
                                tr: {
                                    "&:last-of-type": {
                                        th: {
                                            borderBottomWidth: 0
                                        }
                                    }
                                }
                            }
                        }
                    }),
                    striped: i_(e => {
                        let {
                            colorScheme: r
                        } = e;
                        return {
                            th: {
                                color: iA("gray.600", "gray.400")(e),
                                borderBottom: "1px",
                                borderColor: iA(`${r}.100`, `${r}.700`)(e),
                                ...ij
                            },
                            td: {
                                borderBottom: "1px",
                                borderColor: iA(`${r}.100`, `${r}.700`)(e),
                                ...ij
                            },
                            caption: {
                                color: iA("gray.600", "gray.100")(e)
                            },
                            tbody: {
                                tr: {
                                    "&:nth-of-type(odd)": {
                                        "th, td": {
                                            borderBottomWidth: "1px",
                                            borderColor: iA(`${r}.100`, `${r}.700`)(e)
                                        },
                                        td: {
                                            background: iA(`${r}.100`, `${r}.700`)(e)
                                        }
                                    }
                                }
                            },
                            tfoot: {
                                tr: {
                                    "&:last-of-type": {
                                        th: {
                                            borderBottomWidth: 0
                                        }
                                    }
                                }
                            }
                        }
                    }),
                    unstyled: {}
                },
                sizes: {
                    sm: i_({
                        th: {
                            px: "4",
                            py: "1",
                            lineHeight: "4",
                            fontSize: "xs"
                        },
                        td: {
                            px: "4",
                            py: "2",
                            fontSize: "sm",
                            lineHeight: "4"
                        },
                        caption: {
                            px: "4",
                            py: "2",
                            fontSize: "xs"
                        }
                    }),
                    md: i_({
                        th: {
                            px: "6",
                            py: "3",
                            lineHeight: "4",
                            fontSize: "xs"
                        },
                        td: {
                            px: "6",
                            py: "4",
                            lineHeight: "5"
                        },
                        caption: {
                            px: "6",
                            py: "2",
                            fontSize: "sm"
                        }
                    }),
                    lg: i_({
                        th: {
                            px: "8",
                            py: "4",
                            lineHeight: "5",
                            fontSize: "sm"
                        },
                        td: {
                            px: "8",
                            py: "5",
                            lineHeight: "6"
                        },
                        caption: {
                            px: "6",
                            py: "2",
                            fontSize: "md"
                        }
                    })
                },
                defaultProps: {
                    variant: "simple",
                    size: "md",
                    colorScheme: "gray"
                }
            });

            function iR(e, r, n) {
                return Math.min(Math.max(e, n), r)
            }
            var iB = class extends Error {
                constructor(e) {
                    super(`Failed to parse color: "${e}"`)
                }
            };

            function iO(e) {
                if ("string" != typeof e) throw new iB(e);
                if ("transparent" === e.trim().toLowerCase()) return [0, 0, 0, 0];
                let r = e.trim();
                r = iU.test(e) ? function(e) {
                    let r = e.toLowerCase().trim(),
                        n = iI[function(e) {
                            let r = 5381,
                                n = e.length;
                            for (; n;) r = 33 * r ^ e.charCodeAt(--n);
                            return (r >>> 0) % 2341
                        }(r)];
                    if (!n) throw new iB(e);
                    return `#${n}`
                }(e) : e;
                let n = iF.exec(r);
                if (n) {
                    let i = Array.from(n).slice(1);
                    return [...i.slice(0, 3).map(e => parseInt(iN(e, 2), 16)), parseInt(iN(i[3] || "f", 2), 16) / 255]
                }
                let o = iL.exec(r);
                if (o) {
                    let a = Array.from(o).slice(1);
                    return [...a.slice(0, 3).map(e => parseInt(e, 16)), parseInt(a[3] || "ff", 16) / 255]
                }
                let s = iD.exec(r);
                if (s) {
                    let l = Array.from(s).slice(1);
                    return [...l.slice(0, 3).map(e => parseInt(e, 10)), parseFloat(l[3] || "1")]
                }
                let u = iz.exec(r);
                if (u) {
                    let [c, d, h, f] = Array.from(u).slice(1).map(parseFloat);
                    if (iR(0, 100, d) !== d || iR(0, 100, h) !== h) throw new iB(e);
                    return [...iq(c, d, h), Number.isNaN(f) ? 1 : f]
                }
                throw new iB(e)
            }
            let iM = e => parseInt(e.replace(/_/g, ""), 36),
                iI = "1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm".split(" ").reduce((e, r) => {
                    let n = iM(r.substring(0, 3)),
                        i = iM(r.substring(3)).toString(16),
                        o = "";
                    for (let a = 0; a < 6 - i.length; a++) o += "0";
                    return e[n] = `${o}${i}`, e
                }, {}),
                iN = (e, r) => Array.from(Array(r)).map(() => e).join(""),
                iF = RegExp(`^#${iN("([a-f0-9])",3)}([a-f0-9])?$`, "i"),
                iL = RegExp(`^#${iN("([a-f0-9]{2})",3)}([a-f0-9]{2})?$`, "i"),
                iD = RegExp(`^rgba?\\(\\s*(\\d+)\\s*${iN(",\\s*(\\d+)\\s*",2)}(?:,\\s*([\\d.]+))?\\s*\\)$`, "i"),
                iz = /^hsla?\(\s*([\d.]+)\s*,\s*([\d.]+)%\s*,\s*([\d.]+)%(?:\s*,\s*([\d.]+))?\s*\)$/i,
                iU = /^[a-z]+$/i,
                i$ = e => Math.round(255 * e),
                iq = (e, r, n) => {
                    let i = n / 100;
                    if (0 === r) return [i, i, i].map(i$);
                    let o = (e % 360 + 360) % 360 / 60,
                        a = (1 - Math.abs(2 * i - 1)) * (r / 100),
                        s = a * (1 - Math.abs(o % 2 - 1)),
                        l = 0,
                        u = 0,
                        c = 0;
                    o >= 0 && o < 1 ? (l = a, u = s) : o >= 1 && o < 2 ? (l = s, u = a) : o >= 2 && o < 3 ? (u = a, c = s) : o >= 3 && o < 4 ? (u = s, c = a) : o >= 4 && o < 5 ? (l = s, c = a) : o >= 5 && o < 6 && (l = a, c = s);
                    let d = i - a / 2,
                        h = l + d,
                        f = u + d,
                        p = c + d;
                    return [h, f, p].map(i$)
                };
            var iW = e => 0 === Object.keys(e).length,
                iV = (e, r, n) => {
                    let i = function(e, r, n, i, o) {
                        for (r = r.split ? r.split(".") : r, i = 0; i < r.length; i++) e = e ? e[r[i]] : o;
                        return e === o ? n : e
                    }(e, `colors.${r}`, r);
                    try {
                        return ! function(e) {
                            let [r, n, i, o] = iO(e), a = e => {
                                let r = iR(0, 255, e).toString(16);
                                return 1 === r.length ? `0${r}` : r
                            };
                            a(r), a(n), a(i), o < 1 && a(Math.round(255 * o))
                        }(i), i
                    } catch {
                        return null != n ? n : "#000000"
                    }
                },
                iH = e => {
                    let [r, n, i] = iO(e);
                    return (299 * r + 587 * n + 114 * i) / 1e3
                },
                iG = e => r => {
                    let n = iV(r, e),
                        i = iH(n);
                    return i < 128 ? "dark" : "light"
                },
                iK = e => r => "dark" === iG(e)(r),
                iQ = (e, r) => n => {
                    let i = iV(n, e);
                    return function(e, r) {
                        let [n, i, o, a] = iO(e);
                        return `rgba(${iR(0,255,n).toFixed()}, ${iR(0,255,i).toFixed()}, ${iR(0,255,o).toFixed()}, ${parseFloat(iR(0,1,a-r).toFixed(3))})`
                    }(i, 1 - r)
                };

            function iJ(e = "1rem", r = "rgba(255, 255, 255, 0.15)") {
                return {
                    backgroundImage: `linear-gradient(
    45deg,
    ${r} 25%,
    transparent 25%,
    transparent 50%,
    ${r} 50%,
    ${r} 75%,
    transparent 75%,
    transparent
  )`,
                    backgroundSize: `${e} ${e}`
                }
            }
            var iY = () => `#${Math.floor(16777215*Math.random()).toString(16).padEnd(6,"0")}`,
                iX = rW("tabs-color"),
                iZ = rW("tabs-bg"),
                i0 = rW("tabs-border-color"),
                {
                    defineMultiStyleConfig: i1,
                    definePartsStyle: i2
                } = no(n8.keys),
                i3 = e => {
                    let {
                        orientation: r
                    } = e;
                    return {
                        display: "vertical" === r ? "flex" : "block"
                    }
                },
                i6 = e => {
                    let {
                        isFitted: r
                    } = e;
                    return {
                        flex: r ? 1 : void 0,
                        transitionProperty: "common",
                        transitionDuration: "normal",
                        _focusVisible: {
                            zIndex: 1,
                            boxShadow: "outline"
                        },
                        _disabled: {
                            cursor: "not-allowed",
                            opacity: .4
                        }
                    }
                },
                i5 = e => {
                    let {
                        align: r = "start",
                        orientation: n
                    } = e;
                    return {
                        justifyContent: ({
                            end: "flex-end",
                            center: "center",
                            start: "flex-start"
                        })[r],
                        flexDirection: "vertical" === n ? "column" : "row"
                    }
                },
                i4 = {
                    p: 4
                },
                i7 = i1({
                    baseStyle: i2(e => ({
                        root: i3(e),
                        tab: i6(e),
                        tablist: i5(e),
                        tabpanel: i4
                    })),
                    sizes: {
                        sm: i2({
                            tab: {
                                py: 1,
                                px: 4,
                                fontSize: "sm"
                            }
                        }),
                        md: i2({
                            tab: {
                                fontSize: "md",
                                py: 2,
                                px: 4
                            }
                        }),
                        lg: i2({
                            tab: {
                                fontSize: "lg",
                                py: 3,
                                px: 4
                            }
                        })
                    },
                    variants: {
                        line: i2(e => {
                            let {
                                colorScheme: r,
                                orientation: n
                            } = e, i = "vertical" === n, o = i ? "borderStart" : "borderBottom";
                            return {
                                tablist: {
                                    [o]: "2px solid",
                                    borderColor: "inherit"
                                },
                                tab: {
                                    [o]: "2px solid",
                                    borderColor: "transparent",
                                    [i ? "marginStart" : "marginBottom"]: "-2px",
                                    _selected: {
                                        [iX.variable]: `colors.${r}.600`,
                                        _dark: {
                                            [iX.variable]: `colors.${r}.300`
                                        },
                                        borderColor: "currentColor"
                                    },
                                    _active: {
                                        [iZ.variable]: "colors.gray.200",
                                        _dark: {
                                            [iZ.variable]: "colors.whiteAlpha.300"
                                        }
                                    },
                                    _disabled: {
                                        _active: {
                                            bg: "none"
                                        }
                                    },
                                    color: iX.reference,
                                    bg: iZ.reference
                                }
                            }
                        }),
                        enclosed: i2(e => {
                            let {
                                colorScheme: r
                            } = e;
                            return {
                                tab: {
                                    borderTopRadius: "md",
                                    border: "1px solid",
                                    borderColor: "transparent",
                                    mb: "-1px",
                                    [i0.variable]: "transparent",
                                    _selected: {
                                        [iX.variable]: `colors.${r}.600`,
                                        [i0.variable]: "colors.white",
                                        _dark: {
                                            [iX.variable]: `colors.${r}.300`,
                                            [i0.variable]: "colors.gray.800"
                                        },
                                        borderColor: "inherit",
                                        borderBottomColor: i0.reference
                                    },
                                    color: iX.reference
                                },
                                tablist: {
                                    mb: "-1px",
                                    borderBottom: "1px solid",
                                    borderColor: "inherit"
                                }
                            }
                        }),
                        "enclosed-colored": i2(e => {
                            let {
                                colorScheme: r
                            } = e;
                            return {
                                tab: {
                                    border: "1px solid",
                                    borderColor: "inherit",
                                    [iZ.variable]: "colors.gray.50",
                                    _dark: {
                                        [iZ.variable]: "colors.whiteAlpha.50"
                                    },
                                    mb: "-1px",
                                    _notLast: {
                                        marginEnd: "-1px"
                                    },
                                    _selected: {
                                        [iZ.variable]: "colors.white",
                                        [iX.variable]: `colors.${r}.600`,
                                        _dark: {
                                            [iZ.variable]: "colors.gray.800",
                                            [iX.variable]: `colors.${r}.300`
                                        },
                                        borderColor: "inherit",
                                        borderTopColor: "currentColor",
                                        borderBottomColor: "transparent"
                                    },
                                    color: iX.reference,
                                    bg: iZ.reference
                                },
                                tablist: {
                                    mb: "-1px",
                                    borderBottom: "1px solid",
                                    borderColor: "inherit"
                                }
                            }
                        }),
                        "soft-rounded": i2(e => {
                            let {
                                colorScheme: r,
                                theme: n
                            } = e;
                            return {
                                tab: {
                                    borderRadius: "full",
                                    fontWeight: "semibold",
                                    color: "gray.600",
                                    _selected: {
                                        color: iV(n, `${r}.700`),
                                        bg: iV(n, `${r}.100`)
                                    }
                                }
                            }
                        }),
                        "solid-rounded": i2(e => {
                            let {
                                colorScheme: r
                            } = e;
                            return {
                                tab: {
                                    borderRadius: "full",
                                    fontWeight: "semibold",
                                    [iX.variable]: "colors.gray.600",
                                    _dark: {
                                        [iX.variable]: "inherit"
                                    },
                                    _selected: {
                                        [iX.variable]: "colors.white",
                                        [iZ.variable]: `colors.${r}.600`,
                                        _dark: {
                                            [iX.variable]: "colors.gray.800",
                                            [iZ.variable]: `colors.${r}.300`
                                        }
                                    },
                                    color: iX.reference,
                                    bg: iZ.reference
                                }
                            }
                        }),
                        unstyled: i2({})
                    },
                    defaultProps: {
                        size: "md",
                        variant: "line",
                        colorScheme: "blue"
                    }
                }),
                i8 = function(e, r) {
                    let n = {};
                    for (let i of r) {
                        if (Array.isArray(i)) {
                            let [o, a] = i;
                            n[o] = rW(`${e}-${o}`, a);
                            continue
                        }
                        n[i] = rW(`${e}-${i}`)
                    }
                    return n
                }("badge", ["bg", "color", "shadow"]),
                i9 = {
                    baseStyle: {
                        px: 1,
                        textTransform: "uppercase",
                        fontSize: "xs",
                        borderRadius: "sm",
                        fontWeight: "bold",
                        bg: i8.bg.reference,
                        color: i8.color.reference,
                        boxShadow: i8.shadow.reference
                    },
                    variants: {
                        solid: e => {
                            let {
                                colorScheme: r,
                                theme: n
                            } = e, i = iQ(`${r}.500`, .6)(n);
                            return {
                                [i8.bg.variable]: `colors.${r}.500`,
                                [i8.color.variable]: "colors.white",
                                _dark: {
                                    [i8.bg.variable]: i,
                                    [i8.color.variable]: "colors.whiteAlpha.800"
                                }
                            }
                        },
                        subtle: e => {
                            let {
                                colorScheme: r,
                                theme: n
                            } = e, i = iQ(`${r}.200`, .16)(n);
                            return {
                                [i8.bg.variable]: `colors.${r}.100`,
                                [i8.color.variable]: `colors.${r}.800`,
                                _dark: {
                                    [i8.bg.variable]: i,
                                    [i8.color.variable]: `colors.${r}.200`
                                }
                            }
                        },
                        outline: e => {
                            let {
                                colorScheme: r,
                                theme: n
                            } = e, i = iQ(`${r}.200`, .8)(n);
                            return {
                                [i8.color.variable]: `colors.${r}.500`,
                                _dark: {
                                    [i8.color.variable]: i
                                },
                                [i8.shadow.variable]: `inset 0 0 0px 1px ${i8.color.reference}`
                            }
                        }
                    },
                    defaultProps: {
                        variant: "subtle",
                        colorScheme: "gray"
                    }
                },
                {
                    defineMultiStyleConfig: oe,
                    definePartsStyle: ot
                } = no(n9.keys),
                or = rW("tag-bg"),
                on = rW("tag-color"),
                oi = rW("tag-shadow"),
                oo = rW("tag-min-height"),
                oa = rW("tag-min-width"),
                os = rW("tag-font-size"),
                ol = rW("tag-padding-inline"),
                ou = ot({
                    container: {
                        fontWeight: "medium",
                        lineHeight: 1.2,
                        outline: 0,
                        [on.variable]: i8.color.reference,
                        [or.variable]: i8.bg.reference,
                        [oi.variable]: i8.shadow.reference,
                        color: on.reference,
                        bg: or.reference,
                        boxShadow: oi.reference,
                        borderRadius: "md",
                        minH: oo.reference,
                        minW: oa.reference,
                        fontSize: os.reference,
                        px: ol.reference,
                        _focusVisible: {
                            [oi.variable]: "shadows.outline"
                        }
                    },
                    label: {
                        lineHeight: 1.2,
                        overflow: "visible"
                    },
                    closeButton: {
                        fontSize: "lg",
                        w: "5",
                        h: "5",
                        transitionProperty: "common",
                        transitionDuration: "normal",
                        borderRadius: "full",
                        marginStart: "1.5",
                        marginEnd: "-1",
                        opacity: .5,
                        _disabled: {
                            opacity: .4
                        },
                        _focusVisible: {
                            boxShadow: "outline",
                            bg: "rgba(0, 0, 0, 0.14)"
                        },
                        _hover: {
                            opacity: .8
                        },
                        _active: {
                            opacity: 1
                        }
                    }
                }),
                oc = {
                    sm: ot({
                        container: {
                            [oo.variable]: "sizes.5",
                            [oa.variable]: "sizes.5",
                            [os.variable]: "fontSizes.xs",
                            [ol.variable]: "space.2"
                        },
                        closeButton: {
                            marginEnd: "-2px",
                            marginStart: "0.35rem"
                        }
                    }),
                    md: ot({
                        container: {
                            [oo.variable]: "sizes.6",
                            [oa.variable]: "sizes.6",
                            [os.variable]: "fontSizes.sm",
                            [ol.variable]: "space.2"
                        }
                    }),
                    lg: ot({
                        container: {
                            [oo.variable]: "sizes.8",
                            [oa.variable]: "sizes.8",
                            [os.variable]: "fontSizes.md",
                            [ol.variable]: "space.3"
                        }
                    })
                },
                od = oe({
                    variants: {
                        subtle: ot(e => {
                            var r;
                            return {
                                container: null == (r = i9.variants) ? void 0 : r.subtle(e)
                            }
                        }),
                        solid: ot(e => {
                            var r;
                            return {
                                container: null == (r = i9.variants) ? void 0 : r.solid(e)
                            }
                        }),
                        outline: ot(e => {
                            var r;
                            return {
                                container: null == (r = i9.variants) ? void 0 : r.outline(e)
                            }
                        })
                    },
                    baseStyle: ou,
                    sizes: oc,
                    defaultProps: {
                        size: "md",
                        variant: "subtle",
                        colorScheme: "gray"
                    }
                }),
                {
                    definePartsStyle: oh,
                    defineMultiStyleConfig: of
                } = no(nQ.keys),
                op = rW("input-height"),
                om = rW("input-font-size"),
                og = rW("input-padding"),
                ov = rW("input-border-radius"),
                oy = oh({
                    addon: {
                        height: op.reference,
                        fontSize: om.reference,
                        px: og.reference,
                        borderRadius: ov.reference
                    },
                    field: {
                        width: "100%",
                        height: op.reference,
                        fontSize: om.reference,
                        px: og.reference,
                        borderRadius: ov.reference,
                        minWidth: 0,
                        outline: 0,
                        position: "relative",
                        appearance: "none",
                        transitionProperty: "common",
                        transitionDuration: "normal",
                        _disabled: {
                            opacity: .4,
                            cursor: "not-allowed"
                        }
                    }
                }),
                ob = {
                    lg: {
                        [om.variable]: "fontSizes.lg",
                        [og.variable]: "space.4",
                        [ov.variable]: "radii.md",
                        [op.variable]: "sizes.12"
                    },
                    md: {
                        [om.variable]: "fontSizes.md",
                        [og.variable]: "space.4",
                        [ov.variable]: "radii.md",
                        [op.variable]: "sizes.10"
                    },
                    sm: {
                        [om.variable]: "fontSizes.sm",
                        [og.variable]: "space.3",
                        [ov.variable]: "radii.sm",
                        [op.variable]: "sizes.8"
                    },
                    xs: {
                        [om.variable]: "fontSizes.xs",
                        [og.variable]: "space.2",
                        [ov.variable]: "radii.sm",
                        [op.variable]: "sizes.6"
                    }
                };

            function ow(e) {
                let {
                    focusBorderColor: r,
                    errorBorderColor: n
                } = e;
                return {
                    focusBorderColor: r || iA("blue.500", "blue.300")(e),
                    errorBorderColor: n || iA("red.500", "red.300")(e)
                }
            }
            var ox = of ({
                    baseStyle: oy,
                    sizes: {
                        lg: oh({
                            field: ob.lg,
                            group: ob.lg
                        }),
                        md: oh({
                            field: ob.md,
                            group: ob.md
                        }),
                        sm: oh({
                            field: ob.sm,
                            group: ob.sm
                        }),
                        xs: oh({
                            field: ob.xs,
                            group: ob.xs
                        })
                    },
                    variants: {
                        outline: oh(e => {
                            let {
                                theme: r
                            } = e, {
                                focusBorderColor: n,
                                errorBorderColor: i
                            } = ow(e);
                            return {
                                field: {
                                    border: "1px solid",
                                    borderColor: "inherit",
                                    bg: "inherit",
                                    _hover: {
                                        borderColor: iA("gray.300", "whiteAlpha.400")(e)
                                    },
                                    _readOnly: {
                                        boxShadow: "none !important",
                                        userSelect: "all"
                                    },
                                    _invalid: {
                                        borderColor: iV(r, i),
                                        boxShadow: `0 0 0 1px ${iV(r,i)}`
                                    },
                                    _focusVisible: {
                                        zIndex: 1,
                                        borderColor: iV(r, n),
                                        boxShadow: `0 0 0 1px ${iV(r,n)}`
                                    }
                                },
                                addon: {
                                    border: "1px solid",
                                    borderColor: iA("inherit", "whiteAlpha.50")(e),
                                    bg: iA("gray.100", "whiteAlpha.300")(e)
                                }
                            }
                        }),
                        filled: oh(e => {
                            let {
                                theme: r
                            } = e, {
                                focusBorderColor: n,
                                errorBorderColor: i
                            } = ow(e);
                            return {
                                field: {
                                    border: "2px solid",
                                    borderColor: "transparent",
                                    bg: iA("gray.100", "whiteAlpha.50")(e),
                                    _hover: {
                                        bg: iA("gray.200", "whiteAlpha.100")(e)
                                    },
                                    _readOnly: {
                                        boxShadow: "none !important",
                                        userSelect: "all"
                                    },
                                    _invalid: {
                                        borderColor: iV(r, i)
                                    },
                                    _focusVisible: {
                                        bg: "transparent",
                                        borderColor: iV(r, n)
                                    }
                                },
                                addon: {
                                    border: "2px solid",
                                    borderColor: "transparent",
                                    bg: iA("gray.100", "whiteAlpha.50")(e)
                                }
                            }
                        }),
                        flushed: oh(e => {
                            let {
                                theme: r
                            } = e, {
                                focusBorderColor: n,
                                errorBorderColor: i
                            } = ow(e);
                            return {
                                field: {
                                    borderBottom: "1px solid",
                                    borderColor: "inherit",
                                    borderRadius: "0",
                                    px: "0",
                                    bg: "transparent",
                                    _readOnly: {
                                        boxShadow: "none !important",
                                        userSelect: "all"
                                    },
                                    _invalid: {
                                        borderColor: iV(r, i),
                                        boxShadow: `0px 1px 0px 0px ${iV(r,i)}`
                                    },
                                    _focusVisible: {
                                        borderColor: iV(r, n),
                                        boxShadow: `0px 1px 0px 0px ${iV(r,n)}`
                                    }
                                },
                                addon: {
                                    borderBottom: "2px solid",
                                    borderColor: "inherit",
                                    borderRadius: "0",
                                    px: "0",
                                    bg: "transparent"
                                }
                            }
                        }),
                        unstyled: oh({
                            field: {
                                bg: "transparent",
                                px: "0",
                                height: "auto"
                            },
                            addon: {
                                bg: "transparent",
                                px: "0",
                                height: "auto"
                            }
                        })
                    },
                    defaultProps: {
                        size: "md",
                        variant: "outline"
                    }
                }),
                oE = { ...null == (g = ox.baseStyle) ? void 0 : g.field,
                    paddingY: "2",
                    minHeight: "20",
                    lineHeight: "short",
                    verticalAlign: "top"
                },
                oC = {
                    outline: e => {
                        var r, n;
                        return null != (n = null == (r = ox.variants) ? void 0 : r.outline(e).field) ? n : {}
                    },
                    flushed: e => {
                        var r, n;
                        return null != (n = null == (r = ox.variants) ? void 0 : r.flushed(e).field) ? n : {}
                    },
                    filled: e => {
                        var r, n;
                        return null != (n = null == (r = ox.variants) ? void 0 : r.filled(e).field) ? n : {}
                    },
                    unstyled: null != (y = null == (v = ox.variants) ? void 0 : v.unstyled.field) ? y : {}
                },
                oA = {
                    xs: null != (w = null == (b = ox.sizes) ? void 0 : b.xs.field) ? w : {},
                    sm: null != (E = null == (x = ox.sizes) ? void 0 : x.sm.field) ? E : {},
                    md: null != (A = null == (C = ox.sizes) ? void 0 : C.md.field) ? A : {},
                    lg: null != (S = null == (k = ox.sizes) ? void 0 : k.lg.field) ? S : {}
                },
                ok = ir("tooltip-bg"),
                oS = ir("tooltip-fg"),
                o_ = ir("popper-arrow-bg"),
                oP = {
                    bg: ok.reference,
                    color: oS.reference,
                    [ok.variable]: "colors.gray.700",
                    [oS.variable]: "colors.whiteAlpha.900",
                    _dark: {
                        [ok.variable]: "colors.gray.300",
                        [oS.variable]: "colors.gray.900"
                    },
                    [o_.variable]: ok.reference,
                    px: "2",
                    py: "0.5",
                    borderRadius: "sm",
                    fontWeight: "medium",
                    fontSize: "sm",
                    boxShadow: "md",
                    maxW: "xs",
                    zIndex: "tooltip"
                },
                {
                    defineMultiStyleConfig: oj,
                    definePartsStyle: oT
                } = no(n1.keys),
                oR = e => {
                    let {
                        colorScheme: r,
                        theme: n,
                        isIndeterminate: i,
                        hasStripe: o
                    } = e, a = iA(iJ(), iJ("1rem", "rgba(0,0,0,0.1)"))(e), s = iA(`${r}.500`, `${r}.200`)(e), l = `linear-gradient(
    to right,
    transparent 0%,
    ${iV(n,s)} 50%,
    transparent 100%
  )`;
                    return { ...!i && o && a,
                        ...i ? {
                            bgImage: l
                        } : {
                            bgColor: s
                        }
                    }
                },
                oB = {
                    lineHeight: "1",
                    fontSize: "0.25em",
                    fontWeight: "bold",
                    color: "white"
                },
                oO = e => ({
                    bg: iA("gray.100", "whiteAlpha.300")(e)
                }),
                oM = e => ({
                    transitionProperty: "common",
                    transitionDuration: "slow",
                    ...oR(e)
                }),
                oI = oT(e => ({
                    label: oB,
                    filledTrack: oM(e),
                    track: oO(e)
                })),
                oN = oj({
                    sizes: {
                        xs: oT({
                            track: {
                                h: "1"
                            }
                        }),
                        sm: oT({
                            track: {
                                h: "2"
                            }
                        }),
                        md: oT({
                            track: {
                                h: "3"
                            }
                        }),
                        lg: oT({
                            track: {
                                h: "4"
                            }
                        })
                    },
                    baseStyle: oI,
                    defaultProps: {
                        size: "md",
                        colorScheme: "blue"
                    }
                }),
                oF = e => "function" == typeof e;

            function oL(e, ...r) {
                return oF(e) ? e(...r) : e
            }
            var {
                definePartsStyle: oD,
                defineMultiStyleConfig: oz
            } = no(nW.keys), oU = rW("checkbox-size"), o$ = e => {
                let {
                    colorScheme: r
                } = e;
                return {
                    w: oU.reference,
                    h: oU.reference,
                    transitionProperty: "box-shadow",
                    transitionDuration: "normal",
                    border: "2px solid",
                    borderRadius: "sm",
                    borderColor: "inherit",
                    color: "white",
                    _checked: {
                        bg: iA(`${r}.500`, `${r}.200`)(e),
                        borderColor: iA(`${r}.500`, `${r}.200`)(e),
                        color: iA("white", "gray.900")(e),
                        _hover: {
                            bg: iA(`${r}.600`, `${r}.300`)(e),
                            borderColor: iA(`${r}.600`, `${r}.300`)(e)
                        },
                        _disabled: {
                            borderColor: iA("gray.200", "transparent")(e),
                            bg: iA("gray.200", "whiteAlpha.300")(e),
                            color: iA("gray.500", "whiteAlpha.500")(e)
                        }
                    },
                    _indeterminate: {
                        bg: iA(`${r}.500`, `${r}.200`)(e),
                        borderColor: iA(`${r}.500`, `${r}.200`)(e),
                        color: iA("white", "gray.900")(e)
                    },
                    _disabled: {
                        bg: iA("gray.100", "whiteAlpha.100")(e),
                        borderColor: iA("gray.100", "transparent")(e)
                    },
                    _focusVisible: {
                        boxShadow: "outline"
                    },
                    _invalid: {
                        borderColor: iA("red.500", "red.300")(e)
                    }
                }
            }, oq = {
                _disabled: {
                    cursor: "not-allowed"
                }
            }, oW = {
                userSelect: "none",
                _disabled: {
                    opacity: .4
                }
            }, oV = {
                transitionProperty: "transform",
                transitionDuration: "normal"
            }, oH = oz({
                baseStyle: oD(e => ({
                    icon: oV,
                    container: oq,
                    control: oL(o$, e),
                    label: oW
                })),
                sizes: {
                    sm: oD({
                        control: {
                            [oU.variable]: "sizes.3"
                        },
                        label: {
                            fontSize: "sm"
                        },
                        icon: {
                            fontSize: "3xs"
                        }
                    }),
                    md: oD({
                        control: {
                            [oU.variable]: "sizes.4"
                        },
                        label: {
                            fontSize: "md"
                        },
                        icon: {
                            fontSize: "2xs"
                        }
                    }),
                    lg: oD({
                        control: {
                            [oU.variable]: "sizes.5"
                        },
                        label: {
                            fontSize: "lg"
                        },
                        icon: {
                            fontSize: "2xs"
                        }
                    })
                },
                defaultProps: {
                    size: "md",
                    colorScheme: "blue"
                }
            }), {
                defineMultiStyleConfig: oG,
                definePartsStyle: oK
            } = no(n2.keys), oQ = e => {
                var r;
                let n = null == (r = oL(oH.baseStyle, e)) ? void 0 : r.control;
                return { ...n,
                    borderRadius: "full",
                    _checked: { ...null == n ? void 0 : n._checked,
                        _before: {
                            content: '""',
                            display: "inline-block",
                            pos: "relative",
                            w: "50%",
                            h: "50%",
                            borderRadius: "50%",
                            bg: "currentColor"
                        }
                    }
                }
            }, oJ = oG({
                baseStyle: oK(e => {
                    var r, n;
                    return {
                        label: null == (r = oH.baseStyle) ? void 0 : r.call(oH, e).label,
                        container: null == (n = oH.baseStyle) ? void 0 : n.call(oH, e).container,
                        control: oQ(e)
                    }
                }),
                sizes: {
                    md: oK({
                        control: {
                            w: "4",
                            h: "4"
                        },
                        label: {
                            fontSize: "md"
                        }
                    }),
                    lg: oK({
                        control: {
                            w: "5",
                            h: "5"
                        },
                        label: {
                            fontSize: "lg"
                        }
                    }),
                    sm: oK({
                        control: {
                            width: "3",
                            height: "3"
                        },
                        label: {
                            fontSize: "sm"
                        }
                    })
                },
                defaultProps: {
                    size: "md",
                    colorScheme: "blue"
                }
            }), {
                defineMultiStyleConfig: oY,
                definePartsStyle: oX
            } = no(n3.keys), oZ = rW("select-bg"), o0 = oX({
                field: { ...null == (_ = ox.baseStyle) ? void 0 : _.field,
                    appearance: "none",
                    paddingBottom: "1px",
                    lineHeight: "normal",
                    bg: oZ.reference,
                    [oZ.variable]: "colors.white",
                    _dark: {
                        [oZ.variable]: "colors.gray.700"
                    },
                    "> option, > optgroup": {
                        bg: oZ.reference
                    }
                },
                icon: {
                    width: "6",
                    height: "100%",
                    insetEnd: "2",
                    position: "relative",
                    color: "currentColor",
                    fontSize: "xl",
                    _disabled: {
                        opacity: .5
                    }
                }
            }), o1 = {
                paddingInlineEnd: "8"
            }, o2 = oY({
                baseStyle: o0,
                sizes: {
                    lg: { ...null == (P = ox.sizes) ? void 0 : P.lg,
                        field: { ...null == (j = ox.sizes) ? void 0 : j.lg.field,
                            ...o1
                        }
                    },
                    md: { ...null == (T = ox.sizes) ? void 0 : T.md,
                        field: { ...null == (R = ox.sizes) ? void 0 : R.md.field,
                            ...o1
                        }
                    },
                    sm: { ...null == (B = ox.sizes) ? void 0 : B.sm,
                        field: { ...null == (O = ox.sizes) ? void 0 : O.sm.field,
                            ...o1
                        }
                    },
                    xs: { ...null == (M = ox.sizes) ? void 0 : M.xs,
                        field: { ...null == (I = ox.sizes) ? void 0 : I.xs.field,
                            ...o1
                        },
                        icon: {
                            insetEnd: "1"
                        }
                    }
                },
                variants: ox.variants,
                defaultProps: ox.defaultProps
            }), o3 = rW("skeleton-start-color"), o6 = rW("skeleton-end-color"), o5 = {
                [o3.variable]: "colors.gray.100",
                [o6.variable]: "colors.gray.400",
                _dark: {
                    [o3.variable]: "colors.gray.800",
                    [o6.variable]: "colors.gray.600"
                },
                background: o3.reference,
                borderColor: o6.reference,
                opacity: .7,
                borderRadius: "sm"
            }, o4 = rW("skip-link-bg"), o7 = {
                borderRadius: "md",
                fontWeight: "semibold",
                _focusVisible: {
                    boxShadow: "outline",
                    padding: "4",
                    position: "fixed",
                    top: "6",
                    insetStart: "6",
                    [o4.variable]: "colors.white",
                    _dark: {
                        [o4.variable]: "colors.gray.700"
                    },
                    bg: o4.reference
                }
            }, {
                defineMultiStyleConfig: o8,
                definePartsStyle: o9
            } = no(n6.keys), ae = rW("slider-thumb-size"), at = rW("slider-track-size"), ar = rW("slider-bg"), an = e => {
                let {
                    orientation: r
                } = e;
                return {
                    display: "inline-block",
                    position: "relative",
                    cursor: "pointer",
                    _disabled: {
                        opacity: .6,
                        cursor: "default",
                        pointerEvents: "none"
                    },
                    ...ik({
                        orientation: r,
                        vertical: {
                            h: "100%"
                        },
                        horizontal: {
                            w: "100%"
                        }
                    })
                }
            }, ai = e => {
                let r = ik({
                    orientation: e.orientation,
                    horizontal: {
                        h: at.reference
                    },
                    vertical: {
                        w: at.reference
                    }
                });
                return { ...r,
                    overflow: "hidden",
                    borderRadius: "sm",
                    [ar.variable]: "colors.gray.200",
                    _dark: {
                        [ar.variable]: "colors.whiteAlpha.200"
                    },
                    _disabled: {
                        [ar.variable]: "colors.gray.300",
                        _dark: {
                            [ar.variable]: "colors.whiteAlpha.300"
                        }
                    },
                    bg: ar.reference
                }
            }, ao = e => {
                let {
                    orientation: r
                } = e, n = ik({
                    orientation: r,
                    vertical: {
                        left: "50%",
                        transform: "translateX(-50%)",
                        _active: {
                            transform: "translateX(-50%) scale(1.15)"
                        }
                    },
                    horizontal: {
                        top: "50%",
                        transform: "translateY(-50%)",
                        _active: {
                            transform: "translateY(-50%) scale(1.15)"
                        }
                    }
                });
                return { ...n,
                    w: ae.reference,
                    h: ae.reference,
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    position: "absolute",
                    outline: 0,
                    zIndex: 1,
                    borderRadius: "full",
                    bg: "white",
                    boxShadow: "base",
                    border: "1px solid",
                    borderColor: "transparent",
                    transitionProperty: "transform",
                    transitionDuration: "normal",
                    _focusVisible: {
                        boxShadow: "outline"
                    },
                    _disabled: {
                        bg: "gray.300"
                    }
                }
            }, aa = e => {
                let {
                    colorScheme: r
                } = e;
                return {
                    width: "inherit",
                    height: "inherit",
                    [ar.variable]: `colors.${r}.500`,
                    _dark: {
                        [ar.variable]: `colors.${r}.200`
                    },
                    bg: ar.reference
                }
            }, as = o8({
                baseStyle: o9(e => ({
                    container: an(e),
                    track: ai(e),
                    thumb: ao(e),
                    filledTrack: aa(e)
                })),
                sizes: {
                    lg: o9({
                        container: {
                            [ae.variable]: "sizes.4",
                            [at.variable]: "sizes.1"
                        }
                    }),
                    md: o9({
                        container: {
                            [ae.variable]: "sizes.3.5",
                            [at.variable]: "sizes.1"
                        }
                    }),
                    sm: o9({
                        container: {
                            [ae.variable]: "sizes.2.5",
                            [at.variable]: "sizes.0.5"
                        }
                    })
                },
                defaultProps: {
                    size: "md",
                    colorScheme: "blue"
                }
            }), al = ir("spinner-size"), au = {
                width: [al.reference],
                height: [al.reference]
            }, ac = {
                xs: {
                    [al.variable]: "sizes.3"
                },
                sm: {
                    [al.variable]: "sizes.4"
                },
                md: {
                    [al.variable]: "sizes.6"
                },
                lg: {
                    [al.variable]: "sizes.8"
                },
                xl: {
                    [al.variable]: "sizes.12"
                }
            }, {
                defineMultiStyleConfig: ad,
                definePartsStyle: ah
            } = no(n5.keys), af = ad({
                baseStyle: ah({
                    container: {},
                    label: {
                        fontWeight: "medium"
                    },
                    helpText: {
                        opacity: .8,
                        marginBottom: "2"
                    },
                    number: {
                        verticalAlign: "baseline",
                        fontWeight: "semibold"
                    },
                    icon: {
                        marginEnd: 1,
                        w: "3.5",
                        h: "3.5",
                        verticalAlign: "middle"
                    }
                }),
                sizes: {
                    md: ah({
                        label: {
                            fontSize: "sm"
                        },
                        helpText: {
                            fontSize: "sm"
                        },
                        number: {
                            fontSize: "2xl"
                        }
                    })
                },
                defaultProps: {
                    size: "md"
                }
            }), ap = rW("kbd-bg"), am = {
                [ap.variable]: "colors.gray.100",
                _dark: {
                    [ap.variable]: "colors.whiteAlpha.100"
                },
                bg: ap.reference,
                borderRadius: "md",
                borderWidth: "1px",
                borderBottomWidth: "3px",
                fontSize: "0.8em",
                fontWeight: "bold",
                lineHeight: "normal",
                px: "0.4em",
                whiteSpace: "nowrap"
            }, {
                defineMultiStyleConfig: ag,
                definePartsStyle: av
            } = no(nJ.keys), ay = ag({
                baseStyle: av({
                    icon: {
                        marginEnd: "2",
                        display: "inline",
                        verticalAlign: "text-bottom"
                    }
                })
            }), {
                defineMultiStyleConfig: ab,
                definePartsStyle: aw
            } = no(nY.keys), ax = rW("menu-bg"), aE = rW("menu-shadow"), aC = ab({
                baseStyle: aw({
                    button: {
                        transitionProperty: "common",
                        transitionDuration: "normal"
                    },
                    list: {
                        [ax.variable]: "#fff",
                        [aE.variable]: "shadows.sm",
                        _dark: {
                            [ax.variable]: "colors.gray.700",
                            [aE.variable]: "shadows.dark-lg"
                        },
                        color: "inherit",
                        minW: "3xs",
                        py: "2",
                        zIndex: 1,
                        borderRadius: "md",
                        borderWidth: "1px",
                        bg: ax.reference,
                        boxShadow: aE.reference
                    },
                    item: {
                        py: "1.5",
                        px: "3",
                        transitionProperty: "background",
                        transitionDuration: "ultra-fast",
                        transitionTimingFunction: "ease-in",
                        _focus: {
                            [ax.variable]: "colors.gray.100",
                            _dark: {
                                [ax.variable]: "colors.whiteAlpha.100"
                            }
                        },
                        _active: {
                            [ax.variable]: "colors.gray.200",
                            _dark: {
                                [ax.variable]: "colors.whiteAlpha.200"
                            }
                        },
                        _expanded: {
                            [ax.variable]: "colors.gray.100",
                            _dark: {
                                [ax.variable]: "colors.whiteAlpha.100"
                            }
                        },
                        _disabled: {
                            opacity: .4,
                            cursor: "not-allowed"
                        },
                        bg: ax.reference
                    },
                    groupTitle: {
                        mx: 4,
                        my: 2,
                        fontWeight: "semibold",
                        fontSize: "sm"
                    },
                    icon: {
                        display: "inline-flex",
                        alignItems: "center",
                        justifyContent: "center",
                        flexShrink: 0
                    },
                    command: {
                        opacity: .6
                    },
                    divider: {
                        border: 0,
                        borderBottom: "1px solid",
                        borderColor: "inherit",
                        my: "2",
                        opacity: .6
                    }
                })
            }), {
                defineMultiStyleConfig: aA,
                definePartsStyle: ak
            } = no(nX.keys), aS = rW("modal-bg"), a_ = rW("modal-shadow"), aP = {
                bg: "blackAlpha.600",
                zIndex: "modal"
            }, aj = e => {
                let {
                    isCentered: r,
                    scrollBehavior: n
                } = e;
                return {
                    display: "flex",
                    zIndex: "modal",
                    justifyContent: "center",
                    alignItems: r ? "center" : "flex-start",
                    overflow: "inside" === n ? "hidden" : "auto",
                    overscrollBehaviorY: "none"
                }
            }, aT = e => {
                let {
                    isCentered: r,
                    scrollBehavior: n
                } = e;
                return {
                    borderRadius: "md",
                    color: "inherit",
                    my: r ? "auto" : "16",
                    mx: r ? "auto" : void 0,
                    zIndex: "modal",
                    maxH: "inside" === n ? "calc(100% - 7.5rem)" : void 0,
                    [aS.variable]: "colors.white",
                    [a_.variable]: "shadows.lg",
                    _dark: {
                        [aS.variable]: "colors.gray.700",
                        [a_.variable]: "shadows.dark-lg"
                    },
                    bg: aS.reference,
                    boxShadow: a_.reference
                }
            }, aR = {
                px: "6",
                py: "4",
                fontSize: "xl",
                fontWeight: "semibold"
            }, aB = {
                position: "absolute",
                top: "2",
                insetEnd: "3"
            }, aO = e => {
                let {
                    scrollBehavior: r
                } = e;
                return {
                    px: "6",
                    py: "2",
                    flex: "1",
                    overflow: "inside" === r ? "auto" : void 0
                }
            }, aM = {
                px: "6",
                py: "4"
            };

            function aI(e) {
                return "full" === e ? ak({
                    dialog: {
                        maxW: "100vw",
                        minH: "$100vh",
                        my: "0",
                        borderRadius: "0"
                    }
                }) : ak({
                    dialog: {
                        maxW: e
                    }
                })
            }
            var aN = aA({
                    baseStyle: ak(e => ({
                        overlay: aP,
                        dialogContainer: oL(aj, e),
                        dialog: oL(aT, e),
                        header: aR,
                        closeButton: aB,
                        body: oL(aO, e),
                        footer: aM
                    })),
                    sizes: {
                        xs: aI("xs"),
                        sm: aI("sm"),
                        md: aI("md"),
                        lg: aI("lg"),
                        xl: aI("xl"),
                        "2xl": aI("2xl"),
                        "3xl": aI("3xl"),
                        "4xl": aI("4xl"),
                        "5xl": aI("5xl"),
                        "6xl": aI("6xl"),
                        full: aI("full")
                    },
                    defaultProps: {
                        size: "md"
                    }
                }),
                {
                    defineMultiStyleConfig: aF,
                    definePartsStyle: aL
                } = no(nZ.keys),
                aD = ir("number-input-stepper-width"),
                az = ir("number-input-input-padding"),
                aU = id(aD).add("0.5rem").toString(),
                a$ = ir("number-input-bg"),
                aq = ir("number-input-color"),
                aW = ir("number-input-border-color"),
                aV = {
                    [aD.variable]: "sizes.6",
                    [az.variable]: aU
                },
                aH = e => {
                    var r, n;
                    return null != (n = null == (r = oL(ox.baseStyle, e)) ? void 0 : r.field) ? n : {}
                },
                aG = {
                    width: aD.reference
                },
                aK = {
                    borderStart: "1px solid",
                    borderStartColor: aW.reference,
                    color: aq.reference,
                    bg: a$.reference,
                    [aq.variable]: "colors.chakra-body-text",
                    [aW.variable]: "colors.chakra-border-color",
                    _dark: {
                        [aq.variable]: "colors.whiteAlpha.800",
                        [aW.variable]: "colors.whiteAlpha.300"
                    },
                    _active: {
                        [a$.variable]: "colors.gray.200",
                        _dark: {
                            [a$.variable]: "colors.whiteAlpha.300"
                        }
                    },
                    _disabled: {
                        opacity: .4,
                        cursor: "not-allowed"
                    }
                };

            function aQ(e) {
                var r, n, i;
                let o = null == (r = ox.sizes) ? void 0 : r[e],
                    a = {
                        lg: "md",
                        md: "md",
                        sm: "sm",
                        xs: "sm"
                    },
                    s = null != (i = null == (n = o.field) ? void 0 : n.fontSize) ? i : "md",
                    l = nS.fontSizes[s];
                return aL({
                    field: { ...o.field,
                        paddingInlineEnd: az.reference,
                        verticalAlign: "top"
                    },
                    stepper: {
                        fontSize: id(l).multiply(.75).toString(),
                        _first: {
                            borderTopEndRadius: a[e]
                        },
                        _last: {
                            borderBottomEndRadius: a[e],
                            mt: "-1px",
                            borderTopWidth: 1
                        }
                    }
                })
            }
            var aJ = aF({
                    baseStyle: aL(e => {
                        var r;
                        return {
                            root: aV,
                            field: null != (r = oL(aH, e)) ? r : {},
                            stepperGroup: aG,
                            stepper: aK
                        }
                    }),
                    sizes: {
                        xs: aQ("xs"),
                        sm: aQ("sm"),
                        md: aQ("md"),
                        lg: aQ("lg")
                    },
                    variants: ox.variants,
                    defaultProps: ox.defaultProps
                }),
                aY = {
                    baseStyle: { ...null == (N = ox.baseStyle) ? void 0 : N.field,
                        textAlign: "center"
                    },
                    sizes: {
                        lg: {
                            fontSize: "lg",
                            w: 12,
                            h: 12,
                            borderRadius: "md"
                        },
                        md: {
                            fontSize: "md",
                            w: 10,
                            h: 10,
                            borderRadius: "md"
                        },
                        sm: {
                            fontSize: "sm",
                            w: 8,
                            h: 8,
                            borderRadius: "sm"
                        },
                        xs: {
                            fontSize: "xs",
                            w: 6,
                            h: 6,
                            borderRadius: "sm"
                        }
                    },
                    variants: {
                        outline: e => {
                            var r, n, i;
                            return null != (i = null == (n = oL(null == (r = ox.variants) ? void 0 : r.outline, e)) ? void 0 : n.field) ? i : {}
                        },
                        flushed: e => {
                            var r, n, i;
                            return null != (i = null == (n = oL(null == (r = ox.variants) ? void 0 : r.flushed, e)) ? void 0 : n.field) ? i : {}
                        },
                        filled: e => {
                            var r, n, i;
                            return null != (i = null == (n = oL(null == (r = ox.variants) ? void 0 : r.filled, e)) ? void 0 : n.field) ? i : {}
                        },
                        unstyled: null != (L = null == (F = ox.variants) ? void 0 : F.unstyled.field) ? L : {}
                    },
                    defaultProps: ox.defaultProps
                },
                {
                    defineMultiStyleConfig: aX,
                    definePartsStyle: aZ
                } = no(n0.keys),
                a0 = ir("popper-bg"),
                a1 = ir("popper-arrow-bg"),
                a2 = ir("popper-arrow-shadow-color"),
                a3 = aX({
                    baseStyle: aZ({
                        popper: {
                            zIndex: 10
                        },
                        content: {
                            [a0.variable]: "colors.white",
                            bg: a0.reference,
                            [a1.variable]: a0.reference,
                            [a2.variable]: "colors.gray.200",
                            _dark: {
                                [a0.variable]: "colors.gray.700",
                                [a2.variable]: "colors.whiteAlpha.300"
                            },
                            width: "xs",
                            border: "1px solid",
                            borderColor: "inherit",
                            borderRadius: "md",
                            boxShadow: "sm",
                            zIndex: "inherit",
                            _focusVisible: {
                                outline: 0,
                                boxShadow: "outline"
                            }
                        },
                        header: {
                            px: 3,
                            py: 2,
                            borderBottomWidth: "1px"
                        },
                        body: {
                            px: 3,
                            py: 2
                        },
                        footer: {
                            px: 3,
                            py: 2,
                            borderTopWidth: "1px"
                        },
                        closeButton: {
                            position: "absolute",
                            borderRadius: "md",
                            top: 1,
                            insetEnd: 2,
                            padding: 2
                        }
                    })
                }),
                {
                    definePartsStyle: a6,
                    defineMultiStyleConfig: a5
                } = no(nV.keys),
                a4 = rW("drawer-bg"),
                a7 = rW("drawer-box-shadow");

            function a8(e) {
                return "full" === e ? a6({
                    dialog: {
                        maxW: "100vw",
                        h: "100vh"
                    }
                }) : a6({
                    dialog: {
                        maxW: e
                    }
                })
            }
            var a9 = {
                    bg: "blackAlpha.600",
                    zIndex: "overlay"
                },
                se = {
                    display: "flex",
                    zIndex: "modal",
                    justifyContent: "center"
                },
                st = e => {
                    let {
                        isFullHeight: r
                    } = e;
                    return { ...r && {
                            height: "100vh"
                        },
                        zIndex: "modal",
                        maxH: "100vh",
                        color: "inherit",
                        [a4.variable]: "colors.white",
                        [a7.variable]: "shadows.lg",
                        _dark: {
                            [a4.variable]: "colors.gray.700",
                            [a7.variable]: "shadows.dark-lg"
                        },
                        bg: a4.reference,
                        boxShadow: a7.reference
                    }
                },
                sr = {
                    px: "6",
                    py: "4",
                    fontSize: "xl",
                    fontWeight: "semibold"
                },
                sn = {
                    position: "absolute",
                    top: "2",
                    insetEnd: "3"
                },
                si = {
                    px: "6",
                    py: "2",
                    flex: "1",
                    overflow: "auto"
                },
                so = {
                    px: "6",
                    py: "4"
                },
                sa = a5({
                    baseStyle: a6(e => ({
                        overlay: a9,
                        dialogContainer: se,
                        dialog: oL(st, e),
                        header: sr,
                        closeButton: sn,
                        body: si,
                        footer: so
                    })),
                    sizes: {
                        xs: a8("xs"),
                        sm: a8("md"),
                        md: a8("lg"),
                        lg: a8("2xl"),
                        xl: a8("4xl"),
                        full: a8("full")
                    },
                    defaultProps: {
                        size: "xs"
                    }
                }),
                {
                    definePartsStyle: ss,
                    defineMultiStyleConfig: sl
                } = no(nH.keys),
                su = sl({
                    baseStyle: ss({
                        preview: {
                            borderRadius: "md",
                            py: "1",
                            transitionProperty: "common",
                            transitionDuration: "normal"
                        },
                        input: {
                            borderRadius: "md",
                            py: "1",
                            transitionProperty: "common",
                            transitionDuration: "normal",
                            width: "full",
                            _focusVisible: {
                                boxShadow: "outline"
                            },
                            _placeholder: {
                                opacity: .6
                            }
                        },
                        textarea: {
                            borderRadius: "md",
                            py: "1",
                            transitionProperty: "common",
                            transitionDuration: "normal",
                            width: "full",
                            _focusVisible: {
                                boxShadow: "outline"
                            },
                            _placeholder: {
                                opacity: .6
                            }
                        }
                    })
                }),
                {
                    definePartsStyle: sc,
                    defineMultiStyleConfig: sd
                } = no(nG.keys),
                sh = rW("form-control-color"),
                sf = sd({
                    baseStyle: sc({
                        container: {
                            width: "100%",
                            position: "relative"
                        },
                        requiredIndicator: {
                            marginStart: "1",
                            [sh.variable]: "colors.red.500",
                            _dark: {
                                [sh.variable]: "colors.red.300"
                            },
                            color: sh.reference
                        },
                        helperText: {
                            mt: "2",
                            [sh.variable]: "colors.gray.600",
                            _dark: {
                                [sh.variable]: "colors.whiteAlpha.600"
                            },
                            color: sh.reference,
                            lineHeight: "normal",
                            fontSize: "sm"
                        }
                    })
                }),
                {
                    definePartsStyle: sp,
                    defineMultiStyleConfig: sm
                } = no(nK.keys),
                sg = rW("form-error-color"),
                sv = sm({
                    baseStyle: sp({
                        text: {
                            [sg.variable]: "colors.red.500",
                            _dark: {
                                [sg.variable]: "colors.red.300"
                            },
                            color: sg.reference,
                            mt: "2",
                            fontSize: "sm",
                            lineHeight: "normal"
                        },
                        icon: {
                            marginEnd: "0.5em",
                            [sg.variable]: "colors.red.500",
                            _dark: {
                                [sg.variable]: "colors.red.300"
                            },
                            color: sg.reference
                        }
                    })
                }),
                {
                    defineMultiStyleConfig: sy,
                    definePartsStyle: sb
                } = no(nq.keys),
                sw = rW("breadcrumb-link-decor"),
                sx = sy({
                    baseStyle: sb({
                        link: {
                            transitionProperty: "common",
                            transitionDuration: "fast",
                            transitionTimingFunction: "ease-out",
                            outline: "none",
                            color: "inherit",
                            textDecoration: sw.reference,
                            [sw.variable]: "none",
                            "&:not([aria-current=page])": {
                                cursor: "pointer",
                                _hover: {
                                    [sw.variable]: "underline"
                                },
                                _focusVisible: {
                                    boxShadow: "outline"
                                }
                            }
                        }
                    })
                }),
                sE = e => {
                    let {
                        colorScheme: r,
                        theme: n
                    } = e;
                    if ("gray" === r) return {
                        color: iA("gray.800", "whiteAlpha.900")(e),
                        _hover: {
                            bg: iA("gray.100", "whiteAlpha.200")(e)
                        },
                        _active: {
                            bg: iA("gray.200", "whiteAlpha.300")(e)
                        }
                    };
                    let i = iQ(`${r}.200`, .12)(n),
                        o = iQ(`${r}.200`, .24)(n);
                    return {
                        color: iA(`${r}.600`, `${r}.200`)(e),
                        bg: "transparent",
                        _hover: {
                            bg: iA(`${r}.50`, i)(e)
                        },
                        _active: {
                            bg: iA(`${r}.100`, o)(e)
                        }
                    }
                },
                sC = e => {
                    let {
                        colorScheme: r
                    } = e, n = iA("gray.200", "whiteAlpha.300")(e);
                    return {
                        border: "1px solid",
                        borderColor: "gray" === r ? n : "currentColor",
                        ".chakra-button__group[data-attached][data-orientation=horizontal] > &:not(:last-of-type)": {
                            marginEnd: "-1px"
                        },
                        ".chakra-button__group[data-attached][data-orientation=vertical] > &:not(:last-of-type)": {
                            marginBottom: "-1px"
                        },
                        ...oL(sE, e)
                    }
                },
                sA = {
                    yellow: {
                        bg: "yellow.400",
                        color: "black",
                        hoverBg: "yellow.500",
                        activeBg: "yellow.600"
                    },
                    cyan: {
                        bg: "cyan.400",
                        color: "black",
                        hoverBg: "cyan.500",
                        activeBg: "cyan.600"
                    }
                },
                sk = e => {
                    var r;
                    let {
                        colorScheme: n
                    } = e;
                    if ("gray" === n) {
                        let i = iA("gray.100", "whiteAlpha.200")(e);
                        return {
                            bg: i,
                            color: iA("gray.800", "whiteAlpha.900")(e),
                            _hover: {
                                bg: iA("gray.200", "whiteAlpha.300")(e),
                                _disabled: {
                                    bg: i
                                }
                            },
                            _active: {
                                bg: iA("gray.300", "whiteAlpha.400")(e)
                            }
                        }
                    }
                    let {
                        bg: o = `${n}.500`,
                        color: a = "white",
                        hoverBg: s = `${n}.600`,
                        activeBg: l = `${n}.700`
                    } = null != (r = sA[n]) ? r : {}, u = iA(o, `${n}.200`)(e);
                    return {
                        bg: u,
                        color: iA(a, "gray.800")(e),
                        _hover: {
                            bg: iA(s, `${n}.300`)(e),
                            _disabled: {
                                bg: u
                            }
                        },
                        _active: {
                            bg: iA(l, `${n}.400`)(e)
                        }
                    }
                },
                sS = e => {
                    let {
                        colorScheme: r
                    } = e;
                    return {
                        padding: 0,
                        height: "auto",
                        lineHeight: "normal",
                        verticalAlign: "baseline",
                        color: iA(`${r}.500`, `${r}.200`)(e),
                        _hover: {
                            textDecoration: "underline",
                            _disabled: {
                                textDecoration: "none"
                            }
                        },
                        _active: {
                            color: iA(`${r}.700`, `${r}.500`)(e)
                        }
                    }
                },
                {
                    definePartsStyle: s_,
                    defineMultiStyleConfig: sP
                } = no(ie.keys),
                sj = rW("card-bg"),
                sT = rW("card-padding"),
                sR = rW("card-shadow"),
                sB = rW("card-radius"),
                sO = rW("card-border-width", "0"),
                sM = rW("card-border-color"),
                sI = s_({
                    container: {
                        [sj.variable]: "colors.chakra-body-bg",
                        backgroundColor: sj.reference,
                        boxShadow: sR.reference,
                        borderRadius: sB.reference,
                        color: "chakra-body-text",
                        borderWidth: sO.reference,
                        borderColor: sM.reference
                    },
                    body: {
                        padding: sT.reference,
                        flex: "1 1 0%"
                    },
                    header: {
                        padding: sT.reference
                    },
                    footer: {
                        padding: sT.reference
                    }
                }),
                sN = {
                    sm: s_({
                        container: {
                            [sB.variable]: "radii.base",
                            [sT.variable]: "space.3"
                        }
                    }),
                    md: s_({
                        container: {
                            [sB.variable]: "radii.md",
                            [sT.variable]: "space.5"
                        }
                    }),
                    lg: s_({
                        container: {
                            [sB.variable]: "radii.xl",
                            [sT.variable]: "space.7"
                        }
                    })
                },
                sF = sP({
                    baseStyle: sI,
                    variants: {
                        elevated: s_({
                            container: {
                                [sR.variable]: "shadows.base",
                                _dark: {
                                    [sj.variable]: "colors.gray.700"
                                }
                            }
                        }),
                        outline: s_({
                            container: {
                                [sO.variable]: "1px",
                                [sM.variable]: "colors.chakra-border-color"
                            }
                        }),
                        filled: s_({
                            container: {
                                [sj.variable]: "colors.chakra-subtle-bg"
                            }
                        }),
                        unstyled: {
                            body: {
                                [sT.variable]: 0
                            },
                            header: {
                                [sT.variable]: 0
                            },
                            footer: {
                                [sT.variable]: 0
                            }
                        }
                    },
                    sizes: sN,
                    defaultProps: {
                        variant: "elevated",
                        size: "md"
                    }
                }),
                sL = ir("close-button-size"),
                sD = ir("close-button-bg"),
                sz = {
                    w: [sL.reference],
                    h: [sL.reference],
                    borderRadius: "md",
                    transitionProperty: "common",
                    transitionDuration: "normal",
                    _disabled: {
                        opacity: .4,
                        cursor: "not-allowed",
                        boxShadow: "none"
                    },
                    _hover: {
                        [sD.variable]: "colors.blackAlpha.100",
                        _dark: {
                            [sD.variable]: "colors.whiteAlpha.100"
                        }
                    },
                    _active: {
                        [sD.variable]: "colors.blackAlpha.200",
                        _dark: {
                            [sD.variable]: "colors.whiteAlpha.200"
                        }
                    },
                    _focusVisible: {
                        boxShadow: "outline"
                    },
                    bg: sD.reference
                },
                sU = {
                    lg: {
                        [sL.variable]: "sizes.10",
                        fontSize: "md"
                    },
                    md: {
                        [sL.variable]: "sizes.8",
                        fontSize: "xs"
                    },
                    sm: {
                        [sL.variable]: "sizes.6",
                        fontSize: "2xs"
                    }
                },
                {
                    variants: s$,
                    defaultProps: sq
                } = i9,
                sW = {
                    fontFamily: "mono",
                    fontSize: "sm",
                    px: "0.2em",
                    borderRadius: "sm",
                    bg: i8.bg.reference,
                    color: i8.color.reference,
                    boxShadow: i8.shadow.reference
                },
                {
                    definePartsStyle: sV,
                    defineMultiStyleConfig: sH
                } = no(nz.keys),
                sG = sH({
                    baseStyle: sV({
                        container: {
                            borderTopWidth: "1px",
                            borderColor: "inherit",
                            _last: {
                                borderBottomWidth: "1px"
                            }
                        },
                        button: {
                            transitionProperty: "common",
                            transitionDuration: "normal",
                            fontSize: "md",
                            _focusVisible: {
                                boxShadow: "outline"
                            },
                            _hover: {
                                bg: "blackAlpha.50"
                            },
                            _disabled: {
                                opacity: .4,
                                cursor: "not-allowed"
                            },
                            px: "4",
                            py: "2"
                        },
                        panel: {
                            pt: "2",
                            px: "4",
                            pb: "5"
                        },
                        icon: {
                            fontSize: "1.25em"
                        }
                    })
                }),
                {
                    definePartsStyle: sK,
                    defineMultiStyleConfig: sQ
                } = no(nU.keys),
                sJ = rW("alert-fg"),
                sY = rW("alert-bg");

            function sX(e) {
                let {
                    theme: r,
                    colorScheme: n
                } = e, i = iQ(`${n}.200`, .16)(r);
                return {
                    light: `colors.${n}.100`,
                    dark: i
                }
            }
            var sZ = sQ({
                    baseStyle: sK({
                        container: {
                            bg: sY.reference,
                            px: "4",
                            py: "3"
                        },
                        title: {
                            fontWeight: "bold",
                            lineHeight: "6",
                            marginEnd: "2"
                        },
                        description: {
                            lineHeight: "6"
                        },
                        icon: {
                            color: sJ.reference,
                            flexShrink: 0,
                            marginEnd: "3",
                            w: "5",
                            h: "6"
                        },
                        spinner: {
                            color: sJ.reference,
                            flexShrink: 0,
                            marginEnd: "3",
                            w: "5",
                            h: "5"
                        }
                    }),
                    variants: {
                        subtle: sK(e => {
                            let {
                                colorScheme: r
                            } = e, n = sX(e);
                            return {
                                container: {
                                    [sJ.variable]: `colors.${r}.500`,
                                    [sY.variable]: n.light,
                                    _dark: {
                                        [sJ.variable]: `colors.${r}.200`,
                                        [sY.variable]: n.dark
                                    }
                                }
                            }
                        }),
                        "left-accent": sK(e => {
                            let {
                                colorScheme: r
                            } = e, n = sX(e);
                            return {
                                container: {
                                    [sJ.variable]: `colors.${r}.500`,
                                    [sY.variable]: n.light,
                                    _dark: {
                                        [sJ.variable]: `colors.${r}.200`,
                                        [sY.variable]: n.dark
                                    },
                                    paddingStart: "3",
                                    borderStartWidth: "4px",
                                    borderStartColor: sJ.reference
                                }
                            }
                        }),
                        "top-accent": sK(e => {
                            let {
                                colorScheme: r
                            } = e, n = sX(e);
                            return {
                                container: {
                                    [sJ.variable]: `colors.${r}.500`,
                                    [sY.variable]: n.light,
                                    _dark: {
                                        [sJ.variable]: `colors.${r}.200`,
                                        [sY.variable]: n.dark
                                    },
                                    pt: "2",
                                    borderTopWidth: "4px",
                                    borderTopColor: sJ.reference
                                }
                            }
                        }),
                        solid: sK(e => {
                            let {
                                colorScheme: r
                            } = e;
                            return {
                                container: {
                                    [sJ.variable]: "colors.white",
                                    [sY.variable]: `colors.${r}.500`,
                                    _dark: {
                                        [sJ.variable]: "colors.gray.900",
                                        [sY.variable]: `colors.${r}.200`
                                    },
                                    color: sJ.reference
                                }
                            }
                        })
                    },
                    defaultProps: {
                        variant: "subtle",
                        colorScheme: "blue"
                    }
                }),
                {
                    definePartsStyle: s0,
                    defineMultiStyleConfig: s1
                } = no(n$.keys),
                s2 = rW("avatar-border-color"),
                s3 = rW("avatar-bg"),
                s6 = rW("avatar-font-size"),
                s5 = rW("avatar-size"),
                s4 = {
                    borderRadius: "full",
                    border: "0.2em solid",
                    borderColor: s2.reference,
                    [s2.variable]: "white",
                    _dark: {
                        [s2.variable]: "colors.gray.800"
                    }
                },
                s7 = {
                    bg: s3.reference,
                    fontSize: s6.reference,
                    width: s5.reference,
                    height: s5.reference,
                    lineHeight: "1",
                    [s3.variable]: "colors.gray.200",
                    _dark: {
                        [s3.variable]: "colors.whiteAlpha.400"
                    }
                },
                s8 = e => {
                    let {
                        name: r,
                        theme: n
                    } = e, i = r ? function(e) {
                        var r;
                        let n = iY();
                        return !e || iW(e) ? n : e.string && e.colors ? function(e, r) {
                            let n = 0;
                            if (0 === e.length) return r[0];
                            for (let i = 0; i < e.length; i += 1) n = e.charCodeAt(i) + ((n << 5) - n), n &= n;
                            return n = (n % r.length + r.length) % r.length, r[n]
                        }(e.string, e.colors) : e.string && !e.colors ? function(e) {
                            let r = 0;
                            if (0 === e.length) return r.toString();
                            for (let n = 0; n < e.length; n += 1) r = e.charCodeAt(n) + ((r << 5) - r), r &= r;
                            let i = "#";
                            for (let o = 0; o < 3; o += 1) {
                                let a = r >> 8 * o & 255;
                                i += `00${a.toString(16)}`.substr(-2)
                            }
                            return i
                        }(e.string) : e.colors && !e.string ? (r = e.colors)[Math.floor(Math.random() * r.length)] : n
                    }({
                        string: r
                    }) : "colors.gray.400", o = iK(i)(n), a = "white";
                    return o || (a = "gray.800"), {
                        bg: s3.reference,
                        fontSize: s6.reference,
                        color: a,
                        borderColor: s2.reference,
                        verticalAlign: "top",
                        width: s5.reference,
                        height: s5.reference,
                        "&:not([data-loaded])": {
                            [s3.variable]: i
                        },
                        [s2.variable]: "colors.white",
                        _dark: {
                            [s2.variable]: "colors.gray.800"
                        }
                    }
                },
                s9 = {
                    fontSize: s6.reference,
                    lineHeight: "1"
                };

            function le(e) {
                let r = "100%" !== e ? nP[e] : void 0;
                return s0({
                    container: {
                        [s5.variable]: null != r ? r : e,
                        [s6.variable]: `calc(${null!=r?r:e} / 2.5)`
                    },
                    excessLabel: {
                        [s5.variable]: null != r ? r : e,
                        [s6.variable]: `calc(${null!=r?r:e} / 2.5)`
                    }
                })
            }
            var lt = s1({
                    baseStyle: s0(e => ({
                        badge: oL(s4, e),
                        excessLabel: oL(s7, e),
                        container: oL(s8, e),
                        label: s9
                    })),
                    sizes: {
                        "2xs": le(4),
                        xs: le(6),
                        sm: le(8),
                        md: le(12),
                        lg: le(16),
                        xl: le(24),
                        "2xl": le(32),
                        full: le("100%")
                    },
                    defaultProps: {
                        size: "md"
                    }
                }),
                lr = {
                    colors: {
                        "chakra-body-text": {
                            _light: "gray.800",
                            _dark: "whiteAlpha.900"
                        },
                        "chakra-body-bg": {
                            _light: "white",
                            _dark: "gray.800"
                        },
                        "chakra-border-color": {
                            _light: "gray.200",
                            _dark: "whiteAlpha.300"
                        },
                        "chakra-inverse-text": {
                            _light: "white",
                            _dark: "gray.800"
                        },
                        "chakra-subtle-bg": {
                            _light: "gray.100",
                            _dark: "gray.700"
                        },
                        "chakra-subtle-text": {
                            _light: "gray.600",
                            _dark: "gray.400"
                        },
                        "chakra-placeholder-color": {
                            _light: "gray.500",
                            _dark: "whiteAlpha.400"
                        }
                    }
                },
                ln = {
                    global: {
                        body: {
                            fontFamily: "body",
                            color: "chakra-body-text",
                            bg: "chakra-body-bg",
                            transitionProperty: "background-color",
                            transitionDuration: "normal",
                            lineHeight: "base"
                        },
                        "*::placeholder": {
                            color: "chakra-placeholder-color"
                        },
                        "*, *::before, &::after": {
                            borderColor: "chakra-border-color"
                        }
                    }
                },
                li = {
                    useSystemColorMode: !1,
                    initialColorMode: "light",
                    cssVarPrefix: "chakra"
                },
                lo = {
                    semanticTokens: lr,
                    direction: "ltr",
                    ...nj,
                    components: {
                        Accordion: sG,
                        Alert: sZ,
                        Avatar: lt,
                        Badge: i9,
                        Breadcrumb: sx,
                        Button: {
                            baseStyle: {
                                lineHeight: "1.2",
                                borderRadius: "md",
                                fontWeight: "semibold",
                                transitionProperty: "common",
                                transitionDuration: "normal",
                                _focusVisible: {
                                    boxShadow: "outline"
                                },
                                _disabled: {
                                    opacity: .4,
                                    cursor: "not-allowed",
                                    boxShadow: "none"
                                },
                                _hover: {
                                    _disabled: {
                                        bg: "initial"
                                    }
                                }
                            },
                            variants: {
                                ghost: sE,
                                outline: sC,
                                solid: sk,
                                link: sS,
                                unstyled: {
                                    bg: "none",
                                    color: "inherit",
                                    display: "inline",
                                    lineHeight: "inherit",
                                    m: "0",
                                    p: "0"
                                }
                            },
                            sizes: {
                                lg: {
                                    h: "12",
                                    minW: "12",
                                    fontSize: "lg",
                                    px: "6"
                                },
                                md: {
                                    h: "10",
                                    minW: "10",
                                    fontSize: "md",
                                    px: "4"
                                },
                                sm: {
                                    h: "8",
                                    minW: "8",
                                    fontSize: "sm",
                                    px: "3"
                                },
                                xs: {
                                    h: "6",
                                    minW: "6",
                                    fontSize: "xs",
                                    px: "2"
                                }
                            },
                            defaultProps: {
                                variant: "solid",
                                size: "md",
                                colorScheme: "gray"
                            }
                        },
                        Checkbox: oH,
                        CloseButton: {
                            baseStyle: sz,
                            sizes: sU,
                            defaultProps: {
                                size: "md"
                            }
                        },
                        Code: {
                            baseStyle: sW,
                            variants: s$,
                            defaultProps: sq
                        },
                        Container: {
                            baseStyle: {
                                w: "100%",
                                mx: "auto",
                                maxW: "prose",
                                px: "4"
                            }
                        },
                        Divider: {
                            baseStyle: {
                                opacity: .6,
                                borderColor: "inherit"
                            },
                            variants: {
                                solid: {
                                    borderStyle: "solid"
                                },
                                dashed: {
                                    borderStyle: "dashed"
                                }
                            },
                            defaultProps: {
                                variant: "solid"
                            }
                        },
                        Drawer: sa,
                        Editable: su,
                        Form: sf,
                        FormError: sv,
                        FormLabel: {
                            baseStyle: {
                                fontSize: "md",
                                marginEnd: "3",
                                mb: "2",
                                fontWeight: "medium",
                                transitionProperty: "common",
                                transitionDuration: "normal",
                                opacity: 1,
                                _disabled: {
                                    opacity: .4
                                }
                            }
                        },
                        Heading: {
                            baseStyle: {
                                fontFamily: "heading",
                                fontWeight: "bold"
                            },
                            sizes: {
                                "4xl": {
                                    fontSize: ["6xl", null, "7xl"],
                                    lineHeight: 1
                                },
                                "3xl": {
                                    fontSize: ["5xl", null, "6xl"],
                                    lineHeight: 1
                                },
                                "2xl": {
                                    fontSize: ["4xl", null, "5xl"],
                                    lineHeight: [1.2, null, 1]
                                },
                                xl: {
                                    fontSize: ["3xl", null, "4xl"],
                                    lineHeight: [1.33, null, 1.2]
                                },
                                lg: {
                                    fontSize: ["2xl", null, "3xl"],
                                    lineHeight: [1.33, null, 1.2]
                                },
                                md: {
                                    fontSize: "xl",
                                    lineHeight: 1.2
                                },
                                sm: {
                                    fontSize: "md",
                                    lineHeight: 1.2
                                },
                                xs: {
                                    fontSize: "sm",
                                    lineHeight: 1.2
                                }
                            },
                            defaultProps: {
                                size: "xl"
                            }
                        },
                        Input: ox,
                        Kbd: {
                            baseStyle: am
                        },
                        Link: {
                            baseStyle: {
                                transitionProperty: "common",
                                transitionDuration: "fast",
                                transitionTimingFunction: "ease-out",
                                cursor: "pointer",
                                textDecoration: "none",
                                outline: "none",
                                color: "inherit",
                                _hover: {
                                    textDecoration: "underline"
                                },
                                _focusVisible: {
                                    boxShadow: "outline"
                                }
                            }
                        },
                        List: ay,
                        Menu: aC,
                        Modal: aN,
                        NumberInput: aJ,
                        PinInput: aY,
                        Popover: a3,
                        Progress: oN,
                        Radio: oJ,
                        Select: o2,
                        Skeleton: {
                            baseStyle: o5
                        },
                        SkipLink: {
                            baseStyle: o7
                        },
                        Slider: as,
                        Spinner: {
                            baseStyle: au,
                            sizes: ac,
                            defaultProps: {
                                size: "md"
                            }
                        },
                        Stat: af,
                        Switch: iC,
                        Table: iT,
                        Tabs: i7,
                        Tag: od,
                        Textarea: {
                            baseStyle: oE,
                            sizes: oA,
                            variants: oC,
                            defaultProps: {
                                size: "md",
                                variant: "outline"
                            }
                        },
                        Tooltip: {
                            baseStyle: oP
                        },
                        Card: sF,
                        Stepper: nL
                    },
                    styles: ln,
                    config: li
                },
                la = {
                    semanticTokens: lr,
                    direction: "ltr",
                    components: {},
                    ...nj,
                    styles: ln,
                    config: li
                },
                ls = (e, r) => e.find(e => e.id === r);

            function ll(e, r) {
                let n = lu(e, r),
                    i = n ? e[n].findIndex(e => e.id === r) : -1;
                return {
                    position: n,
                    index: i
                }
            }

            function lu(e, r) {
                for (let [n, i] of Object.entries(e))
                    if (ls(i, r)) return n
            }

            function lc(e, r) {
                let n = (0, Z.useRef)(!1),
                    i = (0, Z.useRef)(!1);
                (0, Z.useEffect)(() => {
                    let r = n.current,
                        o = r && i.current;
                    if (o) return e();
                    i.current = !0
                }, r), (0, Z.useEffect)(() => (n.current = !0, () => {
                    n.current = !1
                }), [])
            }
            let ld = (0, Z.createContext)(null);

            function lh() {
                let e = (0, Z.useContext)(ld);
                if (null === e) return [!0, null];
                let {
                    isPresent: r,
                    onExitComplete: n,
                    register: i
                } = e, o = (0, Z.useId)();
                (0, Z.useEffect)(() => i(o), []);
                let a = () => n && n(o);
                return !r && n ? [!1, a] : [!0]
            }
            let lf = (0, Z.createContext)({
                    transformPagePoint: e => e,
                    isStatic: !1,
                    reducedMotion: "never"
                }),
                lp = (0, Z.createContext)({}),
                lm = "undefined" != typeof document,
                lg = lm ? Z.useLayoutEffect : Z.useEffect,
                lv = (0, Z.createContext)({
                    strict: !1
                });

            function ly(e) {
                return "object" == typeof e && Object.prototype.hasOwnProperty.call(e, "current")
            }

            function lb(e) {
                return "string" == typeof e || Array.isArray(e)
            }

            function lw(e) {
                return "object" == typeof e && "function" == typeof e.start
            }
            let lx = ["initial", "animate", "exit", "whileHover", "whileDrag", "whileTap", "whileFocus", "whileInView"];

            function lE(e) {
                return lw(e.animate) || lx.some(r => lb(e[r]))
            }

            function lC(e) {
                return Boolean(lE(e) || e.variants)
            }

            function lA(e) {
                return Array.isArray(e) ? e.join(" ") : e
            }
            let lk = e => ({
                    isEnabled: r => e.some(e => !!r[e])
                }),
                lS = {
                    measureLayout: lk(["layout", "layoutId", "drag"]),
                    animation: lk(["animate", "exit", "variants", "whileHover", "whileTap", "whileFocus", "whileDrag", "whileInView"]),
                    exit: lk(["exit"]),
                    drag: lk(["drag", "dragControls"]),
                    focus: lk(["whileFocus"]),
                    hover: lk(["whileHover", "onHoverStart", "onHoverEnd"]),
                    tap: lk(["whileTap", "onTap", "onTapStart", "onTapCancel"]),
                    pan: lk(["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"]),
                    inView: lk(["whileInView", "onViewportEnter", "onViewportLeave"])
                };

            function l_(e) {
                let r = (0, Z.useRef)(null);
                return null === r.current && (r.current = e()), r.current
            }
            let lP = {
                    hasAnimatedSinceResize: !0,
                    hasEverUpdated: !1
                },
                lj = 1,
                lT = (0, Z.createContext)({});
            class lR extends Z.Component {
                getSnapshotBeforeUpdate() {
                    let {
                        visualElement: e,
                        props: r
                    } = this.props;
                    return e && e.setProps(r), null
                }
                componentDidUpdate() {}
                render() {
                    return this.props.children
                }
            }
            let lB = (0, Z.createContext)({}),
                lO = Symbol.for("motionComponentSymbol"),
                lM = ["animate", "circle", "defs", "desc", "ellipse", "g", "image", "line", "filter", "marker", "mask", "metadata", "path", "pattern", "polygon", "polyline", "rect", "stop", "switch", "symbol", "svg", "text", "tspan", "use", "view"];

            function lI(e) {
                if ("string" != typeof e || e.includes("-"));
                else if (lM.indexOf(e) > -1 || /[A-Z]/.test(e)) return !0;
                return !1
            }
            let lN = {},
                lF = ["transformPerspective", "x", "y", "z", "translateX", "translateY", "translateZ", "scale", "scaleX", "scaleY", "rotate", "rotateX", "rotateY", "rotateZ", "skew", "skewX", "skewY"],
                lL = new Set(lF);

            function lD(e, {
                layout: r,
                layoutId: n
            }) {
                return lL.has(e) || e.startsWith("origin") || (r || void 0 !== n) && (!!lN[e] || "opacity" === e)
            }
            let lz = e => !!(null == e ? void 0 : e.getVelocity),
                lU = {
                    x: "translateX",
                    y: "translateY",
                    z: "translateZ",
                    transformPerspective: "perspective"
                },
                l$ = (e, r) => lF.indexOf(e) - lF.indexOf(r);

            function lq(e) {
                return e.startsWith("--")
            }
            let lW = (e, r) => r && "number" == typeof e ? r.transform(e) : e,
                lV = (e, r, n) => Math.min(Math.max(n, e), r),
                lH = {
                    test: e => "number" == typeof e,
                    parse: parseFloat,
                    transform: e => e
                },
                lG = { ...lH,
                    transform: e => lV(0, 1, e)
                },
                lK = { ...lH,
                    default: 1
                },
                lQ = e => Math.round(1e5 * e) / 1e5,
                lJ = /(-)?([\d]*\.?[\d])+/g,
                lY = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,
                lX = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;

            function lZ(e) {
                return "string" == typeof e
            }
            let l0 = e => ({
                    test: r => lZ(r) && r.endsWith(e) && 1 === r.split(" ").length,
                    parse: parseFloat,
                    transform: r => `${r}${e}`
                }),
                l1 = l0("deg"),
                l2 = l0("%"),
                l3 = l0("px"),
                l6 = l0("vh"),
                l5 = l0("vw"),
                l4 = { ...l2,
                    parse: e => l2.parse(e) / 100,
                    transform: e => l2.transform(100 * e)
                },
                l7 = { ...lH,
                    transform: Math.round
                },
                l8 = {
                    borderWidth: l3,
                    borderTopWidth: l3,
                    borderRightWidth: l3,
                    borderBottomWidth: l3,
                    borderLeftWidth: l3,
                    borderRadius: l3,
                    radius: l3,
                    borderTopLeftRadius: l3,
                    borderTopRightRadius: l3,
                    borderBottomRightRadius: l3,
                    borderBottomLeftRadius: l3,
                    width: l3,
                    maxWidth: l3,
                    height: l3,
                    maxHeight: l3,
                    size: l3,
                    top: l3,
                    right: l3,
                    bottom: l3,
                    left: l3,
                    padding: l3,
                    paddingTop: l3,
                    paddingRight: l3,
                    paddingBottom: l3,
                    paddingLeft: l3,
                    margin: l3,
                    marginTop: l3,
                    marginRight: l3,
                    marginBottom: l3,
                    marginLeft: l3,
                    rotate: l1,
                    rotateX: l1,
                    rotateY: l1,
                    rotateZ: l1,
                    scale: lK,
                    scaleX: lK,
                    scaleY: lK,
                    scaleZ: lK,
                    skew: l1,
                    skewX: l1,
                    skewY: l1,
                    distance: l3,
                    translateX: l3,
                    translateY: l3,
                    translateZ: l3,
                    x: l3,
                    y: l3,
                    z: l3,
                    perspective: l3,
                    transformPerspective: l3,
                    opacity: lG,
                    originX: l4,
                    originY: l4,
                    originZ: l3,
                    zIndex: l7,
                    fillOpacity: lG,
                    strokeOpacity: lG,
                    numOctaves: l7
                };

            function l9(e, r, n, i) {
                let {
                    style: o,
                    vars: a,
                    transform: s,
                    transformKeys: l,
                    transformOrigin: u
                } = e;
                l.length = 0;
                let c = !1,
                    d = !1,
                    h = !0;
                for (let f in r) {
                    let p = r[f];
                    if (lq(f)) {
                        a[f] = p;
                        continue
                    }
                    let m = l8[f],
                        g = lW(p, m);
                    if (lL.has(f)) {
                        if (c = !0, s[f] = g, l.push(f), !h) continue;
                        p !== (m.default || 0) && (h = !1)
                    } else f.startsWith("origin") ? (d = !0, u[f] = g) : o[f] = g
                }
                if (!r.transform && (c || i ? o.transform = function({
                        transform: e,
                        transformKeys: r
                    }, {
                        enableHardwareAcceleration: n = !0,
                        allowTransformNone: i = !0
                    }, o, a) {
                        let s = "";
                        for (let l of (r.sort(l$), r)) s += `${lU[l]||l}(${e[l]}) `;
                        return n && !e.z && (s += "translateZ(0)"), s = s.trim(), a ? s = a(e, o ? "" : s) : i && o && (s = "none"), s
                    }(e, n, h, i) : o.transform && (o.transform = "none")), d) {
                    let {
                        originX: v = "50%",
                        originY: y = "50%",
                        originZ: b = 0
                    } = u;
                    o.transformOrigin = `${v} ${y} ${b}`
                }
            }
            let ue = () => ({
                style: {},
                transform: {},
                transformKeys: [],
                transformOrigin: {},
                vars: {}
            });

            function ut(e, r, n) {
                for (let i in r) lz(r[i]) || lD(i, n) || (e[i] = r[i])
            }

            function ur(e, r, n) {
                let i = {},
                    o = function(e, r, n) {
                        let i = e.style || {},
                            o = {};
                        return ut(o, i, e), Object.assign(o, function({
                            transformTemplate: e
                        }, r, n) {
                            return (0, Z.useMemo)(() => {
                                let i = ue();
                                return l9(i, r, {
                                    enableHardwareAcceleration: !n
                                }, e), Object.assign({}, i.vars, i.style)
                            }, [r])
                        }(e, r, n)), e.transformValues ? e.transformValues(o) : o
                    }(e, r, n);
                return e.drag && !1 !== e.dragListener && (i.draggable = !1, o.userSelect = o.WebkitUserSelect = o.WebkitTouchCallout = "none", o.touchAction = !0 === e.drag ? "none" : `pan-${"x"===e.drag?"y":"x"}`), i.style = o, i
            }
            let un = new Set(["animate", "exit", "variants", "initial", "style", "values", "variants", "transition", "transformTemplate", "transformValues", "custom", "inherit", "onLayoutAnimationStart", "onLayoutAnimationComplete", "onLayoutMeasure", "onBeforeLayoutMeasure", "onAnimationStart", "onAnimationComplete", "onUpdate", "onDragStart", "onDrag", "onDragEnd", "onMeasureDragConstraints", "onDirectionLock", "onDragTransitionEnd", "_dragX", "_dragY", "onHoverStart", "onHoverEnd", "onViewportEnter", "onViewportLeave", "viewport"]);

            function ui(e) {
                return e.startsWith("while") || e.startsWith("drag") && "draggable" !== e || e.startsWith("layout") || e.startsWith("onTap") || e.startsWith("onPan") || un.has(e)
            }
            let uo = e => !ui(e);
            try {
                (i = require("@emotion/is-prop-valid").default) && (uo = e => e.startsWith("on") ? !ui(e) : i(e))
            } catch (ua) {}

            function us(e, r, n) {
                return "string" == typeof e ? e : l3.transform(r + n * e)
            }
            let ul = {
                    offset: "stroke-dashoffset",
                    array: "stroke-dasharray"
                },
                uu = {
                    offset: "strokeDashoffset",
                    array: "strokeDasharray"
                };

            function uc(e, {
                attrX: r,
                attrY: n,
                originX: i,
                originY: o,
                pathLength: a,
                pathSpacing: s = 1,
                pathOffset: l = 0,
                ...u
            }, c, d, h) {
                if (l9(e, u, c, h), d) {
                    e.style.viewBox && (e.attrs.viewBox = e.style.viewBox);
                    return
                }
                e.attrs = e.style, e.style = {};
                let {
                    attrs: f,
                    style: p,
                    dimensions: m
                } = e;
                f.transform && (m && (p.transform = f.transform), delete f.transform), m && (void 0 !== i || void 0 !== o || p.transform) && (p.transformOrigin = function(e, r, n) {
                    let i = us(r, e.x, e.width),
                        o = us(n, e.y, e.height);
                    return `${i} ${o}`
                }(m, void 0 !== i ? i : .5, void 0 !== o ? o : .5)), void 0 !== r && (f.x = r), void 0 !== n && (f.y = n), void 0 !== a && function(e, r, n = 1, i = 0, o = !0) {
                    e.pathLength = 1;
                    let a = o ? ul : uu;
                    e[a.offset] = l3.transform(-i);
                    let s = l3.transform(r),
                        l = l3.transform(n);
                    e[a.array] = `${s} ${l}`
                }(f, a, s, l, !1)
            }
            let ud = () => ({ ...ue(),
                    attrs: {}
                }),
                uh = e => "string" == typeof e && "svg" === e.toLowerCase();

            function uf(e, r, n, i) {
                let o = (0, Z.useMemo)(() => {
                    let n = ud();
                    return uc(n, r, {
                        enableHardwareAcceleration: !1
                    }, uh(i), e.transformTemplate), { ...n.attrs,
                        style: { ...n.style
                        }
                    }
                }, [r]);
                if (e.style) {
                    let a = {};
                    ut(a, e.style, e), o.style = { ...a,
                        ...o.style
                    }
                }
                return o
            }
            let up = e => e.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();

            function um(e, {
                style: r,
                vars: n
            }, i, o) {
                for (let a in Object.assign(e.style, r, o && o.getProjectionStyles(i)), n) e.style.setProperty(a, n[a])
            }
            let ug = new Set(["baseFrequency", "diffuseConstant", "kernelMatrix", "kernelUnitLength", "keySplines", "keyTimes", "limitingConeAngle", "markerHeight", "markerWidth", "numOctaves", "targetX", "targetY", "surfaceScale", "specularConstant", "specularExponent", "stdDeviation", "tableValues", "viewBox", "gradientTransform", "pathLength", "startOffset", "textLength", "lengthAdjust"]);

            function uv(e, r, n, i) {
                for (let o in um(e, r, void 0, i), r.attrs) e.setAttribute(ug.has(o) ? o : up(o), r.attrs[o])
            }

            function uy(e, r) {
                let {
                    style: n
                } = e, i = {};
                for (let o in n)(lz(n[o]) || r.style && lz(r.style[o]) || lD(o, e)) && (i[o] = n[o]);
                return i
            }

            function ub(e, r) {
                let n = uy(e, r);
                for (let i in e)
                    if (lz(e[i]) || lz(r[i])) {
                        let o = "x" === i || "y" === i ? "attr" + i.toUpperCase() : i;
                        n[o] = e[i]
                    }
                return n
            }

            function uw(e, r, n, i = {}, o = {}) {
                return "function" == typeof r && (r = r(void 0 !== n ? n : e.custom, i, o)), "string" == typeof r && (r = e.variants && e.variants[r]), "function" == typeof r && (r = r(void 0 !== n ? n : e.custom, i, o)), r
            }
            let ux = e => Array.isArray(e),
                uE = e => Boolean(e && "object" == typeof e && e.mix && e.toValue),
                uC = e => ux(e) ? e[e.length - 1] || 0 : e;

            function uA(e) {
                let r = lz(e) ? e.get() : e;
                return uE(r) ? r.toValue() : r
            }
            let uk = e => (r, n) => {
                    let i = (0, Z.useContext)(lp),
                        o = (0, Z.useContext)(ld),
                        a = () => (function({
                            scrapeMotionValuesFromProps: e,
                            createRenderState: r,
                            onMount: n
                        }, i, o, a) {
                            let s = {
                                latestValues: function(e, r, n, i) {
                                    let o = {},
                                        a = i(e, {});
                                    for (let s in a) o[s] = uA(a[s]);
                                    let {
                                        initial: l,
                                        animate: u
                                    } = e, c = lE(e), d = lC(e);
                                    r && d && !c && !1 !== e.inherit && (void 0 === l && (l = r.initial), void 0 === u && (u = r.animate));
                                    let h = !!n && !1 === n.initial;
                                    h = h || !1 === l;
                                    let f = h ? u : l;
                                    if (f && "boolean" != typeof f && !lw(f)) {
                                        let p = Array.isArray(f) ? f : [f];
                                        p.forEach(r => {
                                            let n = uw(e, r);
                                            if (!n) return;
                                            let {
                                                transitionEnd: i,
                                                transition: a,
                                                ...s
                                            } = n;
                                            for (let l in s) {
                                                let u = s[l];
                                                if (Array.isArray(u)) {
                                                    let c = h ? u.length - 1 : 0;
                                                    u = u[c]
                                                }
                                                null !== u && (o[l] = u)
                                            }
                                            for (let d in i) o[d] = i[d]
                                        })
                                    }
                                    return o
                                }(i, o, a, e),
                                renderState: r()
                            };
                            return n && (s.mount = e => n(i, e, s)), s
                        })(e, r, i, o);
                    return n ? a() : l_(a)
                },
                uS = {
                    useVisualState: uk({
                        scrapeMotionValuesFromProps: ub,
                        createRenderState: ud,
                        onMount: (e, r, {
                            renderState: n,
                            latestValues: i
                        }) => {
                            try {
                                n.dimensions = "function" == typeof r.getBBox ? r.getBBox() : r.getBoundingClientRect()
                            } catch (o) {
                                n.dimensions = {
                                    x: 0,
                                    y: 0,
                                    width: 0,
                                    height: 0
                                }
                            }
                            uc(n, i, {
                                enableHardwareAcceleration: !1
                            }, uh(r.tagName), e.transformTemplate), uv(r, n)
                        }
                    })
                },
                u_ = {
                    useVisualState: uk({
                        scrapeMotionValuesFromProps: uy,
                        createRenderState: ue
                    })
                };

            function uP(e, r, n, i = {
                passive: !0
            }) {
                return e.addEventListener(r, n, i), () => e.removeEventListener(r, n)
            }

            function uj(e, r, n, i) {
                (0, Z.useEffect)(() => {
                    let o = e.current;
                    if (n && o) return uP(o, r, n, i)
                }, [e, r, n, i])
            }(o = D || (D = {})).Animate = "animate", o.Hover = "whileHover", o.Tap = "whileTap", o.Drag = "whileDrag", o.Focus = "whileFocus", o.InView = "whileInView", o.Exit = "exit";
            let uT = e => "mouse" === e.pointerType ? "number" != typeof e.button || e.button <= 0 : !1 !== e.isPrimary;

            function uR(e, r = "page") {
                return {
                    point: {
                        x: e[r + "X"],
                        y: e[r + "Y"]
                    }
                }
            }
            let uB = e => r => uT(r) && e(r, uR(r));

            function uO(e, r, n, i) {
                return uP(e, r, uB(n), i)
            }

            function uM(e, r, n, i) {
                return uj(e, r, n && uB(n), i)
            }

            function uI(e) {
                let r = null;
                return () => {
                    let n = () => {
                        r = null
                    };
                    return null === r && (r = e, n)
                }
            }
            let uN = uI("dragHorizontal"),
                uF = uI("dragVertical");

            function uL(e) {
                let r = !1;
                if ("y" === e) r = uF();
                else if ("x" === e) r = uN();
                else {
                    let n = uN(),
                        i = uF();
                    n && i ? r = () => {
                        n(), i()
                    } : (n && n(), i && i())
                }
                return r
            }

            function uD() {
                let e = uL(!0);
                return !e || (e(), !1)
            }

            function uz(e, r, n, i) {
                return (o, a) => {
                    !("touch" === o.type || uD()) && (n && e.animationState && e.animationState.setActive(D.Hover, r), i && i(o, a))
                }
            }
            let uU = (e, r) => !!r && (e === r || uU(e, r.parentElement));

            function u$(e) {
                return (0, Z.useEffect)(() => () => e(), [])
            }
            let uq = (e, r) => n => r(e(n)),
                uW = (...e) => e.reduce(uq),
                uV = new WeakMap,
                uH = new WeakMap,
                uG = e => {
                    let r = uV.get(e.target);
                    r && r(e)
                },
                uK = e => {
                    e.forEach(uG)
                },
                uQ = {
                    some: 0,
                    all: 1
                };

            function uJ(e, r, n, {
                root: i,
                margin: o,
                amount: a = "some",
                once: s
            }) {
                (0, Z.useEffect)(() => {
                    if (!e || !n.current) return;
                    let l = {
                            root: null == i ? void 0 : i.current,
                            rootMargin: o,
                            threshold: "number" == typeof a ? a : uQ[a]
                        },
                        u = e => {
                            let {
                                isIntersecting: i
                            } = e;
                            if (r.isInView === i || (r.isInView = i, s && !i && r.hasEnteredView)) return;
                            i && (r.hasEnteredView = !0), n.animationState && n.animationState.setActive(D.InView, i);
                            let o = n.getProps(),
                                a = i ? o.onViewportEnter : o.onViewportLeave;
                            a && a(e)
                        };
                    return function(e, r, n) {
                        let i = function({
                            root: e,
                            ...r
                        }) {
                            let n = e || document;
                            uH.has(n) || uH.set(n, {});
                            let i = uH.get(n),
                                o = JSON.stringify(r);
                            return i[o] || (i[o] = new IntersectionObserver(uK, {
                                root: e,
                                ...r
                            })), i[o]
                        }(r);
                        return uV.set(e, n), i.observe(e), () => {
                            uV.delete(e), i.unobserve(e)
                        }
                    }(n.current, l, u)
                }, [e, i, o, a])
            }

            function uY(e, r, n, {
                fallback: i = !0
            }) {
                (0, Z.useEffect)(() => {
                    e && i && requestAnimationFrame(() => {
                        r.hasEnteredView = !0;
                        let {
                            onViewportEnter: e
                        } = n.getProps();
                        e && e(null), n.animationState && n.animationState.setActive(D.InView, !0)
                    })
                }, [e])
            }
            let uX = e => r => (e(r), null),
                uZ = {
                    inView: uX(function({
                        visualElement: e,
                        whileInView: r,
                        onViewportEnter: n,
                        onViewportLeave: i,
                        viewport: o = {}
                    }) {
                        let a = (0, Z.useRef)({
                                hasEnteredView: !1,
                                isInView: !1
                            }),
                            s = Boolean(r || n || i);
                        o.once && a.current.hasEnteredView && (s = !1);
                        let l = "undefined" == typeof IntersectionObserver ? uY : uJ;
                        l(s, a.current, e, o)
                    }),
                    tap: uX(function({
                        onTap: e,
                        onTapStart: r,
                        onTapCancel: n,
                        whileTap: i,
                        visualElement: o,
                        ...a
                    }) {
                        let s = (0, Z.useRef)(!1),
                            l = (0, Z.useRef)(null),
                            u = {
                                passive: !(r || e || n || a.onPointerDown)
                            };

                        function c() {
                            l.current && l.current(), l.current = null
                        }

                        function d() {
                            c(), s.current = !1;
                            let e = o.getProps();
                            return e.whileTap && o.animationState && o.animationState.setActive(D.Tap, !1), !uD()
                        }

                        function h(e, r) {
                            var n, i, a, s;
                            d() && (uU(o.current, e.target) ? null === (s = (a = o.getProps()).onTap) || void 0 === s || s.call(a, e, r) : null === (i = (n = o.getProps()).onTapCancel) || void 0 === i || i.call(n, e, r))
                        }

                        function f(e, r) {
                            var n, i;
                            d() && (null === (i = (n = o.getProps()).onTapCancel) || void 0 === i || i.call(n, e, r))
                        }
                        let p = (0, Z.useCallback)((e, r) => {
                            var n;
                            if (c(), s.current) return;
                            s.current = !0, l.current = uW(uO(window, "pointerup", h, u), uO(window, "pointercancel", f, u));
                            let i = o.getProps();
                            i.whileTap && o.animationState && o.animationState.setActive(D.Tap, !0), null === (n = i.onTapStart) || void 0 === n || n.call(i, e, r)
                        }, [Boolean(r), o]);
                        uM(o, "pointerdown", e || r || n || i ? p : void 0, u), u$(c)
                    }),
                    focus: uX(function({
                        whileFocus: e,
                        visualElement: r
                    }) {
                        let {
                            animationState: n
                        } = r, i = (0, Z.useCallback)(() => {
                            n && n.setActive(D.Focus, !0)
                        }, [n]), o = (0, Z.useCallback)(() => {
                            n && n.setActive(D.Focus, !1)
                        }, [n]);
                        uj(r, "focus", e ? i : void 0), uj(r, "blur", e ? o : void 0)
                    }),
                    hover: uX(function({
                        onHoverStart: e,
                        onHoverEnd: r,
                        whileHover: n,
                        visualElement: i
                    }) {
                        uM(i, "pointerenter", (0, Z.useMemo)(() => e || n ? uz(i, !0, Boolean(n), e) : void 0, [e, Boolean(n), i]), {
                            passive: !e
                        }), uM(i, "pointerleave", (0, Z.useMemo)(() => r || n ? uz(i, !1, Boolean(n), r) : void 0, [e, Boolean(n), i]), {
                            passive: !r
                        })
                    })
                };

            function u0(e, r) {
                if (!Array.isArray(r)) return !1;
                let n = r.length;
                if (n !== e.length) return !1;
                for (let i = 0; i < n; i++)
                    if (r[i] !== e[i]) return !1;
                return !0
            }
            let u1 = e => /^\-?\d*\.?\d+$/.test(e),
                u2 = e => /^0[^.\s]+$/.test(e),
                u3 = {
                    delta: 0,
                    timestamp: 0
                },
                u6 = 1 / 60 * 1e3,
                u5 = "undefined" != typeof performance ? () => performance.now() : () => Date.now(),
                u4 = "undefined" != typeof window ? e => window.requestAnimationFrame(e) : e => setTimeout(() => e(u5()), u6),
                u7 = !0,
                u8 = !1,
                u9 = !1,
                ce = ["read", "update", "preRender", "render", "postRender"],
                ct = ce.reduce((e, r) => (e[r] = function(e) {
                    let r = [],
                        n = [],
                        i = 0,
                        o = !1,
                        a = !1,
                        s = new WeakSet,
                        l = {
                            schedule: (e, a = !1, l = !1) => {
                                let u = l && o,
                                    c = u ? r : n;
                                return a && s.add(e), -1 === c.indexOf(e) && (c.push(e), u && o && (i = r.length)), e
                            },
                            cancel: e => {
                                let r = n.indexOf(e); - 1 !== r && n.splice(r, 1), s.delete(e)
                            },
                            process: u => {
                                if (o) {
                                    a = !0;
                                    return
                                }
                                if (o = !0, [r, n] = [n, r], n.length = 0, i = r.length)
                                    for (let c = 0; c < i; c++) {
                                        let d = r[c];
                                        d(u), s.has(d) && (l.schedule(d), e())
                                    }
                                o = !1, a && (a = !1, l.process(u))
                            }
                        };
                    return l
                }(() => u8 = !0), e), {}),
                cr = ce.reduce((e, r) => {
                    let n = ct[r];
                    return e[r] = (e, r = !1, i = !1) => (u8 || cs(), n.schedule(e, r, i)), e
                }, {}),
                cn = ce.reduce((e, r) => (e[r] = ct[r].cancel, e), {}),
                ci = ce.reduce((e, r) => (e[r] = () => ct[r].process(u3), e), {}),
                co = e => ct[e].process(u3),
                ca = e => {
                    u8 = !1, u3.delta = u7 ? u6 : Math.max(Math.min(e - u3.timestamp, 40), 1), u3.timestamp = e, u9 = !0, ce.forEach(co), u9 = !1, u8 && (u7 = !1, u4(ca))
                },
                cs = () => {
                    u8 = !0, u7 = !0, u9 || u4(ca)
                };

            function cl(e, r) {
                -1 === e.indexOf(r) && e.push(r)
            }

            function cu(e, r) {
                let n = e.indexOf(r);
                n > -1 && e.splice(n, 1)
            }
            class cc {
                constructor() {
                    this.subscriptions = []
                }
                add(e) {
                    return cl(this.subscriptions, e), () => cu(this.subscriptions, e)
                }
                notify(e, r, n) {
                    let i = this.subscriptions.length;
                    if (i) {
                        if (1 === i) this.subscriptions[0](e, r, n);
                        else
                            for (let o = 0; o < i; o++) {
                                let a = this.subscriptions[o];
                                a && a(e, r, n)
                            }
                    }
                }
                getSize() {
                    return this.subscriptions.length
                }
                clear() {
                    this.subscriptions.length = 0
                }
            }

            function cd(e, r) {
                return r ? e * (1e3 / r) : 0
            }
            let ch = e => !isNaN(parseFloat(e));
            class cf {
                constructor(e, r = {}) {
                    this.version = "8.5.5", this.timeDelta = 0, this.lastUpdated = 0, this.canTrackVelocity = !1, this.events = {}, this.updateAndNotify = (e, r = !0) => {
                        this.prev = this.current, this.current = e;
                        let {
                            delta: n,
                            timestamp: i
                        } = u3;
                        this.lastUpdated !== i && (this.timeDelta = n, this.lastUpdated = i, cr.postRender(this.scheduleVelocityCheck)), this.prev !== this.current && this.events.change && this.events.change.notify(this.current), this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()), r && this.events.renderRequest && this.events.renderRequest.notify(this.current)
                    }, this.scheduleVelocityCheck = () => cr.postRender(this.velocityCheck), this.velocityCheck = ({
                        timestamp: e
                    }) => {
                        e !== this.lastUpdated && (this.prev = this.current, this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()))
                    }, this.hasAnimated = !1, this.prev = this.current = e, this.canTrackVelocity = ch(this.current), this.owner = r.owner
                }
                onChange(e) {
                    return this.on("change", e)
                }
                on(e, r) {
                    this.events[e] || (this.events[e] = new cc);
                    let n = this.events[e].add(r);
                    return "change" === e ? () => {
                        n(), cr.read(() => {
                            this.events.change.getSize() || this.stop()
                        })
                    } : n
                }
                clearListeners() {
                    for (let e in this.events) this.events[e].clear()
                }
                attach(e, r) {
                    this.passiveEffect = e, this.stopPassiveEffect = r
                }
                set(e, r = !0) {
                    r && this.passiveEffect ? this.passiveEffect(e, this.updateAndNotify) : this.updateAndNotify(e, r)
                }
                setWithVelocity(e, r, n) {
                    this.set(r), this.prev = e, this.timeDelta = n
                }
                jump(e) {
                    this.updateAndNotify(e), this.prev = e, this.stop(), this.stopPassiveEffect && this.stopPassiveEffect()
                }
                get() {
                    return this.current
                }
                getPrevious() {
                    return this.prev
                }
                getVelocity() {
                    return this.canTrackVelocity ? cd(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0
                }
                start(e) {
                    return this.stop(), new Promise(r => {
                        this.hasAnimated = !0, this.animation = e(r) || null, this.events.animationStart && this.events.animationStart.notify()
                    }).then(() => {
                        this.events.animationComplete && this.events.animationComplete.notify(), this.clearAnimation()
                    })
                }
                stop() {
                    this.animation && (this.animation.stop(), this.events.animationCancel && this.events.animationCancel.notify()), this.clearAnimation()
                }
                isAnimating() {
                    return !!this.animation
                }
                clearAnimation() {
                    this.animation = null
                }
                destroy() {
                    this.clearListeners(), this.stop(), this.stopPassiveEffect && this.stopPassiveEffect()
                }
            }

            function cp(e, r) {
                return new cf(e, r)
            }
            let cm = (e, r) => n => Boolean(lZ(n) && lX.test(n) && n.startsWith(e) || r && Object.prototype.hasOwnProperty.call(n, r)),
                cg = (e, r, n) => i => {
                    if (!lZ(i)) return i;
                    let [o, a, s, l] = i.match(lJ);
                    return {
                        [e]: parseFloat(o),
                        [r]: parseFloat(a),
                        [n]: parseFloat(s),
                        alpha: void 0 !== l ? parseFloat(l) : 1
                    }
                },
                cv = e => lV(0, 255, e),
                cy = { ...lH,
                    transform: e => Math.round(cv(e))
                },
                cb = {
                    test: cm("rgb", "red"),
                    parse: cg("red", "green", "blue"),
                    transform: ({
                        red: e,
                        green: r,
                        blue: n,
                        alpha: i = 1
                    }) => "rgba(" + cy.transform(e) + ", " + cy.transform(r) + ", " + cy.transform(n) + ", " + lQ(lG.transform(i)) + ")"
                },
                cw = {
                    test: cm("#"),
                    parse: function(e) {
                        let r = "",
                            n = "",
                            i = "",
                            o = "";
                        return e.length > 5 ? (r = e.substring(1, 3), n = e.substring(3, 5), i = e.substring(5, 7), o = e.substring(7, 9)) : (r = e.substring(1, 2), n = e.substring(2, 3), i = e.substring(3, 4), o = e.substring(4, 5), r += r, n += n, i += i, o += o), {
                            red: parseInt(r, 16),
                            green: parseInt(n, 16),
                            blue: parseInt(i, 16),
                            alpha: o ? parseInt(o, 16) / 255 : 1
                        }
                    },
                    transform: cb.transform
                },
                cx = {
                    test: cm("hsl", "hue"),
                    parse: cg("hue", "saturation", "lightness"),
                    transform: ({
                        hue: e,
                        saturation: r,
                        lightness: n,
                        alpha: i = 1
                    }) => "hsla(" + Math.round(e) + ", " + l2.transform(lQ(r)) + ", " + l2.transform(lQ(n)) + ", " + lQ(lG.transform(i)) + ")"
                },
                cE = {
                    test: e => cb.test(e) || cw.test(e) || cx.test(e),
                    parse: e => cb.test(e) ? cb.parse(e) : cx.test(e) ? cx.parse(e) : cw.parse(e),
                    transform: e => lZ(e) ? e : e.hasOwnProperty("red") ? cb.transform(e) : cx.transform(e)
                },
                cC = "${c}",
                cA = "${n}";

            function ck(e) {
                "number" == typeof e && (e = `${e}`);
                let r = [],
                    n = 0,
                    i = 0,
                    o = e.match(lY);
                o && (n = o.length, e = e.replace(lY, cC), r.push(...o.map(cE.parse)));
                let a = e.match(lJ);
                return a && (i = a.length, e = e.replace(lJ, cA), r.push(...a.map(lH.parse))), {
                    values: r,
                    numColors: n,
                    numNumbers: i,
                    tokenised: e
                }
            }

            function cS(e) {
                return ck(e).values
            }

            function c_(e) {
                let {
                    values: r,
                    numColors: n,
                    tokenised: i
                } = ck(e), o = r.length;
                return e => {
                    let r = i;
                    for (let a = 0; a < o; a++) r = r.replace(a < n ? cC : cA, a < n ? cE.transform(e[a]) : lQ(e[a]));
                    return r
                }
            }
            let cP = e => "number" == typeof e ? 0 : e,
                cj = {
                    test: function(e) {
                        var r, n;
                        return isNaN(e) && lZ(e) && ((null === (r = e.match(lJ)) || void 0 === r ? void 0 : r.length) || 0) + ((null === (n = e.match(lY)) || void 0 === n ? void 0 : n.length) || 0) > 0
                    },
                    parse: cS,
                    createTransformer: c_,
                    getAnimatableNone: function(e) {
                        let r = cS(e),
                            n = c_(e);
                        return n(r.map(cP))
                    }
                },
                cT = new Set(["brightness", "contrast", "saturate", "opacity"]);

            function cR(e) {
                let [r, n] = e.slice(0, -1).split("(");
                if ("drop-shadow" === r) return e;
                let [i] = n.match(lJ) || [];
                if (!i) return e;
                let o = n.replace(i, ""),
                    a = cT.has(r) ? 1 : 0;
                return i !== n && (a *= 100), r + "(" + a + o + ")"
            }
            let cB = /([a-z-]*)\(.*?\)/g,
                cO = { ...cj,
                    getAnimatableNone: e => {
                        let r = e.match(cB);
                        return r ? r.map(cR).join(" ") : e
                    }
                },
                cM = { ...l8,
                    color: cE,
                    backgroundColor: cE,
                    outlineColor: cE,
                    fill: cE,
                    stroke: cE,
                    borderColor: cE,
                    borderTopColor: cE,
                    borderRightColor: cE,
                    borderBottomColor: cE,
                    borderLeftColor: cE,
                    filter: cO,
                    WebkitFilter: cO
                },
                cI = e => cM[e];

            function cN(e, r) {
                var n;
                let i = cI(e);
                return i !== cO && (i = cj), null === (n = i.getAnimatableNone) || void 0 === n ? void 0 : n.call(i, r)
            }
            let cF = e => r => r.test(e),
                cL = [lH, l3, l2, l1, l5, l6, {
                    test: e => "auto" === e,
                    parse: e => e
                }],
                cD = e => cL.find(cF(e)),
                cz = [...cL, cE, cj],
                cU = e => cz.find(cF(e));

            function c$(e, r, n) {
                let i = e.getProps();
                return uw(i, r, void 0 !== n ? n : i.custom, function(e) {
                    let r = {};
                    return e.values.forEach((e, n) => r[n] = e.get()), r
                }(e), function(e) {
                    let r = {};
                    return e.values.forEach((e, n) => r[n] = e.getVelocity()), r
                }(e))
            }

            function cq(e) {
                return Boolean(lz(e) && e.add)
            }
            let cW = "data-" + up("framerAppearId");
            var cV = function() {},
                cH = function() {};
            let cG = e => 1e3 * e,
                cK = {
                    current: !1
                },
                cQ = e => r => r <= .5 ? e(2 * r) / 2 : (2 - e(2 * (1 - r))) / 2,
                cJ = e => r => 1 - e(1 - r),
                cY = e => e * e,
                cX = cJ(cY),
                cZ = cQ(cY),
                c0 = (e, r, n) => -n * e + n * r + e;

            function c1(e, r, n) {
                return (n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6) ? e + (r - e) * 6 * n : n < .5 ? r : n < 2 / 3 ? e + (r - e) * (2 / 3 - n) * 6 : e
            }
            let c2 = (e, r, n) => {
                    let i = e * e;
                    return Math.sqrt(Math.max(0, n * (r * r - i) + i))
                },
                c3 = [cw, cb, cx],
                c6 = e => c3.find(r => r.test(e));

            function c5(e) {
                let r = c6(e);
                cH(Boolean(r), `'${e}' is not an animatable color. Use the equivalent color code instead.`);
                let n = r.parse(e);
                return r === cx && (n = function({
                    hue: e,
                    saturation: r,
                    lightness: n,
                    alpha: i
                }) {
                    e /= 360, n /= 100;
                    let o = 0,
                        a = 0,
                        s = 0;
                    if (r /= 100) {
                        let l = n < .5 ? n * (1 + r) : n + r - n * r,
                            u = 2 * n - l;
                        o = c1(u, l, e + 1 / 3), a = c1(u, l, e), s = c1(u, l, e - 1 / 3)
                    } else o = a = s = n;
                    return {
                        red: Math.round(255 * o),
                        green: Math.round(255 * a),
                        blue: Math.round(255 * s),
                        alpha: i
                    }
                }(n)), n
            }
            let c4 = (e, r) => {
                let n = c5(e),
                    i = c5(r),
                    o = { ...n
                    };
                return e => (o.red = c2(n.red, i.red, e), o.green = c2(n.green, i.green, e), o.blue = c2(n.blue, i.blue, e), o.alpha = c0(n.alpha, i.alpha, e), cb.transform(o))
            };

            function c7(e, r) {
                return "number" == typeof e ? n => c0(e, r, n) : cE.test(e) ? c4(e, r) : de(e, r)
            }
            let c8 = (e, r) => {
                    let n = [...e],
                        i = n.length,
                        o = e.map((e, n) => c7(e, r[n]));
                    return e => {
                        for (let r = 0; r < i; r++) n[r] = o[r](e);
                        return n
                    }
                },
                c9 = (e, r) => {
                    let n = { ...e,
                            ...r
                        },
                        i = {};
                    for (let o in n) void 0 !== e[o] && void 0 !== r[o] && (i[o] = c7(e[o], r[o]));
                    return e => {
                        for (let r in i) n[r] = i[r](e);
                        return n
                    }
                },
                de = (e, r) => {
                    let n = cj.createTransformer(r),
                        i = ck(e),
                        o = ck(r),
                        a = i.numColors === o.numColors && i.numNumbers >= o.numNumbers;
                    return a ? uW(c8(i.values, o.values), n) : (cV(!0, `Complex values '${e}' and '${r}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`), n => `${n>0?r:e}`)
                },
                dt = (e, r, n) => {
                    let i = r - e;
                    return 0 === i ? 1 : (n - e) / i
                },
                dr = (e, r) => n => c0(e, r, n);

            function dn(e, r, {
                clamp: n = !0,
                ease: i,
                mixer: o
            } = {}) {
                let a = e.length;
                cH(a === r.length, "Both input and output ranges must be the same length"), cH(!i || !Array.isArray(i) || i.length === a - 1, "Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values."), e[0] > e[a - 1] && (e = [...e].reverse(), r = [...r].reverse());
                let s = function(e, r, n) {
                        let i = [],
                            o = n || function(e) {
                                if ("number" == typeof e);
                                else if ("string" == typeof e) return cE.test(e) ? c4 : de;
                                else if (Array.isArray(e)) return c8;
                                else if ("object" == typeof e) return c9;
                                return dr
                            }(e[0]),
                            a = e.length - 1;
                        for (let s = 0; s < a; s++) {
                            let l = o(e[s], e[s + 1]);
                            if (r) {
                                let u = Array.isArray(r) ? r[s] : r;
                                l = uW(u, l)
                            }
                            i.push(l)
                        }
                        return i
                    }(r, i, o),
                    l = s.length,
                    u = r => {
                        let n = 0;
                        if (l > 1)
                            for (; n < e.length - 2 && !(r < e[n + 1]); n++);
                        let i = dt(e[n], e[n + 1], r);
                        return s[n](i)
                    };
                return n ? r => u(lV(e[0], e[a - 1], r)) : u
            }
            let di = e => e,
                da = (e, r, n) => (((1 - 3 * n + 3 * r) * e + (3 * n - 6 * r)) * e + 3 * r) * e;

            function ds(e, r, n, i) {
                if (e === r && n === i) return di;
                let o = r => (function(e, r, n, i, o) {
                    let a, s;
                    let l = 0;
                    do(a = da(s = r + (n - r) / 2, i, o) - e) > 0 ? n = s : r = s; while (Math.abs(a) > 1e-7 && ++l < 12);
                    return s
                })(r, 0, 1, e, n);
                return e => 0 === e || 1 === e ? e : da(o(e), r, i)
            }
            let dl = e => 1 - Math.sin(Math.acos(e)),
                du = cJ(dl),
                dc = cQ(du),
                dd = ds(.33, 1.53, .69, .99),
                dh = cJ(dd),
                df = cQ(dh),
                dp = e => (e *= 2) < 1 ? .5 * dh(e) : .5 * (2 - Math.pow(2, -10 * (e - 1))),
                dm = {
                    linear: di,
                    easeIn: cY,
                    easeInOut: cZ,
                    easeOut: cX,
                    circIn: dl,
                    circInOut: dc,
                    circOut: du,
                    backIn: dh,
                    backInOut: df,
                    backOut: dd,
                    anticipate: dp
                },
                dg = e => {
                    if (Array.isArray(e)) {
                        cH(4 === e.length, "Cubic bezier arrays must contain four numerical values.");
                        let [r, n, i, o] = e;
                        return ds(r, n, i, o)
                    }
                    return "string" == typeof e ? (cH(void 0 !== dm[e], `Invalid easing type '${e}'`), dm[e]) : e
                },
                dv = e => Array.isArray(e) && "number" != typeof e[0];

            function dy({
                keyframes: e,
                ease: r = cZ,
                times: n,
                duration: i = 300
            }) {
                e = [...e];
                let o = dv(r) ? r.map(dg) : dg(r),
                    a = {
                        done: !1,
                        value: e[0]
                    },
                    s = (n && n.length === e.length ? n : function(e) {
                        let r = e.length;
                        return e.map((e, n) => 0 !== n ? n / (r - 1) : 0)
                    }(e)).map(e => e * i);

                function l() {
                    var r;
                    return dn(s, e, {
                        ease: Array.isArray(o) ? o : (r = e).map(() => o || cZ).splice(0, r.length - 1)
                    })
                }
                let u = l();
                return {
                    next: e => (a.value = u(e), a.done = e >= i, a),
                    flipTarget: () => {
                        e.reverse(), u = l()
                    }
                }
            }

            function db(e, r) {
                return e * Math.sqrt(1 - r * r)
            }
            let dw = ["duration", "bounce"],
                dx = ["stiffness", "damping", "mass"];

            function dE(e, r) {
                return r.some(r => void 0 !== e[r])
            }

            function dC({
                keyframes: e,
                restDelta: r,
                restSpeed: n,
                ...i
            }) {
                let o = e[0],
                    a = e[e.length - 1],
                    s = {
                        done: !1,
                        value: o
                    },
                    {
                        stiffness: l,
                        damping: u,
                        mass: c,
                        velocity: d,
                        duration: h,
                        isResolvedFromDuration: f
                    } = function(e) {
                        let r = {
                            velocity: 0,
                            stiffness: 100,
                            damping: 10,
                            mass: 1,
                            isResolvedFromDuration: !1,
                            ...e
                        };
                        if (!dE(e, dx) && dE(e, dw)) {
                            let n = function({
                                duration: e = 800,
                                bounce: r = .25,
                                velocity: n = 0,
                                mass: i = 1
                            }) {
                                let o, a;
                                cV(e <= 1e4, "Spring duration must be 10 seconds or less");
                                let s = 1 - r;
                                s = lV(.05, 1, s), e = lV(.01, 10, e / 1e3), s < 1 ? (o = r => {
                                    let i = r * s,
                                        o = i * e,
                                        a = db(r, s);
                                    return .001 - (i - n) / a * Math.exp(-o)
                                }, a = r => {
                                    let i = r * s,
                                        a = i * e,
                                        l = Math.pow(s, 2) * Math.pow(r, 2) * e,
                                        u = db(Math.pow(r, 2), s),
                                        c = -o(r) + .001 > 0 ? -1 : 1;
                                    return c * ((a * n + n - l) * Math.exp(-a)) / u
                                }) : (o = r => {
                                    let i = Math.exp(-r * e),
                                        o = (r - n) * e + 1;
                                    return -.001 + i * o
                                }, a = r => {
                                    let i = Math.exp(-r * e),
                                        o = (n - r) * (e * e);
                                    return i * o
                                });
                                let l = 5 / e,
                                    u = function(e, r, n) {
                                        let i = n;
                                        for (let o = 1; o < 12; o++) i -= e(i) / r(i);
                                        return i
                                    }(o, a, l);
                                if (e *= 1e3, isNaN(u)) return {
                                    stiffness: 100,
                                    damping: 10,
                                    duration: e
                                }; {
                                    let c = Math.pow(u, 2) * i;
                                    return {
                                        stiffness: c,
                                        damping: 2 * s * Math.sqrt(i * c),
                                        duration: e
                                    }
                                }
                            }(e);
                            (r = { ...r,
                                ...n,
                                velocity: 0,
                                mass: 1
                            }).isResolvedFromDuration = !0
                        }
                        return r
                    }(i),
                    p = dA,
                    m = d ? -(d / 1e3) : 0,
                    g = u / (2 * Math.sqrt(l * c));

                function v() {
                    let e = a - o,
                        i = Math.sqrt(l / c) / 1e3,
                        s = 5 > Math.abs(e);
                    if (n || (n = s ? .01 : 2), r || (r = s ? .005 : .5), g < 1) {
                        let u = db(i, g);
                        p = r => a - Math.exp(-g * i * r) * ((m + g * i * e) / u * Math.sin(u * r) + e * Math.cos(u * r))
                    } else if (1 === g) p = r => a - Math.exp(-i * r) * (e + (m + i * e) * r);
                    else {
                        let d = i * Math.sqrt(g * g - 1);
                        p = r => {
                            let n = Math.min(d * r, 300);
                            return a - Math.exp(-g * i * r) * ((m + g * i * e) * Math.sinh(n) + d * e * Math.cosh(n)) / d
                        }
                    }
                }
                return v(), {
                    next: e => {
                        let i = p(e);
                        if (f) s.done = e >= h;
                        else {
                            let o = m;
                            if (0 !== e) {
                                if (g < 1) {
                                    let l = Math.max(0, e - 5);
                                    o = cd(i - p(l), e - l)
                                } else o = 0
                            }
                            let u = Math.abs(o) <= n,
                                c = Math.abs(a - i) <= r;
                            s.done = u && c
                        }
                        return s.value = s.done ? a : i, s
                    },
                    flipTarget: () => {
                        m = -m, [o, a] = [a, o], v()
                    }
                }
            }
            dC.needsInterpolation = (e, r) => "string" == typeof e || "string" == typeof r;
            let dA = e => 0,
                dk = {
                    decay: function({
                        keyframes: e = [0],
                        velocity: r = 0,
                        power: n = .8,
                        timeConstant: i = 350,
                        restDelta: o = .5,
                        modifyTarget: a
                    }) {
                        let s = e[0],
                            l = {
                                done: !1,
                                value: s
                            },
                            u = n * r,
                            c = s + u,
                            d = void 0 === a ? c : a(c);
                        return d !== c && (u = d - s), {
                            next: e => {
                                let r = -u * Math.exp(-e / i);
                                return l.done = !(r > o || r < -o), l.value = l.done ? d : d + r, l
                            },
                            flipTarget: () => {}
                        }
                    },
                    keyframes: dy,
                    tween: dy,
                    spring: dC
                };

            function dS(e, r, n = 0) {
                return e - r - n
            }
            let d_ = e => {
                let r = ({
                    delta: r
                }) => e(r);
                return {
                    start: () => cr.update(r, !0),
                    stop: () => cn.update(r)
                }
            };

            function dP({
                duration: e,
                driver: r = d_,
                elapsed: n = 0,
                repeat: i = 0,
                repeatType: o = "loop",
                repeatDelay: a = 0,
                keyframes: s,
                autoplay: l = !0,
                onPlay: u,
                onStop: c,
                onComplete: d,
                onRepeat: h,
                onUpdate: f,
                type: p = "keyframes",
                ...m
            }) {
                var g;
                let v, y;
                let b = n,
                    w = 0,
                    x = e,
                    E = !1,
                    C = !0,
                    A = dk[s.length > 2 ? "keyframes" : p] || dy,
                    k = s[0],
                    S = s[s.length - 1],
                    _ = {
                        done: !1,
                        value: k
                    };
                (null === (g = A.needsInterpolation) || void 0 === g ? void 0 : g.call(A, k, S)) && (y = dn([0, 100], [k, S], {
                    clamp: !1
                }), s = [0, 100]);
                let P = A({ ...m,
                    duration: e,
                    keyframes: s
                });

                function j(e) {
                    if (C || (e = -e), n += e, E || (_ = P.next(Math.max(0, n)), y && (_.value = y(_.value)), E = C ? _.done : n <= 0), f && f(_.value), E) {
                        if (0 === w && (x = void 0 !== x ? x : n), w < i) {
                            var r, s;
                            r = n, s = x, (C ? r >= s + a : r <= -a) && (w++, "reverse" === o ? n = function(e, r = 0, n = 0, i = !0) {
                                return i ? dS(r + -e, r, n) : r - (e - r) + n
                            }(n, x, a, C = w % 2 == 0) : (n = dS(n, x, a), "mirror" === o && P.flipTarget()), E = !1, h && h())
                        } else v && v.stop(), d && d()
                    }
                }
                return l && (u && u(), (v = r(j)).start()), {
                    stop: () => {
                        c && c(), v && v.stop()
                    },
                    set currentTime(t) {
                        n = b, j(t)
                    },
                    sample: r => {
                        n = b;
                        let i = e && "number" == typeof e ? Math.max(.5 * e, 50) : 50,
                            o = 0;
                        for (j(0); o <= r;) {
                            let a = r - o;
                            j(Math.min(a, i)), o += i
                        }
                        return _
                    }
                }
            }
            let dj = ([e, r, n, i]) => `cubic-bezier(${e}, ${r}, ${n}, ${i})`,
                dT = {
                    linear: "linear",
                    ease: "ease",
                    easeIn: "ease-in",
                    easeOut: "ease-out",
                    easeInOut: "ease-in-out",
                    circIn: dj([0, .65, .55, 1]),
                    circOut: dj([.55, 0, 1, .45]),
                    backIn: dj([.31, .01, .66, -.59]),
                    backOut: dj([.33, 1.53, .69, .99])
                },
                dR = {
                    waapi: () => Object.hasOwnProperty.call(Element.prototype, "animate")
                },
                dB = {},
                dO = {};
            for (let dM in dR) dO[dM] = () => (void 0 === dB[dM] && (dB[dM] = dR[dM]()), dB[dM]);
            let dI = new Set(["opacity"]);

            function dN(e, r) {
                let n = performance.now(),
                    i = ({
                        timestamp: o
                    }) => {
                        let a = o - n;
                        a >= r && (cn.read(i), e(a - r))
                    };
                return cr.read(i, !0), () => cn.read(i)
            }
            let dF = () => ({
                    type: "spring",
                    stiffness: 500,
                    damping: 25,
                    restSpeed: 10
                }),
                dL = e => ({
                    type: "spring",
                    stiffness: 550,
                    damping: 0 === e ? 2 * Math.sqrt(550) : 30,
                    restSpeed: 10
                }),
                dD = () => ({
                    type: "keyframes",
                    ease: "linear",
                    duration: .3
                }),
                dz = {
                    type: "keyframes",
                    duration: .8
                },
                dU = {
                    x: dF,
                    y: dF,
                    z: dF,
                    rotate: dF,
                    rotateX: dF,
                    rotateY: dF,
                    rotateZ: dF,
                    scaleX: dL,
                    scaleY: dL,
                    scale: dL,
                    opacity: dD,
                    backgroundColor: dD,
                    color: dD,
                    default: dL
                },
                d$ = (e, {
                    keyframes: r
                }) => {
                    if (r.length > 2) return dz; {
                        let n = dU[e] || dU.default;
                        return n(r[1])
                    }
                },
                dq = (e, r) => "zIndex" !== e && !!("number" == typeof r || Array.isArray(r) || "string" == typeof r && cj.test(r) && !r.startsWith("url("));

            function dW(e) {
                return 0 === e || "string" == typeof e && 0 === parseFloat(e) && -1 === e.indexOf(" ")
            }

            function dV(e) {
                return "number" == typeof e ? 0 : cN("", e)
            }

            function dH(e, r) {
                return e[r] || e.default || e
            }
            let dG = (e, r, n, i = {}) => o => {
                let a = dH(i, e) || {},
                    s = a.delay || i.delay || 0,
                    {
                        elapsed: l = 0
                    } = i;
                l -= cG(s);
                let u = function(e, r, n, i) {
                        let o = dq(r, n),
                            a = void 0 !== i.from ? i.from : e.get();
                        return ("none" === a && o && "string" == typeof n ? a = cN(r, n) : dW(a) && "string" == typeof n ? a = dV(n) : !Array.isArray(n) && dW(n) && "string" == typeof a && (n = dV(a)), Array.isArray(n)) ? (null === n[0] && (n[0] = a), n) : [a, n]
                    }(r, e, n, a),
                    c = u[0],
                    d = u[u.length - 1],
                    h = dq(e, c),
                    f = dq(e, d);
                cV(h === f, `You are trying to animate ${e} from "${c}" to "${d}". ${c} is not an animatable value - to enable this animation set ${c} to a value animatable to ${d} via the \`style\` property.`);
                let p = {
                    keyframes: u,
                    velocity: r.getVelocity(),
                    ...a,
                    elapsed: l,
                    onUpdate: e => {
                        r.set(e), a.onUpdate && a.onUpdate(e)
                    },
                    onComplete: () => {
                        o(), a.onComplete && a.onComplete()
                    }
                };
                if (!h || !f || cK.current || !1 === a.type) return function({
                    keyframes: e,
                    elapsed: r,
                    onUpdate: n,
                    onComplete: i
                }) {
                    let o = () => {
                        n && n(e[e.length - 1]), i && i()
                    };
                    return r ? {
                        stop: dN(o, -r)
                    } : o()
                }(p);
                if ("inertia" === a.type) return function({
                    keyframes: e,
                    velocity: r = 0,
                    min: n,
                    max: i,
                    power: o = .8,
                    timeConstant: a = 750,
                    bounceStiffness: s = 500,
                    bounceDamping: l = 10,
                    restDelta: u = 1,
                    modifyTarget: c,
                    driver: d,
                    onUpdate: h,
                    onComplete: f,
                    onStop: p
                }) {
                    let m;
                    let g = e[0];

                    function v(e) {
                        return void 0 !== n && e < n || void 0 !== i && e > i
                    }

                    function y(e) {
                        return void 0 === n ? i : void 0 === i ? n : Math.abs(n - e) < Math.abs(i - e) ? n : i
                    }

                    function b(e) {
                        null == m || m.stop(), m = dP({
                            keyframes: [0, 1],
                            velocity: 0,
                            ...e,
                            driver: d,
                            onUpdate: r => {
                                var n;
                                null == h || h(r), null === (n = e.onUpdate) || void 0 === n || n.call(e, r)
                            },
                            onComplete: f,
                            onStop: p
                        })
                    }

                    function w(e) {
                        b({
                            type: "spring",
                            stiffness: s,
                            damping: l,
                            restDelta: u,
                            ...e
                        })
                    }
                    if (v(g)) w({
                        velocity: r,
                        keyframes: [g, y(g)]
                    });
                    else {
                        let x, E, C = o * r + g;
                        void 0 !== c && (C = c(C));
                        let A = y(C),
                            k = A === n ? -1 : 1,
                            S = e => {
                                x = E, E = e, r = cd(e - x, u3.delta), (1 === k && e > A || -1 === k && e < A) && w({
                                    keyframes: [e, A],
                                    velocity: r
                                })
                            };
                        b({
                            type: "decay",
                            keyframes: [g, 0],
                            velocity: r,
                            timeConstant: a,
                            power: o,
                            restDelta: u,
                            modifyTarget: c,
                            onUpdate: v(C) ? S : void 0
                        })
                    }
                    return {
                        stop: () => null == m ? void 0 : m.stop()
                    }
                }(p);
                ! function({
                    when: e,
                    delay: r,
                    delayChildren: n,
                    staggerChildren: i,
                    staggerDirection: o,
                    repeat: a,
                    repeatType: s,
                    repeatDelay: l,
                    from: u,
                    elapsed: c,
                    ...d
                }) {
                    return !!Object.keys(d).length
                }(a) && (p = { ...p,
                    ...d$(e, p)
                }), p.duration && (p.duration = cG(p.duration)), p.repeatDelay && (p.repeatDelay = cG(p.repeatDelay));
                let m = r.owner,
                    g = m && m.current;
                if (m && g instanceof HTMLElement && !(null == m ? void 0 : m.getProps().onUpdate)) {
                    let v = function(e, r, {
                        onUpdate: n,
                        onComplete: i,
                        ...o
                    }) {
                        var a;
                        let s = dO.waapi() && dI.has(r) && !o.repeatDelay && "mirror" !== o.repeatType && 0 !== o.damping;
                        if (!s) return !1;
                        let {
                            keyframes: l,
                            duration: u = 300,
                            elapsed: c = 0,
                            ease: d
                        } = o;
                        if ("spring" === o.type || !(!(a = o.ease) || Array.isArray(a) || "string" == typeof a && dT[a])) {
                            if (o.repeat === 1 / 0) return;
                            let h = dP({ ...o,
                                    elapsed: 0
                                }),
                                f = {
                                    done: !1,
                                    value: l[0]
                                },
                                p = [],
                                m = 0;
                            for (; !f.done && m < 2e4;) p.push((f = h.sample(m)).value), m += 10;
                            l = p, u = m - 10, d = "linear"
                        }
                        let g = function(e, r, n, {
                            delay: i = 0,
                            duration: o,
                            repeat: a = 0,
                            repeatType: s = "loop",
                            ease: l,
                            times: u
                        } = {}) {
                            return e.animate({
                                [r]: n,
                                offset: u
                            }, {
                                delay: i,
                                duration: o,
                                easing: function(e) {
                                    if (e) return Array.isArray(e) ? dj(e) : dT[e]
                                }(l),
                                fill: "both",
                                iterations: a + 1,
                                direction: "reverse" === s ? "alternate" : "normal"
                            })
                        }(e.owner.current, r, l, { ...o,
                            delay: -c,
                            duration: u,
                            ease: d
                        });
                        return g.onfinish = () => {
                            e.set(function(e, {
                                repeat: r,
                                repeatType: n = "loop"
                            }) {
                                let i = r && "loop" !== n && r % 2 == 1 ? 0 : e.length - 1;
                                return e[i]
                            }(l, o)), cr.update(() => g.cancel()), i && i()
                        }, {
                            get currentTime() {
                                return g.currentTime || 0
                            },
                            set currentTime(t) {
                                g.currentTime = t
                            },
                            stop: () => {
                                let {
                                    currentTime: r
                                } = g;
                                if (r) {
                                    let n = dP({ ...o,
                                        autoplay: !1
                                    });
                                    e.setWithVelocity(n.sample(r - 10).value, n.sample(r).value, 10)
                                }
                                cr.update(() => g.cancel())
                            }
                        }
                    }(r, e, p);
                    if (v) return v
                }
                return dP(p)
            };

            function dK(e, r, n = {}) {
                var i;
                let o = c$(e, r, n.custom),
                    {
                        transition: a = e.getDefaultTransition() || {}
                    } = o || {};
                n.transitionOverride && (a = n.transitionOverride);
                let s = o ? () => dQ(e, o, n) : () => Promise.resolve(),
                    l = (null === (i = e.variantChildren) || void 0 === i ? void 0 : i.size) ? (i = 0) => {
                        let {
                            delayChildren: o = 0,
                            staggerChildren: s,
                            staggerDirection: l
                        } = a;
                        return function(e, r, n = 0, i = 0, o = 1, a) {
                            let s = [],
                                l = (e.variantChildren.size - 1) * i,
                                u = 1 === o ? (e = 0) => e * i : (e = 0) => l - e * i;
                            return Array.from(e.variantChildren).sort(dJ).forEach((e, i) => {
                                e.notify("AnimationStart", r), s.push(dK(e, r, { ...a,
                                    delay: n + u(i)
                                }).then(() => e.notify("AnimationComplete", r)))
                            }), Promise.all(s)
                        }(e, r, o + i, s, l, n)
                    } : () => Promise.resolve(),
                    {
                        when: u
                    } = a;
                if (!u) return Promise.all([s(), l(n.delay)]); {
                    let [c, d] = "beforeChildren" === u ? [s, l] : [l, s];
                    return c().then(d)
                }
            }

            function dQ(e, r, {
                delay: n = 0,
                transitionOverride: i,
                type: o
            } = {}) {
                var a;
                let {
                    transition: s = e.getDefaultTransition(),
                    transitionEnd: l,
                    ...u
                } = e.makeTargetAnimatable(r), c = e.getValue("willChange");
                i && (s = i);
                let d = [],
                    h = o && (null === (a = e.animationState) || void 0 === a ? void 0 : a.getState()[o]);
                for (let f in u) {
                    let p = e.getValue(f),
                        m = u[f];
                    if (!p || void 0 === m || h && function({
                            protectedKeys: e,
                            needsAnimating: r
                        }, n) {
                            let i = e.hasOwnProperty(n) && !0 !== r[n];
                            return r[n] = !1, i
                        }(h, f)) continue;
                    let g = {
                        delay: n,
                        elapsed: 0,
                        ...s
                    };
                    if (window.HandoffAppearAnimations && !p.hasAnimated) {
                        let v = e.getProps()[cW];
                        v && (g.elapsed = window.HandoffAppearAnimations(v, f, p, cr))
                    }
                    let y = p.start(dG(f, p, m, e.shouldReduceMotion && lL.has(f) ? {
                        type: !1
                    } : g));
                    cq(c) && (c.add(f), y = y.then(() => c.remove(f))), d.push(y)
                }
                return Promise.all(d).then(() => {
                    l && function(e, r) {
                        let n = c$(e, r),
                            {
                                transitionEnd: i = {},
                                transition: o = {},
                                ...a
                            } = n ? e.makeTargetAnimatable(n, !1) : {};
                        for (let s in a = { ...a,
                                ...i
                            }) {
                            var l;
                            let u = uC(a[s]);
                            l = s, e.hasValue(l) ? e.getValue(l).set(u) : e.addValue(l, cp(u))
                        }
                    }(e, l)
                })
            }

            function dJ(e, r) {
                return e.sortNodePosition(r)
            }
            let dY = [D.Animate, D.InView, D.Focus, D.Hover, D.Tap, D.Drag, D.Exit],
                dX = [...dY].reverse(),
                dZ = dY.length;

            function d0(e = !1) {
                return {
                    isActive: e,
                    protectedKeys: {},
                    needsAnimating: {},
                    prevResolvedValues: {}
                }
            }
            let d1 = {
                    animation: uX(({
                        visualElement: e,
                        animate: r
                    }) => {
                        e.animationState || (e.animationState = function(e) {
                            let r = r => Promise.all(r.map(({
                                    animation: r,
                                    options: n
                                }) => (function(e, r, n = {}) {
                                    let i;
                                    if (e.notify("AnimationStart", r), Array.isArray(r)) {
                                        let o = r.map(r => dK(e, r, n));
                                        i = Promise.all(o)
                                    } else if ("string" == typeof r) i = dK(e, r, n);
                                    else {
                                        let a = "function" == typeof r ? c$(e, r, n.custom) : r;
                                        i = dQ(e, a, n)
                                    }
                                    return i.then(() => e.notify("AnimationComplete", r))
                                })(e, r, n))),
                                n = {
                                    [D.Animate]: d0(!0),
                                    [D.InView]: d0(),
                                    [D.Hover]: d0(),
                                    [D.Tap]: d0(),
                                    [D.Drag]: d0(),
                                    [D.Focus]: d0(),
                                    [D.Exit]: d0()
                                },
                                i = !0,
                                o = (r, n) => {
                                    let i = c$(e, n);
                                    if (i) {
                                        let {
                                            transition: o,
                                            transitionEnd: a,
                                            ...s
                                        } = i;
                                        r = { ...r,
                                            ...s,
                                            ...a
                                        }
                                    }
                                    return r
                                };

                            function a(a, s) {
                                let l = e.getProps(),
                                    u = e.getVariantContext(!0) || {},
                                    c = [],
                                    d = new Set,
                                    h = {},
                                    f = 1 / 0;
                                for (let p = 0; p < dZ; p++) {
                                    var m;
                                    let g = dX[p],
                                        v = n[g],
                                        y = void 0 !== l[g] ? l[g] : u[g],
                                        b = lb(y),
                                        w = g === s ? v.isActive : null;
                                    !1 === w && (f = p);
                                    let x = y === u[g] && y !== l[g] && b;
                                    if (x && i && e.manuallyAnimateOnMount && (x = !1), v.protectedKeys = { ...h
                                        }, !v.isActive && null === w || !y && !v.prevProp || lw(y) || "boolean" == typeof y) continue;
                                    let E = (m = v.prevProp, "string" == typeof y ? y !== m : !!Array.isArray(y) && !u0(y, m)),
                                        C = E || g === s && v.isActive && !x && b || p > f && b,
                                        A = Array.isArray(y) ? y : [y],
                                        k = A.reduce(o, {});
                                    !1 === w && (k = {});
                                    let {
                                        prevResolvedValues: S = {}
                                    } = v, _ = { ...S,
                                        ...k
                                    }, P = e => {
                                        C = !0, d.delete(e), v.needsAnimating[e] = !0
                                    };
                                    for (let j in _) {
                                        let T = k[j],
                                            R = S[j];
                                        h.hasOwnProperty(j) || (T !== R ? ux(T) && ux(R) ? !u0(T, R) || E ? P(j) : v.protectedKeys[j] = !0 : void 0 !== T ? P(j) : d.add(j) : void 0 !== T && d.has(j) ? P(j) : v.protectedKeys[j] = !0)
                                    }
                                    v.prevProp = y, v.prevResolvedValues = k, v.isActive && (h = { ...h,
                                        ...k
                                    }), i && e.blockInitialAnimation && (C = !1), C && !x && c.push(...A.map(e => ({
                                        animation: e,
                                        options: {
                                            type: g,
                                            ...a
                                        }
                                    })))
                                }
                                if (d.size) {
                                    let B = {};
                                    d.forEach(r => {
                                        let n = e.getBaseTarget(r);
                                        void 0 !== n && (B[r] = n)
                                    }), c.push({
                                        animation: B
                                    })
                                }
                                let O = Boolean(c.length);
                                return i && !1 === l.initial && !e.manuallyAnimateOnMount && (O = !1), i = !1, O ? r(c) : Promise.resolve()
                            }
                            return {
                                animateChanges: a,
                                setActive: function(r, i, o) {
                                    var s;
                                    if (n[r].isActive === i) return Promise.resolve();
                                    null === (s = e.variantChildren) || void 0 === s || s.forEach(e => {
                                        var n;
                                        return null === (n = e.animationState) || void 0 === n ? void 0 : n.setActive(r, i)
                                    }), n[r].isActive = i;
                                    let l = a(o, r);
                                    for (let u in n) n[u].protectedKeys = {};
                                    return l
                                },
                                setAnimateFunction: function(n) {
                                    r = n(e)
                                },
                                getState: () => n
                            }
                        }(e)), lw(r) && (0, Z.useEffect)(() => r.subscribe(e), [r])
                    }),
                    exit: uX(e => {
                        let {
                            custom: r,
                            visualElement: n
                        } = e, [i, o] = lh(), a = (0, Z.useContext)(ld);
                        (0, Z.useEffect)(() => {
                            n.isPresent = i;
                            let e = n.animationState && n.animationState.setActive(D.Exit, !i, {
                                custom: a && a.custom || r
                            });
                            e && !i && e.then(o)
                        }, [i])
                    })
                },
                d2 = (e, r) => Math.abs(e - r);
            class d3 {
                constructor(e, r, {
                    transformPagePoint: n
                } = {}) {
                    if (this.startEvent = null, this.lastMoveEvent = null, this.lastMoveEventInfo = null, this.handlers = {}, this.updatePoint = () => {
                            if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
                            let e = d4(this.lastMoveEventInfo, this.history),
                                r = null !== this.startEvent,
                                n = function(e, r) {
                                    let n = d2(e.x, r.x),
                                        i = d2(e.y, r.y);
                                    return Math.sqrt(n ** 2 + i ** 2)
                                }(e.offset, {
                                    x: 0,
                                    y: 0
                                }) >= 3;
                            if (!r && !n) return;
                            let {
                                point: i
                            } = e, {
                                timestamp: o
                            } = u3;
                            this.history.push({ ...i,
                                timestamp: o
                            });
                            let {
                                onStart: a,
                                onMove: s
                            } = this.handlers;
                            r || (a && a(this.lastMoveEvent, e), this.startEvent = this.lastMoveEvent), s && s(this.lastMoveEvent, e)
                        }, this.handlePointerMove = (e, r) => {
                            this.lastMoveEvent = e, this.lastMoveEventInfo = d6(r, this.transformPagePoint), cr.update(this.updatePoint, !0)
                        }, this.handlePointerUp = (e, r) => {
                            if (this.end(), !(this.lastMoveEvent && this.lastMoveEventInfo)) return;
                            let {
                                onEnd: n,
                                onSessionEnd: i
                            } = this.handlers, o = d4("pointercancel" === e.type ? this.lastMoveEventInfo : d6(r, this.transformPagePoint), this.history);
                            this.startEvent && n && n(e, o), i && i(e, o)
                        }, !uT(e)) return;
                    this.handlers = r, this.transformPagePoint = n;
                    let i = uR(e),
                        o = d6(i, this.transformPagePoint),
                        {
                            point: a
                        } = o,
                        {
                            timestamp: s
                        } = u3;
                    this.history = [{ ...a,
                        timestamp: s
                    }];
                    let {
                        onSessionStart: l
                    } = r;
                    l && l(e, d4(o, this.history)), this.removeListeners = uW(uO(window, "pointermove", this.handlePointerMove), uO(window, "pointerup", this.handlePointerUp), uO(window, "pointercancel", this.handlePointerUp))
                }
                updateHandlers(e) {
                    this.handlers = e
                }
                end() {
                    this.removeListeners && this.removeListeners(), cn.update(this.updatePoint)
                }
            }

            function d6(e, r) {
                return r ? {
                    point: r(e.point)
                } : e
            }

            function d5(e, r) {
                return {
                    x: e.x - r.x,
                    y: e.y - r.y
                }
            }

            function d4({
                point: e
            }, r) {
                return {
                    point: e,
                    delta: d5(e, d7(r)),
                    offset: d5(e, r[0]),
                    velocity: function(e, r) {
                        if (e.length < 2) return {
                            x: 0,
                            y: 0
                        };
                        let n = e.length - 1,
                            i = null,
                            o = d7(e);
                        for (; n >= 0 && (i = e[n], !(o.timestamp - i.timestamp > cG(.1)));) n--;
                        if (!i) return {
                            x: 0,
                            y: 0
                        };
                        let a = (o.timestamp - i.timestamp) / 1e3;
                        if (0 === a) return {
                            x: 0,
                            y: 0
                        };
                        let s = {
                            x: (o.x - i.x) / a,
                            y: (o.y - i.y) / a
                        };
                        return s.x === 1 / 0 && (s.x = 0), s.y === 1 / 0 && (s.y = 0), s
                    }(r, 0)
                }
            }

            function d7(e) {
                return e[e.length - 1]
            }

            function d8(e) {
                return e.max - e.min
            }

            function d9(e, r = 0, n = .01) {
                return Math.abs(e - r) <= n
            }

            function he(e, r, n, i = .5) {
                e.origin = i, e.originPoint = c0(r.min, r.max, e.origin), e.scale = d8(n) / d8(r), (d9(e.scale, 1, 1e-4) || isNaN(e.scale)) && (e.scale = 1), e.translate = c0(n.min, n.max, e.origin) - e.originPoint, (d9(e.translate) || isNaN(e.translate)) && (e.translate = 0)
            }

            function ht(e, r, n, i) {
                he(e.x, r.x, n.x, null == i ? void 0 : i.originX), he(e.y, r.y, n.y, null == i ? void 0 : i.originY)
            }

            function hr(e, r, n) {
                e.min = n.min + r.min, e.max = e.min + d8(r)
            }

            function hn(e, r, n) {
                e.min = r.min - n.min, e.max = e.min + d8(r)
            }

            function hi(e, r, n) {
                hn(e.x, r.x, n.x), hn(e.y, r.y, n.y)
            }

            function ho(e, r, n) {
                return {
                    min: void 0 !== r ? e.min + r : void 0,
                    max: void 0 !== n ? e.max + n - (e.max - e.min) : void 0
                }
            }

            function ha(e, r) {
                let n = r.min - e.min,
                    i = r.max - e.max;
                return r.max - r.min < e.max - e.min && ([n, i] = [i, n]), {
                    min: n,
                    max: i
                }
            }

            function hs(e, r, n) {
                return {
                    min: hl(e, r),
                    max: hl(e, n)
                }
            }

            function hl(e, r) {
                return "number" == typeof e ? e : e[r] || 0
            }
            let hu = () => ({
                    translate: 0,
                    scale: 1,
                    origin: 0,
                    originPoint: 0
                }),
                hc = () => ({
                    x: hu(),
                    y: hu()
                }),
                hd = () => ({
                    min: 0,
                    max: 0
                }),
                hh = () => ({
                    x: hd(),
                    y: hd()
                });

            function hf(e) {
                return [e("x"), e("y")]
            }

            function hp({
                top: e,
                left: r,
                right: n,
                bottom: i
            }) {
                return {
                    x: {
                        min: r,
                        max: n
                    },
                    y: {
                        min: e,
                        max: i
                    }
                }
            }

            function hm(e) {
                return void 0 === e || 1 === e
            }

            function hg({
                scale: e,
                scaleX: r,
                scaleY: n
            }) {
                return !hm(e) || !hm(r) || !hm(n)
            }

            function hv(e) {
                return hg(e) || hy(e) || e.z || e.rotate || e.rotateX || e.rotateY
            }

            function hy(e) {
                var r, n;
                return (r = e.x) && "0%" !== r || (n = e.y) && "0%" !== n
            }

            function hb(e, r, n, i, o) {
                return void 0 !== o && (e = i + o * (e - i)), i + n * (e - i) + r
            }

            function hw(e, r = 0, n = 1, i, o) {
                e.min = hb(e.min, r, n, i, o), e.max = hb(e.max, r, n, i, o)
            }

            function hx(e, {
                x: r,
                y: n
            }) {
                hw(e.x, r.translate, r.scale, r.originPoint), hw(e.y, n.translate, n.scale, n.originPoint)
            }

            function hE(e) {
                return Number.isInteger(e) ? e : e > 1.0000000000001 || e < .999999999999 ? e : 1
            }

            function hC(e, r) {
                e.min = e.min + r, e.max = e.max + r
            }

            function hA(e, r, [n, i, o]) {
                let a = void 0 !== r[o] ? r[o] : .5,
                    s = c0(e.min, e.max, a);
                hw(e, r[n], r[i], s, r.scale)
            }
            let hk = ["x", "scaleX", "originX"],
                hS = ["y", "scaleY", "originY"];

            function h_(e, r) {
                hA(e.x, r, hk), hA(e.y, r, hS)
            }

            function hP(e, r) {
                return hp(function(e, r) {
                    if (!r) return e;
                    let n = r({
                            x: e.left,
                            y: e.top
                        }),
                        i = r({
                            x: e.right,
                            y: e.bottom
                        });
                    return {
                        top: n.y,
                        left: n.x,
                        bottom: i.y,
                        right: i.x
                    }
                }(e.getBoundingClientRect(), r))
            }
            let hj = new WeakMap;
            class hT {
                constructor(e) {
                    this.openGlobalLock = null, this.isDragging = !1, this.currentDirection = null, this.originPoint = {
                        x: 0,
                        y: 0
                    }, this.constraints = !1, this.hasMutatedConstraints = !1, this.elastic = hh(), this.visualElement = e
                }
                start(e, {
                    snapToCursor: r = !1
                } = {}) {
                    if (!1 === this.visualElement.isPresent) return;
                    let n = e => {
                            this.stopAnimation(), r && this.snapToCursor(uR(e, "page").point)
                        },
                        i = (e, r) => {
                            var n;
                            let {
                                drag: i,
                                dragPropagation: o,
                                onDragStart: a
                            } = this.getProps();
                            (!i || o || (this.openGlobalLock && this.openGlobalLock(), this.openGlobalLock = uL(i), this.openGlobalLock)) && (this.isDragging = !0, this.currentDirection = null, this.resolveConstraints(), this.visualElement.projection && (this.visualElement.projection.isAnimationBlocked = !0, this.visualElement.projection.target = void 0), hf(e => {
                                var r, n;
                                let i = this.getAxisMotionValue(e).get() || 0;
                                if (l2.test(i)) {
                                    let o = null === (n = null === (r = this.visualElement.projection) || void 0 === r ? void 0 : r.layout) || void 0 === n ? void 0 : n.layoutBox[e];
                                    if (o) {
                                        let a = d8(o);
                                        i = a * (parseFloat(i) / 100)
                                    }
                                }
                                this.originPoint[e] = i
                            }), null == a || a(e, r), null === (n = this.visualElement.animationState) || void 0 === n || n.setActive(D.Drag, !0))
                        },
                        o = (e, r) => {
                            let {
                                dragPropagation: n,
                                dragDirectionLock: i,
                                onDirectionLock: o,
                                onDrag: a
                            } = this.getProps();
                            if (!n && !this.openGlobalLock) return;
                            let {
                                offset: s
                            } = r;
                            if (i && null === this.currentDirection) {
                                this.currentDirection = function(e, r = 10) {
                                    let n = null;
                                    return Math.abs(e.y) > r ? n = "y" : Math.abs(e.x) > r && (n = "x"), n
                                }(s), null !== this.currentDirection && (null == o || o(this.currentDirection));
                                return
                            }
                            this.updateAxis("x", r.point, s), this.updateAxis("y", r.point, s), this.visualElement.render(), null == a || a(e, r)
                        },
                        a = (e, r) => this.stop(e, r);
                    this.panSession = new d3(e, {
                        onSessionStart: n,
                        onStart: i,
                        onMove: o,
                        onSessionEnd: a
                    }, {
                        transformPagePoint: this.visualElement.getTransformPagePoint()
                    })
                }
                stop(e, r) {
                    let n = this.isDragging;
                    if (this.cancel(), !n) return;
                    let {
                        velocity: i
                    } = r;
                    this.startAnimation(i);
                    let {
                        onDragEnd: o
                    } = this.getProps();
                    null == o || o(e, r)
                }
                cancel() {
                    var e, r;
                    this.isDragging = !1, this.visualElement.projection && (this.visualElement.projection.isAnimationBlocked = !1), null === (e = this.panSession) || void 0 === e || e.end(), this.panSession = void 0;
                    let {
                        dragPropagation: n
                    } = this.getProps();
                    !n && this.openGlobalLock && (this.openGlobalLock(), this.openGlobalLock = null), null === (r = this.visualElement.animationState) || void 0 === r || r.setActive(D.Drag, !1)
                }
                updateAxis(e, r, n) {
                    let {
                        drag: i
                    } = this.getProps();
                    if (!n || !hR(e, i, this.currentDirection)) return;
                    let o = this.getAxisMotionValue(e),
                        a = this.originPoint[e] + n[e];
                    this.constraints && this.constraints[e] && (a = function(e, {
                        min: r,
                        max: n
                    }, i) {
                        return void 0 !== r && e < r ? e = i ? c0(r, e, i.min) : Math.max(e, r) : void 0 !== n && e > n && (e = i ? c0(n, e, i.max) : Math.min(e, n)), e
                    }(a, this.constraints[e], this.elastic[e])), o.set(a)
                }
                resolveConstraints() {
                    let {
                        dragConstraints: e,
                        dragElastic: r
                    } = this.getProps(), {
                        layout: n
                    } = this.visualElement.projection || {}, i = this.constraints;
                    e && ly(e) ? this.constraints || (this.constraints = this.resolveRefConstraints()) : e && n ? this.constraints = function(e, {
                        top: r,
                        left: n,
                        bottom: i,
                        right: o
                    }) {
                        return {
                            x: ho(e.x, n, o),
                            y: ho(e.y, r, i)
                        }
                    }(n.layoutBox, e) : this.constraints = !1, this.elastic = function(e = .35) {
                        return !1 === e ? e = 0 : !0 === e && (e = .35), {
                            x: hs(e, "left", "right"),
                            y: hs(e, "top", "bottom")
                        }
                    }(r), i !== this.constraints && n && this.constraints && !this.hasMutatedConstraints && hf(e => {
                        this.getAxisMotionValue(e) && (this.constraints[e] = function(e, r) {
                            let n = {};
                            return void 0 !== r.min && (n.min = r.min - e.min), void 0 !== r.max && (n.max = r.max - e.min), n
                        }(n.layoutBox[e], this.constraints[e]))
                    })
                }
                resolveRefConstraints() {
                    var e;
                    let {
                        dragConstraints: r,
                        onMeasureDragConstraints: n
                    } = this.getProps();
                    if (!r || !ly(r)) return !1;
                    let i = r.current;
                    cH(null !== i, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
                    let {
                        projection: o
                    } = this.visualElement;
                    if (!o || !o.layout) return !1;
                    let a = function(e, r, n) {
                            let i = hP(e, n),
                                {
                                    scroll: o
                                } = r;
                            return o && (hC(i.x, o.offset.x), hC(i.y, o.offset.y)), i
                        }(i, o.root, this.visualElement.getTransformPagePoint()),
                        s = {
                            x: ha((e = o.layout.layoutBox).x, a.x),
                            y: ha(e.y, a.y)
                        };
                    if (n) {
                        let l = n(function({
                            x: e,
                            y: r
                        }) {
                            return {
                                top: r.min,
                                right: e.max,
                                bottom: r.max,
                                left: e.min
                            }
                        }(s));
                        this.hasMutatedConstraints = !!l, l && (s = hp(l))
                    }
                    return s
                }
                startAnimation(e) {
                    let {
                        drag: r,
                        dragMomentum: n,
                        dragElastic: i,
                        dragTransition: o,
                        dragSnapToOrigin: a,
                        onDragTransitionEnd: s
                    } = this.getProps(), l = this.constraints || {}, u = hf(s => {
                        if (!hR(s, r, this.currentDirection)) return;
                        let u = (null == l ? void 0 : l[s]) || {};
                        a && (u = {
                            min: 0,
                            max: 0
                        });
                        let c = {
                            type: "inertia",
                            velocity: n ? e[s] : 0,
                            bounceStiffness: i ? 200 : 1e6,
                            bounceDamping: i ? 40 : 1e7,
                            timeConstant: 750,
                            restDelta: 1,
                            restSpeed: 10,
                            ...o,
                            ...u
                        };
                        return this.startAxisValueAnimation(s, c)
                    });
                    return Promise.all(u).then(s)
                }
                startAxisValueAnimation(e, r) {
                    let n = this.getAxisMotionValue(e);
                    return n.start(dG(e, n, 0, r))
                }
                stopAnimation() {
                    hf(e => this.getAxisMotionValue(e).stop())
                }
                getAxisMotionValue(e) {
                    var r;
                    let n = "_drag" + e.toUpperCase(),
                        i = this.visualElement.getProps()[n];
                    return i || this.visualElement.getValue(e, (null === (r = this.visualElement.getProps().initial) || void 0 === r ? void 0 : r[e]) || 0)
                }
                snapToCursor(e) {
                    hf(r => {
                        let {
                            drag: n
                        } = this.getProps();
                        if (!hR(r, n, this.currentDirection)) return;
                        let {
                            projection: i
                        } = this.visualElement, o = this.getAxisMotionValue(r);
                        if (i && i.layout) {
                            let {
                                min: a,
                                max: s
                            } = i.layout.layoutBox[r];
                            o.set(e[r] - c0(a, s, .5))
                        }
                    })
                }
                scalePositionWithinConstraints() {
                    var e;
                    if (!this.visualElement.current) return;
                    let {
                        drag: r,
                        dragConstraints: n
                    } = this.getProps(), {
                        projection: i
                    } = this.visualElement;
                    if (!ly(n) || !i || !this.constraints) return;
                    this.stopAnimation();
                    let o = {
                        x: 0,
                        y: 0
                    };
                    hf(e => {
                        let r = this.getAxisMotionValue(e);
                        if (r) {
                            let n = r.get();
                            o[e] = function(e, r) {
                                let n = .5,
                                    i = d8(e),
                                    o = d8(r);
                                return o > i ? n = dt(r.min, r.max - i, e.min) : i > o && (n = dt(e.min, e.max - o, r.min)), lV(0, 1, n)
                            }({
                                min: n,
                                max: n
                            }, this.constraints[e])
                        }
                    });
                    let {
                        transformTemplate: a
                    } = this.visualElement.getProps();
                    this.visualElement.current.style.transform = a ? a({}, "") : "none", null === (e = i.root) || void 0 === e || e.updateScroll(), i.updateLayout(), this.resolveConstraints(), hf(e => {
                        if (!hR(e, r, null)) return;
                        let n = this.getAxisMotionValue(e),
                            {
                                min: i,
                                max: a
                            } = this.constraints[e];
                        n.set(c0(i, a, o[e]))
                    })
                }
                addListeners() {
                    var e;
                    if (!this.visualElement.current) return;
                    hj.set(this.visualElement, this);
                    let r = this.visualElement.current,
                        n = uO(r, "pointerdown", e => {
                            let {
                                drag: r,
                                dragListener: n = !0
                            } = this.getProps();
                            r && n && this.start(e)
                        }),
                        i = () => {
                            let {
                                dragConstraints: e
                            } = this.getProps();
                            ly(e) && (this.constraints = this.resolveRefConstraints())
                        },
                        {
                            projection: o
                        } = this.visualElement,
                        a = o.addEventListener("measure", i);
                    o && !o.layout && (null === (e = o.root) || void 0 === e || e.updateScroll(), o.updateLayout()), i();
                    let s = uP(window, "resize", () => this.scalePositionWithinConstraints()),
                        l = o.addEventListener("didUpdate", ({
                            delta: e,
                            hasLayoutChanged: r
                        }) => {
                            this.isDragging && r && (hf(r => {
                                let n = this.getAxisMotionValue(r);
                                n && (this.originPoint[r] += e[r].translate, n.set(n.get() + e[r].translate))
                            }), this.visualElement.render())
                        });
                    return () => {
                        s(), n(), a(), null == l || l()
                    }
                }
                getProps() {
                    let e = this.visualElement.getProps(),
                        {
                            drag: r = !1,
                            dragDirectionLock: n = !1,
                            dragPropagation: i = !1,
                            dragConstraints: o = !1,
                            dragElastic: a = .35,
                            dragMomentum: s = !0
                        } = e;
                    return { ...e,
                        drag: r,
                        dragDirectionLock: n,
                        dragPropagation: i,
                        dragConstraints: o,
                        dragElastic: a,
                        dragMomentum: s
                    }
                }
            }

            function hR(e, r, n) {
                return (!0 === r || r === e) && (null === n || n === e)
            }
            let hB = {
                pan: uX(function({
                    onPan: e,
                    onPanStart: r,
                    onPanEnd: n,
                    onPanSessionStart: i,
                    visualElement: o
                }) {
                    let a = (0, Z.useRef)(null),
                        {
                            transformPagePoint: s
                        } = (0, Z.useContext)(lf),
                        l = {
                            onSessionStart: i,
                            onStart: r,
                            onMove: e,
                            onEnd: (e, r) => {
                                a.current = null, n && n(e, r)
                            }
                        };
                    (0, Z.useEffect)(() => {
                        null !== a.current && a.current.updateHandlers(l)
                    }), uM(o, "pointerdown", (e || r || n || i) && function(e) {
                        a.current = new d3(e, l, {
                            transformPagePoint: s
                        })
                    }), u$(() => a.current && a.current.end())
                }),
                drag: uX(function(e) {
                    let {
                        dragControls: r,
                        visualElement: n
                    } = e, i = l_(() => new hT(n));
                    (0, Z.useEffect)(() => r && r.subscribe(i), [i, r]), (0, Z.useEffect)(() => i.addListeners(), [i])
                })
            };

            function hO(e) {
                return "string" == typeof e && e.startsWith("var(--")
            }
            let hM = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;

            function hI(e, r, n = 1) {
                cH(n <= 4, `Max CSS variable fallback depth detected in property "${e}". This may indicate a circular fallback dependency.`);
                let [i, o] = function(e) {
                    let r = hM.exec(e);
                    if (!r) return [, ];
                    let [, n, i] = r;
                    return [n, i]
                }(e);
                if (!i) return;
                let a = window.getComputedStyle(r).getPropertyValue(i);
                return a ? a.trim() : hO(o) ? hI(o, r, n + 1) : o
            }
            let hN = new Set(["width", "height", "top", "left", "right", "bottom", "x", "y"]),
                hF = e => hN.has(e),
                hL = e => Object.keys(e).some(hF),
                hD = e => e === lH || e === l3;
            (a = z || (z = {})).width = "width", a.height = "height", a.left = "left", a.right = "right", a.top = "top", a.bottom = "bottom";
            let hz = (e, r) => parseFloat(e.split(", ")[r]),
                hU = (e, r) => (n, {
                    transform: i
                }) => {
                    if ("none" === i || !i) return 0;
                    let o = i.match(/^matrix3d\((.+)\)$/);
                    if (o) return hz(o[1], r); {
                        let a = i.match(/^matrix\((.+)\)$/);
                        return a ? hz(a[1], e) : 0
                    }
                },
                h$ = new Set(["x", "y", "z"]),
                hq = lF.filter(e => !h$.has(e)),
                hW = {
                    width: ({
                        x: e
                    }, {
                        paddingLeft: r = "0",
                        paddingRight: n = "0"
                    }) => e.max - e.min - parseFloat(r) - parseFloat(n),
                    height: ({
                        y: e
                    }, {
                        paddingTop: r = "0",
                        paddingBottom: n = "0"
                    }) => e.max - e.min - parseFloat(r) - parseFloat(n),
                    top: (e, {
                        top: r
                    }) => parseFloat(r),
                    left: (e, {
                        left: r
                    }) => parseFloat(r),
                    bottom: ({
                        y: e
                    }, {
                        top: r
                    }) => parseFloat(r) + (e.max - e.min),
                    right: ({
                        x: e
                    }, {
                        left: r
                    }) => parseFloat(r) + (e.max - e.min),
                    x: hU(4, 13),
                    y: hU(5, 14)
                },
                hV = (e, r, n) => {
                    let i = r.measureViewportBox(),
                        o = r.current,
                        a = getComputedStyle(o),
                        {
                            display: s
                        } = a,
                        l = {};
                    "none" === s && r.setStaticValue("display", e.display || "block"), n.forEach(e => {
                        l[e] = hW[e](i, a)
                    }), r.render();
                    let u = r.measureViewportBox();
                    return n.forEach(n => {
                        let i = r.getValue(n);
                        i && i.jump(l[n]), e[n] = hW[n](u, a)
                    }), e
                },
                hH = (e, r, n = {}, i = {}) => {
                    r = { ...r
                    }, i = { ...i
                    };
                    let o = Object.keys(r).filter(hF),
                        a = [],
                        s = !1,
                        l = [];
                    if (o.forEach(o => {
                            let u;
                            let c = e.getValue(o);
                            if (!e.hasValue(o)) return;
                            let d = n[o],
                                h = cD(d),
                                f = r[o];
                            if (ux(f)) {
                                let p = f.length,
                                    m = null === f[0] ? 1 : 0;
                                h = cD(d = f[m]);
                                for (let g = m; g < p; g++) u ? cH(cD(f[g]) === u, "All keyframes must be of the same type") : cH((u = cD(f[g])) === h || hD(h) && hD(u), "Keyframes must be of the same dimension as the current value")
                            } else u = cD(f);
                            if (h !== u) {
                                if (hD(h) && hD(u)) {
                                    let v = c.get();
                                    "string" == typeof v && c.set(parseFloat(v)), "string" == typeof f ? r[o] = parseFloat(f) : Array.isArray(f) && u === l3 && (r[o] = f.map(parseFloat))
                                } else(null == h ? void 0 : h.transform) && (null == u ? void 0 : u.transform) && (0 === d || 0 === f) ? 0 === d ? c.set(u.transform(d)) : r[o] = h.transform(f) : (s || (a = function(e) {
                                    let r = [];
                                    return hq.forEach(n => {
                                        let i = e.getValue(n);
                                        void 0 !== i && (r.push([n, i.get()]), i.set(n.startsWith("scale") ? 1 : 0))
                                    }), r.length && e.render(), r
                                }(e), s = !0), l.push(o), i[o] = void 0 !== i[o] ? i[o] : r[o], c.jump(f))
                            }
                        }), !l.length) return {
                        target: r,
                        transitionEnd: i
                    }; {
                        let u = l.indexOf("height") >= 0 ? window.pageYOffset : null,
                            c = hV(r, e, l);
                        return a.length && a.forEach(([r, n]) => {
                            e.getValue(r).set(n)
                        }), e.render(), lm && null !== u && window.scrollTo({
                            top: u
                        }), {
                            target: c,
                            transitionEnd: i
                        }
                    }
                },
                hG = (e, r, n, i) => {
                    var o, a;
                    let s = function(e, { ...r
                    }, n) {
                        let i = e.current;
                        if (!(i instanceof Element)) return {
                            target: r,
                            transitionEnd: n
                        };
                        for (let o in n && (n = { ...n
                            }), e.values.forEach(e => {
                                let r = e.get();
                                if (!hO(r)) return;
                                let n = hI(r, i);
                                n && e.set(n)
                            }), r) {
                            let a = r[o];
                            if (!hO(a)) continue;
                            let s = hI(a, i);
                            s && (r[o] = s, n && void 0 === n[o] && (n[o] = a))
                        }
                        return {
                            target: r,
                            transitionEnd: n
                        }
                    }(e, r, i);
                    return r = s.target, i = s.transitionEnd, o = r, a = i, hL(o) ? hH(e, o, n, a) : {
                        target: o,
                        transitionEnd: a
                    }
                },
                hK = {
                    current: null
                },
                hQ = {
                    current: !1
                },
                hJ = Object.keys(lS),
                hY = hJ.length,
                hX = ["AnimationStart", "AnimationComplete", "Update", "BeforeLayoutMeasure", "LayoutMeasure", "LayoutAnimationStart", "LayoutAnimationComplete"];
            class hZ {
                constructor({
                    parent: e,
                    props: r,
                    reducedMotionConfig: n,
                    visualState: i
                }, o = {}) {
                    this.current = null, this.children = new Set, this.isVariantNode = !1, this.isControllingVariants = !1, this.shouldReduceMotion = null, this.values = new Map, this.isPresent = !0, this.valueSubscriptions = new Map, this.prevMotionValues = {}, this.events = {}, this.propEventSubscriptions = {}, this.notifyUpdate = () => this.notify("Update", this.latestValues), this.render = () => {
                        this.current && (this.triggerBuild(), this.renderInstance(this.current, this.renderState, this.props.style, this.projection))
                    }, this.scheduleRender = () => cr.render(this.render, !1, !0);
                    let {
                        latestValues: a,
                        renderState: s
                    } = i;
                    this.latestValues = a, this.baseTarget = { ...a
                    }, this.initialValues = r.initial ? { ...a
                    } : {}, this.renderState = s, this.parent = e, this.props = r, this.depth = e ? e.depth + 1 : 0, this.reducedMotionConfig = n, this.options = o, this.isControllingVariants = lE(r), this.isVariantNode = lC(r), this.isVariantNode && (this.variantChildren = new Set), this.manuallyAnimateOnMount = Boolean(e && e.current);
                    let {
                        willChange: l,
                        ...u
                    } = this.scrapeMotionValuesFromProps(r, {});
                    for (let c in u) {
                        let d = u[c];
                        void 0 !== a[c] && lz(d) && (d.set(a[c], !1), cq(l) && l.add(c))
                    }
                }
                scrapeMotionValuesFromProps(e, r) {
                    return {}
                }
                mount(e) {
                    var r;
                    this.current = e, this.projection && this.projection.mount(e), this.parent && this.isVariantNode && !this.isControllingVariants && (this.removeFromVariantTree = null === (r = this.parent) || void 0 === r ? void 0 : r.addVariantChild(this)), this.values.forEach((e, r) => this.bindToMotionValue(r, e)), hQ.current || function() {
                        if (hQ.current = !0, lm) {
                            if (window.matchMedia) {
                                let e = window.matchMedia("(prefers-reduced-motion)"),
                                    r = () => hK.current = e.matches;
                                e.addListener(r), r()
                            } else hK.current = !1
                        }
                    }(), this.shouldReduceMotion = "never" !== this.reducedMotionConfig && ("always" === this.reducedMotionConfig || hK.current), this.parent && this.parent.children.add(this), this.setProps(this.props)
                }
                unmount() {
                    var e, r, n;
                    for (let i in null === (e = this.projection) || void 0 === e || e.unmount(), cn.update(this.notifyUpdate), cn.render(this.render), this.valueSubscriptions.forEach(e => e()), null === (r = this.removeFromVariantTree) || void 0 === r || r.call(this), null === (n = this.parent) || void 0 === n || n.children.delete(this), this.events) this.events[i].clear();
                    this.current = null
                }
                bindToMotionValue(e, r) {
                    let n = lL.has(e),
                        i = r.on("change", r => {
                            this.latestValues[e] = r, this.props.onUpdate && cr.update(this.notifyUpdate, !1, !0), n && this.projection && (this.projection.isTransformDirty = !0)
                        }),
                        o = r.on("renderRequest", this.scheduleRender);
                    this.valueSubscriptions.set(e, () => {
                        i(), o()
                    })
                }
                sortNodePosition(e) {
                    return this.current && this.sortInstanceNodePosition && this.type === e.type ? this.sortInstanceNodePosition(this.current, e.current) : 0
                }
                loadFeatures({
                    children: e,
                    ...r
                }, n, i, o, a, s) {
                    let l = [];
                    for (let u = 0; u < hY; u++) {
                        let c = hJ[u],
                            {
                                isEnabled: d,
                                Component: h
                            } = lS[c];
                        d(r) && h && l.push((0, Z.createElement)(h, {
                            key: c,
                            ...r,
                            visualElement: this
                        }))
                    }
                    if (!this.projection && a) {
                        this.projection = new a(o, this.latestValues, this.parent && this.parent.projection);
                        let {
                            layoutId: f,
                            layout: p,
                            drag: m,
                            dragConstraints: g,
                            layoutScroll: v,
                            layoutRoot: y
                        } = r;
                        this.projection.setOptions({
                            layoutId: f,
                            layout: p,
                            alwaysMeasureLayout: Boolean(m) || g && ly(g),
                            visualElement: this,
                            scheduleRender: () => this.scheduleRender(),
                            animationType: "string" == typeof p ? p : "both",
                            initialPromotionConfig: s,
                            layoutScroll: v,
                            layoutRoot: y
                        })
                    }
                    return l
                }
                triggerBuild() {
                    this.build(this.renderState, this.latestValues, this.options, this.props)
                }
                measureViewportBox() {
                    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : hh()
                }
                getStaticValue(e) {
                    return this.latestValues[e]
                }
                setStaticValue(e, r) {
                    this.latestValues[e] = r
                }
                makeTargetAnimatable(e, r = !0) {
                    return this.makeTargetAnimatableFromInstance(e, this.props, r)
                }
                setProps(e) {
                    (e.transformTemplate || this.props.transformTemplate) && this.scheduleRender();
                    let r = this.props;
                    this.props = e;
                    for (let n = 0; n < hX.length; n++) {
                        let i = hX[n];
                        this.propEventSubscriptions[i] && (this.propEventSubscriptions[i](), delete this.propEventSubscriptions[i]);
                        let o = e["on" + i];
                        o && (this.propEventSubscriptions[i] = this.on(i, o))
                    }
                    this.prevMotionValues = function(e, r, n) {
                        let {
                            willChange: i
                        } = r;
                        for (let o in r) {
                            let a = r[o],
                                s = n[o];
                            if (lz(a)) e.addValue(o, a), cq(i) && i.add(o);
                            else if (lz(s)) e.addValue(o, cp(a, {
                                owner: e
                            })), cq(i) && i.remove(o);
                            else if (s !== a) {
                                if (e.hasValue(o)) {
                                    let l = e.getValue(o);
                                    l.hasAnimated || l.set(a)
                                } else {
                                    let u = e.getStaticValue(o);
                                    e.addValue(o, cp(void 0 !== u ? u : a, {
                                        owner: e
                                    }))
                                }
                            }
                        }
                        for (let c in n) void 0 === r[c] && e.removeValue(c);
                        return r
                    }(this, this.scrapeMotionValuesFromProps(e, r), this.prevMotionValues), this.handleChildMotionValue && this.handleChildMotionValue()
                }
                getProps() {
                    return this.props
                }
                getVariant(e) {
                    var r;
                    return null === (r = this.props.variants) || void 0 === r ? void 0 : r[e]
                }
                getDefaultTransition() {
                    return this.props.transition
                }
                getTransformPagePoint() {
                    return this.props.transformPagePoint
                }
                getClosestVariantNode() {
                    var e;
                    return this.isVariantNode ? this : null === (e = this.parent) || void 0 === e ? void 0 : e.getClosestVariantNode()
                }
                getVariantContext(e = !1) {
                    var r, n;
                    if (e) return null === (r = this.parent) || void 0 === r ? void 0 : r.getVariantContext();
                    if (!this.isControllingVariants) {
                        let i = (null === (n = this.parent) || void 0 === n ? void 0 : n.getVariantContext()) || {};
                        return void 0 !== this.props.initial && (i.initial = this.props.initial), i
                    }
                    let o = {};
                    for (let a = 0; a < h1; a++) {
                        let s = h0[a],
                            l = this.props[s];
                        (lb(l) || !1 === l) && (o[s] = l)
                    }
                    return o
                }
                addVariantChild(e) {
                    var r;
                    let n = this.getClosestVariantNode();
                    if (n) return null === (r = n.variantChildren) || void 0 === r || r.add(e), () => n.variantChildren.delete(e)
                }
                addValue(e, r) {
                    r !== this.values.get(e) && (this.removeValue(e), this.bindToMotionValue(e, r)), this.values.set(e, r), this.latestValues[e] = r.get()
                }
                removeValue(e) {
                    var r;
                    this.values.delete(e), null === (r = this.valueSubscriptions.get(e)) || void 0 === r || r(), this.valueSubscriptions.delete(e), delete this.latestValues[e], this.removeValueFromRenderState(e, this.renderState)
                }
                hasValue(e) {
                    return this.values.has(e)
                }
                getValue(e, r) {
                    if (this.props.values && this.props.values[e]) return this.props.values[e];
                    let n = this.values.get(e);
                    return void 0 === n && void 0 !== r && (n = cp(r, {
                        owner: this
                    }), this.addValue(e, n)), n
                }
                readValue(e) {
                    return void 0 === this.latestValues[e] && this.current ? this.readValueFromInstance(this.current, e, this.options) : this.latestValues[e]
                }
                setBaseTarget(e, r) {
                    this.baseTarget[e] = r
                }
                getBaseTarget(e) {
                    var r;
                    let {
                        initial: n
                    } = this.props, i = "string" == typeof n || "object" == typeof n ? null === (r = uw(this.props, n)) || void 0 === r ? void 0 : r[e] : void 0;
                    if (n && void 0 !== i) return i;
                    let o = this.getBaseTargetFromProps(this.props, e);
                    return void 0 === o || lz(o) ? void 0 !== this.initialValues[e] && void 0 === i ? void 0 : this.baseTarget[e] : o
                }
                on(e, r) {
                    return this.events[e] || (this.events[e] = new cc), this.events[e].add(r)
                }
                notify(e, ...r) {
                    var n;
                    null === (n = this.events[e]) || void 0 === n || n.notify(...r)
                }
            }
            let h0 = ["initial", ...dY],
                h1 = h0.length;
            class h2 extends hZ {
                sortInstanceNodePosition(e, r) {
                    return 2 & e.compareDocumentPosition(r) ? 1 : -1
                }
                getBaseTargetFromProps(e, r) {
                    var n;
                    return null === (n = e.style) || void 0 === n ? void 0 : n[r]
                }
                removeValueFromRenderState(e, {
                    vars: r,
                    style: n
                }) {
                    delete r[e], delete n[e]
                }
                makeTargetAnimatableFromInstance({
                    transition: e,
                    transitionEnd: r,
                    ...n
                }, {
                    transformValues: i
                }, o) {
                    let a = function(e, r, n) {
                        var i;
                        let o = {};
                        for (let a in e) {
                            let s = function(e, r) {
                                if (!r) return;
                                let n = r[e] || r.default || r;
                                return n.from
                            }(a, r);
                            o[a] = void 0 !== s ? s : null === (i = n.getValue(a)) || void 0 === i ? void 0 : i.get()
                        }
                        return o
                    }(n, e || {}, this);
                    if (i && (r && (r = i(r)), n && (n = i(n)), a && (a = i(a))), o) {
                        ! function(e, r, n) {
                            var i, o;
                            let a = Object.keys(r).filter(r => !e.hasValue(r)),
                                s = a.length;
                            if (s)
                                for (let l = 0; l < s; l++) {
                                    let u = a[l],
                                        c = r[u],
                                        d = null;
                                    Array.isArray(c) && (d = c[0]), null === d && (d = null !== (o = null !== (i = n[u]) && void 0 !== i ? i : e.readValue(u)) && void 0 !== o ? o : r[u]), null != d && ("string" == typeof d && (u1(d) || u2(d)) ? d = parseFloat(d) : !cU(d) && cj.test(c) && (d = cN(u, c)), e.addValue(u, cp(d, {
                                        owner: e
                                    })), void 0 === n[u] && (n[u] = d), null !== d && e.setBaseTarget(u, d))
                                }
                        }(this, n, a);
                        let s = hG(this, n, a, r);
                        r = s.transitionEnd, n = s.target
                    }
                    return {
                        transition: e,
                        transitionEnd: r,
                        ...n
                    }
                }
            }
            class h3 extends h2 {
                readValueFromInstance(e, r) {
                    if (lL.has(r)) {
                        let n = cI(r);
                        return n && n.default || 0
                    } {
                        let i = window.getComputedStyle(e),
                            o = (lq(r) ? i.getPropertyValue(r) : i[r]) || 0;
                        return "string" == typeof o ? o.trim() : o
                    }
                }
                measureInstanceViewportBox(e, {
                    transformPagePoint: r
                }) {
                    return hP(e, r)
                }
                build(e, r, n, i) {
                    l9(e, r, n, i.transformTemplate)
                }
                scrapeMotionValuesFromProps(e, r) {
                    return uy(e, r)
                }
                handleChildMotionValue() {
                    this.childSubscription && (this.childSubscription(), delete this.childSubscription);
                    let {
                        children: e
                    } = this.props;
                    lz(e) && (this.childSubscription = e.on("change", e => {
                        this.current && (this.current.textContent = `${e}`)
                    }))
                }
                renderInstance(e, r, n, i) {
                    um(e, r, n, i)
                }
            }
            class h6 extends h2 {
                constructor() {
                    super(...arguments), this.isSVGTag = !1
                }
                getBaseTargetFromProps(e, r) {
                    return e[r]
                }
                readValueFromInstance(e, r) {
                    var n;
                    return lL.has(r) ? (null === (n = cI(r)) || void 0 === n ? void 0 : n.default) || 0 : (r = ug.has(r) ? r : up(r), e.getAttribute(r))
                }
                measureInstanceViewportBox() {
                    return hh()
                }
                scrapeMotionValuesFromProps(e, r) {
                    return ub(e, r)
                }
                build(e, r, n, i) {
                    uc(e, r, n, this.isSVGTag, i.transformTemplate)
                }
                renderInstance(e, r, n, i) {
                    uv(e, r, n, i)
                }
                mount(e) {
                    this.isSVGTag = uh(e.tagName), super.mount(e)
                }
            }
            let h5 = (e, r) => lI(e) ? new h6(r, {
                enableHardwareAcceleration: !1
            }) : new h3(r, {
                enableHardwareAcceleration: !0
            });

            function h4(e, r) {
                return r.max === r.min ? 0 : e / (r.max - r.min) * 100
            }
            let h7 = {
                    correct: (e, r) => {
                        if (!r.target) return e;
                        if ("string" == typeof e) {
                            if (!l3.test(e)) return e;
                            e = parseFloat(e)
                        }
                        let n = h4(e, r.target.x),
                            i = h4(e, r.target.y);
                        return `${n}% ${i}%`
                    }
                },
                h8 = "_$css",
                h9 = {
                    correct: (e, {
                        treeScale: r,
                        projectionDelta: n
                    }) => {
                        let i = e,
                            o = e.includes("var("),
                            a = [];
                        o && (e = e.replace(hM, e => (a.push(e), h8)));
                        let s = cj.parse(e);
                        if (s.length > 5) return i;
                        let l = cj.createTransformer(e),
                            u = "number" != typeof s[0] ? 1 : 0,
                            c = n.x.scale * r.x,
                            d = n.y.scale * r.y;
                        s[0 + u] /= c, s[1 + u] /= d;
                        let h = c0(c, d, .5);
                        "number" == typeof s[2 + u] && (s[2 + u] /= h), "number" == typeof s[3 + u] && (s[3 + u] /= h);
                        let f = l(s);
                        if (o) {
                            let p = 0;
                            f = f.replace(h8, () => {
                                let e = a[p];
                                return p++, e
                            })
                        }
                        return f
                    }
                };
            class fe extends Z.Component {
                componentDidMount() {
                    let {
                        visualElement: e,
                        layoutGroup: r,
                        switchLayoutGroup: n,
                        layoutId: i
                    } = this.props, {
                        projection: o
                    } = e;
                    Object.assign(lN, ft), o && (r.group && r.group.add(o), n && n.register && i && n.register(o), o.root.didUpdate(), o.addEventListener("animationComplete", () => {
                        this.safeToRemove()
                    }), o.setOptions({ ...o.options,
                        onExitComplete: () => this.safeToRemove()
                    })), lP.hasEverUpdated = !0
                }
                getSnapshotBeforeUpdate(e) {
                    let {
                        layoutDependency: r,
                        visualElement: n,
                        drag: i,
                        isPresent: o
                    } = this.props, a = n.projection;
                    return a && (a.isPresent = o, i || e.layoutDependency !== r || void 0 === r ? a.willUpdate() : this.safeToRemove(), e.isPresent === o || (o ? a.promote() : a.relegate() || cr.postRender(() => {
                        var e;
                        (null === (e = a.getStack()) || void 0 === e ? void 0 : e.members.length) || this.safeToRemove()
                    }))), null
                }
                componentDidUpdate() {
                    let {
                        projection: e
                    } = this.props.visualElement;
                    e && (e.root.didUpdate(), !e.currentAnimation && e.isLead() && this.safeToRemove())
                }
                componentWillUnmount() {
                    let {
                        visualElement: e,
                        layoutGroup: r,
                        switchLayoutGroup: n
                    } = this.props, {
                        projection: i
                    } = e;
                    i && (i.scheduleCheckAfterUnmount(), (null == r ? void 0 : r.group) && r.group.remove(i), (null == n ? void 0 : n.deregister) && n.deregister(i))
                }
                safeToRemove() {
                    let {
                        safeToRemove: e
                    } = this.props;
                    null == e || e()
                }
                render() {
                    return null
                }
            }
            let ft = {
                    borderRadius: { ...h7,
                        applyTo: ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomLeftRadius", "borderBottomRightRadius"]
                    },
                    borderTopLeftRadius: h7,
                    borderTopRightRadius: h7,
                    borderBottomLeftRadius: h7,
                    borderBottomRightRadius: h7,
                    boxShadow: h9
                },
                fr = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"],
                fn = fr.length,
                fi = e => "string" == typeof e ? parseFloat(e) : e,
                fo = e => "number" == typeof e || l3.test(e);

            function fa(e, r) {
                return void 0 !== e[r] ? e[r] : e.borderRadius
            }
            let fs = fu(0, .5, du),
                fl = fu(.5, .95, di);

            function fu(e, r, n) {
                return i => i < e ? 0 : i > r ? 1 : n(dt(e, r, i))
            }

            function fc(e, r) {
                e.min = r.min, e.max = r.max
            }

            function fd(e, r) {
                fc(e.x, r.x), fc(e.y, r.y)
            }

            function fh(e, r, n, i, o) {
                return e -= r, e = i + 1 / n * (e - i), void 0 !== o && (e = i + 1 / o * (e - i)), e
            }

            function ff(e, r, [n, i, o], a, s) {
                ! function(e, r = 0, n = 1, i = .5, o, a = e, s = e) {
                    if (l2.test(r)) {
                        r = parseFloat(r);
                        let l = c0(s.min, s.max, r / 100);
                        r = l - s.min
                    }
                    if ("number" != typeof r) return;
                    let u = c0(a.min, a.max, i);
                    e === a && (u -= r), e.min = fh(e.min, r, n, u, o), e.max = fh(e.max, r, n, u, o)
                }(e, r[n], r[i], r[o], r.scale, a, s)
            }
            let fp = ["x", "scaleX", "originX"],
                fm = ["y", "scaleY", "originY"];

            function fg(e, r, n, i) {
                ff(e.x, r, fp, null == n ? void 0 : n.x, null == i ? void 0 : i.x), ff(e.y, r, fm, null == n ? void 0 : n.y, null == i ? void 0 : i.y)
            }

            function fv(e) {
                return 0 === e.translate && 1 === e.scale
            }

            function fy(e) {
                return fv(e.x) && fv(e.y)
            }

            function fb(e, r) {
                return e.x.min === r.x.min && e.x.max === r.x.max && e.y.min === r.y.min && e.y.max === r.y.max
            }

            function fw(e) {
                return d8(e.x) / d8(e.y)
            }
            class fx {
                constructor() {
                    this.members = []
                }
                add(e) {
                    cl(this.members, e), e.scheduleRender()
                }
                remove(e) {
                    if (cu(this.members, e), e === this.prevLead && (this.prevLead = void 0), e === this.lead) {
                        let r = this.members[this.members.length - 1];
                        r && this.promote(r)
                    }
                }
                relegate(e) {
                    let r;
                    let n = this.members.findIndex(r => e === r);
                    if (0 === n) return !1;
                    for (let i = n; i >= 0; i--) {
                        let o = this.members[i];
                        if (!1 !== o.isPresent) {
                            r = o;
                            break
                        }
                    }
                    return !!r && (this.promote(r), !0)
                }
                promote(e, r) {
                    var n;
                    let i = this.lead;
                    if (e !== i && (this.prevLead = i, this.lead = e, e.show(), i)) {
                        i.instance && i.scheduleRender(), e.scheduleRender(), e.resumeFrom = i, r && (e.resumeFrom.preserveOpacity = !0), i.snapshot && (e.snapshot = i.snapshot, e.snapshot.latestValues = i.animationValues || i.latestValues), (null === (n = e.root) || void 0 === n ? void 0 : n.isUpdating) && (e.isLayoutDirty = !0);
                        let {
                            crossfade: o
                        } = e.options;
                        !1 === o && i.hide()
                    }
                }
                exitAnimationComplete() {
                    this.members.forEach(e => {
                        var r, n, i, o, a;
                        null === (n = (r = e.options).onExitComplete) || void 0 === n || n.call(r), null === (a = null === (i = e.resumingFrom) || void 0 === i ? void 0 : (o = i.options).onExitComplete) || void 0 === a || a.call(o)
                    })
                }
                scheduleRender() {
                    this.members.forEach(e => {
                        e.instance && e.scheduleRender(!1)
                    })
                }
                removeLeadSnapshot() {
                    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0)
                }
            }

            function fE(e, r, n) {
                let i = "",
                    o = e.x.translate / r.x,
                    a = e.y.translate / r.y;
                if ((o || a) && (i = `translate3d(${o}px, ${a}px, 0) `), (1 !== r.x || 1 !== r.y) && (i += `scale(${1/r.x}, ${1/r.y}) `), n) {
                    let {
                        rotate: s,
                        rotateX: l,
                        rotateY: u
                    } = n;
                    s && (i += `rotate(${s}deg) `), l && (i += `rotateX(${l}deg) `), u && (i += `rotateY(${u}deg) `)
                }
                let c = e.x.scale * r.x,
                    d = e.y.scale * r.y;
                return (1 !== c || 1 !== d) && (i += `scale(${c}, ${d})`), i || "none"
            }
            let fC = (e, r) => e.depth - r.depth;
            class fA {
                constructor() {
                    this.children = [], this.isDirty = !1
                }
                add(e) {
                    cl(this.children, e), this.isDirty = !0
                }
                remove(e) {
                    cu(this.children, e), this.isDirty = !0
                }
                forEach(e) {
                    this.isDirty && this.children.sort(fC), this.isDirty = !1, this.children.forEach(e)
                }
            }
            let fk = ["", "X", "Y", "Z"],
                fS = 0;

            function f_({
                attachResizeListener: e,
                defaultParent: r,
                measureScroll: n,
                checkIsScrollRoot: i,
                resetTransform: o
            }) {
                return class {
                    constructor(e, n = {}, i = null == r ? void 0 : r()) {
                        this.id = fS++, this.animationId = 0, this.children = new Set, this.options = {}, this.isTreeAnimating = !1, this.isAnimationBlocked = !1, this.isLayoutDirty = !1, this.isTransformDirty = !1, this.isProjectionDirty = !1, this.updateManuallyBlocked = !1, this.updateBlockedByResize = !1, this.isUpdating = !1, this.isSVG = !1, this.needsReset = !1, this.shouldResetTransform = !1, this.treeScale = {
                            x: 1,
                            y: 1
                        }, this.eventHandlers = new Map, this.potentialNodes = new Map, this.checkUpdateFailed = () => {
                            this.isUpdating && (this.isUpdating = !1, this.clearAllSnapshots())
                        }, this.updateProjection = () => {
                            this.nodes.forEach(fT), this.nodes.forEach(fI), this.nodes.forEach(fN)
                        }, this.hasProjected = !1, this.isVisible = !0, this.animationProgress = 0, this.sharedNodes = new Map, this.elementId = e, this.latestValues = n, this.root = i ? i.root || i : this, this.path = i ? [...i.path, i] : [], this.parent = i, this.depth = i ? i.depth + 1 : 0, e && this.root.registerPotentialNode(e, this);
                        for (let o = 0; o < this.path.length; o++) this.path[o].shouldResetTransform = !0;
                        this.root === this && (this.nodes = new fA)
                    }
                    addEventListener(e, r) {
                        return this.eventHandlers.has(e) || this.eventHandlers.set(e, new cc), this.eventHandlers.get(e).add(r)
                    }
                    notifyListeners(e, ...r) {
                        let n = this.eventHandlers.get(e);
                        null == n || n.notify(...r)
                    }
                    hasListeners(e) {
                        return this.eventHandlers.has(e)
                    }
                    registerPotentialNode(e, r) {
                        this.potentialNodes.set(e, r)
                    }
                    mount(r, n = !1) {
                        var i;
                        if (this.instance) return;
                        this.isSVG = r instanceof SVGElement && "svg" !== r.tagName, this.instance = r;
                        let {
                            layoutId: o,
                            layout: a,
                            visualElement: s
                        } = this.options;
                        if (s && !s.current && s.mount(r), this.root.nodes.add(this), null === (i = this.parent) || void 0 === i || i.children.add(this), this.elementId && this.root.potentialNodes.delete(this.elementId), n && (a || o) && (this.isLayoutDirty = !0), e) {
                            let l;
                            let u = () => this.root.updateBlockedByResize = !1;
                            e(r, () => {
                                this.root.updateBlockedByResize = !0, l && l(), l = dN(u, 250), lP.hasAnimatedSinceResize && (lP.hasAnimatedSinceResize = !1, this.nodes.forEach(fM))
                            })
                        }
                        o && this.root.registerSharedNode(o, this), !1 !== this.options.animate && s && (o || a) && this.addEventListener("didUpdate", ({
                            delta: e,
                            hasLayoutChanged: r,
                            hasRelativeTargetChanged: n,
                            layout: i
                        }) => {
                            var o, a, l, u, c;
                            if (this.isTreeAnimationBlocked()) {
                                this.target = void 0, this.relativeTarget = void 0;
                                return
                            }
                            let d = null !== (a = null !== (o = this.options.transition) && void 0 !== o ? o : s.getDefaultTransition()) && void 0 !== a ? a : f$,
                                {
                                    onLayoutAnimationStart: h,
                                    onLayoutAnimationComplete: f
                                } = s.getProps(),
                                p = !this.targetLayout || !fb(this.targetLayout, i) || n,
                                m = !r && n;
                            if (this.options.layoutRoot || (null === (l = this.resumeFrom) || void 0 === l ? void 0 : l.instance) || m || r && (p || !this.currentAnimation)) {
                                this.resumeFrom && (this.resumingFrom = this.resumeFrom, this.resumingFrom.resumingFrom = void 0), this.setAnimationOrigin(e, m);
                                let g = { ...dH(d, "layout"),
                                    onPlay: h,
                                    onComplete: f
                                };
                                (s.shouldReduceMotion || this.options.layoutRoot) && (g.delay = 0, g.type = !1), this.startAnimation(g)
                            } else r || 0 !== this.animationProgress || fM(this), this.isLead() && (null === (c = (u = this.options).onExitComplete) || void 0 === c || c.call(u));
                            this.targetLayout = i
                        })
                    }
                    unmount() {
                        var e, r;
                        this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this), null === (e = this.getStack()) || void 0 === e || e.remove(this), null === (r = this.parent) || void 0 === r || r.children.delete(this), this.instance = void 0, cn.preRender(this.updateProjection)
                    }
                    blockUpdate() {
                        this.updateManuallyBlocked = !0
                    }
                    unblockUpdate() {
                        this.updateManuallyBlocked = !1
                    }
                    isUpdateBlocked() {
                        return this.updateManuallyBlocked || this.updateBlockedByResize
                    }
                    isTreeAnimationBlocked() {
                        var e;
                        return this.isAnimationBlocked || (null === (e = this.parent) || void 0 === e ? void 0 : e.isTreeAnimationBlocked()) || !1
                    }
                    startUpdate() {
                        var e;
                        !this.isUpdateBlocked() && (this.isUpdating = !0, null === (e = this.nodes) || void 0 === e || e.forEach(fF), this.animationId++)
                    }
                    getTransformTemplate() {
                        var e;
                        return null === (e = this.options.visualElement) || void 0 === e ? void 0 : e.getProps().transformTemplate
                    }
                    willUpdate(e = !0) {
                        var r, n, i;
                        if (this.root.isUpdateBlocked()) {
                            null === (n = (r = this.options).onExitComplete) || void 0 === n || n.call(r);
                            return
                        }
                        if (this.root.isUpdating || this.root.startUpdate(), this.isLayoutDirty) return;
                        this.isLayoutDirty = !0;
                        for (let o = 0; o < this.path.length; o++) {
                            let a = this.path[o];
                            a.shouldResetTransform = !0, a.updateScroll("snapshot"), a.options.layoutRoot && a.willUpdate(!1)
                        }
                        let {
                            layoutId: s,
                            layout: l
                        } = this.options;
                        (void 0 !== s || l) && (this.prevTransformTemplateValue = null === (i = this.getTransformTemplate()) || void 0 === i ? void 0 : i(this.latestValues, ""), this.updateSnapshot(), e && this.notifyListeners("willUpdate"))
                    }
                    didUpdate() {
                        let e = this.isUpdateBlocked();
                        if (e) {
                            this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(fB);
                            return
                        }
                        this.isUpdating && (this.isUpdating = !1, this.potentialNodes.size && (this.potentialNodes.forEach(fq), this.potentialNodes.clear()), this.nodes.forEach(fO), this.nodes.forEach(fP), this.nodes.forEach(fj), this.clearAllSnapshots(), ci.update(), ci.preRender(), ci.render())
                    }
                    clearAllSnapshots() {
                        this.nodes.forEach(fR), this.sharedNodes.forEach(fL)
                    }
                    scheduleUpdateProjection() {
                        cr.preRender(this.updateProjection, !1, !0)
                    }
                    scheduleCheckAfterUnmount() {
                        cr.postRender(() => {
                            this.isLayoutDirty ? this.root.didUpdate() : this.root.checkUpdateFailed()
                        })
                    }
                    updateSnapshot() {
                        !this.snapshot && this.instance && (this.snapshot = this.measure())
                    }
                    updateLayout() {
                        var e;
                        if (!this.instance || (this.updateScroll(), !(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty)) return;
                        if (this.resumeFrom && !this.resumeFrom.instance)
                            for (let r = 0; r < this.path.length; r++) {
                                let n = this.path[r];
                                n.updateScroll()
                            }
                        let i = this.layout;
                        this.layout = this.measure(!1), this.layoutCorrected = hh(), this.isLayoutDirty = !1, this.projectionDelta = void 0, this.notifyListeners("measure", this.layout.layoutBox), null === (e = this.options.visualElement) || void 0 === e || e.notify("LayoutMeasure", this.layout.layoutBox, null == i ? void 0 : i.layoutBox)
                    }
                    updateScroll(e = "measure") {
                        let r = Boolean(this.options.layoutScroll && this.instance);
                        this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === e && (r = !1), r && (this.scroll = {
                            animationId: this.root.animationId,
                            phase: e,
                            isRoot: i(this.instance),
                            offset: n(this.instance)
                        })
                    }
                    resetTransform() {
                        var e;
                        if (!o) return;
                        let r = this.isLayoutDirty || this.shouldResetTransform,
                            n = this.projectionDelta && !fy(this.projectionDelta),
                            i = null === (e = this.getTransformTemplate()) || void 0 === e ? void 0 : e(this.latestValues, ""),
                            a = i !== this.prevTransformTemplateValue;
                        r && (n || hv(this.latestValues) || a) && (o(this.instance, i), this.shouldResetTransform = !1, this.scheduleRender())
                    }
                    measure(e = !0) {
                        var r;
                        let n = this.measurePageBox(),
                            i = this.removeElementScroll(n);
                        return e && (i = this.removeTransform(i)), fW((r = i).x), fW(r.y), {
                            animationId: this.root.animationId,
                            measuredBox: n,
                            layoutBox: i,
                            latestValues: {},
                            source: this.id
                        }
                    }
                    measurePageBox() {
                        let {
                            visualElement: e
                        } = this.options;
                        if (!e) return hh();
                        let r = e.measureViewportBox(),
                            {
                                scroll: n
                            } = this.root;
                        return n && (hC(r.x, n.offset.x), hC(r.y, n.offset.y)), r
                    }
                    removeElementScroll(e) {
                        let r = hh();
                        fd(r, e);
                        for (let n = 0; n < this.path.length; n++) {
                            let i = this.path[n],
                                {
                                    scroll: o,
                                    options: a
                                } = i;
                            if (i !== this.root && o && a.layoutScroll) {
                                if (o.isRoot) {
                                    fd(r, e);
                                    let {
                                        scroll: s
                                    } = this.root;
                                    s && (hC(r.x, -s.offset.x), hC(r.y, -s.offset.y))
                                }
                                hC(r.x, o.offset.x), hC(r.y, o.offset.y)
                            }
                        }
                        return r
                    }
                    applyTransform(e, r = !1) {
                        let n = hh();
                        fd(n, e);
                        for (let i = 0; i < this.path.length; i++) {
                            let o = this.path[i];
                            !r && o.options.layoutScroll && o.scroll && o !== o.root && h_(n, {
                                x: -o.scroll.offset.x,
                                y: -o.scroll.offset.y
                            }), hv(o.latestValues) && h_(n, o.latestValues)
                        }
                        return hv(this.latestValues) && h_(n, this.latestValues), n
                    }
                    removeTransform(e) {
                        var r;
                        let n = hh();
                        fd(n, e);
                        for (let i = 0; i < this.path.length; i++) {
                            let o = this.path[i];
                            if (!o.instance || !hv(o.latestValues)) continue;
                            hg(o.latestValues) && o.updateSnapshot();
                            let a = hh(),
                                s = o.measurePageBox();
                            fd(a, s), fg(n, o.latestValues, null === (r = o.snapshot) || void 0 === r ? void 0 : r.layoutBox, a)
                        }
                        return hv(this.latestValues) && fg(n, this.latestValues), n
                    }
                    setTargetDelta(e) {
                        this.targetDelta = e, this.isProjectionDirty = !0, this.root.scheduleUpdateProjection()
                    }
                    setOptions(e) {
                        this.options = { ...this.options,
                            ...e,
                            crossfade: void 0 === e.crossfade || e.crossfade
                        }
                    }
                    clearMeasurements() {
                        this.scroll = void 0, this.layout = void 0, this.snapshot = void 0, this.prevTransformTemplateValue = void 0, this.targetDelta = void 0, this.target = void 0, this.isLayoutDirty = !1
                    }
                    resolveTargetDelta() {
                        var e, r, n, i;
                        let o = this.getLead();
                        if (this.isProjectionDirty || (this.isProjectionDirty = o.isProjectionDirty), this.isTransformDirty || (this.isTransformDirty = o.isTransformDirty), !this.isProjectionDirty && !this.attemptToResolveRelativeTarget) return;
                        let {
                            layout: a,
                            layoutId: s
                        } = this.options;
                        if (this.layout && (a || s)) {
                            if (!this.targetDelta && !this.relativeTarget) {
                                let l = this.getClosestProjectingParent();
                                l && l.layout ? (this.relativeParent = l, this.relativeTarget = hh(), this.relativeTargetOrigin = hh(), hi(this.relativeTargetOrigin, this.layout.layoutBox, l.layout.layoutBox), fd(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0
                            }
                            if ((this.relativeTarget || this.targetDelta) && ((this.target || (this.target = hh(), this.targetWithTransforms = hh()), this.relativeTarget && this.relativeTargetOrigin && (null === (e = this.relativeParent) || void 0 === e ? void 0 : e.target)) ? (r = this.target, n = this.relativeTarget, i = this.relativeParent.target, hr(r.x, n.x, i.x), hr(r.y, n.y, i.y)) : this.targetDelta ? (Boolean(this.resumingFrom) ? this.target = this.applyTransform(this.layout.layoutBox) : fd(this.target, this.layout.layoutBox), hx(this.target, this.targetDelta)) : fd(this.target, this.layout.layoutBox), this.attemptToResolveRelativeTarget)) {
                                this.attemptToResolveRelativeTarget = !1;
                                let u = this.getClosestProjectingParent();
                                u && Boolean(u.resumingFrom) === Boolean(this.resumingFrom) && !u.options.layoutScroll && u.target ? (this.relativeParent = u, this.relativeTarget = hh(), this.relativeTargetOrigin = hh(), hi(this.relativeTargetOrigin, this.target, u.target), fd(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0
                            }
                        }
                    }
                    getClosestProjectingParent() {
                        return !this.parent || hg(this.parent.latestValues) || hy(this.parent.latestValues) ? void 0 : (this.parent.relativeTarget || this.parent.targetDelta || this.parent.options.layoutRoot) && this.parent.layout ? this.parent : this.parent.getClosestProjectingParent()
                    }
                    calcProjection() {
                        var e;
                        let {
                            isProjectionDirty: r,
                            isTransformDirty: n
                        } = this;
                        this.isProjectionDirty = this.isTransformDirty = !1;
                        let i = this.getLead(),
                            o = Boolean(this.resumingFrom) || this !== i,
                            a = !0;
                        if (r && (a = !1), o && n && (a = !1), a) return;
                        let {
                            layout: s,
                            layoutId: l
                        } = this.options;
                        if (this.isTreeAnimating = Boolean((null === (e = this.parent) || void 0 === e ? void 0 : e.isTreeAnimating) || this.currentAnimation || this.pendingAnimation), this.isTreeAnimating || (this.targetDelta = this.relativeTarget = void 0), !this.layout || !(s || l)) return;
                        fd(this.layoutCorrected, this.layout.layoutBox),
                            function(e, r, n, i = !1) {
                                var o, a;
                                let s, l;
                                let u = n.length;
                                if (u) {
                                    r.x = r.y = 1;
                                    for (let c = 0; c < u; c++) l = (s = n[c]).projectionDelta, (null === (a = null === (o = s.instance) || void 0 === o ? void 0 : o.style) || void 0 === a ? void 0 : a.display) !== "contents" && (i && s.options.layoutScroll && s.scroll && s !== s.root && h_(e, {
                                        x: -s.scroll.offset.x,
                                        y: -s.scroll.offset.y
                                    }), l && (r.x *= l.x.scale, r.y *= l.y.scale, hx(e, l)), i && hv(s.latestValues) && h_(e, s.latestValues));
                                    r.x = hE(r.x), r.y = hE(r.y)
                                }
                            }(this.layoutCorrected, this.treeScale, this.path, o);
                        let {
                            target: u
                        } = i;
                        if (!u) return;
                        this.projectionDelta || (this.projectionDelta = hc(), this.projectionDeltaWithTransform = hc());
                        let c = this.treeScale.x,
                            d = this.treeScale.y,
                            h = this.projectionTransform;
                        ht(this.projectionDelta, this.layoutCorrected, u, this.latestValues), this.projectionTransform = fE(this.projectionDelta, this.treeScale), (this.projectionTransform !== h || this.treeScale.x !== c || this.treeScale.y !== d) && (this.hasProjected = !0, this.scheduleRender(), this.notifyListeners("projectionUpdate", u))
                    }
                    hide() {
                        this.isVisible = !1
                    }
                    show() {
                        this.isVisible = !0
                    }
                    scheduleRender(e = !0) {
                        var r, n, i;
                        null === (n = (r = this.options).scheduleRender) || void 0 === n || n.call(r), e && (null === (i = this.getStack()) || void 0 === i || i.scheduleRender()), this.resumingFrom && !this.resumingFrom.instance && (this.resumingFrom = void 0)
                    }
                    setAnimationOrigin(e, r = !1) {
                        var n, i;
                        let o = this.snapshot,
                            a = (null == o ? void 0 : o.latestValues) || {},
                            s = { ...this.latestValues
                            },
                            l = hc();
                        this.relativeParent && this.relativeParent.options.layoutRoot || (this.relativeTarget = this.relativeTargetOrigin = void 0), this.attemptToResolveRelativeTarget = !r;
                        let u = hh(),
                            c = (null == o ? void 0 : o.source) !== (null === (n = this.layout) || void 0 === n ? void 0 : n.source),
                            d = 1 >= ((null === (i = this.getStack()) || void 0 === i ? void 0 : i.members.length) || 0),
                            h = Boolean(c && !d && !0 === this.options.crossfade && !this.path.some(fU));
                        this.animationProgress = 0, this.mixTargetDelta = r => {
                            var n, i, o;
                            let f = r / 1e3;
                            fD(l.x, e.x, f), fD(l.y, e.y, f), this.setTargetDelta(l), this.relativeTarget && this.relativeTargetOrigin && this.layout && (null === (n = this.relativeParent) || void 0 === n ? void 0 : n.layout) && (hi(u, this.layout.layoutBox, this.relativeParent.layout.layoutBox), i = this.relativeTarget, o = this.relativeTargetOrigin, fz(i.x, o.x, u.x, f), fz(i.y, o.y, u.y, f)), c && (this.animationValues = s, function(e, r, n, i, o, a) {
                                o ? (e.opacity = c0(0, void 0 !== n.opacity ? n.opacity : 1, fs(i)), e.opacityExit = c0(void 0 !== r.opacity ? r.opacity : 1, 0, fl(i))) : a && (e.opacity = c0(void 0 !== r.opacity ? r.opacity : 1, void 0 !== n.opacity ? n.opacity : 1, i));
                                for (let s = 0; s < fn; s++) {
                                    let l = `border${fr[s]}Radius`,
                                        u = fa(r, l),
                                        c = fa(n, l);
                                    if (void 0 === u && void 0 === c) continue;
                                    u || (u = 0), c || (c = 0);
                                    let d = 0 === u || 0 === c || fo(u) === fo(c);
                                    d ? (e[l] = Math.max(c0(fi(u), fi(c), i), 0), (l2.test(c) || l2.test(u)) && (e[l] += "%")) : e[l] = c
                                }(r.rotate || n.rotate) && (e.rotate = c0(r.rotate || 0, n.rotate || 0, i))
                            }(s, a, this.latestValues, f, h, d)), this.root.scheduleUpdateProjection(), this.scheduleRender(), this.animationProgress = f
                        }, this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0)
                    }
                    startAnimation(e) {
                        var r, n;
                        this.notifyListeners("animationStart"), null === (r = this.currentAnimation) || void 0 === r || r.stop(), this.resumingFrom && (null === (n = this.resumingFrom.currentAnimation) || void 0 === n || n.stop()), this.pendingAnimation && (cn.update(this.pendingAnimation), this.pendingAnimation = void 0), this.pendingAnimation = cr.update(() => {
                            lP.hasAnimatedSinceResize = !0, this.currentAnimation = function(e, r, n = {}) {
                                let i = lz(e) ? e : cp(e);
                                return i.start(dG("", i, 1e3, n)), {
                                    stop: () => i.stop(),
                                    isAnimating: () => i.isAnimating()
                                }
                            }(0, 0, { ...e,
                                onUpdate: r => {
                                    var n;
                                    this.mixTargetDelta(r), null === (n = e.onUpdate) || void 0 === n || n.call(e, r)
                                },
                                onComplete: () => {
                                    var r;
                                    null === (r = e.onComplete) || void 0 === r || r.call(e), this.completeAnimation()
                                }
                            }), this.resumingFrom && (this.resumingFrom.currentAnimation = this.currentAnimation), this.pendingAnimation = void 0
                        })
                    }
                    completeAnimation() {
                        var e;
                        this.resumingFrom && (this.resumingFrom.currentAnimation = void 0, this.resumingFrom.preserveOpacity = void 0), null === (e = this.getStack()) || void 0 === e || e.exitAnimationComplete(), this.resumingFrom = this.currentAnimation = this.animationValues = void 0, this.notifyListeners("animationComplete")
                    }
                    finishAnimation() {
                        var e;
                        this.currentAnimation && (null === (e = this.mixTargetDelta) || void 0 === e || e.call(this, 1e3), this.currentAnimation.stop()), this.completeAnimation()
                    }
                    applyTransformsToTarget() {
                        let e = this.getLead(),
                            {
                                targetWithTransforms: r,
                                target: n,
                                layout: i,
                                latestValues: o
                            } = e;
                        if (r && n && i) {
                            if (this !== e && this.layout && i && fV(this.options.animationType, this.layout.layoutBox, i.layoutBox)) {
                                n = this.target || hh();
                                let a = d8(this.layout.layoutBox.x);
                                n.x.min = e.target.x.min, n.x.max = n.x.min + a;
                                let s = d8(this.layout.layoutBox.y);
                                n.y.min = e.target.y.min, n.y.max = n.y.min + s
                            }
                            fd(r, n), h_(r, o), ht(this.projectionDeltaWithTransform, this.layoutCorrected, r, o)
                        }
                    }
                    registerSharedNode(e, r) {
                        var n, i, o;
                        this.sharedNodes.has(e) || this.sharedNodes.set(e, new fx);
                        let a = this.sharedNodes.get(e);
                        a.add(r), r.promote({
                            transition: null === (n = r.options.initialPromotionConfig) || void 0 === n ? void 0 : n.transition,
                            preserveFollowOpacity: null === (o = null === (i = r.options.initialPromotionConfig) || void 0 === i ? void 0 : i.shouldPreserveFollowOpacity) || void 0 === o ? void 0 : o.call(i, r)
                        })
                    }
                    isLead() {
                        let e = this.getStack();
                        return !e || e.lead === this
                    }
                    getLead() {
                        var e;
                        let {
                            layoutId: r
                        } = this.options;
                        return r && (null === (e = this.getStack()) || void 0 === e ? void 0 : e.lead) || this
                    }
                    getPrevLead() {
                        var e;
                        let {
                            layoutId: r
                        } = this.options;
                        return r ? null === (e = this.getStack()) || void 0 === e ? void 0 : e.prevLead : void 0
                    }
                    getStack() {
                        let {
                            layoutId: e
                        } = this.options;
                        if (e) return this.root.sharedNodes.get(e)
                    }
                    promote({
                        needsReset: e,
                        transition: r,
                        preserveFollowOpacity: n
                    } = {}) {
                        let i = this.getStack();
                        i && i.promote(this, n), e && (this.projectionDelta = void 0, this.needsReset = !0), r && this.setOptions({
                            transition: r
                        })
                    }
                    relegate() {
                        let e = this.getStack();
                        return !!e && e.relegate(this)
                    }
                    resetRotation() {
                        let {
                            visualElement: e
                        } = this.options;
                        if (!e) return;
                        let r = !1,
                            {
                                latestValues: n
                            } = e;
                        if ((n.rotate || n.rotateX || n.rotateY || n.rotateZ) && (r = !0), !r) return;
                        let i = {};
                        for (let o = 0; o < fk.length; o++) {
                            let a = "rotate" + fk[o];
                            n[a] && (i[a] = n[a], e.setStaticValue(a, 0))
                        }
                        for (let s in null == e || e.render(), i) e.setStaticValue(s, i[s]);
                        e.scheduleRender()
                    }
                    getProjectionStyles(e = {}) {
                        var r, n;
                        let i = {};
                        if (!this.instance || this.isSVG) return i;
                        if (!this.isVisible) return {
                            visibility: "hidden"
                        };
                        i.visibility = "";
                        let o = this.getTransformTemplate();
                        if (this.needsReset) return this.needsReset = !1, i.opacity = "", i.pointerEvents = uA(e.pointerEvents) || "", i.transform = o ? o(this.latestValues, "") : "none", i;
                        let a = this.getLead();
                        if (!this.projectionDelta || !this.layout || !a.target) {
                            let s = {};
                            return this.options.layoutId && (s.opacity = void 0 !== this.latestValues.opacity ? this.latestValues.opacity : 1, s.pointerEvents = uA(e.pointerEvents) || ""), this.hasProjected && !hv(this.latestValues) && (s.transform = o ? o({}, "") : "none", this.hasProjected = !1), s
                        }
                        let l = a.animationValues || a.latestValues;
                        this.applyTransformsToTarget(), i.transform = fE(this.projectionDeltaWithTransform, this.treeScale, l), o && (i.transform = o(l, i.transform));
                        let {
                            x: u,
                            y: c
                        } = this.projectionDelta;
                        for (let d in i.transformOrigin = `${100*u.origin}% ${100*c.origin}% 0`, a.animationValues ? i.opacity = a === this ? null !== (n = null !== (r = l.opacity) && void 0 !== r ? r : this.latestValues.opacity) && void 0 !== n ? n : 1 : this.preserveOpacity ? this.latestValues.opacity : l.opacityExit : i.opacity = a === this ? void 0 !== l.opacity ? l.opacity : "" : void 0 !== l.opacityExit ? l.opacityExit : 0, lN) {
                            if (void 0 === l[d]) continue;
                            let {
                                correct: h,
                                applyTo: f
                            } = lN[d], p = "none" === i.transform ? l[d] : h(l[d], a);
                            if (f) {
                                let m = f.length;
                                for (let g = 0; g < m; g++) i[f[g]] = p
                            } else i[d] = p
                        }
                        return this.options.layoutId && (i.pointerEvents = a === this ? uA(e.pointerEvents) || "" : "none"), i
                    }
                    clearSnapshot() {
                        this.resumeFrom = this.snapshot = void 0
                    }
                    resetTree() {
                        this.root.nodes.forEach(e => {
                            var r;
                            return null === (r = e.currentAnimation) || void 0 === r ? void 0 : r.stop()
                        }), this.root.nodes.forEach(fB), this.root.sharedNodes.clear()
                    }
                }
            }

            function fP(e) {
                e.updateLayout()
            }

            function fj(e) {
                var r, n, i;
                let o = (null === (r = e.resumeFrom) || void 0 === r ? void 0 : r.snapshot) || e.snapshot;
                if (e.isLead() && e.layout && o && e.hasListeners("didUpdate")) {
                    let {
                        layoutBox: a,
                        measuredBox: s
                    } = e.layout, {
                        animationType: l
                    } = e.options, u = o.source !== e.layout.source;
                    "size" === l ? hf(e => {
                        let r = u ? o.measuredBox[e] : o.layoutBox[e],
                            n = d8(r);
                        r.min = a[e].min, r.max = r.min + n
                    }) : fV(l, o.layoutBox, a) && hf(e => {
                        let r = u ? o.measuredBox[e] : o.layoutBox[e],
                            n = d8(a[e]);
                        r.max = r.min + n
                    });
                    let c = hc();
                    ht(c, a, o.layoutBox);
                    let d = hc();
                    u ? ht(d, e.applyTransform(s, !0), o.measuredBox) : ht(d, a, o.layoutBox);
                    let h = !fy(c),
                        f = !1;
                    if (!e.resumeFrom) {
                        let p = e.getClosestProjectingParent();
                        if (p && !p.resumeFrom) {
                            let {
                                snapshot: m,
                                layout: g
                            } = p;
                            if (m && g) {
                                let v = hh();
                                hi(v, o.layoutBox, m.layoutBox);
                                let y = hh();
                                hi(y, a, g.layoutBox), fb(v, y) || (f = !0), p.options.layoutRoot && (e.relativeTarget = y, e.relativeTargetOrigin = v, e.relativeParent = p)
                            }
                        }
                    }
                    e.notifyListeners("didUpdate", {
                        layout: a,
                        snapshot: o,
                        delta: d,
                        layoutDelta: c,
                        hasLayoutChanged: h,
                        hasRelativeTargetChanged: f
                    })
                } else e.isLead() && (null === (i = (n = e.options).onExitComplete) || void 0 === i || i.call(n));
                e.options.transition = void 0
            }

            function fT(e) {
                e.isProjectionDirty || (e.isProjectionDirty = Boolean(e.parent && e.parent.isProjectionDirty)), e.isTransformDirty || (e.isTransformDirty = Boolean(e.parent && e.parent.isTransformDirty))
            }

            function fR(e) {
                e.clearSnapshot()
            }

            function fB(e) {
                e.clearMeasurements()
            }

            function fO(e) {
                let {
                    visualElement: r
                } = e.options;
                (null == r ? void 0 : r.getProps().onBeforeLayoutMeasure) && r.notify("BeforeLayoutMeasure"), e.resetTransform()
            }

            function fM(e) {
                e.finishAnimation(), e.targetDelta = e.relativeTarget = e.target = void 0
            }

            function fI(e) {
                e.resolveTargetDelta()
            }

            function fN(e) {
                e.calcProjection()
            }

            function fF(e) {
                e.resetRotation()
            }

            function fL(e) {
                e.removeLeadSnapshot()
            }

            function fD(e, r, n) {
                e.translate = c0(r.translate, 0, n), e.scale = c0(r.scale, 1, n), e.origin = r.origin, e.originPoint = r.originPoint
            }

            function fz(e, r, n, i) {
                e.min = c0(r.min, n.min, i), e.max = c0(r.max, n.max, i)
            }

            function fU(e) {
                return e.animationValues && void 0 !== e.animationValues.opacityExit
            }
            let f$ = {
                duration: .45,
                ease: [.4, 0, .1, 1]
            };

            function fq(e, r) {
                let n = e.root;
                for (let i = e.path.length - 1; i >= 0; i--)
                    if (Boolean(e.path[i].instance)) {
                        n = e.path[i];
                        break
                    }
                let o = n && n !== e.root ? n.instance : document,
                    a = o.querySelector(`[data-projection-id="${r}"]`);
                a && e.mount(a, !0)
            }

            function fW(e) {
                e.min = Math.round(e.min), e.max = Math.round(e.max)
            }

            function fV(e, r, n) {
                return "position" === e || "preserve-aspect" === e && !d9(fw(r), fw(n), .2)
            }
            let fH = f_({
                    attachResizeListener: (e, r) => uP(e, "resize", r),
                    measureScroll: () => ({
                        x: document.documentElement.scrollLeft || document.body.scrollLeft,
                        y: document.documentElement.scrollTop || document.body.scrollTop
                    }),
                    checkIsScrollRoot: () => !0
                }),
                fG = {
                    current: void 0
                },
                fK = f_({
                    measureScroll: e => ({
                        x: e.scrollLeft,
                        y: e.scrollTop
                    }),
                    defaultParent: () => {
                        if (!fG.current) {
                            let e = new fH(0, {});
                            e.mount(window), e.setOptions({
                                layoutScroll: !0
                            }), fG.current = e
                        }
                        return fG.current
                    },
                    resetTransform: (e, r) => {
                        e.style.transform = void 0 !== r ? r : "none"
                    },
                    checkIsScrollRoot: e => Boolean("fixed" === window.getComputedStyle(e).position)
                }),
                fQ = { ...d1,
                    ...uZ,
                    ...hB,
                    measureLayout: function(e) {
                        let [r, n] = lh(), i = (0, Z.useContext)(lT);
                        return Z.createElement(fe, { ...e,
                            layoutGroup: i,
                            switchLayoutGroup: (0, Z.useContext)(lB),
                            isPresent: r,
                            safeToRemove: n
                        })
                    }
                },
                fJ = function(e) {
                    function r(r, n = {}) {
                        return function({
                            preloadedFeatures: e,
                            createVisualElement: r,
                            projectionNodeConstructor: n,
                            useRender: i,
                            useVisualState: o,
                            Component: a
                        }) {
                            e && function(e) {
                                for (let r in e) "projectionNodeConstructor" === r ? lS.projectionNodeConstructor = e[r] : lS[r].Component = e[r]
                            }(e);
                            let s = (0, Z.forwardRef)(function(s, l) {
                                var u, c;
                                let d = { ...(0, Z.useContext)(lf),
                                        ...s,
                                        layoutId: function({
                                            layoutId: e
                                        }) {
                                            let r = (0, Z.useContext)(lT).id;
                                            return r && void 0 !== e ? r + "-" + e : e
                                        }(s)
                                    },
                                    {
                                        isStatic: h
                                    } = d,
                                    f = null,
                                    p = function(e) {
                                        let {
                                            initial: r,
                                            animate: n
                                        } = function(e, r) {
                                            if (lE(e)) {
                                                let {
                                                    initial: n,
                                                    animate: i
                                                } = e;
                                                return {
                                                    initial: !1 === n || lb(n) ? n : void 0,
                                                    animate: lb(i) ? i : void 0
                                                }
                                            }
                                            return !1 !== e.inherit ? r : {}
                                        }(e, (0, Z.useContext)(lp));
                                        return (0, Z.useMemo)(() => ({
                                            initial: r,
                                            animate: n
                                        }), [lA(r), lA(n)])
                                    }(s),
                                    m = h ? void 0 : l_(() => {
                                        if (lP.hasEverUpdated) return lj++
                                    }),
                                    g = o(s, h);
                                if (!h && lm) {
                                    p.visualElement = function(e, r, n, i) {
                                        let o = (0, Z.useContext)(lp).visualElement,
                                            a = (0, Z.useContext)(lv),
                                            s = (0, Z.useContext)(ld),
                                            l = (0, Z.useContext)(lf).reducedMotion,
                                            u = (0, Z.useRef)();
                                        i = i || a.renderer, !u.current && i && (u.current = i(e, {
                                            visualState: r,
                                            parent: o,
                                            props: n,
                                            presenceId: s ? s.id : void 0,
                                            blockInitialAnimation: !!s && !1 === s.initial,
                                            reducedMotionConfig: l
                                        }));
                                        let c = u.current;
                                        lg(() => {
                                            c && c.render()
                                        });
                                        let d = window.HandoffAppearAnimations ? lg : Z.useEffect;
                                        return d(() => {
                                            c && c.animationState && c.animationState.animateChanges()
                                        }), c
                                    }(a, g, d, r);
                                    let v = (0, Z.useContext)(lv).strict,
                                        y = (0, Z.useContext)(lB);
                                    p.visualElement && (f = p.visualElement.loadFeatures(d, v, e, m, n || lS.projectionNodeConstructor, y))
                                }
                                return Z.createElement(lR, {
                                    visualElement: p.visualElement,
                                    props: d
                                }, f, Z.createElement(lp.Provider, {
                                    value: p
                                }, i(a, s, m, (u = p.visualElement, c = l, (0, Z.useCallback)(e => {
                                    e && g.mount && g.mount(e), u && (e ? u.mount(e) : u.unmount()), c && ("function" == typeof c ? c(e) : ly(c) && (c.current = e))
                                }, [u])), g, h, p.visualElement)))
                            });
                            return s[lO] = a, s
                        }(e(r, n))
                    }
                    if ("undefined" == typeof Proxy) return r;
                    let n = new Map;
                    return new Proxy(r, {
                        get: (e, i) => (n.has(i) || n.set(i, r(i)), n.get(i))
                    })
                }((e, r) => (function(e, {
                    forwardMotionProps: r = !1
                }, n, i, o) {
                    let a = lI(e) ? uS : u_;
                    return { ...a,
                        preloadedFeatures: n,
                        useRender: function(e = !1) {
                            let r = (r, n, i, o, {
                                latestValues: a
                            }, s) => {
                                let l = lI(r) ? uf : ur,
                                    u = l(n, a, s, r),
                                    c = function(e, r, n) {
                                        let i = {};
                                        for (let o in e)("values" !== o || "object" != typeof e.values) && (uo(o) || !0 === n && ui(o) || !r && !ui(o) || e.draggable && o.startsWith("onDrag")) && (i[o] = e[o]);
                                        return i
                                    }(n, "string" == typeof r, e),
                                    d = { ...c,
                                        ...u,
                                        ref: o
                                    },
                                    {
                                        children: h
                                    } = n,
                                    f = (0, Z.useMemo)(() => lz(h) ? h.get() : h, [h]);
                                return i && (d["data-projection-id"] = i), (0, Z.createElement)(r, { ...d,
                                    children: f
                                })
                            };
                            return r
                        }(r),
                        createVisualElement: i,
                        projectionNodeConstructor: o,
                        Component: e
                    }
                })(e, r, fQ, h5, fK));
            var fY = new Set([...r8, "textStyle", "layerStyle", "apply", "noOfLines", "focusBorderColor", "errorBorderColor", "as", "__css", "css", "sx"]),
                fX = new Set(["htmlWidth", "htmlHeight", "htmlSize", "htmlTranslate"]);

            function fZ(e) {
                return fX.has(e) || !fY.has(e)
            }
            var f0 = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
                f1 = tx(function(e) {
                    return f0.test(e) || 111 === e.charCodeAt(0) && 110 === e.charCodeAt(1) && 91 > e.charCodeAt(2)
                }),
                f2 = function(e) {
                    return "theme" !== e
                },
                f3 = function(e) {
                    return "string" == typeof e && e.charCodeAt(0) > 96 ? f1 : f2
                },
                f6 = function(e, r, n) {
                    var i;
                    if (r) {
                        var o = r.shouldForwardProp;
                        i = e.__emotion_forwardProp && o ? function(r) {
                            return e.__emotion_forwardProp(r) && o(r)
                        } : o
                    }
                    return "function" != typeof i && n && (i = e.__emotion_forwardProp), i
                },
                f5 = function(e) {
                    var r = e.cache,
                        n = e.serialized,
                        i = e.isStringTag;
                    return tD(r, n, i), tB(function() {
                        return tz(r, n, i)
                    }), null
                },
                f4 = (function e(r, n) {
                    var i, o, a = r.__emotion_real === r,
                        s = a && r.__emotion_base || r;
                    void 0 !== n && (i = n.label, o = n.target);
                    var l = f6(r, n, a),
                        u = l || f3(s),
                        c = !u("as");
                    return function() {
                        var d = arguments,
                            h = a && void 0 !== r.__emotion_styles ? r.__emotion_styles.slice(0) : [];
                        if (void 0 !== i && h.push("label:" + i + ";"), null == d[0] || void 0 === d[0].raw) h.push.apply(h, d);
                        else {
                            h.push(d[0][0]);
                            for (var f = d.length, p = 1; p < f; p++) h.push(d[p], d[0][p])
                        }
                        var m = tI(function(e, r, n) {
                            var i, a, d, f = c && e.as || s,
                                p = "",
                                m = [],
                                g = e;
                            if (null == e.theme) {
                                for (var v in g = {}, e) g[v] = e[v];
                                g.theme = Z.useContext(tN)
                            }
                            "string" == typeof e.className ? (i = r.registered, a = e.className, d = "", a.split(" ").forEach(function(e) {
                                void 0 !== i[e] ? m.push(i[e] + ";") : d += e + " "
                            }), p = d) : null != e.className && (p = e.className + " ");
                            var y = tT(h.concat(m), r.registered, g);
                            p += r.key + "-" + y.name, void 0 !== o && (p += " " + o);
                            var b = c && void 0 === l ? f3(f) : u,
                                w = {};
                            for (var x in e)(!c || "as" !== x) && b(x) && (w[x] = e[x]);
                            return w.className = p, w.ref = n, Z.createElement(Z.Fragment, null, Z.createElement(f5, {
                                cache: r,
                                serialized: y,
                                isStringTag: "string" == typeof f
                            }), Z.createElement(f, w))
                        });
                        return m.displayName = void 0 !== i ? i : "Styled(" + ("string" == typeof s ? s : s.displayName || s.name || "Component") + ")", m.defaultProps = r.defaultProps, m.__emotion_real = m, m.__emotion_base = s, m.__emotion_styles = h, m.__emotion_forwardProp = l, Object.defineProperty(m, "toString", {
                            value: function() {
                                return "." + o
                            }
                        }), m.withComponent = function(r, i) {
                            return e(r, ty({}, n, i, {
                                shouldForwardProp: f6(m, i, !0)
                            })).apply(void 0, h)
                        }, m
                    }
                }).bind();
            ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "tspan"].forEach(function(e) {
                f4[e] = f4(e)
            });
            var f7 = null != (U = f4.default) ? U : f4,
                f8 = ({
                    baseStyle: e
                }) => r => {
                    let {
                        theme: n,
                        css: i,
                        __css: o,
                        sx: a,
                        ...s
                    } = r, l = nl(s, (e, r) => ne(r)), u = nc(e, r), c = function(e, ...r) {
                        if (null == e) throw TypeError("Cannot convert undefined or null to object");
                        let n = { ...e
                        };
                        for (let i of r)
                            if (null != i)
                                for (let o in i) Object.prototype.hasOwnProperty.call(i, o) && (o in n && delete n[o], n[o] = i[o]);
                        return n
                    }({}, o, u, nu(l), a), d = ni(c)(r.theme);
                    return i ? [d, i] : d
                };

            function f9(e, r) {
                let {
                    baseStyle: n,
                    ...i
                } = null != r ? r : {};
                i.shouldForwardProp || (i.shouldForwardProp = fZ);
                let o = f8({
                        baseStyle: n
                    }),
                    a = f7(e, i)(o),
                    s = Z.forwardRef(function(e, r) {
                        let {
                            colorMode: n,
                            forced: i
                        } = tX();
                        return Z.createElement(a, {
                            ref: r,
                            "data-theme": i ? n : void 0,
                            ...e
                        })
                    });
                return s
            }
            var pe = function() {
                    let e = new Map;
                    return new Proxy(f9, {
                        apply: (e, r, n) => f9(...n),
                        get: (r, n) => (e.has(n) || e.set(n, f9(n)), e.get(n))
                    })
                }(),
                pt = {
                    initial: e => {
                        let {
                            position: r
                        } = e, n = ["top", "bottom"].includes(r) ? "y" : "x", i = ["top-right", "bottom-right"].includes(r) ? 1 : -1;
                        return "bottom" === r && (i = 1), {
                            opacity: 0,
                            [n]: 24 * i
                        }
                    },
                    animate: {
                        opacity: 1,
                        y: 0,
                        x: 0,
                        scale: 1,
                        transition: {
                            duration: .4,
                            ease: [.4, 0, .2, 1]
                        }
                    },
                    exit: {
                        opacity: 0,
                        scale: .85,
                        transition: {
                            duration: .2,
                            ease: [.4, 0, 1, 1]
                        }
                    }
                },
                pr = (0, Z.memo)(e => {
                    var r;
                    let {
                        id: n,
                        message: i,
                        onCloseComplete: o,
                        onRequestRemove: a,
                        requestClose: s = !1,
                        position: l = "bottom",
                        duration: u = 5e3,
                        containerStyle: c,
                        motionVariants: d = pt,
                        toastSpacing: h = "0.5rem"
                    } = e, [f, p] = (0, Z.useState)(u), m = null === (r = (0, Z.useContext)(ld)) || r.isPresent;
                    lc(() => {
                        m || null == o || o()
                    }, [m]), lc(() => {
                        p(u)
                    }, [u]);
                    let g = () => p(null),
                        v = () => p(u),
                        y = () => {
                            m && a()
                        };
                    (0, Z.useEffect)(() => {
                        m && s && a()
                    }, [m, s, a]),
                    function(e, r) {
                        let n = function(e, r = []) {
                            let n = (0, Z.useRef)(e);
                            return (0, Z.useEffect)(() => {
                                n.current = e
                            }), (0, Z.useCallback)((...e) => {
                                var r;
                                return null == (r = n.current) ? void 0 : r.call(n, ...e)
                            }, r)
                        }(e);
                        (0, Z.useEffect)(() => {
                            if (null == r) return;
                            let e = null;
                            return e = window.setTimeout(() => {
                                n()
                            }, r), () => {
                                e && window.clearTimeout(e)
                            }
                        }, [r, n])
                    }(y, f);
                    let b = (0, Z.useMemo)(() => ({
                            pointerEvents: "auto",
                            maxWidth: 560,
                            minWidth: 300,
                            margin: h,
                            ...c
                        }), [c, h]),
                        w = (0, Z.useMemo)(() => (function(e) {
                            let r = e.includes("right"),
                                n = e.includes("left"),
                                i = "center";
                            return r && (i = "flex-end"), n && (i = "flex-start"), {
                                display: "flex",
                                flexDirection: "column",
                                alignItems: i
                            }
                        })(l), [l]);
                    return (0, $.jsx)(fJ.div, {
                        layout: !0,
                        className: "chakra-toast",
                        variants: d,
                        initial: "initial",
                        animate: "animate",
                        exit: "exit",
                        onHoverStart: g,
                        onHoverEnd: v,
                        custom: {
                            position: l
                        },
                        style: w,
                        children: (0, $.jsx)(pe.div, {
                            role: "status",
                            "aria-atomic": "true",
                            className: "chakra-toast__inner",
                            __css: b,
                            children: t1(i, {
                                id: n,
                                onClose: y
                            })
                        })
                    })
                });

            function pn(e) {
                return (0, Z.forwardRef)(e)
            }
            pr.displayName = "ToastComponent";
            var pi = n(69590);

            function po(e, r = {}) {
                var n;
                let {
                    styleConfig: i,
                    ...o
                } = r, {
                    theme: a,
                    colorMode: s
                } = function() {
                    let e = tX(),
                        r = function() {
                            let e = (0, Z.useContext)(tN);
                            if (!e) throw Error("useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`");
                            return e
                        }();
                    return { ...e,
                        theme: r
                    }
                }(), l = e ? ns(a, `components.${e}`) : void 0, u = i || l, c = t3({
                    theme: a,
                    colorMode: s
                }, null != (n = null == u ? void 0 : u.defaultProps) ? n : {}, nu(function(e, r) {
                    let n = {};
                    return Object.keys(e).forEach(i => {
                        r.includes(i) || (n[i] = e[i])
                    }), n
                }(o, ["children"]))), d = (0, Z.useRef)({});
                if (u) {
                    let h = (e => {
                            var r;
                            let {
                                variant: n,
                                size: i,
                                theme: o
                            } = e, a = function(e) {
                                let r = e.__breakpoints;
                                return function(e, n, i, o) {
                                    var a, s, l;
                                    if (!r) return;
                                    let u = {},
                                        c = (l = r.toArrayValue, Array.isArray(i) ? i : t0(i) ? l(i) : null != i ? [i] : void 0);
                                    if (!c) return u;
                                    let d = c.length,
                                        h = 1 === d,
                                        f = !!e.parts;
                                    for (let p = 0; p < d; p++) {
                                        let m = r.details[p],
                                            g = r.details[function(e, r) {
                                                for (let n = r + 1; n < e.length; n++)
                                                    if (null != e[n]) return n;
                                                return -1
                                            }(c, p)],
                                            v = rJ(m.minW, null == g ? void 0 : g._minW),
                                            y = t1(null == (a = e[n]) ? void 0 : a[c[p]], o);
                                        if (y) {
                                            if (f) {
                                                null == (s = e.parts) || s.forEach(e => {
                                                    t3(u, {
                                                        [e]: h ? y[e] : {
                                                            [v]: y[e]
                                                        }
                                                    })
                                                });
                                                continue
                                            }
                                            if (!f) {
                                                h ? t3(u, y) : u[v] = y;
                                                continue
                                            }
                                            u[v] = y
                                        }
                                    }
                                    return u
                                }
                            }(o);
                            return t3({}, t1(null != (r = u.baseStyle) ? r : {}, e), a(u, "sizes", i, e), a(u, "variants", n, e))
                        })(c),
                        f = pi(d.current, h);
                    f || (d.current = h)
                }
                return d.current
            }

            function pa(e, r = {}) {
                return po(e, r)
            }
            var ps = {
                    path: (0, $.jsxs)("g", {
                        stroke: "currentColor",
                        strokeWidth: "1.5",
                        children: [(0, $.jsx)("path", {
                            strokeLinecap: "round",
                            fill: "none",
                            d: "M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                        }), (0, $.jsx)("path", {
                            fill: "currentColor",
                            strokeLinecap: "round",
                            d: "M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                        }), (0, $.jsx)("circle", {
                            fill: "none",
                            strokeMiterlimit: "10",
                            cx: "12",
                            cy: "12",
                            r: "11.25"
                        })]
                    }),
                    viewBox: "0 0 24 24"
                },
                pl = pn((e, r) => {
                    let {
                        as: n,
                        viewBox: i,
                        color: o = "currentColor",
                        focusable: a = !1,
                        children: s,
                        className: l,
                        __css: u,
                        ...c
                    } = e, d = tZ("chakra-icon", l), h = pa("Icon", e), f = {
                        w: "1em",
                        h: "1em",
                        display: "inline-block",
                        lineHeight: "1em",
                        flexShrink: 0,
                        color: o,
                        ...u,
                        ...h
                    }, p = {
                        ref: r,
                        focusable: a,
                        className: d,
                        __css: f
                    }, m = null != i ? i : ps.viewBox;
                    if (n && "string" != typeof n) return (0, $.jsx)(pe.svg, {
                        as: n,
                        ...p,
                        ...c
                    });
                    let g = null != s ? s : ps.path;
                    return (0, $.jsx)(pe.svg, {
                        verticalAlign: "middle",
                        viewBox: m,
                        ...p,
                        ...c,
                        children: g
                    })
                });

            function pu(e) {
                return (0, $.jsx)(pl, {
                    viewBox: "0 0 24 24",
                    ...e,
                    children: (0, $.jsx)("path", {
                        fill: "currentColor",
                        d: "M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"
                    })
                })
            }
            pl.displayName = "Icon";
            var pc = function() {
                    var e = t$.apply(void 0, arguments),
                        r = "animation-" + e.name;
                    return {
                        name: r,
                        styles: "@keyframes " + r + "{" + e.styles + "}",
                        anim: 1,
                        toString: function() {
                            return "_EMO_" + this.name + "_" + this.styles + "_EMO_"
                        }
                    }
                }({
                    "0%": {
                        transform: "rotate(0deg)"
                    },
                    "100%": {
                        transform: "rotate(360deg)"
                    }
                }),
                pd = pn((e, r) => {
                    let n = pa("Spinner", e),
                        {
                            label: i = "Loading...",
                            thickness: o = "2px",
                            speed: a = "0.45s",
                            emptyColor: s = "transparent",
                            className: l,
                            ...u
                        } = na(e),
                        c = tZ("chakra-spinner", l),
                        d = {
                            display: "inline-block",
                            borderColor: "currentColor",
                            borderStyle: "solid",
                            borderRadius: "99999px",
                            borderWidth: o,
                            borderBottomColor: s,
                            borderLeftColor: s,
                            animation: `${pc} ${a} linear infinite`,
                            ...n
                        };
                    return (0, $.jsx)(pe.div, {
                        ref: r,
                        __css: d,
                        className: c,
                        ...u,
                        children: i && (0, $.jsx)(pe.span, {
                            srOnly: !0,
                            children: i
                        })
                    })
                });
            pd.displayName = "Spinner";
            var [ph, pf] = tG({
                name: "AlertContext",
                hookName: "useAlertContext",
                providerName: "<Alert />"
            }), [pp, pm] = tG({
                name: "AlertStylesContext",
                hookName: "useAlertStyles",
                providerName: "<Alert />"
            }), pg = {
                info: {
                    icon: function(e) {
                        return (0, $.jsx)(pl, {
                            viewBox: "0 0 24 24",
                            ...e,
                            children: (0, $.jsx)("path", {
                                fill: "currentColor",
                                d: "M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                            })
                        })
                    },
                    colorScheme: "blue"
                },
                warning: {
                    icon: pu,
                    colorScheme: "orange"
                },
                success: {
                    icon: function(e) {
                        return (0, $.jsx)(pl, {
                            viewBox: "0 0 24 24",
                            ...e,
                            children: (0, $.jsx)("path", {
                                fill: "currentColor",
                                d: "M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                            })
                        })
                    },
                    colorScheme: "green"
                },
                error: {
                    icon: pu,
                    colorScheme: "red"
                },
                loading: {
                    icon: pd,
                    colorScheme: "blue"
                }
            }, pv = pn(function(e, r) {
                var n;
                let {
                    status: i = "info",
                    addRole: o = !0,
                    ...a
                } = na(e), s = null != (n = e.colorScheme) ? n : pg[i].colorScheme, l = function(e, r = {}) {
                    return po(e, r)
                }("Alert", { ...e,
                    colorScheme: s
                }), u = {
                    width: "100%",
                    display: "flex",
                    alignItems: "center",
                    position: "relative",
                    overflow: "hidden",
                    ...l.container
                };
                return (0, $.jsx)(ph, {
                    value: {
                        status: i
                    },
                    children: (0, $.jsx)(pp, {
                        value: l,
                        children: (0, $.jsx)(pe.div, {
                            "data-status": i,
                            role: o ? "alert" : void 0,
                            ref: r,
                            ...a,
                            className: tZ("chakra-alert", e.className),
                            __css: u
                        })
                    })
                })
            });

            function py(e) {
                let {
                    status: r
                } = pf(), n = pg[r].icon, i = pm(), o = "loading" === r ? i.spinner : i.icon;
                return (0, $.jsx)(pe.span, {
                    display: "inherit",
                    "data-status": r,
                    ...e,
                    className: tZ("chakra-alert__icon", e.className),
                    __css: o,
                    children: e.children || (0, $.jsx)(n, {
                        h: "100%",
                        w: "100%"
                    })
                })
            }
            pv.displayName = "Alert", py.displayName = "AlertIcon";
            var pb = pn(function(e, r) {
                let n = pm(),
                    {
                        status: i
                    } = pf();
                return (0, $.jsx)(pe.div, {
                    ref: r,
                    "data-status": i,
                    ...e,
                    className: tZ("chakra-alert__title", e.className),
                    __css: n.title
                })
            });
            pb.displayName = "AlertTitle";
            var pw = pn(function(e, r) {
                let n = pm(),
                    {
                        status: i
                    } = pf(),
                    o = {
                        display: "inline",
                        ...n.description
                    };
                return (0, $.jsx)(pe.div, {
                    ref: r,
                    "data-status": i,
                    ...e,
                    className: tZ("chakra-alert__desc", e.className),
                    __css: o
                })
            });

            function px(e) {
                return (0, $.jsx)(pl, {
                    focusable: "false",
                    "aria-hidden": !0,
                    ...e,
                    children: (0, $.jsx)("path", {
                        fill: "currentColor",
                        d: "M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                    })
                })
            }
            pw.displayName = "AlertDescription";
            var pE = pn(function(e, r) {
                let n = pa("CloseButton", e),
                    {
                        children: i,
                        isDisabled: o,
                        __css: a,
                        ...s
                    } = na(e);
                return (0, $.jsx)(pe.button, {
                    type: "button",
                    "aria-label": "Close",
                    ref: r,
                    disabled: o,
                    __css: {
                        outline: 0,
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                        flexShrink: 0,
                        ...n,
                        ...a
                    },
                    ...s,
                    children: i || (0, $.jsx)(px, {
                        width: "1em",
                        height: "1em"
                    })
                })
            });
            pE.displayName = "CloseButton";
            var pC = function(e) {
                    let r = e,
                        n = new Set,
                        i = e => {
                            r = e(r), n.forEach(e => e())
                        };
                    return {
                        getState: () => r,
                        subscribe: r => (n.add(r), () => {
                            i(() => e), n.delete(r)
                        }),
                        removeToast: (e, r) => {
                            i(n => ({ ...n,
                                [r]: n[r].filter(r => r.id != e)
                            }))
                        },
                        notify: (e, r) => {
                            let n = function(e, r = {}) {
                                    var n, i;
                                    pA += 1;
                                    let o = null != (n = r.id) ? n : pA,
                                        a = null != (i = r.position) ? i : "bottom";
                                    return {
                                        id: o,
                                        message: e,
                                        position: a,
                                        duration: r.duration,
                                        onCloseComplete: r.onCloseComplete,
                                        onRequestRemove: () => pC.removeToast(String(o), a),
                                        status: r.status,
                                        requestClose: !1,
                                        containerStyle: r.containerStyle
                                    }
                                }(e, r),
                                {
                                    position: o,
                                    id: a
                                } = n;
                            return i(e => {
                                var r, i;
                                let a = o.includes("top"),
                                    s = a ? [n, ...null != (r = e[o]) ? r : []] : [...null != (i = e[o]) ? i : [], n];
                                return { ...e,
                                    [o]: s
                                }
                            }), a
                        },
                        update: (e, r) => {
                            e && i(n => {
                                let i = { ...n
                                    },
                                    {
                                        position: o,
                                        index: a
                                    } = ll(i, e);
                                return o && -1 !== a && (i[o][a] = { ...i[o][a],
                                    ...r,
                                    message: function(e = {}) {
                                        let {
                                            render: r,
                                            toastComponent: n = pk
                                        } = e, i = i => "function" == typeof r ? r({ ...i,
                                            ...e
                                        }) : (0, $.jsx)(n, { ...i,
                                            ...e
                                        });
                                        return i
                                    }(r)
                                }), i
                            })
                        },
                        closeAll: ({
                            positions: e
                        } = {}) => {
                            i(r => (null != e ? e : ["bottom", "bottom-right", "bottom-left", "top", "top-left", "top-right"]).reduce((e, n) => (e[n] = r[n].map(e => ({ ...e,
                                requestClose: !0
                            })), e), { ...r
                            }))
                        },
                        close: e => {
                            i(r => {
                                let n = lu(r, e);
                                return n ? { ...r,
                                    [n]: r[n].map(r => r.id == e ? { ...r,
                                        requestClose: !0
                                    } : r)
                                } : r
                            })
                        },
                        isActive: e => Boolean(ll(pC.getState(), e).position)
                    }
                }({
                    top: [],
                    "top-left": [],
                    "top-right": [],
                    "bottom-left": [],
                    bottom: [],
                    "bottom-right": []
                }),
                pA = 0,
                pk = e => {
                    let {
                        status: r,
                        variant: n = "solid",
                        id: i,
                        title: o,
                        isClosable: a,
                        onClose: s,
                        description: l,
                        colorScheme: u,
                        icon: c
                    } = e, d = i ? {
                        root: `toast-${i}`,
                        title: `toast-${i}-title`,
                        description: `toast-${i}-description`
                    } : void 0;
                    return (0, $.jsxs)(pv, {
                        addRole: !1,
                        status: r,
                        variant: n,
                        id: null == d ? void 0 : d.root,
                        alignItems: "start",
                        borderRadius: "md",
                        boxShadow: "lg",
                        paddingEnd: 8,
                        textAlign: "start",
                        width: "auto",
                        colorScheme: u,
                        children: [(0, $.jsx)(py, {
                            children: c
                        }), (0, $.jsxs)(pe.div, {
                            flex: "1",
                            maxWidth: "100%",
                            children: [o && (0, $.jsx)(pb, {
                                id: null == d ? void 0 : d.title,
                                children: o
                            }), l && (0, $.jsx)(pw, {
                                id: null == d ? void 0 : d.description,
                                display: "block",
                                children: l
                            })]
                        }), a && (0, $.jsx)(pE, {
                            size: "sm",
                            onClick: s,
                            position: "absolute",
                            insetEnd: 1,
                            top: 1
                        })]
                    })
                };

            function pS() {
                let e = (0, Z.useRef)(!1);
                return lg(() => (e.current = !0, () => {
                    e.current = !1
                }), []), e
            }
            class p_ extends Z.Component {
                getSnapshotBeforeUpdate(e) {
                    let r = this.props.childRef.current;
                    if (r && e.isPresent && !this.props.isPresent) {
                        let n = this.props.sizeRef.current;
                        n.height = r.offsetHeight || 0, n.width = r.offsetWidth || 0, n.top = r.offsetTop, n.left = r.offsetLeft
                    }
                    return null
                }
                componentDidUpdate() {}
                render() {
                    return this.props.children
                }
            }

            function pP({
                children: e,
                isPresent: r
            }) {
                let n = (0, Z.useId)(),
                    i = (0, Z.useRef)(null),
                    o = (0, Z.useRef)({
                        width: 0,
                        height: 0,
                        top: 0,
                        left: 0
                    });
                return (0, Z.useInsertionEffect)(() => {
                    let {
                        width: e,
                        height: a,
                        top: s,
                        left: l
                    } = o.current;
                    if (r || !i.current || !e || !a) return;
                    i.current.dataset.motionPopId = n;
                    let u = document.createElement("style");
                    return document.head.appendChild(u), u.sheet && u.sheet.insertRule(`
          [data-motion-pop-id="${n}"] {
            position: absolute !important;
            width: ${e}px !important;
            height: ${a}px !important;
            top: ${s}px !important;
            left: ${l}px !important;
          }
        `), () => {
                        document.head.removeChild(u)
                    }
                }, [r]), Z.createElement(p_, {
                    isPresent: r,
                    childRef: i,
                    sizeRef: o
                }, Z.cloneElement(e, {
                    ref: i
                }))
            }
            let pj = ({
                children: e,
                initial: r,
                isPresent: n,
                onExitComplete: i,
                custom: o,
                presenceAffectsLayout: a,
                mode: s
            }) => {
                let l = l_(pT),
                    u = (0, Z.useId)(),
                    c = (0, Z.useMemo)(() => ({
                        id: u,
                        initial: r,
                        isPresent: n,
                        custom: o,
                        onExitComplete: e => {
                            for (let r of (l.set(e, !0), l.values()))
                                if (!r) return;
                            i && i()
                        },
                        register: e => (l.set(e, !1), () => l.delete(e))
                    }), a ? void 0 : [n]);
                return (0, Z.useMemo)(() => {
                    l.forEach((e, r) => l.set(r, !1))
                }, [n]), Z.useEffect(() => {
                    n || l.size || !i || i()
                }, [n]), "popLayout" === s && (e = Z.createElement(pP, {
                    isPresent: n
                }, e)), Z.createElement(ld.Provider, {
                    value: c
                }, e)
            };

            function pT() {
                return new Map
            }
            let pR = e => e.key || "",
                pB = ({
                    children: e,
                    custom: r,
                    initial: n = !0,
                    onExitComplete: i,
                    exitBeforeEnter: o,
                    presenceAffectsLayout: a = !0,
                    mode: s = "sync"
                }) => {
                    o && (s = "wait");
                    let [l] = function() {
                        let e = pS(),
                            [r, n] = (0, Z.useState)(0),
                            i = (0, Z.useCallback)(() => {
                                e.current && n(r + 1)
                            }, [r]),
                            o = (0, Z.useCallback)(() => cr.postRender(i), [i]);
                        return [o, r]
                    }(), u = (0, Z.useContext)(lT).forceRender;
                    u && (l = u);
                    let c = pS(),
                        d = function(e) {
                            let r = [];
                            return Z.Children.forEach(e, e => {
                                (0, Z.isValidElement)(e) && r.push(e)
                            }), r
                        }(e),
                        h = d,
                        f = new Set,
                        p = (0, Z.useRef)(h),
                        m = (0, Z.useRef)(new Map).current,
                        g = (0, Z.useRef)(!0);
                    if (lg(() => {
                            g.current = !1,
                                function(e, r) {
                                    e.forEach(e => {
                                        let n = pR(e);
                                        r.set(n, e)
                                    })
                                }(d, m), p.current = h
                        }), u$(() => {
                            g.current = !0, m.clear(), f.clear()
                        }), g.current) return Z.createElement(Z.Fragment, null, h.map(e => Z.createElement(pj, {
                        key: pR(e),
                        isPresent: !0,
                        initial: !!n && void 0,
                        presenceAffectsLayout: a,
                        mode: s
                    }, e)));
                    h = [...h];
                    let v = p.current.map(pR),
                        y = d.map(pR),
                        b = v.length;
                    for (let w = 0; w < b; w++) {
                        let x = v[w]; - 1 === y.indexOf(x) && f.add(x)
                    }
                    return "wait" === s && f.size && (h = []), f.forEach(e => {
                        if (-1 !== y.indexOf(e)) return;
                        let n = m.get(e);
                        if (!n) return;
                        let o = v.indexOf(e),
                            u = () => {
                                m.delete(e), f.delete(e);
                                let r = p.current.findIndex(r => r.key === e);
                                if (p.current.splice(r, 1), !f.size) {
                                    if (p.current = d, !1 === c.current) return;
                                    l(), i && i()
                                }
                            };
                        h.splice(o, 0, Z.createElement(pj, {
                            key: pR(n),
                            isPresent: !1,
                            onExitComplete: u,
                            custom: r,
                            presenceAffectsLayout: a,
                            mode: s
                        }, n))
                    }), h = h.map(e => {
                        let r = e.key;
                        return f.has(r) ? e : Z.createElement(pj, {
                            key: pR(e),
                            isPresent: !0,
                            presenceAffectsLayout: a,
                            mode: s
                        }, e)
                    }), Z.createElement(Z.Fragment, null, f.size ? h : h.map(e => (0, Z.cloneElement)(e)))
                };
            var pO = n(73935),
                [pM, pI] = tG({
                    strict: !1,
                    name: "PortalContext"
                }),
                pN = "chakra-portal",
                pF = e => (0, $.jsx)("div", {
                    className: "chakra-portal-zIndex",
                    style: {
                        position: "absolute",
                        zIndex: e.zIndex,
                        top: 0,
                        left: 0,
                        right: 0
                    },
                    children: e.children
                }),
                pL = e => {
                    let {
                        appendToParentPortal: r,
                        children: n
                    } = e, [i, o] = (0, Z.useState)(null), a = (0, Z.useRef)(null), [, s] = (0, Z.useState)({});
                    (0, Z.useEffect)(() => s({}), []);
                    let l = pI(),
                        u = tQ();
                    nb(() => {
                        if (!i) return;
                        let e = i.ownerDocument,
                            n = r && null != l ? l : e.body;
                        if (!n) return;
                        a.current = e.createElement("div"), a.current.className = pN, n.appendChild(a.current), s({});
                        let o = a.current;
                        return () => {
                            n.contains(o) && n.removeChild(o)
                        }
                    }, [i]);
                    let c = (null == u ? void 0 : u.zIndex) ? (0, $.jsx)(pF, {
                        zIndex: null == u ? void 0 : u.zIndex,
                        children: n
                    }) : n;
                    return a.current ? (0, pO.createPortal)((0, $.jsx)(pM, {
                        value: a.current,
                        children: c
                    }), a.current) : (0, $.jsx)("span", {
                        ref: e => {
                            e && o(e)
                        }
                    })
                },
                pD = e => {
                    let {
                        children: r,
                        containerRef: n,
                        appendToParentPortal: i
                    } = e, o = n.current, a = null != o ? o : "undefined" != typeof window ? document.body : void 0, s = (0, Z.useMemo)(() => {
                        let e = null == o ? void 0 : o.ownerDocument.createElement("div");
                        return e && (e.className = pN), e
                    }, [o]), [, l] = (0, Z.useState)({});
                    return (nb(() => l({}), []), nb(() => {
                        if (s && a) return a.appendChild(s), () => {
                            a.removeChild(s)
                        }
                    }, [s, a]), a && s) ? (0, pO.createPortal)((0, $.jsx)(pM, {
                        value: i ? s : null,
                        children: r
                    }), s) : null
                };

            function pz(e) {
                let r = {
                        appendToParentPortal: !0,
                        ...e
                    },
                    {
                        containerRef: n,
                        ...i
                    } = r;
                return n ? (0, $.jsx)(pD, {
                    containerRef: n,
                    ...i
                }) : (0, $.jsx)(pL, { ...i
                })
            }
            pz.className = pN, pz.selector = ".chakra-portal", pz.displayName = "Portal";
            var [pU, p$] = tG({
                name: "ToastOptionsContext",
                strict: !1
            }), pq = e => {
                let r = (0, Z.useSyncExternalStore)(pC.subscribe, pC.getState, pC.getState),
                    {
                        motionVariants: n,
                        component: i = pr,
                        portalProps: o
                    } = e,
                    a = Object.keys(r),
                    s = a.map(e => {
                        let o = r[e];
                        return (0, $.jsx)("div", {
                            role: "region",
                            "aria-live": "polite",
                            "aria-label": "Notifications",
                            id: `chakra-toast-manager-${e}`,
                            style: function(e) {
                                let r = e.includes("top") ? "env(safe-area-inset-top, 0px)" : void 0,
                                    n = e.includes("bottom") ? "env(safe-area-inset-bottom, 0px)" : void 0,
                                    i = e.includes("left") ? void 0 : "env(safe-area-inset-right, 0px)",
                                    o = e.includes("right") ? void 0 : "env(safe-area-inset-left, 0px)";
                                return {
                                    position: "fixed",
                                    zIndex: "var(--toast-z-index, 5500)",
                                    pointerEvents: "none",
                                    display: "flex",
                                    flexDirection: "column",
                                    margin: "top" === e || "bottom" === e ? "0 auto" : void 0,
                                    top: r,
                                    bottom: n,
                                    right: i,
                                    left: o
                                }
                            }(e),
                            children: (0, $.jsx)(pB, {
                                initial: !1,
                                children: o.map(e => (0, $.jsx)(i, {
                                    motionVariants: n,
                                    ...e
                                }, e.id))
                            })
                        }, e)
                    });
                return (0, $.jsx)(pz, { ...o,
                    children: s
                })
            }, pW = e => function({
                children: r,
                theme: n = e,
                toastOptions: i,
                ...o
            }) {
                return (0, $.jsxs)(nk, {
                    theme: n,
                    ...o,
                    children: [(0, $.jsx)(pU, {
                        value: null == i ? void 0 : i.defaultOptions,
                        children: r
                    }), (0, $.jsx)(pq, { ...i
                    })]
                })
            }, pV = pW(lo);
            pW(la);
            var pH = n(80009),
                pG = n(34155);
            let {
                chains: pK,
                provider: pQ
            } = (0, V.QB)([eg.RJ], [function({
                apiKey: e,
                priority: r,
                stallTimeout: n,
                weight: i
            }) {
                return function(o) {
                    return o.rpcUrls.infura ? .http[0] ? {
                        chain: { ...o,
                            rpcUrls: { ...o.rpcUrls,
                                default: {
                                    http: [`${o.rpcUrls.infura?.http[0]}/${e}`]
                                }
                            }
                        },
                        provider: () => {
                            let a = new ez({
                                chainId: o.id,
                                name: o.network,
                                ensAddress: o.contracts ? .ensRegistry ? .address
                            }, e);
                            return Object.assign(a, {
                                priority: r,
                                stallTimeout: n,
                                weight: i
                            })
                        },
                        webSocketProvider: () => new eD({
                            chainId: o.id,
                            name: o.network,
                            ensAddress: o.contracts ? .ensRegistry ? .address
                        }, e)
                    } : null
                }
            }({
                apiKey: pG.env.INFURA_KEY || ""
            }), function({
                priority: e,
                stallTimeout: r,
                weight: n
            } = {}) {
                return function(i) {
                    return i.rpcUrls.default.http[0] ? {
                        chain: i,
                        provider: () => {
                            let o = new eI(i.rpcUrls.default.http[0], {
                                chainId: i.id,
                                name: i.network,
                                ensAddress: i.contracts ? .ensRegistry ? .address
                            });
                            return Object.assign(o, {
                                priority: e,
                                stallTimeout: r,
                                weight: n
                            })
                        }
                    } : null
                }
            }()]), {
                connectors: pJ
            } = (({
                appName: e,
                chains: r
            }) => {
                let n = [{
                    groupName: "Popular",
                    wallets: [ei({
                        chains: r
                    }), el({
                        chains: r
                    }), en({
                        appName: e,
                        chains: r
                    }), es({
                        chains: r
                    }), eu({
                        chains: r
                    }), er({
                        chains: r
                    })]
                }];
                return {
                    connectors: et(n),
                    wallets: n
                }
            })({
                appName: "AppName",
                chains: pK
            }), pY = (0, em.eI)({
                autoConnect: !0,
                connectors: pJ,
                provider: pQ
            });

            function pX(e) {
                let {
                    Component: r,
                    pageProps: n
                } = e;
                return (0, $.jsx)($.Fragment, {
                    children: (0, $.jsx)(em.eM, {
                        client: pY,
                        children: (0, $.jsxs)(q.pj, {
                            chains: pK,
                            theme: ep(),
                            children: [(0, $.jsx)(ev.x7, {
                                position: "top-right",
                                reverseOrder: !1
                            }), (0, $.jsx)(pV, {
                                children: (0, $.jsx)(ew, {
                                    children: (0, $.jsx)(pH.Wk, {
                                        children: (0, $.jsx)(r, { ...n
                                        })
                                    })
                                })
                            })]
                        })
                    })
                })
            }
        },
        84744: function() {},
        91170: function() {},
        9008: function(e, r, n) {
            e.exports = n(83121)
        },
        34155: function(e) {
            var r, n, i, o = e.exports = {};

            function a() {
                throw Error("setTimeout has not been defined")
            }

            function s() {
                throw Error("clearTimeout has not been defined")
            }

            function l(e) {
                if (r === setTimeout) return setTimeout(e, 0);
                if ((r === a || !r) && setTimeout) return r = setTimeout, setTimeout(e, 0);
                try {
                    return r(e, 0)
                } catch (i) {
                    try {
                        return r.call(null, e, 0)
                    } catch (n) {
                        return r.call(this, e, 0)
                    }
                }
            }! function() {
                try {
                    r = "function" == typeof setTimeout ? setTimeout : a
                } catch (e) {
                    r = a
                }
                try {
                    n = "function" == typeof clearTimeout ? clearTimeout : s
                } catch (i) {
                    n = s
                }
            }();
            var u = [],
                c = !1,
                d = -1;

            function h() {
                c && i && (c = !1, i.length ? u = i.concat(u) : d = -1, u.length && f())
            }

            function f() {
                if (!c) {
                    var e = l(h);
                    c = !0;
                    for (var r = u.length; r;) {
                        for (i = u, u = []; ++d < r;) i && i[d].run();
                        d = -1, r = u.length
                    }
                    i = null, c = !1,
                        function(e) {
                            if (n === clearTimeout) return clearTimeout(e);
                            if ((n === s || !n) && clearTimeout) return n = clearTimeout, clearTimeout(e);
                            try {
                                n(e)
                            } catch (i) {
                                try {
                                    return n.call(null, e)
                                } catch (r) {
                                    return n.call(this, e)
                                }
                            }
                        }(e)
                }
            }

            function p(e, r) {
                this.fun = e, this.array = r
            }

            function m() {}
            o.nextTick = function(e) {
                var r = Array(arguments.length - 1);
                if (arguments.length > 1)
                    for (var n = 1; n < arguments.length; n++) r[n - 1] = arguments[n];
                u.push(new p(e, r)), 1 !== u.length || c || l(f)
            }, p.prototype.run = function() {
                this.fun.apply(null, this.array)
            }, o.title = "browser", o.browser = !0, o.env = {}, o.argv = [], o.version = "", o.versions = {}, o.on = m, o.addListener = m, o.once = m, o.off = m, o.removeListener = m, o.removeAllListeners = m, o.emit = m, o.prependListener = m, o.prependOnceListener = m, o.listeners = function(e) {
                return []
            }, o.binding = function(e) {
                throw Error("process.binding is not supported")
            }, o.cwd = function() {
                return "/"
            }, o.chdir = function(e) {
                throw Error("process.chdir is not supported")
            }, o.umask = function() {
                return 0
            }
        },
        92592: function(e, r, n) {
            let i = n(47138),
                o = n(95115),
                a = n(6907),
                s = n(93776);

            function l(e, r, n, a, s) {
                let l = [].slice.call(arguments, 1),
                    u = l.length,
                    c = "function" == typeof l[u - 1];
                if (!c && !i()) throw Error("Callback required as last argument");
                if (c) {
                    if (u < 2) throw Error("Too few arguments provided");
                    2 === u ? (s = n, n = r, r = a = void 0) : 3 === u && (r.getContext && void 0 === s ? (s = a, a = void 0) : (s = a, a = n, n = r, r = void 0))
                } else {
                    if (u < 1) throw Error("Too few arguments provided");
                    return 1 === u ? (n = r, r = a = void 0) : 2 !== u || r.getContext || (a = n, n = r, r = void 0), new Promise(function(i, s) {
                        try {
                            let l = o.create(n, a);
                            i(e(l, r, a))
                        } catch (u) {
                            s(u)
                        }
                    })
                }
                try {
                    let d = o.create(n, a);
                    s(null, e(d, r, a))
                } catch (h) {
                    s(h)
                }
            }
            r.create = o.create, r.toCanvas = l.bind(null, a.render), r.toDataURL = l.bind(null, a.renderToDataURL), r.toString = l.bind(null, function(e, r, n) {
                return s.render(e, n)
            })
        },
        47138: function(e) {
            e.exports = function() {
                return "function" == typeof Promise && Promise.prototype && Promise.prototype.then
            }
        },
        21845: function(e, r, n) {
            let i = n(10242).getSymbolSize;
            r.getRowColCoords = function(e) {
                if (1 === e) return [];
                let r = Math.floor(e / 7) + 2,
                    n = i(e),
                    o = 145 === n ? 26 : 2 * Math.ceil((n - 13) / (2 * r - 2)),
                    a = [n - 7];
                for (let s = 1; s < r - 1; s++) a[s] = a[s - 1] - o;
                return a.push(6), a.reverse()
            }, r.getPositions = function(e) {
                let n = [],
                    i = r.getRowColCoords(e),
                    o = i.length;
                for (let a = 0; a < o; a++)
                    for (let s = 0; s < o; s++)(0 !== a || 0 !== s) && (0 !== a || s !== o - 1) && (a !== o - 1 || 0 !== s) && n.push([i[a], i[s]]);
                return n
            }
        },
        8260: function(e, r, n) {
            let i = n(76910),
                o = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", " ", "$", "%", "*", "+", "-", ".", "/", ":"];

            function a(e) {
                this.mode = i.ALPHANUMERIC, this.data = e
            }
            a.getBitsLength = function(e) {
                return 11 * Math.floor(e / 2) + 6 * (e % 2)
            }, a.prototype.getLength = function() {
                return this.data.length
            }, a.prototype.getBitsLength = function() {
                return a.getBitsLength(this.data.length)
            }, a.prototype.write = function(e) {
                let r;
                for (r = 0; r + 2 <= this.data.length; r += 2) {
                    let n = 45 * o.indexOf(this.data[r]);
                    n += o.indexOf(this.data[r + 1]), e.put(n, 11)
                }
                this.data.length % 2 && e.put(o.indexOf(this.data[r]), 6)
            }, e.exports = a
        },
        97245: function(e) {
            function r() {
                this.buffer = [], this.length = 0
            }
            r.prototype = {
                get: function(e) {
                    return (this.buffer[Math.floor(e / 8)] >>> 7 - e % 8 & 1) == 1
                },
                put: function(e, r) {
                    for (let n = 0; n < r; n++) this.putBit((e >>> r - n - 1 & 1) == 1)
                },
                getLengthInBits: function() {
                    return this.length
                },
                putBit: function(e) {
                    let r = Math.floor(this.length / 8);
                    this.buffer.length <= r && this.buffer.push(0), e && (this.buffer[r] |= 128 >>> this.length % 8), this.length++
                }
            }, e.exports = r
        },
        73280: function(e) {
            function r(e) {
                if (!e || e < 1) throw Error("BitMatrix size must be defined and greater than 0");
                this.size = e, this.data = new Uint8Array(e * e), this.reservedBit = new Uint8Array(e * e)
            }
            r.prototype.set = function(e, r, n, i) {
                let o = e * this.size + r;
                this.data[o] = n, i && (this.reservedBit[o] = !0)
            }, r.prototype.get = function(e, r) {
                return this.data[e * this.size + r]
            }, r.prototype.xor = function(e, r, n) {
                this.data[e * this.size + r] ^= n
            }, r.prototype.isReserved = function(e, r) {
                return this.reservedBit[e * this.size + r]
            }, e.exports = r
        },
        43424: function(e, r, n) {
            let i = n(62378),
                o = n(76910);

            function a(e) {
                this.mode = o.BYTE, this.data = new Uint8Array(i(e))
            }
            a.getBitsLength = function(e) {
                return 8 * e
            }, a.prototype.getLength = function() {
                return this.data.length
            }, a.prototype.getBitsLength = function() {
                return a.getBitsLength(this.data.length)
            }, a.prototype.write = function(e) {
                for (let r = 0, n = this.data.length; r < n; r++) e.put(this.data[r], 8)
            }, e.exports = a
        },
        35393: function(e, r, n) {
            let i = n(64908),
                o = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81],
                a = [7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];
            r.getBlocksCount = function(e, r) {
                switch (r) {
                    case i.L:
                        return o[(e - 1) * 4 + 0];
                    case i.M:
                        return o[(e - 1) * 4 + 1];
                    case i.Q:
                        return o[(e - 1) * 4 + 2];
                    case i.H:
                        return o[(e - 1) * 4 + 3];
                    default:
                        return
                }
            }, r.getTotalCodewordsCount = function(e, r) {
                switch (r) {
                    case i.L:
                        return a[(e - 1) * 4 + 0];
                    case i.M:
                        return a[(e - 1) * 4 + 1];
                    case i.Q:
                        return a[(e - 1) * 4 + 2];
                    case i.H:
                        return a[(e - 1) * 4 + 3];
                    default:
                        return
                }
            }
        },
        64908: function(e, r) {
            r.L = {
                bit: 1
            }, r.M = {
                bit: 0
            }, r.Q = {
                bit: 3
            }, r.H = {
                bit: 2
            }, r.isValid = function(e) {
                return e && void 0 !== e.bit && e.bit >= 0 && e.bit < 4
            }, r.from = function(e, n) {
                if (r.isValid(e)) return e;
                try {
                    return function(e) {
                        if ("string" != typeof e) throw Error("Param is not a string");
                        let n = e.toLowerCase();
                        switch (n) {
                            case "l":
                            case "low":
                                return r.L;
                            case "m":
                            case "medium":
                                return r.M;
                            case "q":
                            case "quartile":
                                return r.Q;
                            case "h":
                            case "high":
                                return r.H;
                            default:
                                throw Error("Unknown EC Level: " + e)
                        }
                    }(e)
                } catch (i) {
                    return n
                }
            }
        },
        76526: function(e, r, n) {
            let i = n(10242).getSymbolSize;
            r.getPositions = function(e) {
                let r = i(e);
                return [
                    [0, 0],
                    [r - 7, 0],
                    [0, r - 7]
                ]
            }
        },
        61642: function(e, r, n) {
            let i = n(10242),
                o = i.getBCHDigit(1335);
            r.getEncodedBits = function(e, r) {
                let n = e.bit << 3 | r,
                    a = n << 10;
                for (; i.getBCHDigit(a) - o >= 0;) a ^= 1335 << i.getBCHDigit(a) - o;
                return (n << 10 | a) ^ 21522
            }
        },
        69729: function(e, r) {
            let n = new Uint8Array(512),
                i = new Uint8Array(256);
            ! function() {
                let e = 1;
                for (let r = 0; r < 255; r++) n[r] = e, i[e] = r, 256 & (e <<= 1) && (e ^= 285);
                for (let o = 255; o < 512; o++) n[o] = n[o - 255]
            }(), r.log = function(e) {
                if (e < 1) throw Error("log(" + e + ")");
                return i[e]
            }, r.exp = function(e) {
                return n[e]
            }, r.mul = function(e, r) {
                return 0 === e || 0 === r ? 0 : n[i[e] + i[r]]
            }
        },
        35442: function(e, r, n) {
            let i = n(76910),
                o = n(10242);

            function a(e) {
                this.mode = i.KANJI, this.data = e
            }
            a.getBitsLength = function(e) {
                return 13 * e
            }, a.prototype.getLength = function() {
                return this.data.length
            }, a.prototype.getBitsLength = function() {
                return a.getBitsLength(this.data.length)
            }, a.prototype.write = function(e) {
                let r;
                for (r = 0; r < this.data.length; r++) {
                    let n = o.toSJIS(this.data[r]);
                    if (n >= 33088 && n <= 40956) n -= 33088;
                    else if (n >= 57408 && n <= 60351) n -= 49472;
                    else throw Error("Invalid SJIS character: " + this.data[r] + "\nMake sure your charset is UTF-8");
                    n = (n >>> 8 & 255) * 192 + (255 & n), e.put(n, 13)
                }
            }, e.exports = a
        },
        27126: function(e, r) {
            r.Patterns = {
                PATTERN000: 0,
                PATTERN001: 1,
                PATTERN010: 2,
                PATTERN011: 3,
                PATTERN100: 4,
                PATTERN101: 5,
                PATTERN110: 6,
                PATTERN111: 7
            };
            let n = {
                N1: 3,
                N2: 3,
                N3: 40,
                N4: 10
            };
            r.isValid = function(e) {
                return null != e && "" !== e && !isNaN(e) && e >= 0 && e <= 7
            }, r.from = function(e) {
                return r.isValid(e) ? parseInt(e, 10) : void 0
            }, r.getPenaltyN1 = function(e) {
                let r = e.size,
                    i = 0,
                    o = 0,
                    a = 0,
                    s = null,
                    l = null;
                for (let u = 0; u < r; u++) {
                    o = a = 0, s = l = null;
                    for (let c = 0; c < r; c++) {
                        let d = e.get(u, c);
                        d === s ? o++ : (o >= 5 && (i += n.N1 + (o - 5)), s = d, o = 1), (d = e.get(c, u)) === l ? a++ : (a >= 5 && (i += n.N1 + (a - 5)), l = d, a = 1)
                    }
                    o >= 5 && (i += n.N1 + (o - 5)), a >= 5 && (i += n.N1 + (a - 5))
                }
                return i
            }, r.getPenaltyN2 = function(e) {
                let r = e.size,
                    i = 0;
                for (let o = 0; o < r - 1; o++)
                    for (let a = 0; a < r - 1; a++) {
                        let s = e.get(o, a) + e.get(o, a + 1) + e.get(o + 1, a) + e.get(o + 1, a + 1);
                        (4 === s || 0 === s) && i++
                    }
                return i * n.N2
            }, r.getPenaltyN3 = function(e) {
                let r = e.size,
                    i = 0,
                    o = 0,
                    a = 0;
                for (let s = 0; s < r; s++) {
                    o = a = 0;
                    for (let l = 0; l < r; l++) o = o << 1 & 2047 | e.get(s, l), l >= 10 && (1488 === o || 93 === o) && i++, a = a << 1 & 2047 | e.get(l, s), l >= 10 && (1488 === a || 93 === a) && i++
                }
                return i * n.N3
            }, r.getPenaltyN4 = function(e) {
                let r = 0,
                    i = e.data.length;
                for (let o = 0; o < i; o++) r += e.data[o];
                let a = Math.abs(Math.ceil(100 * r / i / 5) - 10);
                return a * n.N4
            }, r.applyMask = function(e, n) {
                let i = n.size;
                for (let o = 0; o < i; o++)
                    for (let a = 0; a < i; a++) n.isReserved(a, o) || n.xor(a, o, function(e, n, i) {
                        switch (e) {
                            case r.Patterns.PATTERN000:
                                return (n + i) % 2 == 0;
                            case r.Patterns.PATTERN001:
                                return n % 2 == 0;
                            case r.Patterns.PATTERN010:
                                return i % 3 == 0;
                            case r.Patterns.PATTERN011:
                                return (n + i) % 3 == 0;
                            case r.Patterns.PATTERN100:
                                return (Math.floor(n / 2) + Math.floor(i / 3)) % 2 == 0;
                            case r.Patterns.PATTERN101:
                                return n * i % 2 + n * i % 3 == 0;
                            case r.Patterns.PATTERN110:
                                return (n * i % 2 + n * i % 3) % 2 == 0;
                            case r.Patterns.PATTERN111:
                                return (n * i % 3 + (n + i) % 2) % 2 == 0;
                            default:
                                throw Error("bad maskPattern:" + e)
                        }
                    }(e, a, o))
            }, r.getBestMask = function(e, n) {
                let i = Object.keys(r.Patterns).length,
                    o = 0,
                    a = 1 / 0;
                for (let s = 0; s < i; s++) {
                    n(s), r.applyMask(s, e);
                    let l = r.getPenaltyN1(e) + r.getPenaltyN2(e) + r.getPenaltyN3(e) + r.getPenaltyN4(e);
                    r.applyMask(s, e), l < a && (a = l, o = s)
                }
                return o
            }
        },
        76910: function(e, r, n) {
            let i = n(43114),
                o = n(7007);
            r.NUMERIC = {
                id: "Numeric",
                bit: 1,
                ccBits: [10, 12, 14]
            }, r.ALPHANUMERIC = {
                id: "Alphanumeric",
                bit: 2,
                ccBits: [9, 11, 13]
            }, r.BYTE = {
                id: "Byte",
                bit: 4,
                ccBits: [8, 16, 16]
            }, r.KANJI = {
                id: "Kanji",
                bit: 8,
                ccBits: [8, 10, 12]
            }, r.MIXED = {
                bit: -1
            }, r.getCharCountIndicator = function(e, r) {
                if (!e.ccBits) throw Error("Invalid mode: " + e);
                if (!i.isValid(r)) throw Error("Invalid version: " + r);
                return r >= 1 && r < 10 ? e.ccBits[0] : r < 27 ? e.ccBits[1] : e.ccBits[2]
            }, r.getBestModeForData = function(e) {
                return o.testNumeric(e) ? r.NUMERIC : o.testAlphanumeric(e) ? r.ALPHANUMERIC : o.testKanji(e) ? r.KANJI : r.BYTE
            }, r.toString = function(e) {
                if (e && e.id) return e.id;
                throw Error("Invalid mode")
            }, r.isValid = function(e) {
                return e && e.bit && e.ccBits
            }, r.from = function(e, n) {
                if (r.isValid(e)) return e;
                try {
                    return function(e) {
                        if ("string" != typeof e) throw Error("Param is not a string");
                        let n = e.toLowerCase();
                        switch (n) {
                            case "numeric":
                                return r.NUMERIC;
                            case "alphanumeric":
                                return r.ALPHANUMERIC;
                            case "kanji":
                                return r.KANJI;
                            case "byte":
                                return r.BYTE;
                            default:
                                throw Error("Unknown mode: " + e)
                        }
                    }(e)
                } catch (i) {
                    return n
                }
            }
        },
        41085: function(e, r, n) {
            let i = n(76910);

            function o(e) {
                this.mode = i.NUMERIC, this.data = e.toString()
            }
            o.getBitsLength = function(e) {
                return 10 * Math.floor(e / 3) + (e % 3 ? e % 3 * 3 + 1 : 0)
            }, o.prototype.getLength = function() {
                return this.data.length
            }, o.prototype.getBitsLength = function() {
                return o.getBitsLength(this.data.length)
            }, o.prototype.write = function(e) {
                let r, n;
                for (r = 0; r + 3 <= this.data.length; r += 3) n = parseInt(this.data.substr(r, 3), 10), e.put(n, 10);
                let i = this.data.length - r;
                i > 0 && (n = parseInt(this.data.substr(r), 10), e.put(n, 3 * i + 1))
            }, e.exports = o
        },
        26143: function(e, r, n) {
            let i = n(69729);
            r.mul = function(e, r) {
                let n = new Uint8Array(e.length + r.length - 1);
                for (let o = 0; o < e.length; o++)
                    for (let a = 0; a < r.length; a++) n[o + a] ^= i.mul(e[o], r[a]);
                return n
            }, r.mod = function(e, r) {
                let n = new Uint8Array(e);
                for (; n.length - r.length >= 0;) {
                    let o = n[0];
                    for (let a = 0; a < r.length; a++) n[a] ^= i.mul(r[a], o);
                    let s = 0;
                    for (; s < n.length && 0 === n[s];) s++;
                    n = n.slice(s)
                }
                return n
            }, r.generateECPolynomial = function(e) {
                let n = new Uint8Array([1]);
                for (let o = 0; o < e; o++) n = r.mul(n, new Uint8Array([1, i.exp(o)]));
                return n
            }
        },
        95115: function(e, r, n) {
            let i = n(10242),
                o = n(64908),
                a = n(97245),
                s = n(73280),
                l = n(21845),
                u = n(76526),
                c = n(27126),
                d = n(35393),
                h = n(52882),
                f = n(23103),
                p = n(61642),
                m = n(76910),
                g = n(16130);

            function v(e, r, n) {
                let i, o;
                let a = e.size,
                    s = p.getEncodedBits(r, n);
                for (i = 0; i < 15; i++) o = (s >> i & 1) == 1, i < 6 ? e.set(i, 8, o, !0) : i < 8 ? e.set(i + 1, 8, o, !0) : e.set(a - 15 + i, 8, o, !0), i < 8 ? e.set(8, a - i - 1, o, !0) : i < 9 ? e.set(8, 15 - i - 1 + 1, o, !0) : e.set(8, 15 - i - 1, o, !0);
                e.set(a - 8, 8, 1, !0)
            }
            r.create = function(e, r) {
                let n, p;
                if (void 0 === e || "" === e) throw Error("No input text");
                let y = o.M;
                return void 0 !== r && (y = o.from(r.errorCorrectionLevel, o.M), n = f.from(r.version), p = c.from(r.maskPattern), r.toSJISFunc && i.setToSJISFunction(r.toSJISFunc)),
                    function(e, r, n, o) {
                        let p;
                        if (Array.isArray(e)) p = g.fromArray(e);
                        else if ("string" == typeof e) {
                            let y = r;
                            if (!y) {
                                let b = g.rawSplit(e);
                                y = f.getBestVersionForData(b, n)
                            }
                            p = g.fromString(e, y || 40)
                        } else throw Error("Invalid data");
                        let w = f.getBestVersionForData(p, n);
                        if (!w) throw Error("The amount of data is too big to be stored in a QR Code");
                        if (r) {
                            if (r < w) throw Error("\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " + w + ".\n")
                        } else r = w;
                        let x = function(e, r, n) {
                                let o = new a;
                                n.forEach(function(r) {
                                    o.put(r.mode.bit, 4), o.put(r.getLength(), m.getCharCountIndicator(r.mode, e)), r.write(o)
                                });
                                let s = i.getSymbolTotalCodewords(e),
                                    l = d.getTotalCodewordsCount(e, r),
                                    u = (s - l) * 8;
                                for (o.getLengthInBits() + 4 <= u && o.put(0, 4); o.getLengthInBits() % 8 != 0;) o.putBit(0);
                                let c = (u - o.getLengthInBits()) / 8;
                                for (let f = 0; f < c; f++) o.put(f % 2 ? 17 : 236, 8);
                                return function(e, r, n) {
                                    let o, a;
                                    let s = i.getSymbolTotalCodewords(r),
                                        l = d.getTotalCodewordsCount(r, n),
                                        u = d.getBlocksCount(r, n),
                                        c = u - s % u,
                                        f = Math.floor((s - l) / u),
                                        p = f + 1,
                                        m = Math.floor(s / u) - f,
                                        g = new h(m),
                                        v = 0,
                                        y = Array(u),
                                        b = Array(u),
                                        w = 0,
                                        x = new Uint8Array(e.buffer);
                                    for (let E = 0; E < u; E++) {
                                        let C = E < c ? f : p;
                                        y[E] = x.slice(v, v + C), b[E] = g.encode(y[E]), v += C, w = Math.max(w, C)
                                    }
                                    let A = new Uint8Array(s),
                                        k = 0;
                                    for (o = 0; o < w; o++)
                                        for (a = 0; a < u; a++) o < y[a].length && (A[k++] = y[a][o]);
                                    for (o = 0; o < m; o++)
                                        for (a = 0; a < u; a++) A[k++] = b[a][o];
                                    return A
                                }(o, e, r)
                            }(r, n, p),
                            E = i.getSymbolSize(r),
                            C = new s(E);
                        return function(e, r) {
                                let n = e.size,
                                    i = u.getPositions(r);
                                for (let o = 0; o < i.length; o++) {
                                    let a = i[o][0],
                                        s = i[o][1];
                                    for (let l = -1; l <= 7; l++)
                                        if (!(a + l <= -1) && !(n <= a + l))
                                            for (let c = -1; c <= 7; c++) s + c <= -1 || n <= s + c || (l >= 0 && l <= 6 && (0 === c || 6 === c) || c >= 0 && c <= 6 && (0 === l || 6 === l) || l >= 2 && l <= 4 && c >= 2 && c <= 4 ? e.set(a + l, s + c, !0, !0) : e.set(a + l, s + c, !1, !0))
                                }
                            }(C, r),
                            function(e) {
                                let r = e.size;
                                for (let n = 8; n < r - 8; n++) {
                                    let i = n % 2 == 0;
                                    e.set(n, 6, i, !0), e.set(6, n, i, !0)
                                }
                            }(C),
                            function(e, r) {
                                let n = l.getPositions(r);
                                for (let i = 0; i < n.length; i++) {
                                    let o = n[i][0],
                                        a = n[i][1];
                                    for (let s = -2; s <= 2; s++)
                                        for (let u = -2; u <= 2; u++) - 2 === s || 2 === s || -2 === u || 2 === u || 0 === s && 0 === u ? e.set(o + s, a + u, !0, !0) : e.set(o + s, a + u, !1, !0)
                                }
                            }(C, r), v(C, n, 0), r >= 7 && function(e, r) {
                                let n, i, o;
                                let a = e.size,
                                    s = f.getEncodedBits(r);
                                for (let l = 0; l < 18; l++) n = Math.floor(l / 3), i = l % 3 + a - 8 - 3, o = (s >> l & 1) == 1, e.set(n, i, o, !0), e.set(i, n, o, !0)
                            }(C, r),
                            function(e, r) {
                                let n = e.size,
                                    i = -1,
                                    o = n - 1,
                                    a = 7,
                                    s = 0;
                                for (let l = n - 1; l > 0; l -= 2)
                                    for (6 === l && l--;;) {
                                        for (let u = 0; u < 2; u++)
                                            if (!e.isReserved(o, l - u)) {
                                                let c = !1;
                                                s < r.length && (c = (r[s] >>> a & 1) == 1), e.set(o, l - u, c), -1 == --a && (s++, a = 7)
                                            }
                                        if ((o += i) < 0 || n <= o) {
                                            o -= i, i = -i;
                                            break
                                        }
                                    }
                            }(C, x), isNaN(o) && (o = c.getBestMask(C, v.bind(null, C, n))), c.applyMask(o, C), v(C, n, o), {
                                modules: C,
                                version: r,
                                errorCorrectionLevel: n,
                                maskPattern: o,
                                segments: p
                            }
                    }(e, n, y, p)
            }
        },
        52882: function(e, r, n) {
            let i = n(26143);

            function o(e) {
                this.genPoly = void 0, this.degree = e, this.degree && this.initialize(this.degree)
            }
            o.prototype.initialize = function(e) {
                this.degree = e, this.genPoly = i.generateECPolynomial(this.degree)
            }, o.prototype.encode = function(e) {
                if (!this.genPoly) throw Error("Encoder not initialized");
                let r = new Uint8Array(e.length + this.degree);
                r.set(e);
                let n = i.mod(r, this.genPoly),
                    o = this.degree - n.length;
                if (o > 0) {
                    let a = new Uint8Array(this.degree);
                    return a.set(n, o), a
                }
                return n
            }, e.exports = o
        },
        7007: function(e, r) {
            let n = "[0-9]+",
                i = "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";
            i = i.replace(/u/g, "\\u");
            let o = "(?:(?![A-Z0-9 $%*+\\-./:]|" + i + ")(?:.|[\r\n]))+";
            r.KANJI = RegExp(i, "g"), r.BYTE_KANJI = RegExp("[^A-Z0-9 $%*+\\-./:]+", "g"), r.BYTE = RegExp(o, "g"), r.NUMERIC = RegExp(n, "g"), r.ALPHANUMERIC = RegExp("[A-Z $%*+\\-./:]+", "g");
            let a = RegExp("^" + i + "$"),
                s = RegExp("^" + n + "$"),
                l = RegExp("^[A-Z0-9 $%*+\\-./:]+$");
            r.testKanji = function(e) {
                return a.test(e)
            }, r.testNumeric = function(e) {
                return s.test(e)
            }, r.testAlphanumeric = function(e) {
                return l.test(e)
            }
        },
        16130: function(e, r, n) {
            let i = n(76910),
                o = n(41085),
                a = n(8260),
                s = n(43424),
                l = n(35442),
                u = n(7007),
                c = n(10242),
                d = n(65987);

            function h(e) {
                return unescape(encodeURIComponent(e)).length
            }

            function f(e, r, n) {
                let i;
                let o = [];
                for (; null !== (i = e.exec(n));) o.push({
                    data: i[0],
                    index: i.index,
                    mode: r,
                    length: i[0].length
                });
                return o
            }

            function p(e) {
                let r, n;
                let o = f(u.NUMERIC, i.NUMERIC, e),
                    a = f(u.ALPHANUMERIC, i.ALPHANUMERIC, e);
                c.isKanjiModeEnabled() ? (r = f(u.BYTE, i.BYTE, e), n = f(u.KANJI, i.KANJI, e)) : (r = f(u.BYTE_KANJI, i.BYTE, e), n = []);
                let s = o.concat(a, r, n);
                return s.sort(function(e, r) {
                    return e.index - r.index
                }).map(function(e) {
                    return {
                        data: e.data,
                        mode: e.mode,
                        length: e.length
                    }
                })
            }

            function m(e, r) {
                switch (r) {
                    case i.NUMERIC:
                        return o.getBitsLength(e);
                    case i.ALPHANUMERIC:
                        return a.getBitsLength(e);
                    case i.KANJI:
                        return l.getBitsLength(e);
                    case i.BYTE:
                        return s.getBitsLength(e)
                }
            }

            function g(e, r) {
                let n;
                let u = i.getBestModeForData(e);
                if ((n = i.from(r, u)) !== i.BYTE && n.bit < u.bit) throw Error('"' + e + '" cannot be encoded with mode ' + i.toString(n) + ".\n Suggested mode is: " + i.toString(u));
                switch (n !== i.KANJI || c.isKanjiModeEnabled() || (n = i.BYTE), n) {
                    case i.NUMERIC:
                        return new o(e);
                    case i.ALPHANUMERIC:
                        return new a(e);
                    case i.KANJI:
                        return new l(e);
                    case i.BYTE:
                        return new s(e)
                }
            }
            r.fromArray = function(e) {
                return e.reduce(function(e, r) {
                    return "string" == typeof r ? e.push(g(r, null)) : r.data && e.push(g(r.data, r.mode)), e
                }, [])
            }, r.fromString = function(e, n) {
                let o = p(e, c.isKanjiModeEnabled()),
                    a = function(e) {
                        let r = [];
                        for (let n = 0; n < e.length; n++) {
                            let o = e[n];
                            switch (o.mode) {
                                case i.NUMERIC:
                                    r.push([o, {
                                        data: o.data,
                                        mode: i.ALPHANUMERIC,
                                        length: o.length
                                    }, {
                                        data: o.data,
                                        mode: i.BYTE,
                                        length: o.length
                                    }]);
                                    break;
                                case i.ALPHANUMERIC:
                                    r.push([o, {
                                        data: o.data,
                                        mode: i.BYTE,
                                        length: o.length
                                    }]);
                                    break;
                                case i.KANJI:
                                    r.push([o, {
                                        data: o.data,
                                        mode: i.BYTE,
                                        length: h(o.data)
                                    }]);
                                    break;
                                case i.BYTE:
                                    r.push([{
                                        data: o.data,
                                        mode: i.BYTE,
                                        length: h(o.data)
                                    }])
                            }
                        }
                        return r
                    }(o),
                    s = function(e, r) {
                        let n = {},
                            o = {
                                start: {}
                            },
                            a = ["start"];
                        for (let s = 0; s < e.length; s++) {
                            let l = e[s],
                                u = [];
                            for (let c = 0; c < l.length; c++) {
                                let d = l[c],
                                    h = "" + s + c;
                                u.push(h), n[h] = {
                                    node: d,
                                    lastCount: 0
                                }, o[h] = {};
                                for (let f = 0; f < a.length; f++) {
                                    let p = a[f];
                                    n[p] && n[p].node.mode === d.mode ? (o[p][h] = m(n[p].lastCount + d.length, d.mode) - m(n[p].lastCount, d.mode), n[p].lastCount += d.length) : (n[p] && (n[p].lastCount = d.length), o[p][h] = m(d.length, d.mode) + 4 + i.getCharCountIndicator(d.mode, r))
                                }
                            }
                            a = u
                        }
                        for (let g = 0; g < a.length; g++) o[a[g]].end = 0;
                        return {
                            map: o,
                            table: n
                        }
                    }(a, n),
                    l = d.find_path(s.map, "start", "end"),
                    u = [];
                for (let f = 1; f < l.length - 1; f++) u.push(s.table[l[f]].node);
                return r.fromArray(u.reduce(function(e, r) {
                    let n = e.length - 1 >= 0 ? e[e.length - 1] : null;
                    return n && n.mode === r.mode ? (e[e.length - 1].data += r.data, e) : (e.push(r), e)
                }, []))
            }, r.rawSplit = function(e) {
                return r.fromArray(p(e, c.isKanjiModeEnabled()))
            }
        },
        10242: function(e, r) {
            let n;
            let i = [0, 26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581, 655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706];
            r.getSymbolSize = function(e) {
                if (!e) throw Error('"version" cannot be null or undefined');
                if (e < 1 || e > 40) throw Error('"version" should be in range from 1 to 40');
                return 4 * e + 17
            }, r.getSymbolTotalCodewords = function(e) {
                return i[e]
            }, r.getBCHDigit = function(e) {
                let r = 0;
                for (; 0 !== e;) r++, e >>>= 1;
                return r
            }, r.setToSJISFunction = function(e) {
                if ("function" != typeof e) throw Error('"toSJISFunc" is not a valid function.');
                n = e
            }, r.isKanjiModeEnabled = function() {
                return void 0 !== n
            }, r.toSJIS = function(e) {
                return n(e)
            }
        },
        43114: function(e, r) {
            r.isValid = function(e) {
                return !isNaN(e) && e >= 1 && e <= 40
            }
        },
        23103: function(e, r, n) {
            let i = n(10242),
                o = n(35393),
                a = n(64908),
                s = n(76910),
                l = n(43114),
                u = i.getBCHDigit(7973);

            function c(e, r) {
                return s.getCharCountIndicator(e, r) + 4
            }
            r.from = function(e, r) {
                return l.isValid(e) ? parseInt(e, 10) : r
            }, r.getCapacity = function(e, r, n) {
                if (!l.isValid(e)) throw Error("Invalid QR Code version");
                void 0 === n && (n = s.BYTE);
                let a = i.getSymbolTotalCodewords(e),
                    u = o.getTotalCodewordsCount(e, r),
                    d = (a - u) * 8;
                if (n === s.MIXED) return d;
                let h = d - c(n, e);
                switch (n) {
                    case s.NUMERIC:
                        return Math.floor(h / 10 * 3);
                    case s.ALPHANUMERIC:
                        return Math.floor(h / 11 * 2);
                    case s.KANJI:
                        return Math.floor(h / 13);
                    case s.BYTE:
                    default:
                        return Math.floor(h / 8)
                }
            }, r.getBestVersionForData = function(e, n) {
                let i;
                let o = a.from(n, a.M);
                if (Array.isArray(e)) {
                    if (e.length > 1) return function(e, n) {
                        for (let i = 1; i <= 40; i++) {
                            let o = function(e, r) {
                                let n = 0;
                                return e.forEach(function(e) {
                                    let i = c(e.mode, r);
                                    n += i + e.getBitsLength()
                                }), n
                            }(e, i);
                            if (o <= r.getCapacity(i, n, s.MIXED)) return i
                        }
                    }(e, o);
                    if (0 === e.length) return 1;
                    i = e[0]
                } else i = e;
                return function(e, n, i) {
                    for (let o = 1; o <= 40; o++)
                        if (n <= r.getCapacity(o, i, e)) return o
                }(i.mode, i.getLength(), o)
            }, r.getEncodedBits = function(e) {
                if (!l.isValid(e) || e < 7) throw Error("Invalid QR Code version");
                let r = e << 12;
                for (; i.getBCHDigit(r) - u >= 0;) r ^= 7973 << i.getBCHDigit(r) - u;
                return e << 12 | r
            }
        },
        6907: function(e, r, n) {
            let i = n(89653);
            r.render = function(e, r, n) {
                var o;
                let a = n,
                    s = r;
                void 0 !== a || r && r.getContext || (a = r, r = void 0), r || (s = function() {
                    try {
                        return document.createElement("canvas")
                    } catch (e) {
                        throw Error("You need to specify a canvas element")
                    }
                }()), a = i.getOptions(a);
                let l = i.getImageWidth(e.modules.size, a),
                    u = s.getContext("2d"),
                    c = u.createImageData(l, l);
                return i.qrToImageData(c.data, e, a), o = s, u.clearRect(0, 0, o.width, o.height), o.style || (o.style = {}), o.height = l, o.width = l, o.style.height = l + "px", o.style.width = l + "px", u.putImageData(c, 0, 0), s
            }, r.renderToDataURL = function(e, n, i) {
                let o = i;
                void 0 !== o || n && n.getContext || (o = n, n = void 0), o || (o = {});
                let a = r.render(e, n, o),
                    s = o.type || "image/png",
                    l = o.rendererOpts || {};
                return a.toDataURL(s, l.quality)
            }
        },
        93776: function(e, r, n) {
            let i = n(89653);

            function o(e, r) {
                let n = e.a / 255,
                    i = r + '="' + e.hex + '"';
                return n < 1 ? i + " " + r + '-opacity="' + n.toFixed(2).slice(1) + '"' : i
            }

            function a(e, r, n) {
                let i = e + r;
                return void 0 !== n && (i += " " + n), i
            }
            r.render = function(e, r, n) {
                let s = i.getOptions(r),
                    l = e.modules.size,
                    u = e.modules.data,
                    c = l + 2 * s.margin,
                    d = s.color.light.a ? "<path " + o(s.color.light, "fill") + ' d="M0 0h' + c + "v" + c + 'H0z"/>' : "",
                    h = "<path " + o(s.color.dark, "stroke") + ' d="' + function(e, r, n) {
                        let i = "",
                            o = 0,
                            s = !1,
                            l = 0;
                        for (let u = 0; u < e.length; u++) {
                            let c = Math.floor(u % r),
                                d = Math.floor(u / r);
                            c || s || (s = !0), e[u] ? (l++, u > 0 && c > 0 && e[u - 1] || (i += s ? a("M", c + n, .5 + d + n) : a("m", o, 0), o = 0, s = !1), c + 1 < r && e[u + 1] || (i += a("h", l), l = 0)) : o++
                        }
                        return i
                    }(u, l, s.margin) + '"/>',
                    f = s.width ? 'width="' + s.width + '" height="' + s.width + '" ' : "",
                    p = '<svg xmlns="http://www.w3.org/2000/svg" ' + f + ('viewBox="0 0 ' + c) + " " + c + '" shape-rendering="crispEdges">' + d + h + "</svg>\n";
                return "function" == typeof n && n(null, p), p
            }
        },
        89653: function(e, r) {
            function n(e) {
                if ("number" == typeof e && (e = e.toString()), "string" != typeof e) throw Error("Color should be defined as hex string");
                let r = e.slice().replace("#", "").split("");
                if (r.length < 3 || 5 === r.length || r.length > 8) throw Error("Invalid hex color: " + e);
                (3 === r.length || 4 === r.length) && (r = Array.prototype.concat.apply([], r.map(function(e) {
                    return [e, e]
                }))), 6 === r.length && r.push("F", "F");
                let n = parseInt(r.join(""), 16);
                return {
                    r: n >> 24 & 255,
                    g: n >> 16 & 255,
                    b: n >> 8 & 255,
                    a: 255 & n,
                    hex: "#" + r.slice(0, 6).join("")
                }
            }
            r.getOptions = function(e) {
                e || (e = {}), e.color || (e.color = {});
                let r = void 0 === e.margin || null === e.margin || e.margin < 0 ? 4 : e.margin,
                    i = e.width && e.width >= 21 ? e.width : void 0,
                    o = e.scale || 4;
                return {
                    width: i,
                    scale: i ? 4 : o,
                    margin: r,
                    color: {
                        dark: n(e.color.dark || "#000000ff"),
                        light: n(e.color.light || "#ffffffff")
                    },
                    type: e.type,
                    rendererOpts: e.rendererOpts || {}
                }
            }, r.getScale = function(e, r) {
                return r.width && r.width >= e + 2 * r.margin ? r.width / (e + 2 * r.margin) : r.scale
            }, r.getImageWidth = function(e, n) {
                let i = r.getScale(e, n);
                return Math.floor((e + 2 * n.margin) * i)
            }, r.qrToImageData = function(e, n, i) {
                let o = n.modules.size,
                    a = n.modules.data,
                    s = r.getScale(o, i),
                    l = Math.floor((o + 2 * i.margin) * s),
                    u = i.margin * s,
                    c = [i.color.light, i.color.dark];
                for (let d = 0; d < l; d++)
                    for (let h = 0; h < l; h++) {
                        let f = (d * l + h) * 4,
                            p = i.color.light;
                        if (d >= u && h >= u && d < l - u && h < l - u) {
                            let m = Math.floor((d - u) / s),
                                g = Math.floor((h - u) / s);
                            p = c[a[m * o + g] ? 1 : 0]
                        }
                        e[f++] = p.r, e[f++] = p.g, e[f++] = p.b, e[f] = p.a
                    }
            }
        },
        69590: function(e) {
            var r = "undefined" != typeof Element,
                n = "function" == typeof Map,
                i = "function" == typeof Set,
                o = "function" == typeof ArrayBuffer && !!ArrayBuffer.isView;
            e.exports = function(e, a) {
                try {
                    return function e(a, s) {
                        if (a === s) return !0;
                        if (a && s && "object" == typeof a && "object" == typeof s) {
                            var l, u, c, d;
                            if (a.constructor !== s.constructor) return !1;
                            if (Array.isArray(a)) {
                                if ((l = a.length) != s.length) return !1;
                                for (u = l; 0 != u--;)
                                    if (!e(a[u], s[u])) return !1;
                                return !0
                            }
                            if (n && a instanceof Map && s instanceof Map) {
                                if (a.size !== s.size) return !1;
                                for (d = a.entries(); !(u = d.next()).done;)
                                    if (!s.has(u.value[0])) return !1;
                                for (d = a.entries(); !(u = d.next()).done;)
                                    if (!e(u.value[1], s.get(u.value[0]))) return !1;
                                return !0
                            }
                            if (i && a instanceof Set && s instanceof Set) {
                                if (a.size !== s.size) return !1;
                                for (d = a.entries(); !(u = d.next()).done;)
                                    if (!s.has(u.value[0])) return !1;
                                return !0
                            }
                            if (o && ArrayBuffer.isView(a) && ArrayBuffer.isView(s)) {
                                if ((l = a.length) != s.length) return !1;
                                for (u = l; 0 != u--;)
                                    if (a[u] !== s[u]) return !1;
                                return !0
                            }
                            if (a.constructor === RegExp) return a.source === s.source && a.flags === s.flags;
                            if (a.valueOf !== Object.prototype.valueOf && "function" == typeof a.valueOf && "function" == typeof s.valueOf) return a.valueOf() === s.valueOf();
                            if (a.toString !== Object.prototype.toString && "function" == typeof a.toString && "function" == typeof s.toString) return a.toString() === s.toString();
                            if ((l = (c = Object.keys(a)).length) !== Object.keys(s).length) return !1;
                            for (u = l; 0 != u--;)
                                if (!Object.prototype.hasOwnProperty.call(s, c[u])) return !1;
                            if (r && a instanceof Element) return !1;
                            for (u = l; 0 != u--;)
                                if (("_owner" !== c[u] && "__v" !== c[u] && "__o" !== c[u] || !a.$$typeof) && !e(a[c[u]], s[c[u]])) return !1;
                            return !0
                        }
                        return a != a && s != s
                    }(e, a)
                } catch (s) {
                    if ((s.message || "").match(/stack|recursion/i)) return console.warn("react-fast-compare cannot handle circular refs"), !1;
                    throw s
                }
            }
        },
        69921: function(e, r) {
            "use strict";
            /** @license React v16.13.1
             * react-is.production.min.js
             *
             * Copyright (c) Facebook, Inc. and its affiliates.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */
            var n = "function" == typeof Symbol && Symbol.for,
                i = n ? Symbol.for("react.element") : 60103,
                o = n ? Symbol.for("react.portal") : 60106,
                a = n ? Symbol.for("react.fragment") : 60107,
                s = n ? Symbol.for("react.strict_mode") : 60108,
                l = n ? Symbol.for("react.profiler") : 60114,
                u = n ? Symbol.for("react.provider") : 60109,
                c = n ? Symbol.for("react.context") : 60110,
                d = n ? Symbol.for("react.async_mode") : 60111,
                h = n ? Symbol.for("react.concurrent_mode") : 60111,
                f = n ? Symbol.for("react.forward_ref") : 60112,
                p = n ? Symbol.for("react.suspense") : 60113,
                m = n ? Symbol.for("react.suspense_list") : 60120,
                g = n ? Symbol.for("react.memo") : 60115,
                v = n ? Symbol.for("react.lazy") : 60116,
                y = n ? Symbol.for("react.block") : 60121,
                b = n ? Symbol.for("react.fundamental") : 60117,
                w = n ? Symbol.for("react.responder") : 60118,
                x = n ? Symbol.for("react.scope") : 60119;

            function E(e) {
                if ("object" == typeof e && null !== e) {
                    var r = e.$$typeof;
                    switch (r) {
                        case i:
                            switch (e = e.type) {
                                case d:
                                case h:
                                case a:
                                case l:
                                case s:
                                case p:
                                    return e;
                                default:
                                    switch (e = e && e.$$typeof) {
                                        case c:
                                        case f:
                                        case v:
                                        case g:
                                        case u:
                                            return e;
                                        default:
                                            return r
                                    }
                            }
                        case o:
                            return r
                    }
                }
            }

            function C(e) {
                return E(e) === h
            }
            r.AsyncMode = d, r.ConcurrentMode = h, r.ContextConsumer = c, r.ContextProvider = u, r.Element = i, r.ForwardRef = f, r.Fragment = a, r.Lazy = v, r.Memo = g, r.Portal = o, r.Profiler = l, r.StrictMode = s, r.Suspense = p, r.isAsyncMode = function(e) {
                return C(e) || E(e) === d
            }, r.isConcurrentMode = C, r.isContextConsumer = function(e) {
                return E(e) === c
            }, r.isContextProvider = function(e) {
                return E(e) === u
            }, r.isElement = function(e) {
                return "object" == typeof e && null !== e && e.$$typeof === i
            }, r.isForwardRef = function(e) {
                return E(e) === f
            }, r.isFragment = function(e) {
                return E(e) === a
            }, r.isLazy = function(e) {
                return E(e) === v
            }, r.isMemo = function(e) {
                return E(e) === g
            }, r.isPortal = function(e) {
                return E(e) === o
            }, r.isProfiler = function(e) {
                return E(e) === l
            }, r.isStrictMode = function(e) {
                return E(e) === s
            }, r.isSuspense = function(e) {
                return E(e) === p
            }, r.isValidElementType = function(e) {
                return "string" == typeof e || "function" == typeof e || e === a || e === h || e === l || e === s || e === p || e === m || "object" == typeof e && null !== e && (e.$$typeof === v || e.$$typeof === g || e.$$typeof === u || e.$$typeof === c || e.$$typeof === f || e.$$typeof === b || e.$$typeof === w || e.$$typeof === x || e.$$typeof === y)
            }, r.typeOf = E
        },
        59864: function(e, r, n) {
            "use strict";
            e.exports = n(69921)
        },
        17635: function(e) {
            "use strict";
            ! function(r) {
                function n(e) {
                    let r = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]),
                        n = 1779033703,
                        i = 3144134277,
                        o = 1013904242,
                        a = 2773480762,
                        s = 1359893119,
                        l = 2600822924,
                        u = 528734635,
                        c = 1541459225,
                        d = new Uint32Array(64);

                    function h(e) {
                        let h = 0,
                            f = e.length;
                        for (; f >= 64;) {
                            let p = n,
                                m = i,
                                g = o,
                                v = a,
                                y = s,
                                b = l,
                                w = u,
                                x = c,
                                E, C, A, k, S;
                            for (C = 0; C < 16; C++) A = h + 4 * C, d[C] = (255 & e[A]) << 24 | (255 & e[A + 1]) << 16 | (255 & e[A + 2]) << 8 | 255 & e[A + 3];
                            for (C = 16; C < 64; C++) k = ((E = d[C - 2]) >>> 17 | E << 15) ^ (E >>> 19 | E << 13) ^ E >>> 10, S = ((E = d[C - 15]) >>> 7 | E << 25) ^ (E >>> 18 | E << 14) ^ E >>> 3, d[C] = (k + d[C - 7] | 0) + (S + d[C - 16] | 0) | 0;
                            for (C = 0; C < 64; C++) k = (((y >>> 6 | y << 26) ^ (y >>> 11 | y << 21) ^ (y >>> 25 | y << 7)) + (y & b ^ ~y & w) | 0) + (x + (r[C] + d[C] | 0) | 0) | 0, S = ((p >>> 2 | p << 30) ^ (p >>> 13 | p << 19) ^ (p >>> 22 | p << 10)) + (p & m ^ p & g ^ m & g) | 0, x = w, w = b, b = y, y = v + k | 0, v = g, g = m, m = p, p = k + S | 0;
                            n = n + p | 0, i = i + m | 0, o = o + g | 0, a = a + v | 0, s = s + y | 0, l = l + b | 0, u = u + w | 0, c = c + x | 0, h += 64, f -= 64
                        }
                    }
                    h(e);
                    let f, p = e.length % 64,
                        m = e.length / 536870912 | 0,
                        g = e.length << 3,
                        v = p < 56 ? 56 : 120,
                        y = e.slice(e.length - p, e.length);
                    for (y.push(128), f = p + 1; f < v; f++) y.push(0);
                    return y.push(m >>> 24 & 255), y.push(m >>> 16 & 255), y.push(m >>> 8 & 255), y.push(m >>> 0 & 255), y.push(g >>> 24 & 255), y.push(g >>> 16 & 255), y.push(g >>> 8 & 255), y.push(g >>> 0 & 255), h(y), [n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, n >>> 0 & 255, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, i >>> 0 & 255, o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, o >>> 0 & 255, a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, a >>> 0 & 255, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, s >>> 0 & 255, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, l >>> 0 & 255, u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, u >>> 0 & 255, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, c >>> 0 & 255]
                }

                function i(e, r, i) {
                    let o;
                    e = e.length <= 64 ? e : n(e);
                    let a = 64 + r.length + 4,
                        s = Array(a),
                        l = Array(64),
                        u = [];
                    for (o = 0; o < 64; o++) s[o] = 54;
                    for (o = 0; o < e.length; o++) s[o] ^= e[o];
                    for (o = 0; o < r.length; o++) s[64 + o] = r[o];
                    for (o = a - 4; o < a; o++) s[o] = 0;
                    for (o = 0; o < 64; o++) l[o] = 92;
                    for (o = 0; o < e.length; o++) l[o] ^= e[o];

                    function c() {
                        for (let e = a - 1; e >= a - 4; e--) {
                            if (s[e]++, s[e] <= 255) return;
                            s[e] = 0
                        }
                    }
                    for (; i >= 32;) c(), u = u.concat(n(l.concat(n(s)))), i -= 32;
                    return i > 0 && (c(), u = u.concat(n(l.concat(n(s))).slice(0, i))), u
                }

                function o(e, r, n, i, o) {
                    let u;
                    for (l(e, (2 * n - 1) * 16, o, 0, 16), u = 0; u < 2 * n; u++) s(e, 16 * u, o, 16),
                        function(e, r) {
                            l(e, 0, r, 0, 16);
                            for (let n = 8; n > 0; n -= 2) r[4] ^= a(r[0] + r[12], 7), r[8] ^= a(r[4] + r[0], 9), r[12] ^= a(r[8] + r[4], 13), r[0] ^= a(r[12] + r[8], 18), r[9] ^= a(r[5] + r[1], 7), r[13] ^= a(r[9] + r[5], 9), r[1] ^= a(r[13] + r[9], 13), r[5] ^= a(r[1] + r[13], 18), r[14] ^= a(r[10] + r[6], 7), r[2] ^= a(r[14] + r[10], 9), r[6] ^= a(r[2] + r[14], 13), r[10] ^= a(r[6] + r[2], 18), r[3] ^= a(r[15] + r[11], 7), r[7] ^= a(r[3] + r[15], 9), r[11] ^= a(r[7] + r[3], 13), r[15] ^= a(r[11] + r[7], 18), r[1] ^= a(r[0] + r[3], 7), r[2] ^= a(r[1] + r[0], 9), r[3] ^= a(r[2] + r[1], 13), r[0] ^= a(r[3] + r[2], 18), r[6] ^= a(r[5] + r[4], 7), r[7] ^= a(r[6] + r[5], 9), r[4] ^= a(r[7] + r[6], 13), r[5] ^= a(r[4] + r[7], 18), r[11] ^= a(r[10] + r[9], 7), r[8] ^= a(r[11] + r[10], 9), r[9] ^= a(r[8] + r[11], 13), r[10] ^= a(r[9] + r[8], 18), r[12] ^= a(r[15] + r[14], 7), r[13] ^= a(r[12] + r[15], 9), r[14] ^= a(r[13] + r[12], 13), r[15] ^= a(r[14] + r[13], 18);
                            for (let i = 0; i < 16; ++i) e[i] += r[i]
                        }(o, i), l(o, 0, e, r + 16 * u, 16);
                    for (u = 0; u < n; u++) l(e, r + 32 * u, e, 16 * u, 16);
                    for (u = 0; u < n; u++) l(e, r + (2 * u + 1) * 16, e, (u + n) * 16, 16)
                }

                function a(e, r) {
                    return e << r | e >>> 32 - r
                }

                function s(e, r, n, i) {
                    for (let o = 0; o < i; o++) n[o] ^= e[r + o]
                }

                function l(e, r, n, i, o) {
                    for (; o--;) n[i++] = e[r++]
                }

                function u(e) {
                    if (!e || "number" != typeof e.length) return !1;
                    for (let r = 0; r < e.length; r++) {
                        let n = e[r];
                        if ("number" != typeof n || n % 1 || n < 0 || n >= 256) return !1
                    }
                    return !0
                }

                function c(e, r) {
                    if ("number" != typeof e || e % 1) throw Error("invalid " + r);
                    return e
                }

                function d(e, r, n, a, d, h, f) {
                    let p;
                    if (n = c(n, "N"), a = c(a, "r"), d = c(d, "p"), h = c(h, "dkLen"), 0 === n || (n & n - 1) != 0) throw Error("N must be power of 2");
                    if (n > 2147483647 / 128 / a) throw Error("N too large");
                    if (a > 2147483647 / 128 / d) throw Error("r too large");
                    if (!u(e)) throw Error("password must be an array or buffer");
                    if (e = Array.prototype.slice.call(e), !u(r)) throw Error("salt must be an array or buffer");
                    let m = i(e, r = Array.prototype.slice.call(r), 128 * d * a),
                        g = new Uint32Array(32 * d * a);
                    for (let v = 0; v < g.length; v++) {
                        let y = 4 * v;
                        g[v] = (255 & m[y + 3]) << 24 | (255 & m[y + 2]) << 16 | (255 & m[y + 1]) << 8 | (255 & m[y + 0]) << 0
                    }
                    let b = new Uint32Array(64 * a),
                        w = new Uint32Array(32 * a * n),
                        x = 32 * a,
                        E = new Uint32Array(16),
                        C = new Uint32Array(16),
                        A = d * n * 2,
                        k = 0,
                        S = null,
                        _ = !1,
                        P = 0,
                        j = 0,
                        T, R = f ? parseInt(1e3 / a) : 4294967295,
                        B = "undefined" != typeof setImmediate ? setImmediate : setTimeout,
                        O = function() {
                            let r;
                            if (_) return f(Error("cancelled"), k / A);
                            switch (P) {
                                case 0:
                                    l(g, p = 32 * j * a, b, 0, x), P = 1, T = 0;
                                case 1:
                                    (r = n - T) > R && (r = R);
                                    for (let u = 0; u < r; u++) l(b, 0, w, (T + u) * x, x), o(b, x, a, E, C);
                                    if (T += r, k += r, f) {
                                        let c = parseInt(1e3 * k / A);
                                        if (c !== S) {
                                            if (_ = f(null, k / A)) break;
                                            S = c
                                        }
                                    }
                                    if (T < n) break;
                                    T = 0, P = 2;
                                case 2:
                                    (r = n - T) > R && (r = R);
                                    for (let v = 0; v < r; v++) {
                                        let y = (2 * a - 1) * 16,
                                            M = b[y] & n - 1;
                                        s(w, M * x, b, x), o(b, x, a, E, C)
                                    }
                                    if (T += r, k += r, f) {
                                        let I = parseInt(1e3 * k / A);
                                        if (I !== S) {
                                            if (_ = f(null, k / A)) break;
                                            S = I
                                        }
                                    }
                                    if (T < n) break;
                                    if (l(b, 0, g, p, x), ++j < d) {
                                        P = 0;
                                        break
                                    }
                                    m = [];
                                    for (let N = 0; N < g.length; N++) m.push(g[N] >> 0 & 255), m.push(g[N] >> 8 & 255), m.push(g[N] >> 16 & 255), m.push(g[N] >> 24 & 255);
                                    let F = i(e, m, h);
                                    return f && f(null, 1, F), F
                            }
                            f && B(O)
                        };
                    if (!f)
                        for (;;) {
                            let M = O();
                            if (void 0 != M) return M
                        }
                    O()
                }
                e.exports = {
                    scrypt: function(e, r, n, i, o, a, s) {
                        return new Promise(function(l, u) {
                            let c = 0;
                            s && s(0), d(e, r, n, i, o, a, function(e, r, n) {
                                if (e) u(e);
                                else if (n) s && 1 !== c && s(1), l(new Uint8Array(n));
                                else if (s && r !== c) return c = r, s(r)
                            })
                        })
                    },
                    syncScrypt: function(e, r, n, i, o, a) {
                        return new Uint8Array(d(e, r, n, i, o, a))
                    }
                }
            }(0)
        },
        53250: function(e, r, n) {
            "use strict";
            /**
             * @license React
             * use-sync-external-store-shim.production.min.js
             *
             * Copyright (c) Facebook, Inc. and its affiliates.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */
            var i = n(67294),
                o = "function" == typeof Object.is ? Object.is : function(e, r) {
                    return e === r && (0 !== e || 1 / e == 1 / r) || e != e && r != r
                },
                a = i.useState,
                s = i.useEffect,
                l = i.useLayoutEffect,
                u = i.useDebugValue;

            function c(e) {
                var r = e.getSnapshot;
                e = e.value;
                try {
                    var n = r();
                    return !o(e, n)
                } catch (i) {
                    return !0
                }
            }
            var d = "undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement ? function(e, r) {
                return r()
            } : function(e, r) {
                var n = r(),
                    i = a({
                        inst: {
                            value: n,
                            getSnapshot: r
                        }
                    }),
                    o = i[0].inst,
                    d = i[1];
                return l(function() {
                    o.value = n, o.getSnapshot = r, c(o) && d({
                        inst: o
                    })
                }, [e, n, r]), s(function() {
                    return c(o) && d({
                        inst: o
                    }), e(function() {
                        c(o) && d({
                            inst: o
                        })
                    })
                }, [e]), u(n), n
            };
            r.useSyncExternalStore = void 0 !== i.useSyncExternalStore ? i.useSyncExternalStore : d
        },
        50139: function(e, r, n) {
            "use strict";
            /**
             * @license React
             * use-sync-external-store-shim/with-selector.production.min.js
             *
             * Copyright (c) Facebook, Inc. and its affiliates.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */
            var i = n(67294),
                o = n(61688),
                a = "function" == typeof Object.is ? Object.is : function(e, r) {
                    return e === r && (0 !== e || 1 / e == 1 / r) || e != e && r != r
                },
                s = o.useSyncExternalStore,
                l = i.useRef,
                u = i.useEffect,
                c = i.useMemo,
                d = i.useDebugValue;
            r.useSyncExternalStoreWithSelector = function(e, r, n, i, o) {
                var h = l(null);
                if (null === h.current) {
                    var f = {
                        hasValue: !1,
                        value: null
                    };
                    h.current = f
                } else f = h.current;
                h = c(function() {
                    function e(e) {
                        if (!u) {
                            if (u = !0, s = e, e = i(e), void 0 !== o && f.hasValue) {
                                var r = f.value;
                                if (o(r, e)) return l = r
                            }
                            return l = e
                        }
                        if (r = l, a(s, e)) return r;
                        var n = i(e);
                        return void 0 !== o && o(r, n) ? r : (s = e, l = n)
                    }
                    var s, l, u = !1,
                        c = void 0 === n ? null : n;
                    return [function() {
                        return e(r())
                    }, null === c ? void 0 : function() {
                        return e(c())
                    }]
                }, [r, n, i, o]);
                var p = s(e, h[0], h[1]);
                return u(function() {
                    f.hasValue = !0, f.value = p
                }, [p]), d(p), p
            }
        },
        61688: function(e, r, n) {
            "use strict";
            e.exports = n(53250)
        },
        52798: function(e, r, n) {
            "use strict";
            e.exports = n(50139)
        },
        46601: function() {},
        93152: function(e, r, n) {
            "use strict";
            n.d(r, {
                w: function() {
                    return l
                }
            });
            var i = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
                o = {
                    rounded: `SFRounded, ui-rounded, "SF Pro Rounded", ${i}`,
                    system: i
                },
                a = {
                    large: {
                        actionButton: "9999px",
                        connectButton: "12px",
                        modal: "24px",
                        modalMobile: "28px"
                    },
                    medium: {
                        actionButton: "10px",
                        connectButton: "8px",
                        modal: "16px",
                        modalMobile: "18px"
                    },
                    none: {
                        actionButton: "0px",
                        connectButton: "0px",
                        modal: "0px",
                        modalMobile: "0px"
                    },
                    small: {
                        actionButton: "4px",
                        connectButton: "4px",
                        modal: "8px",
                        modalMobile: "8px"
                    }
                },
                s = {
                    large: {
                        modalOverlay: "blur(20px)"
                    },
                    none: {
                        modalOverlay: "blur(0px)"
                    },
                    small: {
                        modalOverlay: "blur(4px)"
                    }
                },
                l = ({
                    borderRadius: e = "large",
                    fontStack: r = "rounded",
                    overlayBlur: n = "none"
                }) => ({
                    blurs: {
                        modalOverlay: s[n].modalOverlay
                    },
                    fonts: {
                        body: o[r]
                    },
                    radii: {
                        actionButton: a[e].actionButton,
                        connectButton: a[e].connectButton,
                        menuButton: a[e].connectButton,
                        modal: a[e].modal,
                        modalMobile: a[e].modalMobile
                    }
                })
        },
        50638: function(e, r, n) {
            "use strict";
            n.d(r, {
                NL: function() {
                    return rH
                },
                xZ: function() {
                    return rI
                },
                UG: function() {
                    return rF
                },
                pj: function() {
                    return tM
                },
                Bg: function() {
                    return tD
                },
                VQ: function() {
                    return tz
                },
                Dt: function() {
                    return ew
                },
                A7: function() {
                    return rf
                },
                gn: function() {
                    return eE
                },
                tq: function() {
                    return eC
                }
            });
            var i, o, a, s, l, u, c, d = n(93152),
                h = {
                    blue: {
                        accentColor: "#0E76FD",
                        accentColorForeground: "#FFF"
                    },
                    green: {
                        accentColor: "#1DB847",
                        accentColorForeground: "#FFF"
                    },
                    orange: {
                        accentColor: "#FF801F",
                        accentColorForeground: "#FFF"
                    },
                    pink: {
                        accentColor: "#FF5CA0",
                        accentColorForeground: "#FFF"
                    },
                    purple: {
                        accentColor: "#5F5AFA",
                        accentColorForeground: "#FFF"
                    },
                    red: {
                        accentColor: "#FA423C",
                        accentColorForeground: "#FFF"
                    }
                },
                f = h.blue,
                p = ({
                    accentColor: e = f.accentColor,
                    accentColorForeground: r = f.accentColorForeground,
                    ...n
                } = {}) => ({ ...(0, d.w)(n),
                    colors: {
                        accentColor: e,
                        accentColorForeground: r,
                        actionButtonBorder: "rgba(0, 0, 0, 0.04)",
                        actionButtonBorderMobile: "rgba(0, 0, 0, 0.06)",
                        actionButtonSecondaryBackground: "rgba(0, 0, 0, 0.06)",
                        closeButton: "rgba(60, 66, 66, 0.8)",
                        closeButtonBackground: "rgba(0, 0, 0, 0.06)",
                        connectButtonBackground: "#FFF",
                        connectButtonBackgroundError: "#FF494A",
                        connectButtonInnerBackground: "linear-gradient(0deg, rgba(0, 0, 0, 0.03), rgba(0, 0, 0, 0.06))",
                        connectButtonText: "#25292E",
                        connectButtonTextError: "#FFF",
                        connectionIndicator: "#30E000",
                        downloadBottomCardBackground: "linear-gradient(126deg, rgba(255, 255, 255, 0) 9.49%, rgba(171, 171, 171, 0.04) 71.04%), #FFFFFF",
                        downloadTopCardBackground: "linear-gradient(126deg, rgba(171, 171, 171, 0.2) 9.49%, rgba(255, 255, 255, 0) 71.04%), #FFFFFF",
                        error: "#FF494A",
                        generalBorder: "rgba(0, 0, 0, 0.06)",
                        generalBorderDim: "rgba(0, 0, 0, 0.03)",
                        menuItemBackground: "rgba(60, 66, 66, 0.1)",
                        modalBackdrop: "rgba(0, 0, 0, 0.3)",
                        modalBackground: "#FFF",
                        modalBorder: "transparent",
                        modalText: "#25292E",
                        modalTextDim: "rgba(60, 66, 66, 0.3)",
                        modalTextSecondary: "rgba(60, 66, 66, 0.6)",
                        profileAction: "#FFF",
                        profileActionHover: "rgba(255, 255, 255, 0.5)",
                        profileForeground: "rgba(60, 66, 66, 0.06)",
                        selectedOptionBorder: "rgba(60, 66, 66, 0.1)",
                        standby: "#FFD641"
                    },
                    shadows: {
                        connectButton: "0px 4px 12px rgba(0, 0, 0, 0.1)",
                        dialog: "0px 8px 32px rgba(0, 0, 0, 0.32)",
                        profileDetailsAction: "0px 2px 6px rgba(37, 41, 46, 0.04)",
                        selectedOption: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                        selectedWallet: "0px 2px 6px rgba(0, 0, 0, 0.12)",
                        walletLogo: "0px 2px 16px rgba(0, 0, 0, 0.16)"
                    }
                });
            p.accentColors = h;
            var m = n(67294),
                g = function(e, r) {
                    return Object.defineProperty(e, "__recipe__", {
                        value: r,
                        writable: !1
                    }), e
                };

            function v(e) {
                var {
                    conditions: r
                } = e;
                if (!r) throw Error("Styles have no conditions");
                return g(function(e) {
                    if ("string" == typeof e || "number" == typeof e || "boolean" == typeof e) {
                        if (!r.defaultCondition) throw Error("No default condition");
                        return {
                            [r.defaultCondition]: e
                        }
                    }
                    if (Array.isArray(e)) {
                        if (!("responsiveArray" in r)) throw Error("Responsive arrays are not supported");
                        var n = {};
                        for (var i in r.responsiveArray) null != e[i] && (n[r.responsiveArray[i]] = e[i]);
                        return n
                    }
                    return e
                }, {
                    importPath: "@vanilla-extract/sprinkles/createUtils",
                    importName: "createNormalizeValueFn",
                    args: [{
                        conditions: e.conditions
                    }]
                })
            }

            function y(e, r) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var i = Object.getOwnPropertySymbols(e);
                    r && (i = i.filter(function(r) {
                        return Object.getOwnPropertyDescriptor(e, r).enumerable
                    })), n.push.apply(n, i)
                }
                return n
            }

            function b(e) {
                for (var r = 1; r < arguments.length; r++) {
                    var n = null != arguments[r] ? arguments[r] : {};
                    r % 2 ? y(Object(n), !0).forEach(function(r) {
                        var i, o;
                        i = e, o = n[r], r in i ? Object.defineProperty(i, r, {
                            value: o,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : i[r] = o
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : y(Object(n)).forEach(function(r) {
                        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r))
                    })
                }
                return e
            }
            var w = e => function() {
                    for (var r = arguments.length, n = Array(r), i = 0; i < r; i++) n[i] = arguments[i];
                    var o = Object.assign({}, ...n.map(e => e.styles)),
                        a = Object.keys(o),
                        s = a.filter(e => "mappings" in o[e]);
                    return Object.assign(r => {
                        var n = [],
                            i = {},
                            a = b({}, r),
                            l = !1;
                        for (var u of s) {
                            var c = r[u];
                            if (null != c)
                                for (var d of (l = !0, o[u].mappings)) i[d] = c, null == a[d] && delete a[d]
                        }
                        var h = l ? b(b({}, i), a) : r;
                        for (var f in h) {
                            var p = h[f],
                                m = o[f];
                            try {
                                if (m.mappings) continue;
                                if ("string" == typeof p || "number" == typeof p) n.push(m.values[p].defaultClass);
                                else if (Array.isArray(p))
                                    for (var g = 0; g < p.length; g++) {
                                        var v = p[g];
                                        if (null != v) {
                                            var y = m.responsiveArray[g];
                                            n.push(m.values[v].conditions[y])
                                        }
                                    } else
                                        for (var w in p) {
                                            var x = p[w];
                                            null != x && n.push(m.values[x].conditions[w])
                                        }
                            } catch (E) {
                                throw E
                            }
                        }
                        return e(n.join(" "))
                    }, {
                        properties: new Set(a)
                    })
                },
                x = e => e,
                E = n(69077);

            function C() {
                for (var e, r, n = 0, i = ""; n < arguments.length;)(e = arguments[n++]) && (r = function e(r) {
                    var n, i, o = "";
                    if ("string" == typeof r || "number" == typeof r) o += r;
                    else if ("object" == typeof r) {
                        if (Array.isArray(r))
                            for (n = 0; n < r.length; n++) r[n] && (i = e(r[n])) && (o && (o += " "), o += i);
                        else
                            for (n in r) r[n] && (o && (o += " "), o += n)
                    }
                    return o
                }(e)) && (i && (i += " "), i += r);
                return i
            }
            var A = n(24484),
                k = n(73935),
                S = n(97582),
                _ = "right-scroll-bar-position",
                P = "width-before-scroll-bar",
                j = (void 0 === i && (i = {}), (void 0 === o && (o = function(e) {
                    return e
                }), a = [], s = !1, l = {
                    read: function() {
                        if (s) throw Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
                        return a.length ? a[a.length - 1] : null
                    },
                    useMedium: function(e) {
                        var r = o(e, s);
                        return a.push(r),
                            function() {
                                a = a.filter(function(e) {
                                    return e !== r
                                })
                            }
                    },
                    assignSyncMedium: function(e) {
                        for (s = !0; a.length;) {
                            var r = a;
                            a = [], r.forEach(e)
                        }
                        a = {
                            push: function(r) {
                                return e(r)
                            },
                            filter: function() {
                                return a
                            }
                        }
                    },
                    assignMedium: function(e) {
                        s = !0;
                        var r = [];
                        if (a.length) {
                            var n = a;
                            a = [], n.forEach(e), r = a
                        }
                        var i = function() {
                                var n = r;
                                r = [], n.forEach(e)
                            },
                            o = function() {
                                return Promise.resolve().then(i)
                            };
                        o(), a = {
                            push: function(e) {
                                r.push(e), o()
                            },
                            filter: function(e) {
                                return r = r.filter(e), a
                            }
                        }
                    }
                }).options = (0, S.__assign)({
                    async: !0,
                    ssr: !1
                }, i), l),
                T = function() {},
                R = m.forwardRef(function(e, r) {
                    var n, i, o, a = m.useRef(null),
                        s = m.useState({
                            onScrollCapture: T,
                            onWheelCapture: T,
                            onTouchMoveCapture: T
                        }),
                        l = s[0],
                        u = s[1],
                        c = e.forwardProps,
                        d = e.children,
                        h = e.className,
                        f = e.removeScrollBar,
                        p = e.enabled,
                        g = e.shards,
                        v = e.sideCar,
                        y = e.noIsolation,
                        b = e.inert,
                        w = e.allowPinchZoom,
                        x = e.as,
                        E = (0, S.__rest)(e, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]),
                        C = (n = [a, r], i = function(e) {
                            return n.forEach(function(r) {
                                var n;
                                return "function" == typeof(n = r) ? n(e) : n && (n.current = e), n
                            })
                        }, (o = (0, m.useState)(function() {
                            return {
                                value: null,
                                callback: i,
                                facade: {
                                    get current() {
                                        return o.value
                                    },
                                    set current(value) {
                                        var e = o.value;
                                        e !== value && (o.value = value, o.callback(value, e))
                                    }
                                }
                            }
                        })[0]).callback = i, o.facade),
                        A = (0, S.__assign)((0, S.__assign)({}, E), l);
                    return m.createElement(m.Fragment, null, p && m.createElement(v, {
                        sideCar: j,
                        removeScrollBar: f,
                        shards: g,
                        noIsolation: y,
                        inert: b,
                        setCallbacks: u,
                        allowPinchZoom: !!w,
                        lockRef: a
                    }), c ? m.cloneElement(m.Children.only(d), (0, S.__assign)((0, S.__assign)({}, A), {
                        ref: C
                    })) : m.createElement(void 0 === x ? "div" : x, (0, S.__assign)({}, A, {
                        className: h,
                        ref: C
                    }), d))
                });
            R.defaultProps = {
                enabled: !0,
                removeScrollBar: !0,
                inert: !1
            }, R.classNames = {
                fullWidth: P,
                zeroRight: _
            };
            var B = function(e) {
                var r = e.sideCar,
                    n = (0, S.__rest)(e, ["sideCar"]);
                if (!r) throw Error("Sidecar: please provide `sideCar` property to import the right car");
                var i = r.read();
                if (!i) throw Error("Sidecar medium not found");
                return m.createElement(i, (0, S.__assign)({}, n))
            };
            B.isSideCarExport = !0;
            var O = function() {
                    var e = 0,
                        r = null;
                    return {
                        add: function(i) {
                            if (0 == e && (r = function() {
                                    if (!document) return null;
                                    var e = document.createElement("style");
                                    e.type = "text/css";
                                    var r = u || n.nc;
                                    return r && e.setAttribute("nonce", r), e
                                }())) {
                                var o, a;
                                (o = r).styleSheet ? o.styleSheet.cssText = i : o.appendChild(document.createTextNode(i)), a = r, (document.head || document.getElementsByTagName("head")[0]).appendChild(a)
                            }
                            e++
                        },
                        remove: function() {
                            --e || !r || (r.parentNode && r.parentNode.removeChild(r), r = null)
                        }
                    }
                },
                M = function() {
                    var e = O();
                    return function(r, n) {
                        m.useEffect(function() {
                            return e.add(r),
                                function() {
                                    e.remove()
                                }
                        }, [r && n])
                    }
                },
                I = function() {
                    var e = M();
                    return function(r) {
                        return e(r.styles, r.dynamic), null
                    }
                },
                N = {
                    left: 0,
                    top: 0,
                    right: 0,
                    gap: 0
                },
                F = function(e) {
                    return parseInt(e || "", 10) || 0
                },
                L = function(e) {
                    var r = window.getComputedStyle(document.body),
                        n = r["padding" === e ? "paddingLeft" : "marginLeft"],
                        i = r["padding" === e ? "paddingTop" : "marginTop"],
                        o = r["padding" === e ? "paddingRight" : "marginRight"];
                    return [F(n), F(i), F(o)]
                },
                D = function(e) {
                    if (void 0 === e && (e = "margin"), "undefined" == typeof window) return N;
                    var r = L(e),
                        n = document.documentElement.clientWidth,
                        i = window.innerWidth;
                    return {
                        left: r[0],
                        top: r[1],
                        right: r[2],
                        gap: Math.max(0, i - n + r[2] - r[0])
                    }
                },
                z = I(),
                U = function(e, r, n, i) {
                    var o = e.left,
                        a = e.top,
                        s = e.right,
                        l = e.gap;
                    return void 0 === n && (n = "margin"), "\n  .".concat("with-scroll-bars-hidden", " {\n   overflow: hidden ").concat(i, ";\n   padding-right: ").concat(l, "px ").concat(i, ";\n  }\n  body {\n    overflow: hidden ").concat(i, ";\n    overscroll-behavior: contain;\n    ").concat([r && "position: relative ".concat(i, ";"), "margin" === n && "\n    padding-left: ".concat(o, "px;\n    padding-top: ").concat(a, "px;\n    padding-right: ").concat(s, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(l, "px ").concat(i, ";\n    "), "padding" === n && "padding-right: ".concat(l, "px ").concat(i, ";")].filter(Boolean).join(""), "\n  }\n  \n  .").concat(_, " {\n    right: ").concat(l, "px ").concat(i, ";\n  }\n  \n  .").concat(P, " {\n    margin-right: ").concat(l, "px ").concat(i, ";\n  }\n  \n  .").concat(_, " .").concat(_, " {\n    right: 0 ").concat(i, ";\n  }\n  \n  .").concat(P, " .").concat(P, " {\n    margin-right: 0 ").concat(i, ";\n  }\n  \n  body {\n    ").concat("--removed-body-scroll-bar-size", ": ").concat(l, "px;\n  }\n")
                },
                $ = function(e) {
                    var r = e.noRelative,
                        n = e.noImportant,
                        i = e.gapMode,
                        o = void 0 === i ? "margin" : i,
                        a = m.useMemo(function() {
                            return D(o)
                        }, [o]);
                    return m.createElement(z, {
                        styles: U(a, !r, o, n ? "" : "!important")
                    })
                },
                q = !1;
            if ("undefined" != typeof window) try {
                var W = Object.defineProperty({}, "passive", {
                    get: function() {
                        return q = !0, !0
                    }
                });
                window.addEventListener("test", W, W), window.removeEventListener("test", W, W)
            } catch (V) {
                q = !1
            }
            var H = !!q && {
                    passive: !1
                },
                G = function(e) {
                    var r = window.getComputedStyle(e);
                    return "hidden" !== r.overflowY && !(r.overflowY === r.overflowX && "visible" === r.overflowY)
                },
                K = function(e) {
                    var r = window.getComputedStyle(e);
                    return "hidden" !== r.overflowX && !(r.overflowY === r.overflowX && "visible" === r.overflowX)
                },
                Q = function(e, r) {
                    var n = r;
                    do {
                        if ("undefined" != typeof ShadowRoot && n instanceof ShadowRoot && (n = n.host), J(e, n)) {
                            var i = Y(e, n);
                            if (i[1] > i[2]) return !0
                        }
                        n = n.parentNode
                    } while (n && n !== document.body);
                    return !1
                },
                J = function(e, r) {
                    return "v" === e ? G(r) : K(r)
                },
                Y = function(e, r) {
                    return "v" === e ? [r.scrollTop, r.scrollHeight, r.clientHeight] : [r.scrollLeft, r.scrollWidth, r.clientWidth]
                },
                X = function(e, r, n, i, o) {
                    var a, s = (a = window.getComputedStyle(r).direction, "h" === e && "rtl" === a ? -1 : 1),
                        l = s * i,
                        u = n.target,
                        c = r.contains(u),
                        d = !1,
                        h = l > 0,
                        f = 0,
                        p = 0;
                    do {
                        var m = Y(e, u),
                            g = m[0],
                            v = m[1] - m[2] - s * g;
                        (g || v) && J(e, u) && (f += v, p += g), u = u.parentNode
                    } while (!c && u !== document.body || c && (r.contains(u) || r === u));
                    return h && (o && 0 === f || !o && l > f) ? d = !0 : !h && (o && 0 === p || !o && -l > p) && (d = !0), d
                },
                Z = function(e) {
                    return "changedTouches" in e ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY] : [0, 0]
                },
                ee = function(e) {
                    return [e.deltaX, e.deltaY]
                },
                et = function(e) {
                    return e && "current" in e ? e.current : e
                },
                er = 0,
                en = [],
                ei = (j.useMedium(function(e) {
                    var r = m.useRef([]),
                        n = m.useRef([0, 0]),
                        i = m.useRef(),
                        o = m.useState(er++)[0],
                        a = m.useState(function() {
                            return I()
                        })[0],
                        s = m.useRef(e);
                    m.useEffect(function() {
                        s.current = e
                    }, [e]), m.useEffect(function() {
                        if (e.inert) {
                            document.body.classList.add("block-interactivity-".concat(o));
                            var r = (0, S.__spreadArray)([e.lockRef.current], (e.shards || []).map(et), !0).filter(Boolean);
                            return r.forEach(function(e) {
                                    return e.classList.add("allow-interactivity-".concat(o))
                                }),
                                function() {
                                    document.body.classList.remove("block-interactivity-".concat(o)), r.forEach(function(e) {
                                        return e.classList.remove("allow-interactivity-".concat(o))
                                    })
                                }
                        }
                    }, [e.inert, e.lockRef.current, e.shards]);
                    var l = m.useCallback(function(e, r) {
                            if ("touches" in e && 2 === e.touches.length) return !s.current.allowPinchZoom;
                            var o, a = Z(e),
                                l = n.current,
                                u = "deltaX" in e ? e.deltaX : l[0] - a[0],
                                c = "deltaY" in e ? e.deltaY : l[1] - a[1],
                                d = e.target,
                                h = Math.abs(u) > Math.abs(c) ? "h" : "v";
                            if ("touches" in e && "h" === h && "range" === d.type) return !1;
                            var f = Q(h, d);
                            if (!f) return !0;
                            if (f ? o = h : (o = "v" === h ? "h" : "v", f = Q(h, d)), !f) return !1;
                            if (!i.current && "changedTouches" in e && (u || c) && (i.current = o), !o) return !0;
                            var p = i.current || o;
                            return X(p, r, e, "h" === p ? u : c, !0)
                        }, []),
                        u = m.useCallback(function(e) {
                            if (en.length && en[en.length - 1] === a) {
                                var n = "deltaY" in e ? ee(e) : Z(e),
                                    i = r.current.filter(function(r) {
                                        var i;
                                        return r.name === e.type && r.target === e.target && (i = r.delta)[0] === n[0] && i[1] === n[1]
                                    })[0];
                                if (i && i.should) {
                                    e.preventDefault();
                                    return
                                }
                                if (!i) {
                                    var o = (s.current.shards || []).map(et).filter(Boolean).filter(function(r) {
                                        return r.contains(e.target)
                                    });
                                    (o.length > 0 ? l(e, o[0]) : !s.current.noIsolation) && e.preventDefault()
                                }
                            }
                        }, []),
                        c = m.useCallback(function(e, n, i, o) {
                            var a = {
                                name: e,
                                delta: n,
                                target: i,
                                should: o
                            };
                            r.current.push(a), setTimeout(function() {
                                r.current = r.current.filter(function(e) {
                                    return e !== a
                                })
                            }, 1)
                        }, []),
                        d = m.useCallback(function(e) {
                            n.current = Z(e), i.current = void 0
                        }, []),
                        h = m.useCallback(function(r) {
                            c(r.type, ee(r), r.target, l(r, e.lockRef.current))
                        }, []),
                        f = m.useCallback(function(r) {
                            c(r.type, Z(r), r.target, l(r, e.lockRef.current))
                        }, []);
                    m.useEffect(function() {
                        return en.push(a), e.setCallbacks({
                                onScrollCapture: h,
                                onWheelCapture: h,
                                onTouchMoveCapture: f
                            }), document.addEventListener("wheel", u, H), document.addEventListener("touchmove", u, H), document.addEventListener("touchstart", d, H),
                            function() {
                                en = en.filter(function(e) {
                                    return e !== a
                                }), document.removeEventListener("wheel", u, H), document.removeEventListener("touchmove", u, H), document.removeEventListener("touchstart", d, H)
                            }
                    }, []);
                    var p = e.removeScrollBar,
                        g = e.inert;
                    return m.createElement(m.Fragment, null, g ? m.createElement(a, {
                        styles: "\n  .block-interactivity-".concat(o, " {pointer-events: none;}\n  .allow-interactivity-").concat(o, " {pointer-events: all;}\n")
                    }) : null, p ? m.createElement($, {
                        gapMode: "margin"
                    }) : null)
                }), B),
                eo = m.forwardRef(function(e, r) {
                    return m.createElement(R, (0, S.__assign)({}, e, {
                        ref: r,
                        sideCar: ei
                    }))
                });

            function ea(e) {
                var r = e.match(/^var\((.*)\)$/);
                return r ? r[1] : e
            }

            function es(e, r) {
                var n = {};
                if ("object" == typeof r) ! function e(r, n) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                        o = r.constructor();
                    for (var a in r) {
                        var s = r[a],
                            l = [...i, a];
                        "string" == typeof s || "number" == typeof s || null == s ? o[a] = n(s, l) : "object" != typeof s || Array.isArray(s) ? console.warn('Skipping invalid key "'.concat(l.join("."), '". Should be a string, number, null or object. Received: "').concat(Array.isArray(s) ? "Array" : typeof s, '"')) : o[a] = e(s, n, l)
                    }
                    return o
                }(r, (r, i) => {
                    n[ea(function(e, r) {
                        var n = e;
                        for (var i of r) {
                            if (!(i in n)) throw Error("Path ".concat(r.join(" -> "), " does not exist in object"));
                            n = n[i]
                        }
                        return n
                    }(e, i))] = String(r)
                });
                else
                    for (var i in e) n[ea(i)] = e[i];
                return Object.defineProperty(n, "toString", {
                    value: function() {
                        return Object.keys(this).map(e => "".concat(e, ":").concat(this[e])).join(";")
                    },
                    writable: !1
                }), n
            }
            eo.classNames = R.classNames;
            var el = n(51613),
                eu = n(92592),
                ec = function(e) {
                    var {
                        conditions: r
                    } = e;
                    if (!r) throw Error("Styles have no conditions");
                    var n = v(e);
                    return g(function(e, i) {
                        if ("string" == typeof e || "number" == typeof e || "boolean" == typeof e) {
                            if (!r.defaultCondition) throw Error("No default condition");
                            return i(e, r.defaultCondition)
                        }
                        var o = Array.isArray(e) ? n(e) : e,
                            a = {};
                        for (var s in o) null != o[s] && (a[s] = i(o[s], s));
                        return a
                    }, {
                        importPath: "@vanilla-extract/sprinkles/createUtils",
                        importName: "createMapValueFn",
                        args: [{
                            conditions: e.conditions
                        }]
                    })
                }({
                    conditions: {
                        defaultCondition: "smallScreen",
                        conditionNames: ["smallScreen", "largeScreen"],
                        responsiveArray: void 0
                    }
                }),
                ed = v({
                    conditions: {
                        defaultCondition: "smallScreen",
                        conditionNames: ["smallScreen", "largeScreen"],
                        responsiveArray: void 0
                    }
                }),
                eh = function() {
                    return w(x)(...arguments)
                }({
                    conditions: {
                        defaultCondition: "base",
                        conditionNames: ["base", "hover", "active"],
                        responsiveArray: void 0
                    },
                    styles: {
                        background: {
                            values: {
                                accentColor: {
                                    conditions: {
                                        base: "ju367v9c",
                                        hover: "ju367v9d",
                                        active: "ju367v9e"
                                    },
                                    defaultClass: "ju367v9c"
                                },
                                accentColorForeground: {
                                    conditions: {
                                        base: "ju367v9f",
                                        hover: "ju367v9g",
                                        active: "ju367v9h"
                                    },
                                    defaultClass: "ju367v9f"
                                },
                                actionButtonBorder: {
                                    conditions: {
                                        base: "ju367v9i",
                                        hover: "ju367v9j",
                                        active: "ju367v9k"
                                    },
                                    defaultClass: "ju367v9i"
                                },
                                actionButtonBorderMobile: {
                                    conditions: {
                                        base: "ju367v9l",
                                        hover: "ju367v9m",
                                        active: "ju367v9n"
                                    },
                                    defaultClass: "ju367v9l"
                                },
                                actionButtonSecondaryBackground: {
                                    conditions: {
                                        base: "ju367v9o",
                                        hover: "ju367v9p",
                                        active: "ju367v9q"
                                    },
                                    defaultClass: "ju367v9o"
                                },
                                closeButton: {
                                    conditions: {
                                        base: "ju367v9r",
                                        hover: "ju367v9s",
                                        active: "ju367v9t"
                                    },
                                    defaultClass: "ju367v9r"
                                },
                                closeButtonBackground: {
                                    conditions: {
                                        base: "ju367v9u",
                                        hover: "ju367v9v",
                                        active: "ju367v9w"
                                    },
                                    defaultClass: "ju367v9u"
                                },
                                connectButtonBackground: {
                                    conditions: {
                                        base: "ju367v9x",
                                        hover: "ju367v9y",
                                        active: "ju367v9z"
                                    },
                                    defaultClass: "ju367v9x"
                                },
                                connectButtonBackgroundError: {
                                    conditions: {
                                        base: "ju367va0",
                                        hover: "ju367va1",
                                        active: "ju367va2"
                                    },
                                    defaultClass: "ju367va0"
                                },
                                connectButtonInnerBackground: {
                                    conditions: {
                                        base: "ju367va3",
                                        hover: "ju367va4",
                                        active: "ju367va5"
                                    },
                                    defaultClass: "ju367va3"
                                },
                                connectButtonText: {
                                    conditions: {
                                        base: "ju367va6",
                                        hover: "ju367va7",
                                        active: "ju367va8"
                                    },
                                    defaultClass: "ju367va6"
                                },
                                connectButtonTextError: {
                                    conditions: {
                                        base: "ju367va9",
                                        hover: "ju367vaa",
                                        active: "ju367vab"
                                    },
                                    defaultClass: "ju367va9"
                                },
                                connectionIndicator: {
                                    conditions: {
                                        base: "ju367vac",
                                        hover: "ju367vad",
                                        active: "ju367vae"
                                    },
                                    defaultClass: "ju367vac"
                                },
                                downloadBottomCardBackground: {
                                    conditions: {
                                        base: "ju367vaf",
                                        hover: "ju367vag",
                                        active: "ju367vah"
                                    },
                                    defaultClass: "ju367vaf"
                                },
                                downloadTopCardBackground: {
                                    conditions: {
                                        base: "ju367vai",
                                        hover: "ju367vaj",
                                        active: "ju367vak"
                                    },
                                    defaultClass: "ju367vai"
                                },
                                error: {
                                    conditions: {
                                        base: "ju367val",
                                        hover: "ju367vam",
                                        active: "ju367van"
                                    },
                                    defaultClass: "ju367val"
                                },
                                generalBorder: {
                                    conditions: {
                                        base: "ju367vao",
                                        hover: "ju367vap",
                                        active: "ju367vaq"
                                    },
                                    defaultClass: "ju367vao"
                                },
                                generalBorderDim: {
                                    conditions: {
                                        base: "ju367var",
                                        hover: "ju367vas",
                                        active: "ju367vat"
                                    },
                                    defaultClass: "ju367var"
                                },
                                menuItemBackground: {
                                    conditions: {
                                        base: "ju367vau",
                                        hover: "ju367vav",
                                        active: "ju367vaw"
                                    },
                                    defaultClass: "ju367vau"
                                },
                                modalBackdrop: {
                                    conditions: {
                                        base: "ju367vax",
                                        hover: "ju367vay",
                                        active: "ju367vaz"
                                    },
                                    defaultClass: "ju367vax"
                                },
                                modalBackground: {
                                    conditions: {
                                        base: "ju367vb0",
                                        hover: "ju367vb1",
                                        active: "ju367vb2"
                                    },
                                    defaultClass: "ju367vb0"
                                },
                                modalBorder: {
                                    conditions: {
                                        base: "ju367vb3",
                                        hover: "ju367vb4",
                                        active: "ju367vb5"
                                    },
                                    defaultClass: "ju367vb3"
                                },
                                modalText: {
                                    conditions: {
                                        base: "ju367vb6",
                                        hover: "ju367vb7",
                                        active: "ju367vb8"
                                    },
                                    defaultClass: "ju367vb6"
                                },
                                modalTextDim: {
                                    conditions: {
                                        base: "ju367vb9",
                                        hover: "ju367vba",
                                        active: "ju367vbb"
                                    },
                                    defaultClass: "ju367vb9"
                                },
                                modalTextSecondary: {
                                    conditions: {
                                        base: "ju367vbc",
                                        hover: "ju367vbd",
                                        active: "ju367vbe"
                                    },
                                    defaultClass: "ju367vbc"
                                },
                                profileAction: {
                                    conditions: {
                                        base: "ju367vbf",
                                        hover: "ju367vbg",
                                        active: "ju367vbh"
                                    },
                                    defaultClass: "ju367vbf"
                                },
                                profileActionHover: {
                                    conditions: {
                                        base: "ju367vbi",
                                        hover: "ju367vbj",
                                        active: "ju367vbk"
                                    },
                                    defaultClass: "ju367vbi"
                                },
                                profileForeground: {
                                    conditions: {
                                        base: "ju367vbl",
                                        hover: "ju367vbm",
                                        active: "ju367vbn"
                                    },
                                    defaultClass: "ju367vbl"
                                },
                                selectedOptionBorder: {
                                    conditions: {
                                        base: "ju367vbo",
                                        hover: "ju367vbp",
                                        active: "ju367vbq"
                                    },
                                    defaultClass: "ju367vbo"
                                },
                                standby: {
                                    conditions: {
                                        base: "ju367vbr",
                                        hover: "ju367vbs",
                                        active: "ju367vbt"
                                    },
                                    defaultClass: "ju367vbr"
                                }
                            }
                        },
                        borderColor: {
                            values: {
                                accentColor: {
                                    conditions: {
                                        base: "ju367vbu",
                                        hover: "ju367vbv",
                                        active: "ju367vbw"
                                    },
                                    defaultClass: "ju367vbu"
                                },
                                accentColorForeground: {
                                    conditions: {
                                        base: "ju367vbx",
                                        hover: "ju367vby",
                                        active: "ju367vbz"
                                    },
                                    defaultClass: "ju367vbx"
                                },
                                actionButtonBorder: {
                                    conditions: {
                                        base: "ju367vc0",
                                        hover: "ju367vc1",
                                        active: "ju367vc2"
                                    },
                                    defaultClass: "ju367vc0"
                                },
                                actionButtonBorderMobile: {
                                    conditions: {
                                        base: "ju367vc3",
                                        hover: "ju367vc4",
                                        active: "ju367vc5"
                                    },
                                    defaultClass: "ju367vc3"
                                },
                                actionButtonSecondaryBackground: {
                                    conditions: {
                                        base: "ju367vc6",
                                        hover: "ju367vc7",
                                        active: "ju367vc8"
                                    },
                                    defaultClass: "ju367vc6"
                                },
                                closeButton: {
                                    conditions: {
                                        base: "ju367vc9",
                                        hover: "ju367vca",
                                        active: "ju367vcb"
                                    },
                                    defaultClass: "ju367vc9"
                                },
                                closeButtonBackground: {
                                    conditions: {
                                        base: "ju367vcc",
                                        hover: "ju367vcd",
                                        active: "ju367vce"
                                    },
                                    defaultClass: "ju367vcc"
                                },
                                connectButtonBackground: {
                                    conditions: {
                                        base: "ju367vcf",
                                        hover: "ju367vcg",
                                        active: "ju367vch"
                                    },
                                    defaultClass: "ju367vcf"
                                },
                                connectButtonBackgroundError: {
                                    conditions: {
                                        base: "ju367vci",
                                        hover: "ju367vcj",
                                        active: "ju367vck"
                                    },
                                    defaultClass: "ju367vci"
                                },
                                connectButtonInnerBackground: {
                                    conditions: {
                                        base: "ju367vcl",
                                        hover: "ju367vcm",
                                        active: "ju367vcn"
                                    },
                                    defaultClass: "ju367vcl"
                                },
                                connectButtonText: {
                                    conditions: {
                                        base: "ju367vco",
                                        hover: "ju367vcp",
                                        active: "ju367vcq"
                                    },
                                    defaultClass: "ju367vco"
                                },
                                connectButtonTextError: {
                                    conditions: {
                                        base: "ju367vcr",
                                        hover: "ju367vcs",
                                        active: "ju367vct"
                                    },
                                    defaultClass: "ju367vcr"
                                },
                                connectionIndicator: {
                                    conditions: {
                                        base: "ju367vcu",
                                        hover: "ju367vcv",
                                        active: "ju367vcw"
                                    },
                                    defaultClass: "ju367vcu"
                                },
                                downloadBottomCardBackground: {
                                    conditions: {
                                        base: "ju367vcx",
                                        hover: "ju367vcy",
                                        active: "ju367vcz"
                                    },
                                    defaultClass: "ju367vcx"
                                },
                                downloadTopCardBackground: {
                                    conditions: {
                                        base: "ju367vd0",
                                        hover: "ju367vd1",
                                        active: "ju367vd2"
                                    },
                                    defaultClass: "ju367vd0"
                                },
                                error: {
                                    conditions: {
                                        base: "ju367vd3",
                                        hover: "ju367vd4",
                                        active: "ju367vd5"
                                    },
                                    defaultClass: "ju367vd3"
                                },
                                generalBorder: {
                                    conditions: {
                                        base: "ju367vd6",
                                        hover: "ju367vd7",
                                        active: "ju367vd8"
                                    },
                                    defaultClass: "ju367vd6"
                                },
                                generalBorderDim: {
                                    conditions: {
                                        base: "ju367vd9",
                                        hover: "ju367vda",
                                        active: "ju367vdb"
                                    },
                                    defaultClass: "ju367vd9"
                                },
                                menuItemBackground: {
                                    conditions: {
                                        base: "ju367vdc",
                                        hover: "ju367vdd",
                                        active: "ju367vde"
                                    },
                                    defaultClass: "ju367vdc"
                                },
                                modalBackdrop: {
                                    conditions: {
                                        base: "ju367vdf",
                                        hover: "ju367vdg",
                                        active: "ju367vdh"
                                    },
                                    defaultClass: "ju367vdf"
                                },
                                modalBackground: {
                                    conditions: {
                                        base: "ju367vdi",
                                        hover: "ju367vdj",
                                        active: "ju367vdk"
                                    },
                                    defaultClass: "ju367vdi"
                                },
                                modalBorder: {
                                    conditions: {
                                        base: "ju367vdl",
                                        hover: "ju367vdm",
                                        active: "ju367vdn"
                                    },
                                    defaultClass: "ju367vdl"
                                },
                                modalText: {
                                    conditions: {
                                        base: "ju367vdo",
                                        hover: "ju367vdp",
                                        active: "ju367vdq"
                                    },
                                    defaultClass: "ju367vdo"
                                },
                                modalTextDim: {
                                    conditions: {
                                        base: "ju367vdr",
                                        hover: "ju367vds",
                                        active: "ju367vdt"
                                    },
                                    defaultClass: "ju367vdr"
                                },
                                modalTextSecondary: {
                                    conditions: {
                                        base: "ju367vdu",
                                        hover: "ju367vdv",
                                        active: "ju367vdw"
                                    },
                                    defaultClass: "ju367vdu"
                                },
                                profileAction: {
                                    conditions: {
                                        base: "ju367vdx",
                                        hover: "ju367vdy",
                                        active: "ju367vdz"
                                    },
                                    defaultClass: "ju367vdx"
                                },
                                profileActionHover: {
                                    conditions: {
                                        base: "ju367ve0",
                                        hover: "ju367ve1",
                                        active: "ju367ve2"
                                    },
                                    defaultClass: "ju367ve0"
                                },
                                profileForeground: {
                                    conditions: {
                                        base: "ju367ve3",
                                        hover: "ju367ve4",
                                        active: "ju367ve5"
                                    },
                                    defaultClass: "ju367ve3"
                                },
                                selectedOptionBorder: {
                                    conditions: {
                                        base: "ju367ve6",
                                        hover: "ju367ve7",
                                        active: "ju367ve8"
                                    },
                                    defaultClass: "ju367ve6"
                                },
                                standby: {
                                    conditions: {
                                        base: "ju367ve9",
                                        hover: "ju367vea",
                                        active: "ju367veb"
                                    },
                                    defaultClass: "ju367ve9"
                                }
                            }
                        },
                        boxShadow: {
                            values: {
                                connectButton: {
                                    conditions: {
                                        base: "ju367vec",
                                        hover: "ju367ved",
                                        active: "ju367vee"
                                    },
                                    defaultClass: "ju367vec"
                                },
                                dialog: {
                                    conditions: {
                                        base: "ju367vef",
                                        hover: "ju367veg",
                                        active: "ju367veh"
                                    },
                                    defaultClass: "ju367vef"
                                },
                                profileDetailsAction: {
                                    conditions: {
                                        base: "ju367vei",
                                        hover: "ju367vej",
                                        active: "ju367vek"
                                    },
                                    defaultClass: "ju367vei"
                                },
                                selectedOption: {
                                    conditions: {
                                        base: "ju367vel",
                                        hover: "ju367vem",
                                        active: "ju367ven"
                                    },
                                    defaultClass: "ju367vel"
                                },
                                selectedWallet: {
                                    conditions: {
                                        base: "ju367veo",
                                        hover: "ju367vep",
                                        active: "ju367veq"
                                    },
                                    defaultClass: "ju367veo"
                                },
                                walletLogo: {
                                    conditions: {
                                        base: "ju367ver",
                                        hover: "ju367ves",
                                        active: "ju367vet"
                                    },
                                    defaultClass: "ju367ver"
                                }
                            }
                        },
                        color: {
                            values: {
                                accentColor: {
                                    conditions: {
                                        base: "ju367veu",
                                        hover: "ju367vev",
                                        active: "ju367vew"
                                    },
                                    defaultClass: "ju367veu"
                                },
                                accentColorForeground: {
                                    conditions: {
                                        base: "ju367vex",
                                        hover: "ju367vey",
                                        active: "ju367vez"
                                    },
                                    defaultClass: "ju367vex"
                                },
                                actionButtonBorder: {
                                    conditions: {
                                        base: "ju367vf0",
                                        hover: "ju367vf1",
                                        active: "ju367vf2"
                                    },
                                    defaultClass: "ju367vf0"
                                },
                                actionButtonBorderMobile: {
                                    conditions: {
                                        base: "ju367vf3",
                                        hover: "ju367vf4",
                                        active: "ju367vf5"
                                    },
                                    defaultClass: "ju367vf3"
                                },
                                actionButtonSecondaryBackground: {
                                    conditions: {
                                        base: "ju367vf6",
                                        hover: "ju367vf7",
                                        active: "ju367vf8"
                                    },
                                    defaultClass: "ju367vf6"
                                },
                                closeButton: {
                                    conditions: {
                                        base: "ju367vf9",
                                        hover: "ju367vfa",
                                        active: "ju367vfb"
                                    },
                                    defaultClass: "ju367vf9"
                                },
                                closeButtonBackground: {
                                    conditions: {
                                        base: "ju367vfc",
                                        hover: "ju367vfd",
                                        active: "ju367vfe"
                                    },
                                    defaultClass: "ju367vfc"
                                },
                                connectButtonBackground: {
                                    conditions: {
                                        base: "ju367vff",
                                        hover: "ju367vfg",
                                        active: "ju367vfh"
                                    },
                                    defaultClass: "ju367vff"
                                },
                                connectButtonBackgroundError: {
                                    conditions: {
                                        base: "ju367vfi",
                                        hover: "ju367vfj",
                                        active: "ju367vfk"
                                    },
                                    defaultClass: "ju367vfi"
                                },
                                connectButtonInnerBackground: {
                                    conditions: {
                                        base: "ju367vfl",
                                        hover: "ju367vfm",
                                        active: "ju367vfn"
                                    },
                                    defaultClass: "ju367vfl"
                                },
                                connectButtonText: {
                                    conditions: {
                                        base: "ju367vfo",
                                        hover: "ju367vfp",
                                        active: "ju367vfq"
                                    },
                                    defaultClass: "ju367vfo"
                                },
                                connectButtonTextError: {
                                    conditions: {
                                        base: "ju367vfr",
                                        hover: "ju367vfs",
                                        active: "ju367vft"
                                    },
                                    defaultClass: "ju367vfr"
                                },
                                connectionIndicator: {
                                    conditions: {
                                        base: "ju367vfu",
                                        hover: "ju367vfv",
                                        active: "ju367vfw"
                                    },
                                    defaultClass: "ju367vfu"
                                },
                                downloadBottomCardBackground: {
                                    conditions: {
                                        base: "ju367vfx",
                                        hover: "ju367vfy",
                                        active: "ju367vfz"
                                    },
                                    defaultClass: "ju367vfx"
                                },
                                downloadTopCardBackground: {
                                    conditions: {
                                        base: "ju367vg0",
                                        hover: "ju367vg1",
                                        active: "ju367vg2"
                                    },
                                    defaultClass: "ju367vg0"
                                },
                                error: {
                                    conditions: {
                                        base: "ju367vg3",
                                        hover: "ju367vg4",
                                        active: "ju367vg5"
                                    },
                                    defaultClass: "ju367vg3"
                                },
                                generalBorder: {
                                    conditions: {
                                        base: "ju367vg6",
                                        hover: "ju367vg7",
                                        active: "ju367vg8"
                                    },
                                    defaultClass: "ju367vg6"
                                },
                                generalBorderDim: {
                                    conditions: {
                                        base: "ju367vg9",
                                        hover: "ju367vga",
                                        active: "ju367vgb"
                                    },
                                    defaultClass: "ju367vg9"
                                },
                                menuItemBackground: {
                                    conditions: {
                                        base: "ju367vgc",
                                        hover: "ju367vgd",
                                        active: "ju367vge"
                                    },
                                    defaultClass: "ju367vgc"
                                },
                                modalBackdrop: {
                                    conditions: {
                                        base: "ju367vgf",
                                        hover: "ju367vgg",
                                        active: "ju367vgh"
                                    },
                                    defaultClass: "ju367vgf"
                                },
                                modalBackground: {
                                    conditions: {
                                        base: "ju367vgi",
                                        hover: "ju367vgj",
                                        active: "ju367vgk"
                                    },
                                    defaultClass: "ju367vgi"
                                },
                                modalBorder: {
                                    conditions: {
                                        base: "ju367vgl",
                                        hover: "ju367vgm",
                                        active: "ju367vgn"
                                    },
                                    defaultClass: "ju367vgl"
                                },
                                modalText: {
                                    conditions: {
                                        base: "ju367vgo",
                                        hover: "ju367vgp",
                                        active: "ju367vgq"
                                    },
                                    defaultClass: "ju367vgo"
                                },
                                modalTextDim: {
                                    conditions: {
                                        base: "ju367vgr",
                                        hover: "ju367vgs",
                                        active: "ju367vgt"
                                    },
                                    defaultClass: "ju367vgr"
                                },
                                modalTextSecondary: {
                                    conditions: {
                                        base: "ju367vgu",
                                        hover: "ju367vgv",
                                        active: "ju367vgw"
                                    },
                                    defaultClass: "ju367vgu"
                                },
                                profileAction: {
                                    conditions: {
                                        base: "ju367vgx",
                                        hover: "ju367vgy",
                                        active: "ju367vgz"
                                    },
                                    defaultClass: "ju367vgx"
                                },
                                profileActionHover: {
                                    conditions: {
                                        base: "ju367vh0",
                                        hover: "ju367vh1",
                                        active: "ju367vh2"
                                    },
                                    defaultClass: "ju367vh0"
                                },
                                profileForeground: {
                                    conditions: {
                                        base: "ju367vh3",
                                        hover: "ju367vh4",
                                        active: "ju367vh5"
                                    },
                                    defaultClass: "ju367vh3"
                                },
                                selectedOptionBorder: {
                                    conditions: {
                                        base: "ju367vh6",
                                        hover: "ju367vh7",
                                        active: "ju367vh8"
                                    },
                                    defaultClass: "ju367vh6"
                                },
                                standby: {
                                    conditions: {
                                        base: "ju367vh9",
                                        hover: "ju367vha",
                                        active: "ju367vhb"
                                    },
                                    defaultClass: "ju367vh9"
                                }
                            }
                        }
                    }
                }, {
                    conditions: {
                        defaultCondition: "smallScreen",
                        conditionNames: ["smallScreen", "largeScreen"],
                        responsiveArray: void 0
                    },
                    styles: {
                        alignItems: {
                            values: {
                                "flex-start": {
                                    conditions: {
                                        smallScreen: "ju367v0",
                                        largeScreen: "ju367v1"
                                    },
                                    defaultClass: "ju367v0"
                                },
                                "flex-end": {
                                    conditions: {
                                        smallScreen: "ju367v2",
                                        largeScreen: "ju367v3"
                                    },
                                    defaultClass: "ju367v2"
                                },
                                center: {
                                    conditions: {
                                        smallScreen: "ju367v4",
                                        largeScreen: "ju367v5"
                                    },
                                    defaultClass: "ju367v4"
                                }
                            }
                        },
                        display: {
                            values: {
                                none: {
                                    conditions: {
                                        smallScreen: "ju367v6",
                                        largeScreen: "ju367v7"
                                    },
                                    defaultClass: "ju367v6"
                                },
                                block: {
                                    conditions: {
                                        smallScreen: "ju367v8",
                                        largeScreen: "ju367v9"
                                    },
                                    defaultClass: "ju367v8"
                                },
                                flex: {
                                    conditions: {
                                        smallScreen: "ju367va",
                                        largeScreen: "ju367vb"
                                    },
                                    defaultClass: "ju367va"
                                },
                                inline: {
                                    conditions: {
                                        smallScreen: "ju367vc",
                                        largeScreen: "ju367vd"
                                    },
                                    defaultClass: "ju367vc"
                                }
                            }
                        }
                    }
                }, {
                    conditions: void 0,
                    styles: {
                        margin: {
                            mappings: ["marginTop", "marginBottom", "marginLeft", "marginRight"]
                        },
                        marginX: {
                            mappings: ["marginLeft", "marginRight"]
                        },
                        marginY: {
                            mappings: ["marginTop", "marginBottom"]
                        },
                        padding: {
                            mappings: ["paddingTop", "paddingBottom", "paddingLeft", "paddingRight"]
                        },
                        paddingX: {
                            mappings: ["paddingLeft", "paddingRight"]
                        },
                        paddingY: {
                            mappings: ["paddingTop", "paddingBottom"]
                        },
                        alignSelf: {
                            values: {
                                "flex-start": {
                                    defaultClass: "ju367ve"
                                },
                                "flex-end": {
                                    defaultClass: "ju367vf"
                                },
                                center: {
                                    defaultClass: "ju367vg"
                                }
                            }
                        },
                        backgroundSize: {
                            values: {
                                cover: {
                                    defaultClass: "ju367vh"
                                }
                            }
                        },
                        borderRadius: {
                            values: {
                                1: {
                                    defaultClass: "ju367vi"
                                },
                                6: {
                                    defaultClass: "ju367vj"
                                },
                                10: {
                                    defaultClass: "ju367vk"
                                },
                                13: {
                                    defaultClass: "ju367vl"
                                },
                                actionButton: {
                                    defaultClass: "ju367vm"
                                },
                                connectButton: {
                                    defaultClass: "ju367vn"
                                },
                                menuButton: {
                                    defaultClass: "ju367vo"
                                },
                                modal: {
                                    defaultClass: "ju367vp"
                                },
                                modalMobile: {
                                    defaultClass: "ju367vq"
                                },
                                "25%": {
                                    defaultClass: "ju367vr"
                                },
                                full: {
                                    defaultClass: "ju367vs"
                                }
                            }
                        },
                        borderStyle: {
                            values: {
                                solid: {
                                    defaultClass: "ju367vt"
                                }
                            }
                        },
                        borderWidth: {
                            values: {
                                0: {
                                    defaultClass: "ju367vu"
                                },
                                1: {
                                    defaultClass: "ju367vv"
                                },
                                2: {
                                    defaultClass: "ju367vw"
                                },
                                4: {
                                    defaultClass: "ju367vx"
                                }
                            }
                        },
                        cursor: {
                            values: {
                                pointer: {
                                    defaultClass: "ju367vy"
                                }
                            }
                        },
                        flexDirection: {
                            values: {
                                row: {
                                    defaultClass: "ju367vz"
                                },
                                column: {
                                    defaultClass: "ju367v10"
                                }
                            }
                        },
                        fontFamily: {
                            values: {
                                body: {
                                    defaultClass: "ju367v11"
                                }
                            }
                        },
                        fontSize: {
                            values: {
                                12: {
                                    defaultClass: "ju367v12"
                                },
                                13: {
                                    defaultClass: "ju367v13"
                                },
                                14: {
                                    defaultClass: "ju367v14"
                                },
                                16: {
                                    defaultClass: "ju367v15"
                                },
                                18: {
                                    defaultClass: "ju367v16"
                                },
                                20: {
                                    defaultClass: "ju367v17"
                                },
                                23: {
                                    defaultClass: "ju367v18"
                                }
                            }
                        },
                        fontWeight: {
                            values: {
                                regular: {
                                    defaultClass: "ju367v19"
                                },
                                medium: {
                                    defaultClass: "ju367v1a"
                                },
                                semibold: {
                                    defaultClass: "ju367v1b"
                                },
                                bold: {
                                    defaultClass: "ju367v1c"
                                },
                                heavy: {
                                    defaultClass: "ju367v1d"
                                }
                            }
                        },
                        gap: {
                            values: {
                                0: {
                                    defaultClass: "ju367v1e"
                                },
                                1: {
                                    defaultClass: "ju367v1f"
                                },
                                2: {
                                    defaultClass: "ju367v1g"
                                },
                                3: {
                                    defaultClass: "ju367v1h"
                                },
                                4: {
                                    defaultClass: "ju367v1i"
                                },
                                5: {
                                    defaultClass: "ju367v1j"
                                },
                                6: {
                                    defaultClass: "ju367v1k"
                                },
                                8: {
                                    defaultClass: "ju367v1l"
                                },
                                10: {
                                    defaultClass: "ju367v1m"
                                },
                                12: {
                                    defaultClass: "ju367v1n"
                                },
                                14: {
                                    defaultClass: "ju367v1o"
                                },
                                16: {
                                    defaultClass: "ju367v1p"
                                },
                                18: {
                                    defaultClass: "ju367v1q"
                                },
                                20: {
                                    defaultClass: "ju367v1r"
                                },
                                24: {
                                    defaultClass: "ju367v1s"
                                },
                                28: {
                                    defaultClass: "ju367v1t"
                                },
                                32: {
                                    defaultClass: "ju367v1u"
                                },
                                36: {
                                    defaultClass: "ju367v1v"
                                },
                                44: {
                                    defaultClass: "ju367v1w"
                                },
                                64: {
                                    defaultClass: "ju367v1x"
                                },
                                "-1": {
                                    defaultClass: "ju367v1y"
                                }
                            }
                        },
                        height: {
                            values: {
                                1: {
                                    defaultClass: "ju367v1z"
                                },
                                2: {
                                    defaultClass: "ju367v20"
                                },
                                4: {
                                    defaultClass: "ju367v21"
                                },
                                8: {
                                    defaultClass: "ju367v22"
                                },
                                12: {
                                    defaultClass: "ju367v23"
                                },
                                20: {
                                    defaultClass: "ju367v24"
                                },
                                24: {
                                    defaultClass: "ju367v25"
                                },
                                28: {
                                    defaultClass: "ju367v26"
                                },
                                30: {
                                    defaultClass: "ju367v27"
                                },
                                32: {
                                    defaultClass: "ju367v28"
                                },
                                34: {
                                    defaultClass: "ju367v29"
                                },
                                36: {
                                    defaultClass: "ju367v2a"
                                },
                                40: {
                                    defaultClass: "ju367v2b"
                                },
                                44: {
                                    defaultClass: "ju367v2c"
                                },
                                48: {
                                    defaultClass: "ju367v2d"
                                },
                                54: {
                                    defaultClass: "ju367v2e"
                                },
                                60: {
                                    defaultClass: "ju367v2f"
                                },
                                200: {
                                    defaultClass: "ju367v2g"
                                },
                                full: {
                                    defaultClass: "ju367v2h"
                                },
                                max: {
                                    defaultClass: "ju367v2i"
                                }
                            }
                        },
                        justifyContent: {
                            values: {
                                "flex-start": {
                                    defaultClass: "ju367v2j"
                                },
                                "flex-end": {
                                    defaultClass: "ju367v2k"
                                },
                                center: {
                                    defaultClass: "ju367v2l"
                                },
                                "space-between": {
                                    defaultClass: "ju367v2m"
                                },
                                "space-around": {
                                    defaultClass: "ju367v2n"
                                }
                            }
                        },
                        textAlign: {
                            values: {
                                left: {
                                    defaultClass: "ju367v2o"
                                },
                                center: {
                                    defaultClass: "ju367v2p"
                                },
                                inherit: {
                                    defaultClass: "ju367v2q"
                                }
                            }
                        },
                        marginBottom: {
                            values: {
                                0: {
                                    defaultClass: "ju367v2r"
                                },
                                1: {
                                    defaultClass: "ju367v2s"
                                },
                                2: {
                                    defaultClass: "ju367v2t"
                                },
                                3: {
                                    defaultClass: "ju367v2u"
                                },
                                4: {
                                    defaultClass: "ju367v2v"
                                },
                                5: {
                                    defaultClass: "ju367v2w"
                                },
                                6: {
                                    defaultClass: "ju367v2x"
                                },
                                8: {
                                    defaultClass: "ju367v2y"
                                },
                                10: {
                                    defaultClass: "ju367v2z"
                                },
                                12: {
                                    defaultClass: "ju367v30"
                                },
                                14: {
                                    defaultClass: "ju367v31"
                                },
                                16: {
                                    defaultClass: "ju367v32"
                                },
                                18: {
                                    defaultClass: "ju367v33"
                                },
                                20: {
                                    defaultClass: "ju367v34"
                                },
                                24: {
                                    defaultClass: "ju367v35"
                                },
                                28: {
                                    defaultClass: "ju367v36"
                                },
                                32: {
                                    defaultClass: "ju367v37"
                                },
                                36: {
                                    defaultClass: "ju367v38"
                                },
                                44: {
                                    defaultClass: "ju367v39"
                                },
                                64: {
                                    defaultClass: "ju367v3a"
                                },
                                "-1": {
                                    defaultClass: "ju367v3b"
                                }
                            }
                        },
                        marginLeft: {
                            values: {
                                0: {
                                    defaultClass: "ju367v3c"
                                },
                                1: {
                                    defaultClass: "ju367v3d"
                                },
                                2: {
                                    defaultClass: "ju367v3e"
                                },
                                3: {
                                    defaultClass: "ju367v3f"
                                },
                                4: {
                                    defaultClass: "ju367v3g"
                                },
                                5: {
                                    defaultClass: "ju367v3h"
                                },
                                6: {
                                    defaultClass: "ju367v3i"
                                },
                                8: {
                                    defaultClass: "ju367v3j"
                                },
                                10: {
                                    defaultClass: "ju367v3k"
                                },
                                12: {
                                    defaultClass: "ju367v3l"
                                },
                                14: {
                                    defaultClass: "ju367v3m"
                                },
                                16: {
                                    defaultClass: "ju367v3n"
                                },
                                18: {
                                    defaultClass: "ju367v3o"
                                },
                                20: {
                                    defaultClass: "ju367v3p"
                                },
                                24: {
                                    defaultClass: "ju367v3q"
                                },
                                28: {
                                    defaultClass: "ju367v3r"
                                },
                                32: {
                                    defaultClass: "ju367v3s"
                                },
                                36: {
                                    defaultClass: "ju367v3t"
                                },
                                44: {
                                    defaultClass: "ju367v3u"
                                },
                                64: {
                                    defaultClass: "ju367v3v"
                                },
                                "-1": {
                                    defaultClass: "ju367v3w"
                                }
                            }
                        },
                        marginRight: {
                            values: {
                                0: {
                                    defaultClass: "ju367v3x"
                                },
                                1: {
                                    defaultClass: "ju367v3y"
                                },
                                2: {
                                    defaultClass: "ju367v3z"
                                },
                                3: {
                                    defaultClass: "ju367v40"
                                },
                                4: {
                                    defaultClass: "ju367v41"
                                },
                                5: {
                                    defaultClass: "ju367v42"
                                },
                                6: {
                                    defaultClass: "ju367v43"
                                },
                                8: {
                                    defaultClass: "ju367v44"
                                },
                                10: {
                                    defaultClass: "ju367v45"
                                },
                                12: {
                                    defaultClass: "ju367v46"
                                },
                                14: {
                                    defaultClass: "ju367v47"
                                },
                                16: {
                                    defaultClass: "ju367v48"
                                },
                                18: {
                                    defaultClass: "ju367v49"
                                },
                                20: {
                                    defaultClass: "ju367v4a"
                                },
                                24: {
                                    defaultClass: "ju367v4b"
                                },
                                28: {
                                    defaultClass: "ju367v4c"
                                },
                                32: {
                                    defaultClass: "ju367v4d"
                                },
                                36: {
                                    defaultClass: "ju367v4e"
                                },
                                44: {
                                    defaultClass: "ju367v4f"
                                },
                                64: {
                                    defaultClass: "ju367v4g"
                                },
                                "-1": {
                                    defaultClass: "ju367v4h"
                                }
                            }
                        },
                        marginTop: {
                            values: {
                                0: {
                                    defaultClass: "ju367v4i"
                                },
                                1: {
                                    defaultClass: "ju367v4j"
                                },
                                2: {
                                    defaultClass: "ju367v4k"
                                },
                                3: {
                                    defaultClass: "ju367v4l"
                                },
                                4: {
                                    defaultClass: "ju367v4m"
                                },
                                5: {
                                    defaultClass: "ju367v4n"
                                },
                                6: {
                                    defaultClass: "ju367v4o"
                                },
                                8: {
                                    defaultClass: "ju367v4p"
                                },
                                10: {
                                    defaultClass: "ju367v4q"
                                },
                                12: {
                                    defaultClass: "ju367v4r"
                                },
                                14: {
                                    defaultClass: "ju367v4s"
                                },
                                16: {
                                    defaultClass: "ju367v4t"
                                },
                                18: {
                                    defaultClass: "ju367v4u"
                                },
                                20: {
                                    defaultClass: "ju367v4v"
                                },
                                24: {
                                    defaultClass: "ju367v4w"
                                },
                                28: {
                                    defaultClass: "ju367v4x"
                                },
                                32: {
                                    defaultClass: "ju367v4y"
                                },
                                36: {
                                    defaultClass: "ju367v4z"
                                },
                                44: {
                                    defaultClass: "ju367v50"
                                },
                                64: {
                                    defaultClass: "ju367v51"
                                },
                                "-1": {
                                    defaultClass: "ju367v52"
                                }
                            }
                        },
                        maxWidth: {
                            values: {
                                1: {
                                    defaultClass: "ju367v53"
                                },
                                2: {
                                    defaultClass: "ju367v54"
                                },
                                4: {
                                    defaultClass: "ju367v55"
                                },
                                8: {
                                    defaultClass: "ju367v56"
                                },
                                12: {
                                    defaultClass: "ju367v57"
                                },
                                20: {
                                    defaultClass: "ju367v58"
                                },
                                24: {
                                    defaultClass: "ju367v59"
                                },
                                28: {
                                    defaultClass: "ju367v5a"
                                },
                                30: {
                                    defaultClass: "ju367v5b"
                                },
                                32: {
                                    defaultClass: "ju367v5c"
                                },
                                34: {
                                    defaultClass: "ju367v5d"
                                },
                                36: {
                                    defaultClass: "ju367v5e"
                                },
                                40: {
                                    defaultClass: "ju367v5f"
                                },
                                44: {
                                    defaultClass: "ju367v5g"
                                },
                                48: {
                                    defaultClass: "ju367v5h"
                                },
                                54: {
                                    defaultClass: "ju367v5i"
                                },
                                60: {
                                    defaultClass: "ju367v5j"
                                },
                                200: {
                                    defaultClass: "ju367v5k"
                                },
                                full: {
                                    defaultClass: "ju367v5l"
                                },
                                max: {
                                    defaultClass: "ju367v5m"
                                }
                            }
                        },
                        minWidth: {
                            values: {
                                1: {
                                    defaultClass: "ju367v5n"
                                },
                                2: {
                                    defaultClass: "ju367v5o"
                                },
                                4: {
                                    defaultClass: "ju367v5p"
                                },
                                8: {
                                    defaultClass: "ju367v5q"
                                },
                                12: {
                                    defaultClass: "ju367v5r"
                                },
                                20: {
                                    defaultClass: "ju367v5s"
                                },
                                24: {
                                    defaultClass: "ju367v5t"
                                },
                                28: {
                                    defaultClass: "ju367v5u"
                                },
                                30: {
                                    defaultClass: "ju367v5v"
                                },
                                32: {
                                    defaultClass: "ju367v5w"
                                },
                                34: {
                                    defaultClass: "ju367v5x"
                                },
                                36: {
                                    defaultClass: "ju367v5y"
                                },
                                40: {
                                    defaultClass: "ju367v5z"
                                },
                                44: {
                                    defaultClass: "ju367v60"
                                },
                                48: {
                                    defaultClass: "ju367v61"
                                },
                                54: {
                                    defaultClass: "ju367v62"
                                },
                                60: {
                                    defaultClass: "ju367v63"
                                },
                                200: {
                                    defaultClass: "ju367v64"
                                },
                                full: {
                                    defaultClass: "ju367v65"
                                },
                                max: {
                                    defaultClass: "ju367v66"
                                }
                            }
                        },
                        overflow: {
                            values: {
                                hidden: {
                                    defaultClass: "ju367v67"
                                }
                            }
                        },
                        paddingBottom: {
                            values: {
                                0: {
                                    defaultClass: "ju367v68"
                                },
                                1: {
                                    defaultClass: "ju367v69"
                                },
                                2: {
                                    defaultClass: "ju367v6a"
                                },
                                3: {
                                    defaultClass: "ju367v6b"
                                },
                                4: {
                                    defaultClass: "ju367v6c"
                                },
                                5: {
                                    defaultClass: "ju367v6d"
                                },
                                6: {
                                    defaultClass: "ju367v6e"
                                },
                                8: {
                                    defaultClass: "ju367v6f"
                                },
                                10: {
                                    defaultClass: "ju367v6g"
                                },
                                12: {
                                    defaultClass: "ju367v6h"
                                },
                                14: {
                                    defaultClass: "ju367v6i"
                                },
                                16: {
                                    defaultClass: "ju367v6j"
                                },
                                18: {
                                    defaultClass: "ju367v6k"
                                },
                                20: {
                                    defaultClass: "ju367v6l"
                                },
                                24: {
                                    defaultClass: "ju367v6m"
                                },
                                28: {
                                    defaultClass: "ju367v6n"
                                },
                                32: {
                                    defaultClass: "ju367v6o"
                                },
                                36: {
                                    defaultClass: "ju367v6p"
                                },
                                44: {
                                    defaultClass: "ju367v6q"
                                },
                                64: {
                                    defaultClass: "ju367v6r"
                                },
                                "-1": {
                                    defaultClass: "ju367v6s"
                                }
                            }
                        },
                        paddingLeft: {
                            values: {
                                0: {
                                    defaultClass: "ju367v6t"
                                },
                                1: {
                                    defaultClass: "ju367v6u"
                                },
                                2: {
                                    defaultClass: "ju367v6v"
                                },
                                3: {
                                    defaultClass: "ju367v6w"
                                },
                                4: {
                                    defaultClass: "ju367v6x"
                                },
                                5: {
                                    defaultClass: "ju367v6y"
                                },
                                6: {
                                    defaultClass: "ju367v6z"
                                },
                                8: {
                                    defaultClass: "ju367v70"
                                },
                                10: {
                                    defaultClass: "ju367v71"
                                },
                                12: {
                                    defaultClass: "ju367v72"
                                },
                                14: {
                                    defaultClass: "ju367v73"
                                },
                                16: {
                                    defaultClass: "ju367v74"
                                },
                                18: {
                                    defaultClass: "ju367v75"
                                },
                                20: {
                                    defaultClass: "ju367v76"
                                },
                                24: {
                                    defaultClass: "ju367v77"
                                },
                                28: {
                                    defaultClass: "ju367v78"
                                },
                                32: {
                                    defaultClass: "ju367v79"
                                },
                                36: {
                                    defaultClass: "ju367v7a"
                                },
                                44: {
                                    defaultClass: "ju367v7b"
                                },
                                64: {
                                    defaultClass: "ju367v7c"
                                },
                                "-1": {
                                    defaultClass: "ju367v7d"
                                }
                            }
                        },
                        paddingRight: {
                            values: {
                                0: {
                                    defaultClass: "ju367v7e"
                                },
                                1: {
                                    defaultClass: "ju367v7f"
                                },
                                2: {
                                    defaultClass: "ju367v7g"
                                },
                                3: {
                                    defaultClass: "ju367v7h"
                                },
                                4: {
                                    defaultClass: "ju367v7i"
                                },
                                5: {
                                    defaultClass: "ju367v7j"
                                },
                                6: {
                                    defaultClass: "ju367v7k"
                                },
                                8: {
                                    defaultClass: "ju367v7l"
                                },
                                10: {
                                    defaultClass: "ju367v7m"
                                },
                                12: {
                                    defaultClass: "ju367v7n"
                                },
                                14: {
                                    defaultClass: "ju367v7o"
                                },
                                16: {
                                    defaultClass: "ju367v7p"
                                },
                                18: {
                                    defaultClass: "ju367v7q"
                                },
                                20: {
                                    defaultClass: "ju367v7r"
                                },
                                24: {
                                    defaultClass: "ju367v7s"
                                },
                                28: {
                                    defaultClass: "ju367v7t"
                                },
                                32: {
                                    defaultClass: "ju367v7u"
                                },
                                36: {
                                    defaultClass: "ju367v7v"
                                },
                                44: {
                                    defaultClass: "ju367v7w"
                                },
                                64: {
                                    defaultClass: "ju367v7x"
                                },
                                "-1": {
                                    defaultClass: "ju367v7y"
                                }
                            }
                        },
                        paddingTop: {
                            values: {
                                0: {
                                    defaultClass: "ju367v7z"
                                },
                                1: {
                                    defaultClass: "ju367v80"
                                },
                                2: {
                                    defaultClass: "ju367v81"
                                },
                                3: {
                                    defaultClass: "ju367v82"
                                },
                                4: {
                                    defaultClass: "ju367v83"
                                },
                                5: {
                                    defaultClass: "ju367v84"
                                },
                                6: {
                                    defaultClass: "ju367v85"
                                },
                                8: {
                                    defaultClass: "ju367v86"
                                },
                                10: {
                                    defaultClass: "ju367v87"
                                },
                                12: {
                                    defaultClass: "ju367v88"
                                },
                                14: {
                                    defaultClass: "ju367v89"
                                },
                                16: {
                                    defaultClass: "ju367v8a"
                                },
                                18: {
                                    defaultClass: "ju367v8b"
                                },
                                20: {
                                    defaultClass: "ju367v8c"
                                },
                                24: {
                                    defaultClass: "ju367v8d"
                                },
                                28: {
                                    defaultClass: "ju367v8e"
                                },
                                32: {
                                    defaultClass: "ju367v8f"
                                },
                                36: {
                                    defaultClass: "ju367v8g"
                                },
                                44: {
                                    defaultClass: "ju367v8h"
                                },
                                64: {
                                    defaultClass: "ju367v8i"
                                },
                                "-1": {
                                    defaultClass: "ju367v8j"
                                }
                            }
                        },
                        position: {
                            values: {
                                absolute: {
                                    defaultClass: "ju367v8k"
                                },
                                fixed: {
                                    defaultClass: "ju367v8l"
                                },
                                relative: {
                                    defaultClass: "ju367v8m"
                                }
                            }
                        },
                        right: {
                            values: {
                                0: {
                                    defaultClass: "ju367v8n"
                                }
                            }
                        },
                        transition: {
                            values: {
                                default: {
                                    defaultClass: "ju367v8o"
                                },
                                transform: {
                                    defaultClass: "ju367v8p"
                                }
                            }
                        },
                        userSelect: {
                            values: {
                                none: {
                                    defaultClass: "ju367v8q"
                                }
                            }
                        },
                        width: {
                            values: {
                                1: {
                                    defaultClass: "ju367v8r"
                                },
                                2: {
                                    defaultClass: "ju367v8s"
                                },
                                4: {
                                    defaultClass: "ju367v8t"
                                },
                                8: {
                                    defaultClass: "ju367v8u"
                                },
                                12: {
                                    defaultClass: "ju367v8v"
                                },
                                20: {
                                    defaultClass: "ju367v8w"
                                },
                                24: {
                                    defaultClass: "ju367v8x"
                                },
                                28: {
                                    defaultClass: "ju367v8y"
                                },
                                30: {
                                    defaultClass: "ju367v8z"
                                },
                                32: {
                                    defaultClass: "ju367v90"
                                },
                                34: {
                                    defaultClass: "ju367v91"
                                },
                                36: {
                                    defaultClass: "ju367v92"
                                },
                                40: {
                                    defaultClass: "ju367v93"
                                },
                                44: {
                                    defaultClass: "ju367v94"
                                },
                                48: {
                                    defaultClass: "ju367v95"
                                },
                                54: {
                                    defaultClass: "ju367v96"
                                },
                                60: {
                                    defaultClass: "ju367v97"
                                },
                                200: {
                                    defaultClass: "ju367v98"
                                },
                                full: {
                                    defaultClass: "ju367v99"
                                },
                                max: {
                                    defaultClass: "ju367v9a"
                                }
                            }
                        },
                        backdropFilter: {
                            values: {
                                modalOverlay: {
                                    defaultClass: "ju367v9b"
                                }
                            }
                        }
                    }
                }),
                ef = {
                    colors: {
                        accentColor: "var(--rk-colors-accentColor)",
                        accentColorForeground: "var(--rk-colors-accentColorForeground)",
                        actionButtonBorder: "var(--rk-colors-actionButtonBorder)",
                        actionButtonBorderMobile: "var(--rk-colors-actionButtonBorderMobile)",
                        actionButtonSecondaryBackground: "var(--rk-colors-actionButtonSecondaryBackground)",
                        closeButton: "var(--rk-colors-closeButton)",
                        closeButtonBackground: "var(--rk-colors-closeButtonBackground)",
                        connectButtonBackground: "var(--rk-colors-connectButtonBackground)",
                        connectButtonBackgroundError: "var(--rk-colors-connectButtonBackgroundError)",
                        connectButtonInnerBackground: "var(--rk-colors-connectButtonInnerBackground)",
                        connectButtonText: "var(--rk-colors-connectButtonText)",
                        connectButtonTextError: "var(--rk-colors-connectButtonTextError)",
                        connectionIndicator: "var(--rk-colors-connectionIndicator)",
                        downloadBottomCardBackground: "var(--rk-colors-downloadBottomCardBackground)",
                        downloadTopCardBackground: "var(--rk-colors-downloadTopCardBackground)",
                        error: "var(--rk-colors-error)",
                        generalBorder: "var(--rk-colors-generalBorder)",
                        generalBorderDim: "var(--rk-colors-generalBorderDim)",
                        menuItemBackground: "var(--rk-colors-menuItemBackground)",
                        modalBackdrop: "var(--rk-colors-modalBackdrop)",
                        modalBackground: "var(--rk-colors-modalBackground)",
                        modalBorder: "var(--rk-colors-modalBorder)",
                        modalText: "var(--rk-colors-modalText)",
                        modalTextDim: "var(--rk-colors-modalTextDim)",
                        modalTextSecondary: "var(--rk-colors-modalTextSecondary)",
                        profileAction: "var(--rk-colors-profileAction)",
                        profileActionHover: "var(--rk-colors-profileActionHover)",
                        profileForeground: "var(--rk-colors-profileForeground)",
                        selectedOptionBorder: "var(--rk-colors-selectedOptionBorder)",
                        standby: "var(--rk-colors-standby)"
                    },
                    fonts: {
                        body: "var(--rk-fonts-body)"
                    },
                    radii: {
                        actionButton: "var(--rk-radii-actionButton)",
                        connectButton: "var(--rk-radii-connectButton)",
                        menuButton: "var(--rk-radii-menuButton)",
                        modal: "var(--rk-radii-modal)",
                        modalMobile: "var(--rk-radii-modalMobile)"
                    },
                    shadows: {
                        connectButton: "var(--rk-shadows-connectButton)",
                        dialog: "var(--rk-shadows-dialog)",
                        profileDetailsAction: "var(--rk-shadows-profileDetailsAction)",
                        selectedOption: "var(--rk-shadows-selectedOption)",
                        selectedWallet: "var(--rk-shadows-selectedWallet)",
                        walletLogo: "var(--rk-shadows-walletLogo)"
                    },
                    blurs: {
                        modalOverlay: "var(--rk-blurs-modalOverlay)"
                    }
                },
                ep = {
                    shrink: "_12cbo8i6",
                    shrinkSm: "_12cbo8i7"
                },
                em = {
                    grow: "_12cbo8i4",
                    growLg: "_12cbo8i5"
                };

            function eg({
                active: e,
                hover: r
            }) {
                return ["_12cbo8i3 ju367v8m", r && em[r], ep[e]]
            }
            var ev = (0, m.createContext)(null);

            function ey() {
                var e;
                let r = (0, m.useContext)(ev);
                return null != (e = null == r ? void 0 : r.status) ? e : null
            }

            function eb() {
                let e = ey(),
                    {
                        isConnected: r
                    } = (0, E.mA)();
                return r ? e && ("loading" === e || "unauthenticated" === e) ? e : "connected" : "disconnected"
            }

            function ew() {
                return "undefined" != typeof navigator && /android/i.test(navigator.userAgent)
            }

            function ex() {
                return "undefined" != typeof navigator && /iPhone|iPod/.test(navigator.userAgent)
            }

            function eE() {
                return ex() || "undefined" != typeof navigator && /iPad/.test(navigator.userAgent)
            }

            function eC() {
                return ew() || ex()
            }
            var eA = {
                    a: "iekbcca",
                    blockquote: "iekbcc2",
                    button: "iekbcc9",
                    input: "iekbcc8 iekbcc5 iekbcc4",
                    mark: "iekbcc6",
                    ol: "iekbcc1",
                    q: "iekbcc2",
                    select: "iekbcc7 iekbcc5 iekbcc4",
                    table: "iekbcc3",
                    textarea: "iekbcc5 iekbcc4",
                    ul: "iekbcc1"
                },
                ek = ({
                    reset: e,
                    ...r
                }) => {
                    if (!e) return eh(r);
                    let n = eA[e],
                        i = eh(r);
                    return C("iekbcc0", n, i)
                },
                eS = m.forwardRef(({
                    as: e = "div",
                    className: r,
                    testId: n,
                    ...i
                }, o) => {
                    let a = {},
                        s = {};
                    for (let l in i) eh.properties.has(l) ? a[l] = i[l] : s[l] = i[l];
                    let u = ek({
                        reset: "string" == typeof e ? e : "div",
                        ...a
                    });
                    return m.createElement(e, {
                        className: C(u, r),
                        ...s,
                        "data-testid": n ? `rk-${n.replace(/^rk-/,"")}` : void 0,
                        ref: o
                    })
                });
            eS.displayName = "Box";
            var e_ = new Map,
                eP = new Map;
            async function ej(e) {
                let r = eP.get(e);
                if (r) return r;
                let n = async () => e().then(async r => (e_.set(e, r), r)),
                    i = n().catch(r => n().catch(r => {
                        eP.delete(e)
                    }));
                return eP.set(e, i), i
            }
            async function eT(...e) {
                return await Promise.all(e.map(e => "function" == typeof e ? ej(e) : e))
            }

            function eR(e) {
                let r = "function" == typeof e ? e_.get(e) : void 0,
                    n = function() {
                        let [, e] = (0, m.useReducer)(e => e + 1, 0);
                        return e
                    }();
                return (0, m.useEffect)(() => {
                    "function" != typeof e || r || ej(e).then(n)
                }, [e, r, n]), "function" == typeof e ? r : e
            }

            function eB({
                alt: e,
                background: r,
                borderColor: n,
                borderRadius: i,
                boxShadow: o,
                height: a,
                src: s,
                width: l
            }) {
                let u = eR(s),
                    c = u && /^http/.test(u),
                    [d, h] = (0, m.useReducer)(() => !0, !1);
                return m.createElement(eS, {
                    "aria-label": e,
                    borderRadius: i,
                    boxShadow: o,
                    height: "string" == typeof a ? a : void 0,
                    overflow: "hidden",
                    position: "relative",
                    role: "img",
                    style: {
                        background: r,
                        height: "number" == typeof a ? a : void 0,
                        width: "number" == typeof l ? l : void 0
                    },
                    width: "string" == typeof l ? l : void 0
                }, m.createElement(eS, { ...c ? {
                        "aria-hidden": !0,
                        as: "img",
                        onLoad: h,
                        src: u
                    } : {
                        backgroundSize: "cover"
                    },
                    height: "full",
                    position: "absolute",
                    style: {
                        touchCallout: "none",
                        transition: "opacity .15s linear",
                        userSelect: "none",
                        ...c ? {
                            opacity: d ? 1 : 0
                        } : {
                            backgroundImage: u ? `url(${u})` : void 0,
                            backgroundRepeat: "no-repeat",
                            opacity: u ? 1 : 0
                        }
                    },
                    width: "full"
                }), n ? m.createElement(eS, { ..."object" == typeof n && "custom" in n ? {
                        style: {
                            borderColor: n.custom
                        }
                    } : {
                        borderColor: n
                    },
                    borderRadius: i,
                    borderStyle: "solid",
                    borderWidth: "1",
                    height: "full",
                    position: "relative",
                    width: "full"
                }) : null)
            }
            var eO = e => (0, m.useMemo)(() => `${e}_${Math.round(1e9*Math.random())}`, [e]),
                eM = ({
                    height: e = 21,
                    width: r = 21
                }) => {
                    let n = eO("spinner");
                    return m.createElement("svg", {
                        className: "_1luule42",
                        fill: "none",
                        height: e,
                        viewBox: "0 0 21 21",
                        width: r,
                        xmlns: "http://www.w3.org/2000/svg"
                    }, m.createElement("clipPath", {
                        id: n
                    }, m.createElement("path", {
                        d: "M10.5 3C6.35786 3 3 6.35786 3 10.5C3 14.6421 6.35786 18 10.5 18C11.3284 18 12 18.6716 12 19.5C12 20.3284 11.3284 21 10.5 21C4.70101 21 0 16.299 0 10.5C0 4.70101 4.70101 0 10.5 0C16.299 0 21 4.70101 21 10.5C21 11.3284 20.3284 12 19.5 12C18.6716 12 18 11.3284 18 10.5C18 6.35786 14.6421 3 10.5 3Z"
                    })), m.createElement("foreignObject", {
                        clipPath: `url(#${n})`,
                        height: "21",
                        width: "21",
                        x: "0",
                        y: "0"
                    }, m.createElement("div", {
                        className: "_1luule43"
                    })))
                },
                eI = [{
                    color: "#FC5C54",
                    emoji: "\uD83C\uDF36"
                }, {
                    color: "#FFD95A",
                    emoji: "\uD83E\uDD11"
                }, {
                    color: "#E95D72",
                    emoji: "\uD83D\uDC19"
                }, {
                    color: "#6A87C8",
                    emoji: "\uD83E\uDED0"
                }, {
                    color: "#5FD0F3",
                    emoji: "\uD83D\uDC33"
                }, {
                    color: "#FC5C54",
                    emoji: "\uD83E\uDD36"
                }, {
                    color: "#75C06B",
                    emoji: "\uD83C\uDF32"
                }, {
                    color: "#FFDD86",
                    emoji: "\uD83C\uDF1E"
                }, {
                    color: "#5FC6D4",
                    emoji: "\uD83D\uDC12"
                }, {
                    color: "#FF949A",
                    emoji: "\uD83D\uDC35"
                }, {
                    color: "#FF8024",
                    emoji: "\uD83E\uDD8A"
                }, {
                    color: "#9BA1A4",
                    emoji: "\uD83D\uDC3C"
                }, {
                    color: "#EC66FF",
                    emoji: "\uD83E\uDD84"
                }, {
                    color: "#FF8CBC",
                    emoji: "\uD83D\uDC37"
                }, {
                    color: "#FF9A23",
                    emoji: "\uD83D\uDC27"
                }, {
                    color: "#FF949A",
                    emoji: "\uD83E\uDDA9"
                }, {
                    color: "#C5DADB",
                    emoji: "\uD83D\uDC7D"
                }, {
                    color: "#FC5C54",
                    emoji: "\uD83C\uDF88"
                }, {
                    color: "#FF949A",
                    emoji: "\uD83C\uDF49"
                }, {
                    color: "#FFD95A",
                    emoji: "\uD83C\uDF89"
                }, {
                    color: "#A8CE63",
                    emoji: "\uD83D\uDC32"
                }, {
                    color: "#71ABFF",
                    emoji: "\uD83C\uDF0E"
                }, {
                    color: "#FFE279",
                    emoji: "\uD83C\uDF4A"
                }, {
                    color: "#B6B1B6",
                    emoji: "\uD83D\uDC2D"
                }, {
                    color: "#FF6780",
                    emoji: "\uD83C\uDF63"
                }, {
                    color: "#FFD95A",
                    emoji: "\uD83D\uDC25"
                }, {
                    color: "#A575FF",
                    emoji: "\uD83D\uDC7E"
                }, {
                    color: "#A8CE63",
                    emoji: "\uD83E\uDD66"
                }, {
                    color: "#FC5C54",
                    emoji: "\uD83D\uDC79"
                }, {
                    color: "#FFE279",
                    emoji: "\uD83D\uDE40"
                }, {
                    color: "#5FD0F3",
                    emoji: "⛱"
                }, {
                    color: "#4D82FF",
                    emoji: "⛵️"
                }, {
                    color: "#FFE279",
                    emoji: "\uD83E\uDD73"
                }, {
                    color: "#FF949A",
                    emoji: "\uD83E\uDD2F"
                }, {
                    color: "#FFB35A",
                    emoji: "\uD83E\uDD20"
                }],
                eN = ({
                    address: e,
                    ensImage: r,
                    size: n
                }) => {
                    let [i, o] = (0, m.useState)(!1);
                    (0, m.useEffect)(() => {
                        if (r) {
                            let e = new Image;
                            e.src = r, e.onload = () => o(!0)
                        }
                    }, [r]);
                    let {
                        color: a,
                        emoji: s
                    } = (0, m.useMemo)(() => (function(e) {
                        let r = Math.abs(function(e) {
                            let r = 0;
                            if (0 === e.length) return r;
                            for (let n = 0; n < e.length; n++) {
                                let i = e.charCodeAt(n);
                                r = (r << 5) - r + i | 0
                            }
                            return r
                        }(("string" == typeof e ? e : "").toLowerCase()) % eI.length);
                        return eI[null != r ? r : 0]
                    })(e), [e]);
                    return r ? i ? m.createElement(eS, {
                        backgroundSize: "cover",
                        borderRadius: "full",
                        position: "absolute",
                        style: {
                            backgroundImage: `url(${r})`,
                            backgroundPosition: "center",
                            height: n,
                            width: n
                        }
                    }) : m.createElement(eS, {
                        alignItems: "center",
                        backgroundSize: "cover",
                        borderRadius: "full",
                        color: "modalText",
                        display: "flex",
                        justifyContent: "center",
                        position: "absolute",
                        style: {
                            height: n,
                            width: n
                        }
                    }, m.createElement(eM, null)) : m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        justifyContent: "center",
                        overflow: "hidden",
                        style: { ...!r && {
                                backgroundColor: a
                            },
                            height: n,
                            width: n
                        }
                    }, s)
                },
                eF = (0, m.createContext)(eN);

            function eL({
                address: e,
                imageUrl: r,
                loading: n,
                size: i
            }) {
                let o = (0, m.useContext)(eF);
                return m.createElement(eS, {
                    "aria-hidden": !0,
                    borderRadius: "full",
                    overflow: "hidden",
                    position: "relative",
                    style: {
                        height: `${i}px`,
                        width: `${i}px`
                    },
                    userSelect: "none"
                }, m.createElement(eS, {
                    alignItems: "center",
                    borderRadius: "full",
                    display: "flex",
                    justifyContent: "center",
                    overflow: "hidden",
                    position: "absolute",
                    style: {
                        fontSize: `${Math.round(.55*i)}px`,
                        height: `${i}px`,
                        transform: n ? "scale(0.72)" : void 0,
                        transition: ".25s ease",
                        transitionDelay: n ? void 0 : ".1s",
                        width: `${i}px`,
                        willChange: "transform"
                    },
                    userSelect: "none"
                }, m.createElement(o, {
                    address: e,
                    ensImage: r,
                    size: i
                })), "boolean" == typeof n && m.createElement(eS, {
                    color: "accentColor",
                    display: "flex",
                    height: "full",
                    position: "absolute",
                    style: {
                        opacity: n ? 1 : 0,
                        transition: n ? "0.6s ease" : "0.2s ease",
                        transitionDelay: n ? ".05s" : void 0
                    },
                    width: "full"
                }, m.createElement(eM, {
                    height: "100%",
                    width: "100%"
                })))
            }
            var eD = () => m.createElement("svg", {
                fill: "none",
                height: "7",
                width: "14",
                xmlns: "http://www.w3.org/2000/svg"
            }, m.createElement("path", {
                d: "M12.75 1.54001L8.51647 5.0038C7.77974 5.60658 6.72026 5.60658 5.98352 5.0038L1.75 1.54001",
                stroke: "currentColor",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                strokeWidth: "2.5",
                xmlns: "http://www.w3.org/2000/svg"
            }));

            function ez(e) {
                return null != e
            }
            var eU = {
                    iconBackground: "#96bedc",
                    iconUrl: async () => (await n.e(704).then(n.bind(n, 96704))).default
                },
                e$ = {
                    iconBackground: "#e84141",
                    iconUrl: async () => (await n.e(376).then(n.bind(n, 63376))).default
                },
                eq = {
                    iconBackground: "#484c50",
                    iconUrl: async () => (await n.e(529).then(n.bind(n, 85529))).default
                },
                eW = {
                    iconBackground: "#ff5a57",
                    iconUrl: async () => (await n.e(849).then(n.bind(n, 39849))).default
                },
                eV = {
                    iconBackground: "#9f71ec",
                    iconUrl: async () => (await n.e(670).then(n.bind(n, 2670))).default
                },
                eH = Object.fromEntries(Object.values({
                    arbitrum: {
                        chainId: 42161,
                        ...eU
                    },
                    arbitrumRinkeby: {
                        chainId: 421611,
                        ...eU
                    },
                    avalanche: {
                        chainId: 43114,
                        ...e$
                    },
                    avalancheFuji: {
                        chainId: 43113,
                        ...e$
                    },
                    goerli: {
                        chainId: 5,
                        ...eq
                    },
                    hardhat: {
                        chainId: 31337,
                        iconBackground: "#f9f7ec",
                        iconUrl: async () => (await n.e(586).then(n.bind(n, 29586))).default
                    },
                    kovan: {
                        chainId: 42,
                        ...eq
                    },
                    localhost: {
                        chainId: 1337,
                        ...eq
                    },
                    mainnet: {
                        chainId: 1,
                        ...eq
                    },
                    optimism: {
                        chainId: 10,
                        ...eW
                    },
                    optimismGoerli: {
                        chainId: 420,
                        ...eW
                    },
                    optimismKovan: {
                        chainId: 69,
                        ...eW
                    },
                    polygon: {
                        chainId: 137,
                        ...eV
                    },
                    polygonMumbai: {
                        chainId: 80001,
                        ...eV
                    },
                    rinkeby: {
                        chainId: 4,
                        ...eq
                    },
                    ropsten: {
                        chainId: 3,
                        ...eq
                    },
                    sepolia: {
                        chainId: 11155111,
                        ...eq
                    }
                }).filter(ez).map(({
                    chainId: e,
                    ...r
                }) => [e, r])),
                eG = e => e.map(e => {
                    var r;
                    return { ...null != (r = eH[e.id]) ? r : {},
                        ...e
                    }
                }),
                eK = (0, m.createContext)({
                    chains: []
                });

            function eQ({
                chains: e,
                children: r,
                initialChain: n
            }) {
                return m.createElement(eK.Provider, {
                    value: (0, m.useMemo)(() => ({
                        chains: eG(e),
                        initialChainId: "number" == typeof n ? n : null == n ? void 0 : n.id
                    }), [e, n])
                }, r)
            }
            var eJ = () => (0, m.useContext)(eK).chains,
                eY = () => (0, m.useContext)(eK).initialChainId,
                eX = () => {
                    let e = eJ();
                    return (0, m.useMemo)(() => {
                        let r = {};
                        return e.forEach(e => {
                            r[e.id] = e
                        }), r
                    }, [e])
                },
                eZ = () => {
                    let [e, r] = (0, m.useReducer)(() => !0, !1);
                    return (0, m.useEffect)(r, [r]), e
                };

            function e0() {
                let e = A.RJ.id,
                    r = (0, E.yL)(),
                    n = Array.isArray(r.chains) ? r.chains : [],
                    i = null == n ? void 0 : n.some(r => (null == r ? void 0 : r.id) === e);
                return {
                    chainId: e,
                    enabled: i
                }
            }

            function e1(e) {
                let {
                    chainId: r,
                    enabled: n
                } = e0(), {
                    data: i
                } = (0, E.c9)({
                    address: e,
                    chainId: r,
                    enabled: n
                });
                return i
            }

            function e2(e) {
                let {
                    chainId: r,
                    enabled: n
                } = e0(), {
                    data: i
                } = (0, E.F6)({
                    address: e,
                    chainId: r,
                    enabled: n
                });
                return i
            }

            function e3() {
                var e;
                let {
                    chain: r
                } = (0, E.LN)();
                return null != (e = null == r ? void 0 : r.id) ? e : null
            }
            var e6 = "rk-transactions";

            function e5() {
                return function(e) {
                    try {
                        let r = e ? JSON.parse(e) : {};
                        return "object" == typeof r ? r : {}
                    } catch (n) {
                        return {}
                    }
                }("undefined" != typeof localStorage ? localStorage.getItem(e6) : null)
            }
            var e4 = /^0x([A-Fa-f0-9]{64})$/,
                e7 = (0, m.createContext)(null);

            function e8({
                children: e
            }) {
                let r = (0, E.yL)(),
                    {
                        address: n
                    } = (0, E.mA)(),
                    i = e3(),
                    [o] = (0, m.useState)(() => null != c ? c : c = function({
                        provider: e
                    }) {
                        let r = e5(),
                            n = e,
                            i = new Set,
                            o = new Map;

                        function a(e, n) {
                            var i, o;
                            return null != (o = null == (i = r[e]) ? void 0 : i[n]) ? o : []
                        }
                        async function s(e, r) {
                            await Promise.all(a(e, r).filter(e => "pending" === e.status).map(async i => {
                                let {
                                    confirmations: a,
                                    hash: s
                                } = i, u = o.get(s);
                                if (u) return await u;
                                let c = n.waitForTransaction(s, a).then(({
                                    status: n
                                }) => {
                                    var i;
                                    o.delete(s), void 0 !== n && (i = 0 === n ? "failed" : "confirmed", l(e, r, e => e.map(e => e.hash === s ? { ...e,
                                        status: i
                                    } : e)))
                                });
                                return o.set(s, c), await c
                            }))
                        }

                        function l(e, n, o) {
                            var a, l;
                            (r = e5())[e] = null != (a = r[e]) ? a : {};
                            let u = 0,
                                c = o(null != (l = r[e][n]) ? l : []).filter(({
                                    status: e
                                }) => "pending" === e || u++ <= 10);
                            r[e][n] = c.length > 0 ? c : void 0, localStorage.setItem(e6, JSON.stringify(r)), i.forEach(e => e()), s(e, n)
                        }
                        return {
                            addTransaction: function(e, r, n) {
                                let i = function(e) {
                                    let r = [];
                                    return e4.test(e.hash) || r.push("Invalid transaction hash"), "string" != typeof e.description && r.push("Transaction must have a description"), void 0 !== e.confirmations && (!Number.isInteger(e.confirmations) || e.confirmations < 1) && r.push("Transaction confirmations must be a positiver integer"), r
                                }(n);
                                if (i.length > 0) throw Error(["Unable to add transaction", ...i].join("\n"));
                                l(e, r, e => [{ ...n,
                                    status: "pending"
                                }, ...e.filter(({
                                    hash: e
                                }) => e !== n.hash)])
                            },
                            clearTransactions: function(e, r) {
                                l(e, r, () => [])
                            },
                            getTransactions: a,
                            onChange: function(e) {
                                return i.add(e), () => {
                                    i.delete(e)
                                }
                            },
                            setProvider: function(e) {
                                n = e
                            },
                            waitForPendingTransactions: s
                        }
                    }({
                        provider: r
                    }));
                return (0, m.useEffect)(() => {
                    o.setProvider(r)
                }, [o, r]), (0, m.useEffect)(() => {
                    n && i && o.waitForPendingTransactions(n, i)
                }, [o, n, i]), m.createElement(e7.Provider, {
                    value: o
                }, e)
            }

            function e9() {
                let e = (0, m.useContext)(e7);
                if (!e) throw Error("Transaction hooks must be used within RainbowKitProvider");
                return e
            }

            function te() {
                let e = e9(),
                    {
                        address: r
                    } = (0, E.mA)(),
                    n = e3(),
                    [i, o] = (0, m.useState)(() => e && r && n ? e.getTransactions(r, n) : []);
                return (0, m.useEffect)(() => {
                    if (e && r && n) return o(e.getTransactions(r, n)), e.onChange(() => {
                        o(e.getTransactions(r, n))
                    })
                }, [e, r, n]), i
            }
            var tt = e => "function" == typeof e ? e() : e;

            function tr(e, r = {}) {
                return Object.entries(function(e, {
                    extends: r
                } = {}) {
                    let n = { ...es(ef, tt(e))
                    };
                    if (!r) return n;
                    let i = es(ef, tt(r)),
                        o = Object.fromEntries(Object.entries(n).filter(([e, r]) => r !== i[e]));
                    return o
                }(e, r)).map(([e, r]) => `${e}:${r.replace(/[:;{}</>]/g,"")};`).join("")
            }
            var tn = () => {
                    let [e, r] = (0, m.useState)({
                        height: void 0,
                        width: void 0
                    });
                    return (0, m.useEffect)(() => {
                        function e() {
                            r({
                                height: window.innerHeight,
                                width: window.innerWidth
                            })
                        }
                        return window.addEventListener("resize", e), e(), () => window.removeEventListener("resize", e)
                    }, []), e
                },
                ti = {
                    appName: void 0,
                    disclaimer: void 0,
                    learnMoreUrl: "https://learn.rainbow.me/what-is-a-cryptoweb3-wallet-actually"
                },
                to = (0, m.createContext)(ti),
                ta = (0, m.createContext)(!1),
                ts = {
                    COMPACT: "compact",
                    WIDE: "wide"
                },
                tl = (0, m.createContext)(ts.WIDE),
                tu = (0, m.createContext)(!1),
                tc = "rk-recent";

            function td() {
                return "undefined" != typeof localStorage ? function(e) {
                    try {
                        let r = e ? JSON.parse(e) : [];
                        return Array.isArray(r) ? r : []
                    } catch (n) {
                        return []
                    }
                }(localStorage.getItem(tc)) : []
            }

            function th() {
                let e = eJ(),
                    r = eY(),
                    {
                        connectAsync: n,
                        connectors: i
                    } = (0, E.$4)();
                async function o(i, o) {
                    var a, s, l;
                    let u = await o.getChainId(),
                        c = await n({
                            chainId: null != (l = null != r ? r : null == (a = e.find(({
                                id: e
                            }) => e === u)) ? void 0 : a.id) ? l : null == (s = e[0]) ? void 0 : s.id,
                            connector: o
                        });
                    return c && function(e) {
                        var r;
                        let n = (r = [e, ...td()], [...new Set(r)]);
                        localStorage.setItem(tc, JSON.stringify(n))
                    }(i), c
                }
                let a = (function(e) {
                        let r = [];
                        for (let n of e) r.push(...n);
                        return r
                    })(i.map(e => {
                        var r;
                        return null != (r = e._wallets) ? r : []
                    })).sort((e, r) => e.index - r.index),
                    s = function(e, r) {
                        let n = {};
                        return e.forEach(e => {
                            let i = r(e);
                            i && (n[i] = e)
                        }), n
                    }(a, e => e.id),
                    l = td().map(e => s[e]).filter(ez).slice(0, 3),
                    u = [...l, ...a.filter(e => !l.includes(e))],
                    c = [];
                return u.forEach(e => {
                    var r;
                    if (!e) return;
                    let n = l.includes(e);
                    c.push({ ...e,
                        connect: () => o(e.id, e.connector),
                        groupName: e.groupName,
                        onConnecting: r => e.connector.on("message", ({
                            type: e
                        }) => "connecting" === e ? r() : void 0),
                        ready: (null == (r = e.installed) || r) && e.connector.ready,
                        recent: n,
                        showWalletConnectModal: e.walletConnectModalConnector ? async () => {
                            try {
                                await o(e.id, e.walletConnectModalConnector)
                            } catch (n) {
                                let r = "UserRejectedRequestError" === n.name;
                                if (!r) throw n
                            }
                        } : void 0
                    })
                }), c
            }
            var tf = async () => (await n.e(119).then(n.bind(n, 60119))).default,
                tp = () => eT(tf),
                tm = () => m.createElement(eB, {
                    background: "#d0d5de",
                    borderRadius: "10",
                    height: "48",
                    src: tf,
                    width: "48"
                }),
                tg = async () => (await n.e(625).then(n.bind(n, 75625))).default,
                tv = () => eT(tg),
                ty = () => m.createElement(eB, {
                    background: "#d0d5de",
                    borderRadius: "10",
                    height: "48",
                    src: tg,
                    width: "48"
                }),
                tb = m.forwardRef(({
                    as: e = "div",
                    children: r,
                    className: n,
                    color: i,
                    display: o,
                    font: a = "body",
                    id: s,
                    size: l = "16",
                    style: u,
                    tabIndex: c,
                    textAlign: d = "inherit",
                    weight: h = "regular"
                }, f) => m.createElement(eS, {
                    as: e,
                    className: n,
                    color: i,
                    display: o,
                    fontFamily: a,
                    fontSize: l,
                    fontWeight: h,
                    id: s,
                    ref: f,
                    style: u,
                    tabIndex: c,
                    textAlign: d
                }, r));
            tb.displayName = "Text";
            var tw = {
                large: {
                    fontSize: "16",
                    paddingX: "24",
                    paddingY: "10"
                },
                medium: {
                    fontSize: "14",
                    height: "28",
                    paddingX: "12",
                    paddingY: "4"
                },
                small: {
                    fontSize: "14",
                    paddingX: "10",
                    paddingY: "5"
                }
            };

            function tx({
                disabled: e = !1,
                href: r,
                label: n,
                onClick: i,
                rel: o = "noreferrer noopener",
                size: a = "medium",
                target: s = "_blank",
                testId: l,
                type: u = "primary"
            }) {
                let c = "primary" === u,
                    d = "large" !== a,
                    h = eC(),
                    f = e ? "actionButtonSecondaryBackground" : c ? "accentColor" : d ? "actionButtonSecondaryBackground" : null,
                    {
                        fontSize: p,
                        height: g,
                        paddingX: v,
                        paddingY: y
                    } = tw[a];
                return m.createElement(eS, { ...r ? e ? {} : {
                        as: "a",
                        href: r,
                        rel: o,
                        target: s
                    } : {
                        as: "button",
                        type: "button"
                    },
                    onClick: e ? void 0 : i,
                    ...h && d ? {} : {
                        borderColor: !h || d || c ? "actionButtonBorder" : "actionButtonBorderMobile",
                        borderStyle: "solid",
                        borderWidth: "1"
                    },
                    borderRadius: "actionButton",
                    className: !e && eg({
                        active: "shrinkSm",
                        hover: "grow"
                    }),
                    display: "block",
                    paddingX: v,
                    paddingY: y,
                    style: {
                        willChange: "transform"
                    },
                    testId: l,
                    textAlign: "center",
                    transition: "transform",
                    ...f ? {
                        background: f
                    } : {},
                    ...g ? {
                        height: g
                    } : {}
                }, m.createElement(tb, {
                    color: e ? "modalTextSecondary" : c ? "accentColorForeground" : "accentColor",
                    size: p,
                    weight: "bold"
                }, n))
            }
            var tE = () => eC() ? m.createElement("svg", {
                    "aria-hidden": !0,
                    fill: "none",
                    height: "11.5",
                    viewBox: "0 0 11.5 11.5",
                    width: "11.5",
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M2.13388 0.366117C1.64573 -0.122039 0.854272 -0.122039 0.366117 0.366117C-0.122039 0.854272 -0.122039 1.64573 0.366117 2.13388L3.98223 5.75L0.366117 9.36612C-0.122039 9.85427 -0.122039 10.6457 0.366117 11.1339C0.854272 11.622 1.64573 11.622 2.13388 11.1339L5.75 7.51777L9.36612 11.1339C9.85427 11.622 10.6457 11.622 11.1339 11.1339C11.622 10.6457 11.622 9.85427 11.1339 9.36612L7.51777 5.75L11.1339 2.13388C11.622 1.64573 11.622 0.854272 11.1339 0.366117C10.6457 -0.122039 9.85427 -0.122039 9.36612 0.366117L5.75 3.98223L2.13388 0.366117Z",
                    fill: "currentColor"
                })) : m.createElement("svg", {
                    "aria-hidden": !0,
                    fill: "none",
                    height: "10",
                    viewBox: "0 0 10 10",
                    width: "10",
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M1.70711 0.292893C1.31658 -0.0976311 0.683417 -0.0976311 0.292893 0.292893C-0.0976311 0.683417 -0.0976311 1.31658 0.292893 1.70711L3.58579 5L0.292893 8.29289C-0.0976311 8.68342 -0.0976311 9.31658 0.292893 9.70711C0.683417 10.0976 1.31658 10.0976 1.70711 9.70711L5 6.41421L8.29289 9.70711C8.68342 10.0976 9.31658 10.0976 9.70711 9.70711C10.0976 9.31658 10.0976 8.68342 9.70711 8.29289L6.41421 5L9.70711 1.70711C10.0976 1.31658 10.0976 0.683417 9.70711 0.292893C9.31658 -0.0976311 8.68342 -0.0976311 8.29289 0.292893L5 3.58579L1.70711 0.292893Z",
                    fill: "currentColor"
                })),
                tC = ({
                    "aria-label": e = "Close",
                    onClose: r
                }) => {
                    let n = eC();
                    return m.createElement(eS, {
                        alignItems: "center",
                        "aria-label": e,
                        as: "button",
                        background: "closeButtonBackground",
                        borderColor: "actionButtonBorder",
                        borderRadius: "full",
                        borderStyle: "solid",
                        borderWidth: n ? "0" : "1",
                        className: eg({
                            active: "shrinkSm",
                            hover: "growLg"
                        }),
                        color: "closeButton",
                        display: "flex",
                        height: n ? "30" : "28",
                        justifyContent: "center",
                        onClick: r,
                        style: {
                            willChange: "transform"
                        },
                        transition: "default",
                        type: "button",
                        width: n ? "30" : "28"
                    }, m.createElement(tE, null))
                },
                tA = async () => (await n.e(738).then(n.bind(n, 92738))).default;

            function tk({
                onClose: e
            }) {
                let [{
                    status: r,
                    ...n
                }, i] = m.useState({
                    status: "idle"
                }), o = function() {
                    var e;
                    let {
                        adapter: r
                    } = null != (e = (0, m.useContext)(ev)) ? e : {};
                    if (!r) throw Error("No authentication adapter found");
                    return r
                }(), a = (0, m.useCallback)(async () => {
                    try {
                        let e = await o.getNonce();
                        i(r => ({ ...r,
                            nonce: e
                        }))
                    } catch (r) {
                        i(e => ({ ...e,
                            errorMessage: "Error preparing message, please retry!",
                            status: "idle"
                        }))
                    }
                }, [o]), s = (0, m.useRef)(!1);
                m.useEffect(() => {
                    s.current || (s.current = !0, a())
                }, [a]);
                let l = eC(),
                    {
                        address: u
                    } = (0, E.mA)(),
                    {
                        chain: c
                    } = (0, E.LN)(),
                    {
                        signMessageAsync: d
                    } = (0, E.QW)(),
                    {
                        disconnect: h
                    } = (0, E.qL)(),
                    f = () => h(),
                    p = async () => {
                        try {
                            let e;
                            let r = null == c ? void 0 : c.id,
                                {
                                    nonce: a
                                } = n;
                            if (!u || !r || !a) return;
                            i(e => ({ ...e,
                                errorMessage: void 0,
                                status: "signing"
                            }));
                            let s = o.createMessage({
                                address: u,
                                chainId: r,
                                nonce: a
                            });
                            try {
                                e = await d({
                                    message: o.getMessageBody({
                                        message: s
                                    })
                                })
                            } catch (l) {
                                if (l instanceof el.ab) return i(e => ({ ...e,
                                    status: "idle"
                                }));
                                return i(e => ({ ...e,
                                    errorMessage: "Error signing message, please retry!",
                                    status: "idle"
                                }))
                            }
                            i(e => ({ ...e,
                                status: "verifying"
                            }));
                            try {
                                let h = await o.verify({
                                    message: s,
                                    signature: e
                                });
                                if (h) return;
                                throw Error()
                            } catch (f) {
                                return i(e => ({ ...e,
                                    errorMessage: "Error verifying signature, please retry!",
                                    status: "idle"
                                }))
                            }
                        } catch (p) {
                            i({
                                errorMessage: "Oops, something went wrong!",
                                status: "idle"
                            })
                        }
                    };
                return m.createElement(eS, {
                    position: "relative"
                }, m.createElement(eS, {
                    display: "flex",
                    paddingRight: "16",
                    paddingTop: "16",
                    position: "absolute",
                    right: "0"
                }, m.createElement(tC, {
                    onClose: e
                })), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: l ? "32" : "24",
                    padding: "24",
                    paddingX: "18",
                    style: {
                        paddingTop: l ? "60px" : "36px"
                    }
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: l ? "6" : "4",
                    style: {
                        maxWidth: l ? 320 : 280
                    }
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: l ? "32" : "16"
                }, m.createElement(eB, {
                    height: 40,
                    src: tA,
                    width: 40
                }), m.createElement(tb, {
                    color: "modalText",
                    size: l ? "20" : "18",
                    textAlign: "center",
                    weight: "heavy"
                }, "Verify your account")), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: l ? "16" : "12"
                }, m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: l ? "16" : "14",
                    textAlign: "center"
                }, "To finish connecting, you must sign a message in your wallet to verify that you are the owner of this account."), "idle" === r && n.errorMessage ? m.createElement(tb, {
                    color: "error",
                    size: l ? "16" : "14",
                    textAlign: "center",
                    weight: "bold"
                }, n.errorMessage) : null)), m.createElement(eS, {
                    alignItems: l ? void 0 : "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "8",
                    width: "full"
                }, m.createElement(tx, {
                    disabled: !n.nonce || "signing" === r || "verifying" === r,
                    label: n.nonce ? "signing" === r ? "Waiting for signature..." : "verifying" === r ? "Verifying signature..." : "Send message" : "Preparing message...",
                    onClick: p,
                    size: l ? "large" : "medium",
                    testId: "auth-message-button"
                }), l ? m.createElement(tx, {
                    label: "Cancel",
                    onClick: f,
                    size: "large",
                    type: "secondary"
                }) : m.createElement(eS, {
                    as: "button",
                    borderRadius: "full",
                    className: eg({
                        active: "shrink",
                        hover: "grow"
                    }),
                    display: "block",
                    onClick: f,
                    paddingX: "10",
                    paddingY: "5",
                    rel: "noreferrer",
                    style: {
                        willChange: "transform"
                    },
                    target: "_blank",
                    transition: "default"
                }, m.createElement(tb, {
                    color: "closeButton",
                    size: l ? "16" : "14",
                    weight: "bold"
                }, "Cancel")))))
            }
            var tS = "WALLETCONNECT_DEEPLINK_CHOICE";

            function t_() {
                localStorage.removeItem(tS)
            }
            var tP = (0, m.createContext)(void 0),
                tj = "data-rk",
                tT = e => ({
                    [tj]: e || ""
                }),
                tR = e => {
                    if (e && !/^[a-zA-Z0-9_]+$/.test(e)) throw Error(`Invalid ID: ${e}`);
                    return e ? `[${tj}="${e}"]` : `[${tj}]`
                },
                tB = () => {
                    let e = (0, m.useContext)(tP);
                    return tT(e)
                },
                tO = p();

            function tM({
                chains: e,
                initialChain: r,
                id: n,
                theme: i = tO,
                children: o,
                appInfo: a,
                showRecentTransactions: s = !1,
                coolMode: l = !1,
                avatar: u,
                modalSize: c = ts.WIDE
            }) {
                if (! function() {
                        let e = eJ(),
                            r = th(),
                            n = "unauthenticated" === ey(),
                            i = (0, m.useCallback)(() => {
                                eT(...r.map(e => e.iconUrl), ...e.map(e => e.iconUrl).filter(ez)), eC() || (tp(), tv()), n && eT(tA)
                            }, [r, e, n]);
                        (0, m.useEffect)(() => {
                            i()
                        }, [i])
                    }(), (0, E.mA)({
                        onDisconnect: t_
                    }), "function" == typeof i) throw Error('A theme function was provided to the "theme" prop instead of a theme object. You must execute this function to get the resulting theme object.');
                let d = tR(n),
                    h = { ...ti,
                        ...a
                    },
                    {
                        width: f
                    } = tn();
                return m.createElement(eQ, {
                    chains: e,
                    initialChain: r
                }, m.createElement(ta.Provider, {
                    value: l
                }, m.createElement(tl.Provider, {
                    value: f && f < 768 ? ts.COMPACT : c
                }, m.createElement(tu.Provider, {
                    value: s
                }, m.createElement(e8, null, m.createElement(eF.Provider, {
                    value: null != u ? u : eN
                }, m.createElement(to.Provider, {
                    value: h
                }, m.createElement(tP.Provider, {
                    value: n
                }, m.createElement(r$, null, i ? m.createElement("div", { ...tT(n)
                }, m.createElement("style", {
                    dangerouslySetInnerHTML: {
                        __html: [`${d}{${tr("lightMode"in i?i.lightMode:i)}}`, "darkMode" in i ? `@media(prefers-color-scheme:dark){${d}{${tr(i.darkMode,{extends:i.lightMode})}}}` : null].join("")
                    }
                }), o) : o)))))))))
            }
            var tI = (e, r) => {
                let n = e.querySelectorAll("button:not(:disabled), a[href]");
                0 !== n.length && n["end" === r ? n.length - 1 : 0].focus()
            };

            function tN(e) {
                let r = (0, m.useRef)(null);
                return (0, m.useEffect)(() => {
                    let e = document.activeElement;
                    return () => {
                        var r;
                        null == (r = e.focus) || r.call(e)
                    }
                }, []), (0, m.useEffect)(() => {
                    if (r.current) {
                        let e = r.current.querySelector("[data-auto-focus]");
                        e ? e.focus() : r.current.focus()
                    }
                }, [r]), m.createElement(m.Fragment, null, m.createElement("div", {
                    onFocus: (0, m.useCallback)(() => r.current && tI(r.current, "end"), []),
                    tabIndex: 0
                }), m.createElement("div", {
                    ref: r,
                    style: {
                        outline: "none"
                    },
                    tabIndex: -1,
                    ...e
                }), m.createElement("div", {
                    onFocus: (0, m.useCallback)(() => r.current && tI(r.current, "start"), []),
                    tabIndex: 0
                }))
            }
            var tF = e => e.stopPropagation();

            function tL({
                children: e,
                onClose: r,
                open: n,
                titleId: i
            }) {
                (0, m.useEffect)(() => {
                    let e = e => n && "Escape" === e.key && r();
                    return document.addEventListener("keydown", e), () => document.removeEventListener("keydown", e)
                }, [n, r]);
                let [o, a] = (0, m.useState)(!0);
                (0, m.useEffect)(() => {
                    a("hidden" !== getComputedStyle(window.document.body).overflow)
                }, []);
                let s = (0, m.useCallback)(() => r(), [r]),
                    l = tB(),
                    u = eC();
                return m.createElement(m.Fragment, null, n ? (0, k.createPortal)(m.createElement(eo, {
                    enabled: o
                }, m.createElement(eS, { ...l
                }, m.createElement(eS, { ...l,
                    alignItems: u ? "flex-end" : "center",
                    "aria-labelledby": i,
                    "aria-modal": !0,
                    className: "_9pm4ki3 ju367v9b ju367vax ju367va ju367v2l ju367v8l",
                    onClick: s,
                    position: "fixed",
                    role: "dialog"
                }, m.createElement(tN, {
                    className: "_9pm4ki5 ju367va ju367v10 ju367v8m",
                    onClick: tF,
                    role: "document"
                }, e)))), document.body) : null)
            }
            var tD = "_1ckjpok1 ju367vb0 ju367vdl ju367vp ju367vt ju367vv ju367vef ju367va ju367v10 ju367v67 ju367v8m",
                tz = "_1ckjpok6 ju367vq";

            function tU({
                bottomSheetOnMobile: e = !1,
                children: r,
                marginTop: n,
                padding: i = "16",
                wide: o = !1
            }) {
                let a = eC(),
                    s = (0, m.useContext)(tl),
                    l = s === ts.COMPACT;
                return m.createElement(eS, {
                    marginTop: n
                }, m.createElement(eS, {
                    className: [o ? a ? "_1ckjpok2 _1ckjpok1 ju367vb0 ju367vdl ju367vp ju367vt ju367vv ju367vef ju367va ju367v10 ju367v67 ju367v8m" : l ? "_1ckjpok4 _1ckjpok1 ju367vb0 ju367vdl ju367vp ju367vt ju367vv ju367vef ju367va ju367v10 ju367v67 ju367v8m" : "_1ckjpok3 _1ckjpok1 ju367vb0 ju367vdl ju367vp ju367vt ju367vv ju367vef ju367va ju367v10 ju367v67 ju367v8m" : tD, a ? tz : null, a && e ? "_1ckjpok7" : null].join(" ")
                }, m.createElement(eS, {
                    padding: i
                }, r)))
            }
            var t$ = ["k", "m", "b", "t"];

            function tq(e, r = 1) {
                return e.toString().replace(RegExp(`(.+\\.\\d{${r}})\\d+`), "$1").replace(/(\.[1-9]*)0+$/, "$1").replace(/\.$/, "")
            }

            function tW(e) {
                if (e < 1) return tq(e, 3);
                if (e < 100) return tq(e, 2);
                if (e < 1e4) return new Intl.NumberFormat().format(parseFloat(tq(e, 1)));
                let r = String(e);
                for (let n = t$.length - 1; n >= 0; n--) {
                    let i = 10 ** ((n + 1) * 3);
                    if (i <= e) {
                        r = tq(e = 10 * e / i / 10, 1) + t$[n];
                        break
                    }
                }
                return r
            }

            function tV(e) {
                return e.length < 8 ? e : `${e.substring(0,4)}\u2026${e.substring(e.length-4)}`
            }

            function tH(e) {
                let r = e.split("."),
                    n = r.pop();
                return r.join(".").length > 24 ? `${r.join(".").substring(0,24)}...` : `${r.join(".")}.${n}`
            }
            var tG = () => m.createElement("svg", {
                    fill: "none",
                    height: "13",
                    viewBox: "0 0 13 13",
                    width: "13",
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M4.94568 12.2646C5.41052 12.2646 5.77283 12.0869 6.01892 11.7109L12.39 1.96973C12.5677 1.69629 12.6429 1.44336 12.6429 1.2041C12.6429 0.561523 12.1644 0.0966797 11.5082 0.0966797C11.057 0.0966797 10.7767 0.260742 10.5033 0.691406L4.9115 9.50977L2.07458 5.98926C1.82166 5.68848 1.54822 5.55176 1.16541 5.55176C0.502319 5.55176 0.0238037 6.02344 0.0238037 6.66602C0.0238037 6.95312 0.112671 7.20605 0.358765 7.48633L3.88611 11.7588C4.18005 12.1074 4.50818 12.2646 4.94568 12.2646Z",
                    fill: "currentColor"
                })),
                tK = () => m.createElement("svg", {
                    fill: "none",
                    height: "16",
                    viewBox: "0 0 17 16",
                    width: "17",
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M3.04236 12.3027H4.18396V13.3008C4.18396 14.8525 5.03845 15.7002 6.59705 15.7002H13.6244C15.183 15.7002 16.0375 14.8525 16.0375 13.3008V6.24609C16.0375 4.69434 15.183 3.84668 13.6244 3.84668H12.4828V2.8418C12.4828 1.29688 11.6283 0.442383 10.0697 0.442383H3.04236C1.48376 0.442383 0.629272 1.29004 0.629272 2.8418V9.90332C0.629272 11.4551 1.48376 12.3027 3.04236 12.3027ZM3.23376 10.5391C2.68689 10.5391 2.39294 10.2656 2.39294 9.68457V3.06055C2.39294 2.47949 2.68689 2.21289 3.23376 2.21289H9.8783C10.4252 2.21289 10.7191 2.47949 10.7191 3.06055V3.84668H6.59705C5.03845 3.84668 4.18396 4.69434 4.18396 6.24609V10.5391H3.23376ZM6.78845 13.9365C6.24158 13.9365 5.94763 13.6699 5.94763 13.0889V6.45801C5.94763 5.87695 6.24158 5.61035 6.78845 5.61035H13.433C13.9799 5.61035 14.2738 5.87695 14.2738 6.45801V13.0889C14.2738 13.6699 13.9799 13.9365 13.433 13.9365H6.78845Z",
                    fill: "currentColor"
                })),
                tQ = () => m.createElement("svg", {
                    fill: "none",
                    height: "16",
                    viewBox: "0 0 18 16",
                    width: "18",
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M2.67834 15.5908H9.99963C11.5514 15.5908 12.399 14.7432 12.399 13.1777V10.2656H10.6354V12.9863C10.6354 13.5332 10.3688 13.8271 9.78772 13.8271H2.89026C2.3092 13.8271 2.0426 13.5332 2.0426 12.9863V3.15625C2.0426 2.60254 2.3092 2.30859 2.89026 2.30859H9.78772C10.3688 2.30859 10.6354 2.60254 10.6354 3.15625V5.89746H12.399V2.95801C12.399 1.39941 11.5514 0.544922 9.99963 0.544922H2.67834C1.12659 0.544922 0.278931 1.39941 0.278931 2.95801V13.1777C0.278931 14.7432 1.12659 15.5908 2.67834 15.5908ZM7.43616 8.85059H14.0875L15.0924 8.78906L14.566 9.14453L13.6842 9.96484C13.5406 10.1016 13.4586 10.2861 13.4586 10.4844C13.4586 10.8398 13.7321 11.168 14.1217 11.168C14.3199 11.168 14.4635 11.0928 14.6002 10.9561L16.7809 8.68652C16.986 8.48145 17.0543 8.27637 17.0543 8.06445C17.0543 7.85254 16.986 7.64746 16.7809 7.43555L14.6002 5.17285C14.4635 5.03613 14.3199 4.9541 14.1217 4.9541C13.7321 4.9541 13.4586 5.27539 13.4586 5.6377C13.4586 5.83594 13.5406 6.02734 13.6842 6.15723L14.566 6.98438L15.0924 7.33984L14.0875 7.27148H7.43616C7.01917 7.27148 6.65686 7.62012 6.65686 8.06445C6.65686 8.50195 7.01917 8.85059 7.43616 8.85059Z",
                    fill: "currentColor"
                })),
                tJ = e => {
                    var r, n;
                    return null == (n = null == (r = null == e ? void 0 : e.blockExplorers) ? void 0 : r.default) ? void 0 : n.url
                },
                tY = () => m.createElement("svg", {
                    fill: "none",
                    height: "19",
                    viewBox: "0 0 20 19",
                    width: "20",
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M10 18.9443C15.0977 18.9443 19.2812 14.752 19.2812 9.6543C19.2812 4.56543 15.0889 0.373047 10 0.373047C4.90234 0.373047 0.71875 4.56543 0.71875 9.6543C0.71875 14.752 4.91113 18.9443 10 18.9443ZM10 16.6328C6.1416 16.6328 3.03906 13.5215 3.03906 9.6543C3.03906 5.7959 6.13281 2.68457 10 2.68457C13.8584 2.68457 16.9697 5.7959 16.9697 9.6543C16.9785 13.5215 13.8672 16.6328 10 16.6328ZM12.7158 12.1416C13.2432 12.1416 13.5684 11.7549 13.5684 11.1836V7.19336C13.5684 6.44629 13.1377 6.05957 12.417 6.05957H8.40918C7.8291 6.05957 7.45117 6.38477 7.45117 6.91211C7.45117 7.43945 7.8291 7.77344 8.40918 7.77344H9.69238L10.7207 7.63281L9.53418 8.67871L6.73047 11.4912C6.53711 11.6758 6.41406 11.9395 6.41406 12.2031C6.41406 12.7832 6.85352 13.1699 7.39844 13.1699C7.68848 13.1699 7.92578 13.0732 8.1543 12.8623L10.9316 10.0762L11.9775 8.89844L11.8545 9.98828V11.1836C11.8545 11.7725 12.1885 12.1416 12.7158 12.1416Z",
                    fill: "currentColor"
                })),
                tX = () => m.createElement("svg", {
                    fill: "none",
                    height: "19",
                    viewBox: "0 0 20 19",
                    width: "20",
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M10 18.9443C15.0977 18.9443 19.2812 14.752 19.2812 9.6543C19.2812 4.56543 15.0889 0.373047 10 0.373047C4.90234 0.373047 0.71875 4.56543 0.71875 9.6543C0.71875 14.752 4.91113 18.9443 10 18.9443ZM10 16.6328C6.1416 16.6328 3.03906 13.5215 3.03906 9.6543C3.03906 5.7959 6.13281 2.68457 10 2.68457C13.8584 2.68457 16.9697 5.7959 16.9697 9.6543C16.9785 13.5215 13.8672 16.6328 10 16.6328ZM7.29297 13.3018C7.58301 13.3018 7.81152 13.2139 7.99609 13.0205L10 11.0166L12.0127 13.0205C12.1973 13.2051 12.4258 13.3018 12.707 13.3018C13.2432 13.3018 13.6562 12.8887 13.6562 12.3525C13.6562 12.0977 13.5508 11.8691 13.3662 11.6934L11.3535 9.67188L13.375 7.6416C13.5596 7.44824 13.6562 7.22852 13.6562 6.98242C13.6562 6.44629 13.2432 6.0332 12.7158 6.0332C12.4346 6.0332 12.2148 6.12109 12.0215 6.31445L10 8.32715L7.9873 6.32324C7.80273 6.12988 7.58301 6.04199 7.29297 6.04199C6.76562 6.04199 6.35254 6.45508 6.35254 6.99121C6.35254 7.2373 6.44922 7.46582 6.63379 7.6416L8.65527 9.67188L6.63379 11.6934C6.44922 11.8691 6.35254 12.1064 6.35254 12.3525C6.35254 12.8887 6.76562 13.3018 7.29297 13.3018Z",
                    fill: "currentColor"
                })),
                tZ = () => m.createElement("svg", {
                    fill: "none",
                    height: "20",
                    viewBox: "0 0 20 20",
                    width: "20",
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M10 19.4443C15.0977 19.4443 19.2812 15.252 19.2812 10.1543C19.2812 5.06543 15.0889 0.873047 10 0.873047C4.90234 0.873047 0.71875 5.06543 0.71875 10.1543C0.71875 15.252 4.91113 19.4443 10 19.4443ZM10 17.1328C6.1416 17.1328 3.03906 14.0215 3.03906 10.1543C3.03906 6.2959 6.13281 3.18457 10 3.18457C13.8584 3.18457 16.9697 6.2959 16.9697 10.1543C16.9785 14.0215 13.8672 17.1328 10 17.1328ZM9.07715 14.3379C9.4375 14.3379 9.7627 14.1533 9.97363 13.8369L13.7441 8.00977C13.8848 7.79883 13.9814 7.5791 13.9814 7.36816C13.9814 6.84961 13.5244 6.48926 13.0322 6.48926C12.707 6.48926 12.4258 6.66504 12.2148 7.0166L9.05957 12.0967L7.5918 10.2949C7.37207 10.0225 7.13477 9.9082 6.84473 9.9082C6.33496 9.9082 5.92188 10.3125 5.92188 10.8223C5.92188 11.0684 6.00098 11.2793 6.18555 11.5078L8.1543 13.8545C8.40918 14.1709 8.70801 14.3379 9.07715 14.3379Z",
                    fill: "currentColor"
                })),
                t0 = e => {
                    switch (e) {
                        case "pending":
                        default:
                            return eM;
                        case "confirmed":
                            return tZ;
                        case "failed":
                            return tX
                    }
                };

            function t1({
                tx: e
            }) {
                let r = eC(),
                    n = t0(e.status),
                    i = "failed" === e.status ? "error" : "accentColor",
                    {
                        chain: o
                    } = (0, E.LN)(),
                    a = "confirmed" === e.status ? "Confirmed" : "failed" === e.status ? "Failed" : "Pending",
                    s = tJ(o);
                return m.createElement(m.Fragment, null, m.createElement(eS, { ...s ? {
                        as: "a",
                        background: {
                            hover: "profileForeground"
                        },
                        borderRadius: "menuButton",
                        className: eg({
                            active: "shrink"
                        }),
                        href: `${s}/tx/${e.hash}`,
                        rel: "noreferrer noopener",
                        target: "_blank",
                        transition: "default"
                    } : {},
                    color: "modalText",
                    display: "flex",
                    flexDirection: "row",
                    justifyContent: "space-between",
                    padding: "8",
                    width: "full"
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "row",
                    gap: r ? "16" : "14"
                }, m.createElement(eS, {
                    color: i
                }, m.createElement(n, null)), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: r ? "3" : "1"
                }, m.createElement(eS, null, m.createElement(tb, {
                    color: "modalText",
                    font: "body",
                    size: r ? "16" : "14",
                    weight: "bold"
                }, null == e ? void 0 : e.description)), m.createElement(eS, null, m.createElement(tb, {
                    color: "pending" === e.status ? "modalTextSecondary" : i,
                    font: "body",
                    size: "14",
                    weight: r ? "medium" : "regular"
                }, a)))), s && m.createElement(eS, {
                    alignItems: "center",
                    color: "modalTextDim",
                    display: "flex"
                }, m.createElement(tY, null))))
            }

            function t2({
                address: e
            }) {
                let r = te(),
                    n = function() {
                        let e = e9(),
                            {
                                address: r
                            } = (0, E.mA)(),
                            n = e3();
                        return (0, m.useCallback)(() => {
                            if (!r || !n) throw Error("No address or chain ID found");
                            e.clearTransactions(r, n)
                        }, [e, r, n])
                    }(),
                    {
                        chain: i
                    } = (0, E.LN)(),
                    o = tJ(i),
                    a = r.slice(0, 3),
                    s = a.length > 0,
                    l = eC(),
                    {
                        appName: u
                    } = (0, m.useContext)(to);
                return m.createElement(m.Fragment, null, m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "10",
                    paddingBottom: "2",
                    paddingTop: "16",
                    paddingX: l ? "8" : "18"
                }, s && m.createElement(eS, {
                    paddingBottom: l ? "4" : "0",
                    paddingTop: "8",
                    paddingX: l ? "12" : "6"
                }, m.createElement(eS, {
                    display: "flex",
                    justifyContent: "space-between"
                }, m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: l ? "16" : "14",
                    weight: "semibold"
                }, "Recent Transactions"), m.createElement(eS, {
                    style: {
                        marginBottom: -6,
                        marginLeft: -10,
                        marginRight: -10,
                        marginTop: -6
                    }
                }, m.createElement(eS, {
                    as: "button",
                    background: {
                        hover: "profileForeground"
                    },
                    borderRadius: "actionButton",
                    className: eg({
                        active: "shrink"
                    }),
                    onClick: n,
                    paddingX: l ? "8" : "12",
                    paddingY: l ? "4" : "5",
                    transition: "default",
                    type: "button"
                }, m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: l ? "16" : "14",
                    weight: "semibold"
                }, "Clear All"))))), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "4"
                }, s ? a.map(e => m.createElement(t1, {
                    key: e.hash,
                    tx: e
                })) : m.createElement(m.Fragment, null, m.createElement(eS, {
                    padding: l ? "12" : "8"
                }, m.createElement(tb, {
                    color: "modalTextDim",
                    size: l ? "16" : "14",
                    weight: l ? "medium" : "bold"
                }, null != u ? u : "Your", " transactions will appear here...")), l && m.createElement(eS, {
                    background: "generalBorderDim",
                    height: "1",
                    marginX: "12",
                    marginY: "8"
                })))), o && m.createElement(eS, {
                    paddingBottom: "18",
                    paddingX: l ? "8" : "18"
                }, m.createElement(eS, {
                    alignItems: "center",
                    as: "a",
                    background: {
                        hover: "profileForeground"
                    },
                    borderRadius: "menuButton",
                    className: eg({
                        active: "shrink"
                    }),
                    color: "modalTextDim",
                    display: "flex",
                    flexDirection: "row",
                    href: `${o}/address/${e}`,
                    justifyContent: "space-between",
                    paddingX: "8",
                    paddingY: "12",
                    rel: "noreferrer noopener",
                    style: {
                        willChange: "transform"
                    },
                    target: "_blank",
                    transition: "default",
                    width: "full",
                    ...l ? {
                        paddingLeft: "12"
                    } : {}
                }, m.createElement(tb, {
                    color: "modalText",
                    font: "body",
                    size: l ? "16" : "14",
                    weight: l ? "semibold" : "bold"
                }, "View more on Explorer"), m.createElement(tY, null))))
            }

            function t3({
                action: e,
                icon: r,
                label: n,
                testId: i,
                url: o
            }) {
                let a = eC();
                return m.createElement(eS, { ...o ? {
                        as: "a",
                        href: o,
                        rel: "noreferrer noopener",
                        target: "_blank"
                    } : {
                        as: "button",
                        type: "button"
                    },
                    background: {
                        base: "profileAction",
                        ...a ? {} : {
                            hover: "profileActionHover"
                        }
                    },
                    borderRadius: "menuButton",
                    boxShadow: "profileDetailsAction",
                    className: eg({
                        active: "shrinkSm",
                        hover: a ? void 0 : "grow"
                    }),
                    display: "flex",
                    onClick: e,
                    padding: a ? "6" : "8",
                    style: {
                        willChange: "transform"
                    },
                    testId: i,
                    transition: "default",
                    width: "full"
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "1",
                    justifyContent: "center",
                    paddingTop: "2",
                    width: "full"
                }, m.createElement(eS, {
                    color: "modalText",
                    height: "max"
                }, r), m.createElement(eS, null, m.createElement(tb, {
                    color: "modalText",
                    size: a ? "12" : "13",
                    weight: "semibold"
                }, n))))
            }

            function t6({
                address: e,
                balanceData: r,
                ensAvatar: n,
                ensName: i,
                onClose: o,
                onDisconnect: a
            }) {
                let s = (0, m.useContext)(tu),
                    [l, u] = (0, m.useState)(!1),
                    c = (0, m.useCallback)(() => {
                        e && (navigator.clipboard.writeText(e), u(!0))
                    }, [e]);
                if ((0, m.useEffect)(() => {
                        if (l) {
                            let e = setTimeout(() => {
                                u(!1)
                            }, 1500);
                            return () => clearTimeout(e)
                        }
                    }, [l]), !e) return null;
                let d = i ? tH(i) : tV(e),
                    h = null == r ? void 0 : r.formatted,
                    f = h ? tW(parseFloat(h)) : void 0,
                    p = "rk_profile_title",
                    g = eC();
                return m.createElement(m.Fragment, null, m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column"
                }, m.createElement(eS, {
                    background: "profileForeground",
                    padding: "16"
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: g ? "16" : "12",
                    justifyContent: "center",
                    margin: "8",
                    style: {
                        textAlign: "center"
                    }
                }, m.createElement(eS, {
                    style: {
                        position: "absolute",
                        right: 16,
                        top: 16,
                        willChange: "transform"
                    }
                }, m.createElement(tC, {
                    onClose: o
                })), " ", m.createElement(eS, {
                    marginTop: g ? "24" : "0"
                }, m.createElement(eL, {
                    address: e,
                    imageUrl: n,
                    size: g ? 82 : 74
                })), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: g ? "4" : "0",
                    textAlign: "center"
                }, m.createElement(eS, {
                    textAlign: "center"
                }, m.createElement(tb, {
                    as: "h1",
                    color: "modalText",
                    id: p,
                    size: g ? "20" : "18",
                    weight: "heavy"
                }, d)), r && m.createElement(eS, {
                    textAlign: "center"
                }, m.createElement(tb, {
                    as: "h1",
                    color: "modalTextSecondary",
                    id: p,
                    size: g ? "16" : "14",
                    weight: "semibold"
                }, f, " ", r.symbol)))), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "row",
                    gap: "8",
                    margin: "2",
                    marginTop: "16"
                }, m.createElement(t3, {
                    action: c,
                    icon: l ? m.createElement(tG, null) : m.createElement(tK, null),
                    label: l ? "Copied!" : "Copy Address"
                }), m.createElement(t3, {
                    action: a,
                    icon: m.createElement(tQ, null),
                    label: "Disconnect",
                    testId: "disconnect-button"
                }))), s && m.createElement(m.Fragment, null, m.createElement(eS, {
                    background: "generalBorder",
                    height: "1",
                    marginTop: "-1"
                }), m.createElement(eS, null, m.createElement(t2, {
                    address: e
                })))))
            }

            function t5({
                onClose: e,
                open: r
            }) {
                let {
                    address: n
                } = (0, E.mA)(), {
                    data: i
                } = (0, E.KQ)({
                    address: n
                }), o = e1(n), a = e2(n), {
                    disconnect: s
                } = (0, E.qL)();
                return n ? m.createElement(m.Fragment, null, n && m.createElement(tL, {
                    onClose: e,
                    open: r,
                    titleId: "rk_account_modal_title"
                }, m.createElement(tU, {
                    bottomSheetOnMobile: !0,
                    padding: "0"
                }, m.createElement(t6, {
                    address: n,
                    balanceData: i,
                    ensAvatar: o,
                    ensName: a,
                    onClose: e,
                    onDisconnect: s
                })))) : null
            }
            var t4 = ({
                    size: e
                }) => m.createElement("svg", {
                    fill: "none",
                    height: e,
                    viewBox: "0 0 28 28",
                    width: e,
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M6.742 22.195h8.367c1.774 0 2.743-.968 2.743-2.758V16.11h-2.016v3.11c0 .625-.305.96-.969.96H6.984c-.664 0-.968-.335-.968-.96V7.984c0-.632.304-.968.968-.968h7.883c.664 0 .969.336.969.968v3.133h2.016v-3.36c0-1.78-.97-2.757-2.743-2.757H6.742C4.97 5 4 5.977 4 7.758v11.68c0 1.789.969 2.757 2.742 2.757Zm5.438-7.703h7.601l1.149-.07-.602.406-1.008.938a.816.816 0 0 0-.258.593c0 .407.313.782.758.782.227 0 .39-.086.547-.243l2.492-2.593c.235-.235.313-.47.313-.711 0-.242-.078-.477-.313-.719l-2.492-2.586c-.156-.156-.32-.25-.547-.25-.445 0-.758.367-.758.781 0 .227.094.446.258.594l1.008.945.602.407-1.149-.079H12.18a.904.904 0 0 0 0 1.805Z",
                    fill: "currentColor"
                })),
                t7 = m.forwardRef(({
                    children: e,
                    currentlySelected: r = !1,
                    onClick: n,
                    testId: i,
                    ...o
                }, a) => {
                    let s = eC();
                    return m.createElement(eS, {
                        as: "button",
                        borderRadius: "menuButton",
                        disabled: r,
                        display: "flex",
                        onClick: n,
                        ref: a,
                        testId: i,
                        type: "button"
                    }, m.createElement(eS, {
                        borderRadius: "menuButton",
                        className: [s ? "v9horb0" : void 0, !r && eg({
                            active: "shrink"
                        })],
                        padding: s ? "8" : "6",
                        transition: "default",
                        width: "full",
                        ...r ? {
                            background: "accentColor",
                            borderColor: "selectedOptionBorder",
                            borderStyle: "solid",
                            borderWidth: "1",
                            boxShadow: "selectedOption",
                            color: "accentColorForeground"
                        } : {
                            background: {
                                hover: "menuItemBackground"
                            },
                            color: "modalText",
                            transition: "default"
                        },
                        ...o
                    }, e))
                });

            function t8({
                onClose: e,
                open: r
            }) {
                var n;
                let {
                    chain: i
                } = (0, E.LN)(), {
                    chains: o,
                    error: a,
                    switchNetwork: s
                } = (0, E.g0)(), {
                    disconnect: l
                } = (0, E.qL)(), {
                    connector: u
                } = (0, E.mA)(), [c, d] = (0, m.useState)(), h = "rk_chain_modal_title", f = eC(), p = eX(), g = null != (n = null == i ? void 0 : i.unsupported) && n, v = f ? "36" : "28", y = (0, m.useCallback)(() => {
                    d(null), e()
                }, [e]);
                (0, m.useEffect)(() => {
                    var r;
                    let n;
                    if (!u) return;
                    let i = () => {
                        d(null), e()
                    };
                    return null == (r = null == u ? void 0 : u.getProvider) || r.call(u).then(e => {
                        (n = e).on("chainChanged", i)
                    }), () => {
                        null == n || n.removeListener("chainChanged", i)
                    }
                }, [u, e, y]), (0, m.useEffect)(() => {
                    a && "UserRejectedRequestError" === a.name && y()
                }, [a, y]);
                let {
                    appName: b
                } = (0, m.useContext)(to);
                return i && (null == i ? void 0 : i.id) ? m.createElement(tL, {
                    onClose: e,
                    open: r,
                    titleId: h
                }, m.createElement(tU, {
                    bottomSheetOnMobile: !0
                }, m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "14"
                }, m.createElement(eS, {
                    display: "flex",
                    flexDirection: "row",
                    justifyContent: "space-between"
                }, f && m.createElement(eS, {
                    width: "30"
                }), m.createElement(eS, {
                    paddingBottom: "0",
                    paddingLeft: "8",
                    paddingTop: "4"
                }, m.createElement(tb, {
                    as: "h1",
                    color: "modalText",
                    id: h,
                    size: f ? "20" : "18",
                    weight: "heavy"
                }, "Switch Networks")), m.createElement(tC, {
                    onClose: e
                })), g && m.createElement(eS, {
                    marginX: "8",
                    textAlign: f ? "center" : "left"
                }, m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "14",
                    weight: "medium"
                }, "Wrong network detected, switch or disconnect to continue.")), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "4",
                    padding: "2"
                }, s ? o.map((e, r) => {
                    let n = e.id === (null == i ? void 0 : i.id),
                        a = e.id === c,
                        l = p[e.id],
                        u = f ? "36" : "28",
                        h = null == l ? void 0 : l.iconUrl,
                        g = null == l ? void 0 : l.iconBackground;
                    return m.createElement(m.Fragment, {
                        key: e.id
                    }, m.createElement(t7, {
                        currentlySelected: n,
                        onClick: n ? void 0 : () => {
                            d(e.id), s(e.id)
                        },
                        testId: `chain-option-${e.id}`
                    }, m.createElement(eS, {
                        fontFamily: "body",
                        fontSize: "16",
                        fontWeight: "bold"
                    }, m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "row",
                        justifyContent: "space-between"
                    }, m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "row",
                        gap: "4",
                        height: u
                    }, h ? m.createElement(eS, {
                        height: "full",
                        marginRight: "8"
                    }, m.createElement(eB, {
                        alt: e.name,
                        background: g,
                        borderRadius: "full",
                        height: u,
                        src: h,
                        width: u
                    })) : null, m.createElement("div", null, e.name)), n && m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "row",
                        marginRight: "6"
                    }, m.createElement(tb, {
                        color: "accentColorForeground",
                        size: "14",
                        weight: "medium"
                    }, "Connected"), m.createElement(eS, {
                        background: "connectionIndicator",
                        borderColor: "selectedOptionBorder",
                        borderRadius: "full",
                        borderStyle: "solid",
                        borderWidth: "1",
                        height: "8",
                        marginLeft: "8",
                        width: "8"
                    })), a && m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "row",
                        marginRight: "6"
                    }, m.createElement(tb, {
                        color: "modalText",
                        size: "14",
                        weight: "medium"
                    }, "Confirm in Wallet"), m.createElement(eS, {
                        background: "standby",
                        borderRadius: "full",
                        height: "8",
                        marginLeft: "8",
                        width: "8"
                    }))))), f && r < (null == o ? void 0 : o.length) - 1 && m.createElement(eS, {
                        background: "generalBorderDim",
                        height: "1",
                        marginX: "8"
                    }))
                }) : m.createElement(eS, {
                    background: "generalBorder",
                    borderRadius: "menuButton",
                    paddingX: "18",
                    paddingY: "12"
                }, m.createElement(tb, {
                    color: "modalText",
                    size: "14",
                    weight: "medium"
                }, "Your wallet does not support switching networks from", " ", null != b ? b : "this app", ". Try switching networks from within your wallet instead.")), g && m.createElement(m.Fragment, null, m.createElement(eS, {
                    background: "generalBorderDim",
                    height: "1",
                    marginX: "8"
                }), m.createElement(t7, {
                    onClick: () => l(),
                    testId: "chain-option-disconnect"
                }, m.createElement(eS, {
                    color: "error",
                    fontFamily: "body",
                    fontSize: "16",
                    fontWeight: "bold"
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "row",
                    justifyContent: "space-between"
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "row",
                    gap: "4",
                    height: v
                }, m.createElement(eS, {
                    alignItems: "center",
                    color: "error",
                    height: v,
                    justifyContent: "center",
                    marginRight: "8"
                }, m.createElement(t4, {
                    size: Number(v)
                })), m.createElement("div", null, "Disconnect")))))))))) : null
            }

            function t9() {
                return "undefined" != typeof navigator && /Version\/([0-9._]+).*Safari/.test(navigator.userAgent)
            }

            function re() {
                var e;
                let r = navigator.userAgent.toLowerCase();
                return (null == (e = null == navigator ? void 0 : navigator.brave) ? void 0 : e.isBrave) ? "Brave" : r.indexOf("edge") > -1 || r.indexOf("edg/") > -1 ? "Edge" : r.indexOf("chrome") > -1 ? "Chrome" : r.indexOf("firefox") > -1 ? "Firefox" : "Browser"
            }
            t7.displayName = "MenuButton";
            var rt = ({
                    children: e,
                    href: r
                }) => m.createElement(eS, {
                    as: "a",
                    color: "accentColor",
                    href: r,
                    rel: "noreferrer",
                    target: "_blank"
                }, e),
                rr = ({
                    children: e
                }) => m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "12",
                    weight: "medium"
                }, e);

            function rn({
                compactModeEnabled: e = !1,
                getWallet: r
            }) {
                let {
                    disclaimer: n,
                    learnMoreUrl: i
                } = (0, m.useContext)(to);
                return m.createElement(m.Fragment, null, m.createElement(eS, {
                    alignItems: "center",
                    color: "accentColor",
                    display: "flex",
                    flexDirection: "column",
                    height: "full",
                    justifyContent: "space-around"
                }, m.createElement(eS, {
                    marginBottom: "10"
                }, !e && m.createElement(tb, {
                    color: "modalText",
                    size: "18",
                    weight: "heavy"
                }, "What is a Wallet?")), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "32",
                    justifyContent: "center",
                    marginY: "20",
                    style: {
                        maxWidth: 312
                    }
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "row",
                    gap: "16"
                }, m.createElement(eS, {
                    borderRadius: "6",
                    height: "48",
                    minWidth: "48",
                    width: "48"
                }, m.createElement(tm, null)), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "4"
                }, m.createElement(tb, {
                    color: "modalText",
                    size: "14",
                    weight: "bold"
                }, "A Home for your Digital Assets"), m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "14",
                    weight: "medium"
                }, "Wallets are used to send, receive, store, and display digital assets like Ethereum and NFTs."))), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "row",
                    gap: "16"
                }, m.createElement(eS, {
                    borderRadius: "6",
                    height: "48",
                    minWidth: "48",
                    width: "48"
                }, m.createElement(ty, null)), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "4"
                }, m.createElement(tb, {
                    color: "modalText",
                    size: "14",
                    weight: "bold"
                }, "A New Way to Log In"), m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "14",
                    weight: "medium"
                }, "Instead of creating new accounts and passwords on every website, just connect your wallet.")))), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "12",
                    justifyContent: "center",
                    margin: "10"
                }, m.createElement(tx, {
                    label: "Get a Wallet",
                    onClick: r
                }), m.createElement(eS, {
                    as: "a",
                    className: eg({
                        active: "shrink",
                        hover: "grow"
                    }),
                    display: "block",
                    href: i,
                    paddingX: "12",
                    paddingY: "4",
                    rel: "noreferrer",
                    style: {
                        willChange: "transform"
                    },
                    target: "_blank",
                    transition: "default"
                }, m.createElement(tb, {
                    color: "accentColor",
                    size: "14",
                    weight: "bold"
                }, "Learn More"))), n && !e && m.createElement(eS, {
                    marginBottom: "8",
                    marginTop: "12",
                    textAlign: "center"
                }, m.createElement(n, {
                    Link: rt,
                    Text: rr
                }))))
            }
            var ri = () => m.createElement("svg", {
                    fill: "none",
                    height: "17",
                    viewBox: "0 0 11 17",
                    width: "11",
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M0.99707 8.6543C0.99707 9.08496 1.15527 9.44531 1.51562 9.79688L8.16016 16.3096C8.43262 16.5732 8.74902 16.7051 9.13574 16.7051C9.90918 16.7051 10.5508 16.0811 10.5508 15.3076C10.5508 14.9121 10.3838 14.5605 10.0938 14.2705L4.30176 8.64551L10.0938 3.0293C10.3838 2.74805 10.5508 2.3877 10.5508 2.00098C10.5508 1.23633 9.90918 0.603516 9.13574 0.603516C8.74902 0.603516 8.43262 0.735352 8.16016 0.999023L1.51562 7.51172C1.15527 7.85449 1.00586 8.21484 0.99707 8.6543Z",
                    fill: "currentColor"
                })),
                ro = () => m.createElement("svg", {
                    fill: "none",
                    height: "12",
                    viewBox: "0 0 8 12",
                    width: "8",
                    xmlns: "http://www.w3.org/2000/svg"
                }, m.createElement("path", {
                    d: "M3.64258 7.99609C4.19336 7.99609 4.5625 7.73828 4.68555 7.24609C4.69141 7.21094 4.70312 7.16406 4.70898 7.13477C4.80859 6.60742 5.05469 6.35547 6.04492 5.76367C7.14648 5.10156 7.67969 4.3457 7.67969 3.24414C7.67969 1.39844 6.17383 0.255859 3.95898 0.255859C2.32422 0.255859 1.05859 0.894531 0.548828 1.86719C0.396484 2.14844 0.320312 2.44727 0.320312 2.74023C0.314453 3.37305 0.742188 3.79492 1.42188 3.79492C1.91406 3.79492 2.33594 3.54883 2.53516 3.11523C2.78711 2.47656 3.23242 2.21289 3.83594 2.21289C4.55664 2.21289 5.10742 2.65234 5.10742 3.29102C5.10742 3.9707 4.7793 4.29883 3.81836 4.87891C3.02148 5.36523 2.50586 5.92773 2.50586 6.76562V6.90039C2.50586 7.55664 2.96289 7.99609 3.64258 7.99609ZM3.67188 11.4473C4.42773 11.4473 5.04297 10.8672 5.04297 10.1406C5.04297 9.41406 4.42773 8.83984 3.67188 8.83984C2.91602 8.83984 2.30664 9.41406 2.30664 10.1406C2.30664 10.8672 2.91602 11.4473 3.67188 11.4473Z",
                    fill: "currentColor"
                })),
                ra = ({
                    "aria-label": e = "Info",
                    onClick: r
                }) => {
                    let n = eC();
                    return m.createElement(eS, {
                        alignItems: "center",
                        "aria-label": e,
                        as: "button",
                        background: "closeButtonBackground",
                        borderColor: "actionButtonBorder",
                        borderRadius: "full",
                        borderStyle: "solid",
                        borderWidth: n ? "0" : "1",
                        className: eg({
                            active: "shrinkSm",
                            hover: "growLg"
                        }),
                        color: "closeButton",
                        display: "flex",
                        height: n ? "30" : "28",
                        justifyContent: "center",
                        onClick: r,
                        style: {
                            willChange: "transform"
                        },
                        transition: "default",
                        type: "button",
                        width: n ? "30" : "28"
                    }, m.createElement(ro, null))
                },
                rs = e => {
                    let r = (0, m.useRef)(null),
                        n = (0, m.useContext)(ta),
                        i = eR(e);
                    return (0, m.useEffect)(() => {
                        if (n && r.current && i) return function(e, r) {
                            let n;
                            ru++;
                            let i = [15, 20, 25, 35, 45],
                                o = [],
                                a = !1,
                                s = 0,
                                l = 0,
                                u = rl();
                            ! function e() {
                                a && o.length < 35 && function() {
                                    let e = i[Math.floor(Math.random() * i.length)],
                                        n = 360 * Math.random(),
                                        a = l - e / 2,
                                        c = s - e / 2,
                                        d = document.createElement("div");
                                    d.innerHTML = `<img src="${r}" width="${e}" height="${e}" style="border-radius: 25%">`, d.setAttribute("style", `position:absolute;will-change:transform;top:${a}px;left:${c}px;transform:rotate(${n}deg)`), u.appendChild(d), o.push({
                                        direction: .5 >= Math.random() ? -1 : 1,
                                        element: d,
                                        left: c,
                                        size: e,
                                        speedHorz: 10 * Math.random(),
                                        speedUp: 25 * Math.random(),
                                        spinSpeed: 35 * Math.random() * (.5 >= Math.random() ? -1 : 1),
                                        spinVal: n,
                                        top: a
                                    })
                                }(), o.forEach(e => {
                                    e.left = e.left - e.speedHorz * e.direction, e.top = e.top - e.speedUp, e.speedUp = Math.min(e.size, e.speedUp - 1), e.spinVal = e.spinVal + e.spinSpeed, e.top >= Math.max(window.innerHeight, document.body.clientHeight) + e.size && (o = o.filter(r => r !== e), e.element.remove()), e.element.setAttribute("style", `position:absolute;will-change:transform;top:${e.top}px;left:${e.left}px;transform:rotate(${e.spinVal}deg)`)
                                }), n = requestAnimationFrame(e)
                            }();
                            let c = "ontouchstart" in window || navigator.msMaxTouchPoints,
                                d = c ? "touchstart" : "mousedown",
                                h = c ? "touchend" : "mouseup",
                                f = c ? "touchmove" : "mousemove",
                                p = e => {
                                    var r, n;
                                    "touches" in e ? (s = null == (r = e.touches) ? void 0 : r[0].clientX, l = null == (n = e.touches) ? void 0 : n[0].clientY) : (s = e.clientX, l = e.clientY)
                                },
                                m = e => {
                                    p(e), a = !0
                                },
                                g = () => {
                                    a = !1
                                };
                            return e.addEventListener(f, p, {
                                passive: !1
                            }), e.addEventListener(d, m), e.addEventListener(h, g), e.addEventListener("mouseleave", g), () => {
                                e.removeEventListener(f, p), e.removeEventListener(d, m), e.removeEventListener(h, g), e.removeEventListener("mouseleave", g);
                                let r = setInterval(() => {
                                    n && 0 === o.length && (cancelAnimationFrame(n), clearInterval(r), 0 == --ru && u.remove())
                                }, 500)
                            }
                        }(r.current, i)
                    }, [n, i]), r
                },
                rl = () => {
                    let e = "_rk_coolMode",
                        r = document.getElementById(e);
                    if (r) return r;
                    let n = document.createElement("div");
                    return n.setAttribute("id", e), n.setAttribute("style", "overflow:hidden;position:fixed;height:100%;top:0;left:0;right:0;bottom:0;pointer-events:none;z-index:2147483647"), document.body.appendChild(n), n
                },
                ru = 0,
                rc = ({
                    as: e = "button",
                    currentlySelected: r = !1,
                    iconBackground: n,
                    iconUrl: i,
                    name: o,
                    onClick: a,
                    ready: s,
                    recent: l,
                    testId: u,
                    ...c
                }) => {
                    let d = rs(i),
                        [h, f] = (0, m.useState)(!1);
                    return m.createElement(eS, {
                        display: "flex",
                        flexDirection: "column",
                        onMouseEnter: () => f(!0),
                        onMouseLeave: () => f(!1),
                        ref: d
                    }, m.createElement(eS, {
                        as: e,
                        borderRadius: "menuButton",
                        borderStyle: "solid",
                        borderWidth: "1",
                        className: r ? void 0 : ["g5kl0l0", eg({
                            active: "shrink"
                        })],
                        disabled: r,
                        onClick: a,
                        padding: "5",
                        style: {
                            willChange: "transform"
                        },
                        testId: u,
                        transition: "default",
                        width: "full",
                        ...r ? {
                            background: "accentColor",
                            borderColor: "selectedOptionBorder",
                            boxShadow: "selectedWallet"
                        } : {
                            background: {
                                hover: "menuItemBackground"
                            }
                        },
                        ...c
                    }, m.createElement(eS, {
                        color: r ? "accentColorForeground" : "modalText",
                        disabled: !s,
                        fontFamily: "body",
                        fontSize: "16",
                        fontWeight: "bold",
                        transition: "default"
                    }, m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "row",
                        gap: "12"
                    }, m.createElement(eB, {
                        background: n,
                        ...h ? {} : {
                            borderColor: "actionButtonBorder"
                        },
                        borderRadius: "6",
                        height: "28",
                        src: i,
                        width: "28"
                    }), m.createElement(eS, null, m.createElement(eS, {
                        style: {
                            marginTop: l ? -2 : void 0
                        }
                    }, o), l && m.createElement(tb, {
                        color: r ? "accentColorForeground" : "accentColor",
                        size: "12",
                        style: {
                            lineHeight: 1,
                            marginTop: -1
                        },
                        weight: "medium"
                    }, "Recent"))))))
                };
            rc.displayName = "ModalSelection";
            var rd = (e, r = 1) => {
                    let n = e.replace("#", "");
                    3 === n.length && (n = `${n[0]}${n[0]}${n[1]}${n[1]}${n[2]}${n[2]}`);
                    let i = parseInt(n.substring(0, 2), 16),
                        o = parseInt(n.substring(2, 4), 16),
                        a = parseInt(n.substring(4, 6), 16);
                    return r > 1 && r <= 100 && (r /= 100), `rgba(${i},${o},${a},${r})`
                },
                rh = e => e ? [rd(e, .2), rd(e, .14), rd(e, .1)] : null,
                rf = e => /^#([0-9a-f]{3}){1,2}$/i.test(e),
                rp = async () => (await n.e(331).then(n.bind(n, 31331))).default,
                rm = () => eT(rp),
                rg = () => m.createElement(eB, {
                    background: "#e3a5e8",
                    borderColor: "generalBorder",
                    borderRadius: "10",
                    height: "48",
                    src: rp,
                    width: "48"
                }),
                rv = async () => (await n.e(102).then(n.bind(n, 21102))).default,
                ry = () => eT(rv),
                rb = () => m.createElement(eB, {
                    background: "#515a70",
                    borderColor: "generalBorder",
                    borderRadius: "10",
                    height: "48",
                    src: rv,
                    width: "48"
                }),
                rw = async () => (await n.e(370).then(n.bind(n, 16370))).default,
                rx = () => eT(rw),
                rE = () => m.createElement(eB, {
                    background: "#515a70",
                    borderColor: "generalBorder",
                    borderRadius: "10",
                    height: "48",
                    src: rw,
                    width: "48"
                }),
                rC = (e, r) => {
                    let n = Array.prototype.slice.call(eu.create(e, {
                            errorCorrectionLevel: r
                        }).modules.data, 0),
                        i = Math.sqrt(n.length);
                    return n.reduce((e, r, n) => (n % i == 0 ? e.push([r]) : e[e.length - 1].push(r)) && e, [])
                };

            function rA({
                ecl: e = "M",
                logoBackground: r,
                logoMargin: n = 10,
                logoSize: i = 50,
                logoUrl: o,
                size: a = 200,
                uri: s
            }) {
                let l = a - 2 * parseInt("20", 10),
                    u = (0, m.useMemo)(() => {
                        let r = [],
                            n = rC(s, e),
                            o = l / n.length;
                        [{
                            x: 0,
                            y: 0
                        }, {
                            x: 1,
                            y: 0
                        }, {
                            x: 0,
                            y: 1
                        }].forEach(({
                            x: e,
                            y: i
                        }) => {
                            let a = (n.length - 7) * o * e,
                                s = (n.length - 7) * o * i;
                            for (let l = 0; l < 3; l++) r.push(m.createElement("rect", {
                                fill: l % 2 != 0 ? "white" : "black",
                                height: o * (7 - 2 * l),
                                key: `${l}-${e}-${i}`,
                                rx: -((l - 2) * 5) + (0 === l ? 2 : 0),
                                ry: -((l - 2) * 5) + (0 === l ? 2 : 0),
                                width: o * (7 - 2 * l),
                                x: a + o * l,
                                y: s + o * l
                            }))
                        });
                        let a = Math.floor((i + 25) / o),
                            u = n.length / 2 - a / 2,
                            c = n.length / 2 + a / 2 - 1;
                        return n.forEach((e, i) => {
                            e.forEach((e, a) => {
                                !n[i][a] || i < 7 && a < 7 || i > n.length - 8 && a < 7 || i < 7 && a > n.length - 8 || i > u && i < c && a > u && a < c || r.push(m.createElement("circle", {
                                    cx: i * o + o / 2,
                                    cy: a * o + o / 2,
                                    fill: "black",
                                    key: `circle-${i}-${a}`,
                                    r: o / 3
                                }))
                            })
                        }), r
                    }, [e, i, l, s]),
                    c = i + 2 * n;
                return m.createElement(eS, {
                    borderColor: "generalBorder",
                    borderRadius: "menuButton",
                    borderStyle: "solid",
                    borderWidth: "1",
                    className: "_1vwt0cg0",
                    padding: "20",
                    width: "max"
                }, m.createElement(eS, {
                    style: {
                        height: l,
                        userSelect: "none",
                        width: l
                    },
                    userSelect: "none"
                }, m.createElement(eS, {
                    display: "flex",
                    justifyContent: "center",
                    position: "relative",
                    style: {
                        height: 0,
                        top: l / 2 - i / 2,
                        width: l
                    },
                    width: "full"
                }, m.createElement(eB, {
                    background: r,
                    borderColor: {
                        custom: "rgba(0, 0, 0, 0.06)"
                    },
                    borderRadius: "13",
                    height: i,
                    src: o,
                    width: i
                })), m.createElement("svg", {
                    height: l,
                    style: {
                        all: "revert"
                    },
                    width: l
                }, m.createElement("defs", null, m.createElement("clipPath", {
                    id: "clip-wrapper"
                }, m.createElement("rect", {
                    height: c,
                    width: c
                })), m.createElement("clipPath", {
                    id: "clip-logo"
                }, m.createElement("rect", {
                    height: i,
                    width: i
                }))), m.createElement("rect", {
                    fill: "transparent",
                    height: l,
                    width: l
                }), u)))
            }
            var rk = async () => {
                    let e = re();
                    switch (e) {
                        case "Chrome":
                            return (await n.e(96).then(n.bind(n, 47096))).default;
                        case "Brave":
                            return (await n.e(146).then(n.bind(n, 49146))).default;
                        case "Edge":
                            return (await n.e(33).then(n.bind(n, 23033))).default;
                        case "Firefox":
                            return (await n.e(754).then(n.bind(n, 8754))).default;
                        default:
                            return (await n.e(61).then(n.bind(n, 18061))).default
                    }
                },
                rS = () => eT(rk);

            function r_({
                getWalletDownload: e
            }) {
                let r = th(),
                    n = r.splice(0, 5);
                return m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    height: "full",
                    marginTop: "18",
                    width: "full"
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "28",
                    height: "full",
                    width: "full"
                }, null == n ? void 0 : n.filter(e => {
                    var r, n;
                    return (null == (r = e.downloadUrls) ? void 0 : r.browserExtension) || e.qrCode && (null == (n = e.downloadUrls) ? void 0 : n.qrCode)
                }).map(r => {
                    let {
                        downloadUrls: n,
                        iconBackground: i,
                        iconUrl: o,
                        id: a,
                        name: s,
                        qrCode: l
                    } = r, u = (null == n ? void 0 : n.qrCode) && l, c = (null == n ? void 0 : n.qrCode) && (null == n ? void 0 : n.browserExtension);
                    return m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        gap: "16",
                        justifyContent: "space-between",
                        key: r.id,
                        width: "full"
                    }, m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "row",
                        gap: "16"
                    }, m.createElement(eB, {
                        background: i,
                        borderColor: "actionButtonBorder",
                        borderRadius: "10",
                        height: "48",
                        src: o,
                        width: "48"
                    }), m.createElement(eS, {
                        display: "flex",
                        flexDirection: "column",
                        gap: "2"
                    }, m.createElement(tb, {
                        color: "modalText",
                        size: "14",
                        weight: "bold"
                    }, s), m.createElement(tb, {
                        color: "modalTextSecondary",
                        size: "14",
                        weight: "medium"
                    }, c ? "Mobile Wallet and Extension" : u ? "Mobile Wallet" : (null == n ? void 0 : n.browserExtension) ? "Browser Extension" : null))), m.createElement(eS, {
                        display: "flex",
                        flexDirection: "column",
                        gap: "4"
                    }, m.createElement(tx, {
                        label: "GET",
                        onClick: () => e(a),
                        type: "secondary"
                    })))
                })), m.createElement(eS, {
                    alignItems: "center",
                    borderRadius: "10",
                    display: "flex",
                    flexDirection: "column",
                    gap: "8",
                    justifyContent: "space-between",
                    marginBottom: "4",
                    paddingY: "8",
                    style: {
                        maxWidth: 275,
                        textAlign: "center"
                    }
                }, m.createElement(tb, {
                    color: "modalText",
                    size: "14",
                    weight: "bold"
                }, "Not what you’re looking for?"), m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "14",
                    weight: "medium"
                }, "Select a wallet on the left to get started with a different wallet provider.")))
            }

            function rP({
                changeWalletStep: e,
                compactModeEnabled: r,
                connectionError: n,
                qrCodeUri: i,
                reconnect: o,
                wallet: a
            }) {
                var s;
                let {
                    downloadUrls: l,
                    iconBackground: u,
                    iconUrl: c,
                    name: d,
                    qrCode: h,
                    ready: f,
                    showWalletConnectModal: p
                } = a, g = null == (s = a.desktop) ? void 0 : s.getUri, v = t9(), y = (null == l ? void 0 : l.qrCode) && (null == l ? void 0 : l.browserExtension), b = h && i, w = p ? {
                    description: `Need the ${r?"":"official"} WalletConnect modal?`,
                    label: "OPEN",
                    onClick: p
                } : b ? {
                    description: `Don\u2019t have ${d}?`,
                    label: "GET",
                    onClick: () => e(y ? "DOWNLOAD_OPTIONS" : "DOWNLOAD")
                } : null, {
                    width: x
                } = tn();
                return (0, m.useEffect)(() => {
                    rS()
                }, []), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    height: "full",
                    width: "full"
                }, b ? m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    height: "full",
                    justifyContent: "center"
                }, m.createElement(rA, {
                    logoBackground: u,
                    logoSize: r ? 60 : 72,
                    logoUrl: c,
                    size: r ? 318 : x && x < 768 ? Math.max(280, Math.min(x - 308, 382)) : 382,
                    uri: i
                })) : m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    justifyContent: "center",
                    style: {
                        flexGrow: 1
                    }
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "8"
                }, m.createElement(eS, {
                    borderRadius: "10",
                    height: "44",
                    overflow: "hidden"
                }, m.createElement(eB, {
                    height: "44",
                    src: c,
                    width: "44"
                })), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "4",
                    paddingX: "32",
                    style: {
                        textAlign: "center"
                    }
                }, m.createElement(tb, {
                    color: "modalText",
                    size: "18",
                    weight: "bold"
                }, f ? `Opening ${d}...` : (null == l ? void 0 : l.browserExtension) ? `${d} is not installed` : `${d} is not available`), !f && (null == l ? void 0 : l.browserExtension) ? m.createElement(eS, {
                    paddingTop: "20"
                }, m.createElement(tx, {
                    href: l.browserExtension,
                    label: "INSTALL",
                    type: "secondary"
                })) : null, f && !b && m.createElement(m.Fragment, null, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    justifyContent: "center"
                }, m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "14",
                    textAlign: "center",
                    weight: "medium"
                }, "Confirm connection in the extension")), m.createElement(eS, {
                    alignItems: "center",
                    color: "modalText",
                    display: "flex",
                    flexDirection: "row",
                    height: "32",
                    marginTop: "8"
                }, n ? m.createElement(tx, {
                    label: "RETRY",
                    onClick: g ? async () => {
                        let e = await g();
                        window.open(e, v ? "_blank" : "_self")
                    } : () => {
                        o(a)
                    }
                }) : m.createElement(eS, {
                    color: "modalTextSecondary"
                }, m.createElement(eM, null))))))), m.createElement(eS, {
                    alignItems: "center",
                    borderRadius: "10",
                    display: "flex",
                    flexDirection: "row",
                    gap: "8",
                    height: "28",
                    justifyContent: "space-between",
                    marginTop: "12"
                }, f && w && m.createElement(m.Fragment, null, m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "14",
                    weight: "medium"
                }, w.description), m.createElement(tx, {
                    label: w.label,
                    onClick: w.onClick,
                    type: "secondary"
                }))))
            }
            var rj = ({
                actionLabel: e,
                description: r,
                iconAccent: n,
                iconBackground: i,
                iconUrl: o,
                isCompact: a,
                onAction: s,
                title: l,
                url: u,
                variant: c
            }) => {
                let d = "browser" === c,
                    h = !d && n && rh(n);
                return m.createElement(eS, {
                    alignItems: "center",
                    borderRadius: "13",
                    display: "flex",
                    justifyContent: "center",
                    overflow: "hidden",
                    paddingX: a ? "18" : "44",
                    position: "relative",
                    style: {
                        flex: 1,
                        isolation: "isolate"
                    },
                    width: "full"
                }, m.createElement(eS, {
                    borderColor: "actionButtonBorder",
                    borderRadius: "13",
                    borderStyle: "solid",
                    borderWidth: "1",
                    style: {
                        bottom: "0",
                        left: "0",
                        position: "absolute",
                        right: "0",
                        top: "0",
                        zIndex: 1
                    }
                }), d && m.createElement(eS, {
                    background: "downloadTopCardBackground",
                    height: "full",
                    position: "absolute",
                    style: {
                        zIndex: 0
                    },
                    width: "full"
                }, m.createElement(eS, {
                    display: "flex",
                    flexDirection: "row",
                    justifyContent: "space-between",
                    style: {
                        bottom: "0",
                        filter: "blur(20px)",
                        left: "0",
                        position: "absolute",
                        right: "0",
                        top: "0",
                        transform: "translate3d(0, 0, 0)"
                    }
                }, m.createElement(eS, {
                    style: {
                        filter: "blur(100px)",
                        marginLeft: -27,
                        marginTop: -20,
                        opacity: .6,
                        transform: "translate3d(0, 0, 0)"
                    }
                }, m.createElement(eB, {
                    borderRadius: "full",
                    height: "200",
                    src: o,
                    width: "200"
                })), m.createElement(eS, {
                    style: {
                        filter: "blur(100px)",
                        marginRight: 0,
                        marginTop: 105,
                        opacity: .6,
                        overflow: "auto",
                        transform: "translate3d(0, 0, 0)"
                    }
                }, m.createElement(eB, {
                    borderRadius: "full",
                    height: "200",
                    src: o,
                    width: "200"
                })))), !d && h && m.createElement(eS, {
                    background: "downloadBottomCardBackground",
                    style: {
                        bottom: "0",
                        left: "0",
                        position: "absolute",
                        right: "0",
                        top: "0"
                    }
                }, m.createElement(eS, {
                    position: "absolute",
                    style: {
                        background: `radial-gradient(50% 50% at 50% 50%, ${h[0]} 0%, ${h[1]} 25%, rgba(0,0,0,0) 100%)`,
                        height: 564,
                        left: -215,
                        top: -197,
                        transform: "translate3d(0, 0, 0)",
                        width: 564
                    }
                }), m.createElement(eS, {
                    position: "absolute",
                    style: {
                        background: `radial-gradient(50% 50% at 50% 50%, ${h[2]} 0%, rgba(0, 0, 0, 0) 100%)`,
                        height: 564,
                        left: -1,
                        top: -76,
                        transform: "translate3d(0, 0, 0)",
                        width: 564
                    }
                })), m.createElement(eS, {
                    alignItems: "flex-start",
                    display: "flex",
                    flexDirection: "row",
                    gap: "24",
                    height: "max",
                    justifyContent: "center",
                    style: {
                        zIndex: 1
                    }
                }, m.createElement(eS, null, m.createElement(eB, {
                    height: "60",
                    src: o,
                    width: "60",
                    ...i ? {
                        background: i,
                        borderColor: "generalBorder",
                        borderRadius: "10"
                    } : null
                })), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "4",
                    style: {
                        flex: 1
                    },
                    width: "full"
                }, m.createElement(tb, {
                    color: "modalText",
                    size: "14",
                    weight: "bold"
                }, l), m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "14",
                    weight: "medium"
                }, r), m.createElement(eS, {
                    marginTop: "14",
                    width: "max"
                }, m.createElement(tx, {
                    href: u,
                    label: e,
                    onClick: s,
                    size: "medium"
                })))))
            };

            function rT({
                changeWalletStep: e,
                wallet: r
            }) {
                var n;
                let i = re(),
                    o = (0, m.useContext)(tl),
                    a = "compact" === o;
                return (0, m.useEffect)(() => {
                    rm(), rx(), ry()
                }, []), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "24",
                    height: "full",
                    marginBottom: "8",
                    marginTop: "4",
                    width: "full"
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "8",
                    height: "full",
                    justifyContent: "center",
                    width: "full"
                }, m.createElement(rj, {
                    actionLabel: `Add to ${i}`,
                    description: "Access your wallet right from your favorite web browser.",
                    iconUrl: rk,
                    isCompact: a,
                    onAction: () => e("INSTRUCTIONS_EXTENSION"),
                    title: `${r.name} for ${i}`,
                    url: null == (n = null == r ? void 0 : r.downloadUrls) ? void 0 : n.browserExtension,
                    variant: "browser"
                }), m.createElement(rj, {
                    actionLabel: "Get the app",
                    description: "Use the mobile wallet to explore the world of Ethereum.",
                    iconAccent: r.iconAccent,
                    iconBackground: r.iconBackground,
                    iconUrl: r.iconUrl,
                    isCompact: a,
                    onAction: () => {
                        e("DOWNLOAD")
                    },
                    title: `${r.name} for Mobile`,
                    variant: "app"
                })))
            }

            function rR({
                changeWalletStep: e,
                wallet: r
            }) {
                let {
                    downloadUrls: n,
                    qrCode: i
                } = r;
                return (0, m.useEffect)(() => {
                    rm(), rx()
                }, []), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "24",
                    height: "full",
                    width: "full"
                }, m.createElement(eS, {
                    style: {
                        maxWidth: 220,
                        textAlign: "center"
                    }
                }, m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "14",
                    weight: "semibold"
                }, "Scan with your phone to download on iOS or Android")), m.createElement(eS, {
                    height: "full"
                }, (null == n ? void 0 : n.qrCode) ? m.createElement(rA, {
                    logoSize: 0,
                    size: 268,
                    uri: n.qrCode
                }) : null), m.createElement(eS, {
                    alignItems: "center",
                    borderRadius: "10",
                    display: "flex",
                    flexDirection: "row",
                    gap: "8",
                    height: "34",
                    justifyContent: "space-between",
                    marginBottom: "12",
                    paddingY: "8"
                }, m.createElement(tx, {
                    label: "Continue",
                    onClick: () => e((null == i ? void 0 : i.instructions) ? "INSTRUCTIONS_MOBILE" : "CONNECT")
                })))
            }
            var rB = {
                create: () => m.createElement(rg, null),
                install: e => m.createElement(eB, {
                    background: e.iconBackground,
                    borderColor: "generalBorder",
                    borderRadius: "10",
                    height: "48",
                    src: e.iconUrl,
                    width: "48"
                }),
                refresh: () => m.createElement(rb, null),
                scan: () => m.createElement(rE, null)
            };

            function rO({
                connectWallet: e,
                wallet: r
            }) {
                var n, i, o, a;
                return m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    height: "full",
                    width: "full"
                }, m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "28",
                    height: "full",
                    justifyContent: "center",
                    paddingY: "32",
                    style: {
                        maxWidth: 320
                    }
                }, null == (i = null == (n = null == r ? void 0 : r.qrCode) ? void 0 : n.instructions) ? void 0 : i.steps.map((e, n) => {
                    var i;
                    return m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "row",
                        gap: "16",
                        key: n
                    }, m.createElement(eS, {
                        borderRadius: "10",
                        height: "48",
                        minWidth: "48",
                        overflow: "hidden",
                        position: "relative",
                        width: "48"
                    }, null == (i = rB[e.step]) ? void 0 : i.call(rB, r)), m.createElement(eS, {
                        display: "flex",
                        flexDirection: "column",
                        gap: "4"
                    }, m.createElement(tb, {
                        color: "modalText",
                        size: "14",
                        weight: "bold"
                    }, e.title), m.createElement(tb, {
                        color: "modalTextSecondary",
                        size: "14",
                        weight: "medium"
                    }, e.description)))
                })), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "12",
                    justifyContent: "center",
                    marginBottom: "16"
                }, m.createElement(tx, {
                    label: "Connect",
                    onClick: () => e(r)
                }), m.createElement(eS, {
                    as: "a",
                    className: eg({
                        active: "shrink",
                        hover: "grow"
                    }),
                    display: "block",
                    href: null == (a = null == (o = null == r ? void 0 : r.qrCode) ? void 0 : o.instructions) ? void 0 : a.learnMoreUrl,
                    paddingX: "12",
                    paddingY: "4",
                    rel: "noreferrer",
                    style: {
                        willChange: "transform"
                    },
                    target: "_blank",
                    transition: "default"
                }, m.createElement(tb, {
                    color: "accentColor",
                    size: "14",
                    weight: "bold"
                }, "Learn More"))))
            }

            function rM({
                wallet: e
            }) {
                var r, n;
                return m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    height: "full",
                    width: "full"
                }, m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "28",
                    height: "full",
                    justifyContent: "center",
                    paddingY: "32",
                    style: {
                        maxWidth: 320
                    }
                }, null == (n = null == (r = null == e ? void 0 : e.extension) ? void 0 : r.instructions) ? void 0 : n.steps.map((r, n) => {
                    var i;
                    return m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "row",
                        gap: "16",
                        key: n
                    }, m.createElement(eS, {
                        borderRadius: "10",
                        height: "48",
                        minWidth: "48",
                        overflow: "hidden",
                        position: "relative",
                        width: "48"
                    }, null == (i = rB[r.step]) ? void 0 : i.call(rB, e)), m.createElement(eS, {
                        display: "flex",
                        flexDirection: "column",
                        gap: "4"
                    }, m.createElement(tb, {
                        color: "modalText",
                        size: "14",
                        weight: "bold"
                    }, r.title), m.createElement(tb, {
                        color: "modalTextSecondary",
                        size: "14",
                        weight: "medium"
                    }, r.description)))
                })), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "12",
                    justifyContent: "center",
                    marginBottom: "16"
                }, m.createElement(tx, {
                    label: "Refresh",
                    onClick: window.location.reload.bind(window.location)
                })))
            }

            function rI({
                onClose: e
            }) {
                var r, n, i;
                let o;
                let a = t9(),
                    [s, l] = (0, m.useState)(),
                    [u, c] = (0, m.useState)(),
                    [d, h] = (0, m.useState)(),
                    f = !!(null == u ? void 0 : u.qrCode) && d,
                    [p, g] = (0, m.useState)(!1),
                    v = (0, m.useContext)(tl),
                    y = v === ts.COMPACT,
                    {
                        disclaimer: b
                    } = (0, m.useContext)(to),
                    w = th().filter(e => {
                        var r;
                        return e.ready || (null == (r = e.downloadUrls) ? void 0 : r.browserExtension)
                    }).sort((e, r) => e.groupIndex - r.groupIndex),
                    x = function(e, r) {
                        let n = {};
                        return e.forEach(e => {
                            let i = r(e);
                            i && (n[i] || (n[i] = []), n[i].push(e))
                        }), n
                    }(w, e => e.groupName),
                    E = e => {
                        var r, n, i;
                        if (g(!1), e.ready) {
                            null == (n = null == (r = null == e ? void 0 : e.connect) ? void 0 : r.call(e)) || n.catch(() => {
                                g(!0)
                            });
                            let o = null == (i = e.desktop) ? void 0 : i.getUri;
                            o && setTimeout(async () => {
                                let e = await o();
                                window.open(e, a ? "_blank" : "_self")
                            }, 0)
                        }
                    },
                    C = e => {
                        var r;
                        if (E(e), l(e.id), e.ready) {
                            let n = !1;
                            null == (r = null == e ? void 0 : e.onConnecting) || r.call(e, async () => {
                                var r, i;
                                if (n) return;
                                n = !0;
                                let o = w.find(r => e.id === r.id),
                                    a = await (null == (r = null == o ? void 0 : o.qrCode) ? void 0 : r.getUri());
                                h(a), setTimeout(() => {
                                    c(o), S("CONNECT")
                                }, a ? 0 : 50);
                                let s = await (null == o ? void 0 : o.connector.getProvider()),
                                    l = null == (i = null == s ? void 0 : s.signer) ? void 0 : i.connection;
                                if ((null == l ? void 0 : l.on) && (null == l ? void 0 : l.off)) {
                                    let u = () => {
                                            d(), C(e)
                                        },
                                        d = () => {
                                            l.off("close", u), l.off("open", d)
                                        };
                                    l.on("close", u), l.on("open", d)
                                }
                            })
                        } else c(e), S("CONNECT")
                    },
                    A = e => {
                        var r, n;
                        l(e);
                        let i = w.find(r => e === r.id),
                            o = null == (r = null == i ? void 0 : i.downloadUrls) ? void 0 : r.qrCode,
                            a = null == (n = null == i ? void 0 : i.downloadUrls) ? void 0 : n.browserExtension;
                        c(i), o && a ? S("DOWNLOAD_OPTIONS") : o ? S("DOWNLOAD") : S("INSTRUCTIONS_EXTENSION")
                    },
                    k = () => {
                        l(void 0), c(void 0), h(void 0)
                    },
                    S = (e, r = !1) => {
                        r && "GET" === e && "GET" === _ ? k() : r || "GET" !== e ? r || "CONNECT" !== e || P("CONNECT") : P("GET"), T(e)
                    },
                    [_, P] = (0, m.useState)("NONE"),
                    [j, T] = (0, m.useState)("NONE"),
                    R = null,
                    B = null,
                    O = null;
                (0, m.useEffect)(() => {
                    g(!1)
                }, [j, u]);
                let M = !!((null == (r = null == u ? void 0 : u.downloadUrls) ? void 0 : r.browserExtension) && ((null == (n = null == u ? void 0 : u.downloadUrls) ? void 0 : n.android) || (null == (i = null == u ? void 0 : u.downloadUrls) ? void 0 : i.ios)));
                switch (j) {
                    case "NONE":
                        R = m.createElement(rn, {
                            getWallet: () => S("GET")
                        });
                        break;
                    case "LEARN_COMPACT":
                        R = m.createElement(rn, {
                            compactModeEnabled: y,
                            getWallet: () => S("GET")
                        }), B = "What is a Wallet?", O = "NONE";
                        break;
                    case "GET":
                        R = m.createElement(r_, {
                            getWalletDownload: A
                        }), B = "Get a Wallet", O = y ? "LEARN_COMPACT" : "NONE";
                        break;
                    case "CONNECT":
                        R = u && m.createElement(rP, {
                            changeWalletStep: S,
                            compactModeEnabled: y,
                            connectionError: p,
                            qrCodeUri: d,
                            reconnect: E,
                            wallet: u
                        }), B = f && `Scan with ${"WalletConnect"===u.name?"your phone":u.name}`, O = y ? "NONE" : null, o = y ? k : () => {};
                        break;
                    case "DOWNLOAD_OPTIONS":
                        R = u && m.createElement(rT, {
                            changeWalletStep: S,
                            wallet: u
                        }), B = u && `Get ${u.name}`, O = _;
                        break;
                    case "DOWNLOAD":
                        R = u && m.createElement(rR, {
                            changeWalletStep: S,
                            wallet: u
                        }), B = u && `Install ${u.name}`, O = M ? "DOWNLOAD_OPTIONS" : _;
                        break;
                    case "INSTRUCTIONS_MOBILE":
                        R = u && m.createElement(rO, {
                            connectWallet: C,
                            wallet: u
                        }), B = u && `Get started with ${y&&u.shortName||u.name}`, O = "DOWNLOAD";
                        break;
                    case "INSTRUCTIONS_EXTENSION":
                        R = u && m.createElement(rM, {
                            wallet: u
                        }), B = u && `Get started with ${y&&u.shortName||u.name}`, O = "DOWNLOAD_OPTIONS"
                }
                return m.createElement(eS, {
                    display: "flex",
                    flexDirection: "row",
                    style: {
                        maxHeight: y ? 468 : 504
                    }
                }, (!y || "NONE" === j) && m.createElement(eS, {
                    className: y ? "_1vwt0cg4" : "_1vwt0cg3",
                    display: "flex",
                    flexDirection: "column",
                    marginTop: "16"
                }, m.createElement(eS, {
                    display: "flex",
                    justifyContent: "space-between"
                }, y && b && m.createElement(eS, {
                    marginLeft: "16",
                    width: "28"
                }, m.createElement(ra, {
                    onClick: () => S("LEARN_COMPACT")
                })), y && !b && m.createElement(eS, {
                    marginLeft: "16",
                    width: "28"
                }), m.createElement(eS, {
                    marginLeft: y ? "0" : "6",
                    paddingBottom: "8",
                    paddingTop: "2",
                    paddingX: "18"
                }, m.createElement(tb, {
                    as: "h1",
                    color: "modalText",
                    id: "rk_connect_title",
                    size: "18",
                    weight: "heavy"
                }, "Connect a Wallet")), y && m.createElement(eS, {
                    marginRight: "16"
                }, m.createElement(tC, {
                    onClose: e
                }))), m.createElement(eS, {
                    className: "_1vwt0cg2 ju367v75 ju367v7q",
                    paddingBottom: "18"
                }, Object.entries(x).map(([e, r], n) => r.length > 0 && m.createElement(m.Fragment, {
                    key: n
                }, e ? m.createElement(eS, {
                    marginBottom: "8",
                    marginTop: "16",
                    marginX: "6"
                }, m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "14",
                    weight: "bold"
                }, e)) : null, m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    gap: "4"
                }, r.map(e => m.createElement(rc, {
                    currentlySelected: e.id === s,
                    iconBackground: e.iconBackground,
                    iconUrl: e.iconUrl,
                    key: e.id,
                    name: e.name,
                    onClick: () => C(e),
                    ready: e.ready,
                    recent: e.recent,
                    testId: `wallet-option-${e.id}`
                })))))), y && m.createElement(m.Fragment, null, m.createElement(eS, {
                    background: "generalBorder",
                    height: "1",
                    marginTop: "-1"
                }), b ? m.createElement(eS, {
                    paddingX: "24",
                    paddingY: "16",
                    textAlign: "center"
                }, m.createElement(b, {
                    Link: rt,
                    Text: rr
                })) : m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    justifyContent: "space-between",
                    paddingX: "24",
                    paddingY: "16"
                }, m.createElement(eS, {
                    paddingY: "4"
                }, m.createElement(tb, {
                    color: "modalTextSecondary",
                    size: "14",
                    weight: "medium"
                }, "New to Ethereum wallets?")), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "row",
                    gap: "4",
                    justifyContent: "center"
                }, m.createElement(eS, {
                    className: eg({
                        active: "shrink",
                        hover: "grow"
                    }),
                    cursor: "pointer",
                    onClick: () => S("LEARN_COMPACT"),
                    paddingY: "4",
                    style: {
                        willChange: "transform"
                    },
                    transition: "default"
                }, m.createElement(tb, {
                    color: "accentColor",
                    size: "14",
                    weight: "bold"
                }, "Learn More")))))), (!y || "NONE" !== j) && m.createElement(m.Fragment, null, !y && m.createElement(eS, {
                    background: "generalBorder",
                    minWidth: "1",
                    width: "1"
                }), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    margin: "16",
                    style: {
                        flexGrow: 1
                    }
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    justifyContent: "space-between",
                    marginBottom: "12"
                }, m.createElement(eS, {
                    width: "28"
                }, O && m.createElement(eS, {
                    as: "button",
                    className: eg({
                        active: "shrinkSm",
                        hover: "growLg"
                    }),
                    color: "accentColor",
                    onClick: () => {
                        O && S(O, !0), null == o || o()
                    },
                    paddingX: "8",
                    paddingY: "4",
                    style: {
                        boxSizing: "content-box",
                        height: 17,
                        willChange: "transform"
                    },
                    transition: "default",
                    type: "button"
                }, m.createElement(ri, null))), m.createElement(eS, {
                    display: "flex",
                    justifyContent: "center",
                    style: {
                        flexGrow: 1
                    }
                }, B && m.createElement(tb, {
                    color: "modalText",
                    size: "18",
                    textAlign: "center",
                    weight: "heavy"
                }, B)), m.createElement(tC, {
                    onClose: e
                })), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    style: {
                        minHeight: y ? 396 : 432
                    }
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "6",
                    height: "full",
                    justifyContent: "center",
                    marginX: "8"
                }, R)))))
            }

            function rN({
                wallet: e
            }) {
                let {
                    connect: r,
                    connector: n,
                    iconBackground: i,
                    iconUrl: o,
                    id: a,
                    mobile: s,
                    name: l,
                    onConnecting: u,
                    ready: c,
                    shortName: d
                } = e, h = null == s ? void 0 : s.getUri, f = rs(o);
                return m.createElement(eS, {
                    as: "button",
                    color: c ? "modalText" : "modalTextSecondary",
                    disabled: !c,
                    fontFamily: "body",
                    key: a,
                    onClick: (0, m.useCallback)(async () => {
                        null == r || r();
                        let e = !1;
                        null == u || u(async () => {
                            if (!e && (e = !0, h)) {
                                let r = await h();
                                if ("walletConnect" === n.id && function({
                                        mobileUri: e,
                                        name: r
                                    }) {
                                        localStorage.setItem(tS, JSON.stringify({
                                            href: e.split("?")[0],
                                            name: r
                                        }))
                                    }({
                                        mobileUri: r,
                                        name: l
                                    }), r.startsWith("http")) {
                                    let i = document.createElement("a");
                                    i.href = r, i.target = "_blank", i.rel = "noreferrer noopener", i.click()
                                } else window.location.href = r
                            }
                        })
                    }, [n, r, h, u, l]),
                    ref: f,
                    style: {
                        overflow: "visible",
                        textAlign: "center"
                    },
                    testId: `wallet-option-${a}`,
                    type: "button",
                    width: "full"
                }, m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    justifyContent: "center"
                }, m.createElement(eS, {
                    paddingBottom: "8",
                    paddingTop: "10"
                }, m.createElement(eB, {
                    background: i,
                    borderRadius: "13",
                    boxShadow: "walletLogo",
                    height: "60",
                    src: o,
                    width: "60"
                })), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    textAlign: "center"
                }, m.createElement(tb, {
                    as: "h2",
                    color: e.ready ? "modalText" : "modalTextSecondary",
                    size: "13",
                    weight: "medium"
                }, m.createElement(eS, {
                    as: "span",
                    position: "relative"
                }, null != d ? d : l, !e.ready && " (unsupported)")), e.recent && m.createElement(tb, {
                    color: "accentColor",
                    size: "12",
                    weight: "medium"
                }, "Recent"))))
            }

            function rF({
                onClose: e
            }) {
                var r;
                let n = th(),
                    {
                        disclaimer: i,
                        learnMoreUrl: o
                    } = (0, m.useContext)(to),
                    a = null,
                    s = null,
                    l = !1,
                    u = null,
                    [c, d] = (0, m.useState)("CONNECT"),
                    h = eE();
                switch (c) {
                    case "CONNECT":
                        a = "Connect a Wallet", l = !0, s = m.createElement(eS, null, m.createElement(eS, {
                            background: "profileForeground",
                            className: "_1am14410",
                            display: "flex",
                            paddingBottom: "20",
                            paddingTop: "6"
                        }, m.createElement(eS, {
                            display: "flex",
                            style: {
                                margin: "0 auto"
                            }
                        }, n.filter(e => e.ready).map(e => m.createElement(eS, {
                            key: e.id,
                            paddingX: "20"
                        }, m.createElement(eS, {
                            width: "60"
                        }, m.createElement(rN, {
                            wallet: e
                        })))))), m.createElement(eS, {
                            background: "generalBorder",
                            height: "1",
                            marginBottom: "32",
                            marginTop: "-1"
                        }), m.createElement(eS, {
                            alignItems: "center",
                            display: "flex",
                            flexDirection: "column",
                            gap: "32",
                            paddingX: "32",
                            style: {
                                textAlign: "center"
                            }
                        }, m.createElement(eS, {
                            display: "flex",
                            flexDirection: "column",
                            gap: "8",
                            textAlign: "center"
                        }, m.createElement(tb, {
                            color: "modalText",
                            size: "16",
                            weight: "bold"
                        }, "What is a Wallet?"), m.createElement(tb, {
                            color: "modalTextSecondary",
                            size: "16"
                        }, "A wallet is used to send, receive, store, and display digital assets. It’s also a new way to log in, without needing to create new accounts and passwords on\xa0every\xa0website."))), m.createElement(eS, {
                            paddingTop: "32",
                            paddingX: "20"
                        }, m.createElement(eS, {
                            display: "flex",
                            gap: "14",
                            justifyContent: "center"
                        }, m.createElement(tx, {
                            label: "Get a Wallet",
                            onClick: () => d("GET"),
                            size: "large",
                            type: "secondary"
                        }), m.createElement(tx, {
                            href: o,
                            label: "Learn More",
                            size: "large",
                            type: "secondary"
                        }))), i && m.createElement(eS, {
                            marginTop: "28",
                            marginX: "32",
                            textAlign: "center"
                        }, m.createElement(i, {
                            Link: rt,
                            Text: rr
                        })));
                        break;
                    case "GET":
                        {
                            a = "Get a Wallet",
                            u = "CONNECT";
                            let f = null == (r = null == n ? void 0 : n.filter(e => {
                                var r, n;
                                return (null == (r = e.downloadUrls) ? void 0 : r.ios) || (null == (n = e.downloadUrls) ? void 0 : n.android)
                            })) ? void 0 : r.splice(0, 3);s = m.createElement(eS, null, m.createElement(eS, {
                                alignItems: "center",
                                display: "flex",
                                flexDirection: "column",
                                height: "full",
                                marginBottom: "36",
                                marginTop: "5",
                                paddingTop: "12",
                                width: "full"
                            }, f.map((e, r) => {
                                let {
                                    downloadUrls: n,
                                    iconBackground: i,
                                    iconUrl: o,
                                    name: a
                                } = e;
                                return (null == n ? void 0 : n.ios) || (null == n ? void 0 : n.android) ? m.createElement(eS, {
                                    display: "flex",
                                    gap: "16",
                                    key: e.id,
                                    paddingX: "20",
                                    width: "full"
                                }, m.createElement(eS, {
                                    style: {
                                        minHeight: 48,
                                        minWidth: 48
                                    }
                                }, m.createElement(eB, {
                                    background: i,
                                    borderColor: "generalBorder",
                                    borderRadius: "10",
                                    height: "48",
                                    src: o,
                                    width: "48"
                                })), m.createElement(eS, {
                                    display: "flex",
                                    flexDirection: "column",
                                    width: "full"
                                }, m.createElement(eS, {
                                    alignItems: "center",
                                    display: "flex",
                                    height: "48"
                                }, m.createElement(eS, {
                                    width: "full"
                                }, m.createElement(tb, {
                                    color: "modalText",
                                    size: "18",
                                    weight: "bold"
                                }, a)), m.createElement(tx, {
                                    href: h ? null == n ? void 0 : n.ios : null == n ? void 0 : n.android,
                                    label: "GET",
                                    size: "small",
                                    type: "secondary"
                                })), r < f.length - 1 && m.createElement(eS, {
                                    background: "generalBorderDim",
                                    height: "1",
                                    marginY: "10",
                                    width: "full"
                                }))) : null
                            })), m.createElement(eS, {
                                style: {
                                    marginBottom: "42px"
                                }
                            }), m.createElement(eS, {
                                alignItems: "center",
                                display: "flex",
                                flexDirection: "column",
                                gap: "36",
                                paddingX: "36",
                                style: {
                                    textAlign: "center"
                                }
                            }, m.createElement(eS, {
                                display: "flex",
                                flexDirection: "column",
                                gap: "12",
                                textAlign: "center"
                            }, m.createElement(tb, {
                                color: "modalText",
                                size: "16",
                                weight: "bold"
                            }, "Not what you’re looking for?"), m.createElement(tb, {
                                color: "modalTextSecondary",
                                size: "16"
                            }, "Select a wallet on the main screen to get started with a different wallet provider."))))
                        }
                }
                return m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column",
                    paddingBottom: "36"
                }, m.createElement(eS, {
                    background: l ? "profileForeground" : "modalBackground",
                    display: "flex",
                    flexDirection: "column",
                    paddingBottom: "4",
                    paddingTop: "14"
                }, m.createElement(eS, {
                    display: "flex",
                    justifyContent: "center",
                    paddingBottom: "6",
                    paddingX: "20",
                    position: "relative"
                }, u && m.createElement(eS, {
                    display: "flex",
                    position: "absolute",
                    style: {
                        left: 0,
                        marginBottom: -20,
                        marginTop: -20
                    }
                }, m.createElement(eS, {
                    alignItems: "center",
                    as: "button",
                    className: eg({
                        active: "shrinkSm",
                        hover: "growLg"
                    }),
                    color: "accentColor",
                    display: "flex",
                    marginLeft: "4",
                    marginTop: "20",
                    onClick: () => d(u),
                    padding: "16",
                    style: {
                        height: 17,
                        willChange: "transform"
                    },
                    transition: "default",
                    type: "button"
                }, m.createElement(ri, null))), m.createElement(eS, {
                    marginTop: "4",
                    textAlign: "center",
                    width: "full"
                }, m.createElement(tb, {
                    as: "h1",
                    color: "modalText",
                    id: "rk_connect_title",
                    size: "20",
                    weight: "bold"
                }, a)), m.createElement(eS, {
                    alignItems: "center",
                    display: "flex",
                    height: "32",
                    paddingRight: "14",
                    position: "absolute",
                    right: "0"
                }, m.createElement(eS, {
                    style: {
                        marginBottom: -20,
                        marginTop: -20
                    }
                }, m.createElement(tC, {
                    onClose: e
                }))))), m.createElement(eS, {
                    display: "flex",
                    flexDirection: "column"
                }, s))
            }

            function rL({
                onClose: e
            }) {
                return eC() ? m.createElement(rF, {
                    onClose: e
                }) : m.createElement(rI, {
                    onClose: e
                })
            }

            function rD({
                onClose: e,
                open: r
            }) {
                let n = "rk_connect_title",
                    i = eb();
                return "disconnected" === i ? m.createElement(tL, {
                    onClose: e,
                    open: r,
                    titleId: n
                }, m.createElement(tU, {
                    bottomSheetOnMobile: !0,
                    padding: "0",
                    wide: !0
                }, m.createElement(rL, {
                    onClose: e
                }))) : "unauthenticated" === i ? m.createElement(tL, {
                    onClose: e,
                    open: r,
                    titleId: n
                }, m.createElement(tU, {
                    bottomSheetOnMobile: !0,
                    padding: "0"
                }, m.createElement(tk, {
                    onClose: e
                }))) : null
            }

            function rz() {
                let [e, r] = (0, m.useState)(!1);
                return {
                    closeModal: (0, m.useCallback)(() => r(!1), []),
                    isModalOpen: e,
                    openModal: (0, m.useCallback)(() => r(!0), [])
                }
            }
            var rU = (0, m.createContext)({
                accountModalOpen: !1,
                chainModalOpen: !1,
                connectModalOpen: !1
            });

            function r$({
                children: e
            }) {
                let {
                    closeModal: r,
                    isModalOpen: n,
                    openModal: i
                } = rz(), {
                    closeModal: o,
                    isModalOpen: a,
                    openModal: s
                } = rz(), {
                    closeModal: l,
                    isModalOpen: u,
                    openModal: c
                } = rz(), d = eb(), {
                    chain: h
                } = (0, E.LN)(), f = !(null == h ? void 0 : h.unsupported);

                function p({
                    keepConnectModalOpen: e = !1
                } = {}) {
                    e || r(), o(), l()
                }
                let g = "unauthenticated" === ey();
                return (0, E.mA)({
                    onConnect: () => p({
                        keepConnectModalOpen: g
                    }),
                    onDisconnect: () => p()
                }), m.createElement(rU.Provider, {
                    value: (0, m.useMemo)(() => ({
                        accountModalOpen: a,
                        chainModalOpen: u,
                        connectModalOpen: n,
                        openAccountModal: f && "connected" === d ? s : void 0,
                        openChainModal: "connected" === d ? c : void 0,
                        openConnectModal: "disconnected" === d || "unauthenticated" === d ? i : void 0
                    }), [d, f, a, u, n, s, c, i])
                }, e, m.createElement(rD, {
                    onClose: r,
                    open: n
                }), m.createElement(t5, {
                    onClose: o,
                    open: a
                }), m.createElement(t8, {
                    onClose: l,
                    open: u
                }))
            }
            var rq = () => {};

            function rW({
                children: e
            }) {
                var r, n, i;
                let o = eZ(),
                    {
                        address: a
                    } = (0, E.mA)(),
                    s = e1(a),
                    l = e2(a),
                    {
                        data: u
                    } = (0, E.KQ)({
                        address: a
                    }),
                    {
                        chain: c
                    } = (0, E.LN)(),
                    d = eX(),
                    h = null != (r = ey()) ? r : void 0,
                    f = c ? d[c.id] : void 0,
                    p = null != (n = null == f ? void 0 : f.iconUrl) ? n : void 0,
                    g = null != (i = null == f ? void 0 : f.iconBackground) ? i : void 0,
                    v = eR(p),
                    y = (0, m.useContext)(tu),
                    b = te().some(({
                        status: e
                    }) => "pending" === e) && y,
                    w = u ? `${tW(parseFloat(u.formatted))} ${u.symbol}` : void 0,
                    {
                        openConnectModal: x
                    } = function() {
                        let {
                            openConnectModal: e
                        } = (0, m.useContext)(rU);
                        return {
                            openConnectModal: e
                        }
                    }(),
                    {
                        openChainModal: C
                    } = function() {
                        let {
                            openChainModal: e
                        } = (0, m.useContext)(rU);
                        return {
                            openChainModal: e
                        }
                    }(),
                    {
                        openAccountModal: A
                    } = function() {
                        let {
                            openAccountModal: e
                        } = (0, m.useContext)(rU);
                        return {
                            openAccountModal: e
                        }
                    }(),
                    {
                        accountModalOpen: k,
                        chainModalOpen: S,
                        connectModalOpen: _
                    } = function() {
                        let {
                            accountModalOpen: e,
                            chainModalOpen: r,
                            connectModalOpen: n
                        } = (0, m.useContext)(rU);
                        return {
                            accountModalOpen: e,
                            chainModalOpen: r,
                            connectModalOpen: n
                        }
                    }();
                return m.createElement(m.Fragment, null, e({
                    account: a ? {
                        address: a,
                        balanceDecimals: null == u ? void 0 : u.decimals,
                        balanceFormatted: null == u ? void 0 : u.formatted,
                        balanceSymbol: null == u ? void 0 : u.symbol,
                        displayBalance: w,
                        displayName: l ? tH(l) : tV(a),
                        ensAvatar: null != s ? s : void 0,
                        ensName: null != l ? l : void 0,
                        hasPendingTransactions: b
                    } : void 0,
                    accountModalOpen: k,
                    authenticationStatus: h,
                    chain: c ? {
                        hasIcon: Boolean(p),
                        iconBackground: g,
                        iconUrl: v,
                        id: c.id,
                        name: c.name,
                        unsupported: c.unsupported
                    } : void 0,
                    chainModalOpen: S,
                    connectModalOpen: _,
                    mounted: o,
                    openAccountModal: null != A ? A : rq,
                    openChainModal: null != C ? C : rq,
                    openConnectModal: null != x ? x : rq
                }))
            }
            rW.displayName = "ConnectButton.Custom";
            var rV = {
                accountStatus: "full",
                chainStatus: {
                    largeScreen: "full",
                    smallScreen: "icon"
                },
                label: "Connect Wallet",
                showBalance: {
                    largeScreen: !0,
                    smallScreen: !1
                }
            };

            function rH({
                accountStatus: e = rV.accountStatus,
                chainStatus: r = rV.chainStatus,
                label: n = rV.label,
                showBalance: i = rV.showBalance
            }) {
                let o = eJ(),
                    a = eb();
                return m.createElement(rW, null, ({
                    account: s,
                    chain: l,
                    mounted: u,
                    openAccountModal: c,
                    openChainModal: d,
                    openConnectModal: h
                }) => {
                    var f, p, g;
                    let v = u && "loading" !== a,
                        y = null != (f = null == l ? void 0 : l.unsupported) && f;
                    return m.createElement(eS, {
                        display: "flex",
                        gap: "12",
                        ...!v && {
                            "aria-hidden": !0,
                            style: {
                                opacity: 0,
                                pointerEvents: "none",
                                userSelect: "none"
                            }
                        }
                    }, v && s && "connected" === a ? m.createElement(m.Fragment, null, l && (o.length > 1 || y) && m.createElement(eS, {
                        alignItems: "center",
                        "aria-label": "Chain Selector",
                        as: "button",
                        background: y ? "connectButtonBackgroundError" : "connectButtonBackground",
                        borderRadius: "connectButton",
                        boxShadow: "connectButton",
                        className: eg({
                            active: "shrink",
                            hover: "grow"
                        }),
                        color: y ? "connectButtonTextError" : "connectButtonText",
                        display: ec(r, e => "none" === e ? "none" : "flex"),
                        fontFamily: "body",
                        fontWeight: "bold",
                        gap: "6",
                        key: y ? "unsupported" : "supported",
                        onClick: d,
                        paddingX: "10",
                        paddingY: "8",
                        testId: y ? "wrong-network-button" : "chain-button",
                        transition: "default",
                        type: "button"
                    }, y ? m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        height: "24",
                        paddingX: "4"
                    }, "Wrong network") : m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        gap: "6"
                    }, l.hasIcon ? m.createElement(eS, {
                        display: ec(r, e => "full" === e || "icon" === e ? "block" : "none"),
                        height: "24",
                        width: "24"
                    }, m.createElement(eB, {
                        alt: null != (p = l.name) ? p : "Chain icon",
                        background: l.iconBackground,
                        borderRadius: "full",
                        height: "24",
                        src: l.iconUrl,
                        width: "24"
                    })) : null, m.createElement(eS, {
                        display: ec(r, e => "icon" !== e || l.iconUrl ? "full" === e || "name" === e ? "block" : "none" : "block")
                    }, null != (g = l.name) ? g : l.id)), m.createElement(eD, null)), !y && m.createElement(eS, {
                        alignItems: "center",
                        as: "button",
                        background: "connectButtonBackground",
                        borderRadius: "connectButton",
                        boxShadow: "connectButton",
                        className: eg({
                            active: "shrink",
                            hover: "grow"
                        }),
                        color: "connectButtonText",
                        display: "flex",
                        fontFamily: "body",
                        fontWeight: "bold",
                        onClick: c,
                        testId: "account-button",
                        transition: "default",
                        type: "button"
                    }, s.displayBalance && m.createElement(eS, {
                        display: ec(i, e => e ? "block" : "none"),
                        padding: "8",
                        paddingLeft: "12"
                    }, s.displayBalance), m.createElement(eS, {
                        background: ed(i)[eC() ? "smallScreen" : "largeScreen"] ? "connectButtonInnerBackground" : "connectButtonBackground",
                        borderColor: "connectButtonBackground",
                        borderRadius: "connectButton",
                        borderStyle: "solid",
                        borderWidth: "2",
                        color: "connectButtonText",
                        fontFamily: "body",
                        fontWeight: "bold",
                        paddingX: "8",
                        paddingY: "6",
                        transition: "default"
                    }, m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        gap: "6",
                        height: "24"
                    }, m.createElement(eS, {
                        display: ec(e, e => "full" === e || "avatar" === e ? "block" : "none")
                    }, m.createElement(eL, {
                        address: s.address,
                        imageUrl: s.ensAvatar,
                        loading: s.hasPendingTransactions,
                        size: 24
                    })), m.createElement(eS, {
                        alignItems: "center",
                        display: "flex",
                        gap: "6"
                    }, m.createElement(eS, {
                        display: ec(e, e => "full" === e || "address" === e ? "block" : "none")
                    }, s.displayName), m.createElement(eD, null)))))) : m.createElement(eS, {
                        as: "button",
                        background: "accentColor",
                        borderRadius: "connectButton",
                        boxShadow: "connectButton",
                        className: eg({
                            active: "shrink",
                            hover: "grow"
                        }),
                        color: "accentColorForeground",
                        fontFamily: "body",
                        fontWeight: "bold",
                        height: "40",
                        key: "connect",
                        onClick: h,
                        paddingX: "14",
                        testId: "connect-button",
                        transition: "default",
                        type: "button"
                    }, n))
                })
            }
            rH.__defaultProps = rV, rH.Custom = rW
        },
        24484: function(e, r, n) {
            "use strict";
            n.d(r, {
                RJ: function() {
                    return o
                },
                ws: function() {
                    return i
                }
            });
            var i = {
                    id: 5,
                    network: "goerli",
                    name: "Goerli",
                    nativeCurrency: {
                        name: "Goerli Ether",
                        symbol: "ETH",
                        decimals: 18
                    },
                    rpcUrls: {
                        alchemy: {
                            http: ["https://eth-goerli.g.alchemy.com/v2"],
                            webSocket: ["wss://eth-goerli.g.alchemy.com/v2"]
                        },
                        infura: {
                            http: ["https://goerli.infura.io/v3"],
                            webSocket: ["wss://goerli.infura.io/ws/v3"]
                        },
                        default: {
                            http: ["https://rpc.ankr.com/eth_goerli"]
                        }
                    },
                    blockExplorers: {
                        etherscan: {
                            name: "Etherscan",
                            url: "https://goerli.etherscan.io"
                        },
                        default: {
                            name: "Etherscan",
                            url: "https://goerli.etherscan.io"
                        }
                    },
                    contracts: {
                        ensRegistry: {
                            address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
                        },
                        multicall3: {
                            address: "0xca11bde05977b3631167028862be2a173976ca11",
                            blockCreated: 6507670
                        }
                    },
                    testnet: !0
                },
                o = {
                    id: 1,
                    network: "homestead",
                    name: "Ethereum",
                    nativeCurrency: {
                        name: "Ether",
                        symbol: "ETH",
                        decimals: 18
                    },
                    rpcUrls: {
                        alchemy: {
                            http: ["https://eth-mainnet.g.alchemy.com/v2"],
                            webSocket: ["wss://eth-mainnet.g.alchemy.com/v2"]
                        },
                        infura: {
                            http: ["https://mainnet.infura.io/v3"],
                            webSocket: ["wss://mainnet.infura.io/ws/v3"]
                        },
                        default: {
                            http: ["https://cloudflare-eth.com"]
                        }
                    },
                    blockExplorers: {
                        etherscan: {
                            name: "Etherscan",
                            url: "https://etherscan.io"
                        },
                        default: {
                            name: "Etherscan",
                            url: "https://etherscan.io"
                        }
                    },
                    contracts: {
                        ensRegistry: {
                            address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
                        },
                        multicall3: {
                            address: "0xca11bde05977b3631167028862be2a173976ca11",
                            blockCreated: 14353601
                        }
                    }
                }
        },
        80647: function(e, r, n) {
            "use strict";
            n.d(r, {
                Ko: function() {
                    return d
                },
                U9: function() {
                    return f
                },
                ac: function() {
                    return c
                },
                ov: function() {
                    return l
                },
                qx: function() {
                    return h
                },
                wR: function() {
                    return p
                }
            });
            var i = n(24484),
                o = n(26729),
                a = Object.defineProperty,
                s = (e, r, n) => r in e ? a(e, r, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: n
                }) : e[r] = n,
                l = (e, r, n) => (s(e, "symbol" != typeof r ? r + "" : r, n), n),
                u = (e, r, n) => {
                    if (!r.has(e)) throw TypeError("Cannot " + n)
                },
                c = (e, r, n) => (u(e, r, "read from private field"), n ? n.call(e) : r.get(e)),
                d = (e, r, n) => {
                    if (r.has(e)) throw TypeError("Cannot add the same private member more than once");
                    r instanceof WeakSet ? r.add(e) : r.set(e, n)
                },
                h = (e, r, n, i) => (u(e, r, "write to private field"), i ? i.call(e, n) : r.set(e, n), n),
                f = (e, r, n) => (u(e, r, "access private method"), n),
                p = class extends o {
                    constructor({
                        chains: e = [i.RJ, i.ws],
                        options: r
                    }) {
                        super(), l(this, "chains"), l(this, "options"), this.chains = e, this.options = r
                    }
                    getBlockExplorerUrls(e) {
                        let {
                            default: r,
                            ...n
                        } = e.blockExplorers ? ? {};
                        if (r) return [r.url, ...Object.values(n).map(e => e.url)]
                    }
                    isChainUnsupported(e) {
                        return !this.chains.some(r => r.id === e)
                    }
                }
        },
        23326: function(e, r, n) {
            "use strict";
            n.d(r, {
                _: function() {
                    return c
                }
            });
            var i, o, a = n(80647),
                s = n(51613),
                l = n(241),
                u = n(56371),
                c = class extends a.wR {
                    constructor({
                        chains: e,
                        options: r
                    } = {}) {
                        let n = {
                            shimDisconnect: !0,
                            shimChainChangedDisconnect: !0,
                            getProvider: () => "undefined" != typeof window ? window.ethereum : void 0,
                            ...r
                        };
                        super({
                            chains: e,
                            options: n
                        }), (0, a.ov)(this, "id"), (0, a.ov)(this, "name"), (0, a.ov)(this, "ready"), (0, a.Ko)(this, i, void 0), (0, a.Ko)(this, o, void 0), (0, a.ov)(this, "shimDisconnectKey", "injected.shimDisconnect"), (0, a.ov)(this, "onAccountsChanged", e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, u.getAddress)(e[0])
                            })
                        }), (0, a.ov)(this, "onChainChanged", e => {
                            let r = (0, s.Jk)(e),
                                n = this.isChainUnsupported(r);
                            this.emit("change", {
                                chain: {
                                    id: r,
                                    unsupported: n
                                }
                            })
                        }), (0, a.ov)(this, "onDisconnect", () => {
                            if (this.options.shimChainChangedDisconnect && (0, a.ac)(this, o)) {
                                (0, a.qx)(this, o, !1);
                                return
                            }
                            this.emit("disconnect"), this.options.shimDisconnect && s.s3().storage ? .removeItem(this.shimDisconnectKey)
                        });
                        let l = n.getProvider();
                        if ("string" == typeof n.name) this.name = n.name;
                        else if (l) {
                            let c = function(e) {
                                if (!e) return "Injected";
                                let r = e => e.isAvalanche ? "Core Wallet" : e.isBitKeep ? "BitKeep" : e.isBraveWallet ? "Brave Wallet" : e.isCoinbaseWallet ? "Coinbase Wallet" : e.isExodus ? "Exodus" : e.isFrame ? "Frame" : e.isKuCoinWallet ? "KuCoin Wallet" : e.isMathWallet ? "MathWallet" : e.isOneInchIOSWallet || e.isOneInchAndroidWallet ? "1inch Wallet" : e.isOpera ? "Opera" : e.isPortal ? "Ripio Portal" : e.isTally ? "Tally" : e.isTokenPocket ? "TokenPocket" : e.isTokenary ? "Tokenary" : e.isTrust || e.isTrustWallet ? "Trust Wallet" : e.isMetaMask ? "MetaMask" : void 0;
                                if (e.providers ? .length) {
                                    let n = new Set,
                                        i = 1;
                                    for (let o of e.providers) {
                                        let a = r(o);
                                        a || (a = `Unknown Wallet #${i}`, i += 1), n.add(a)
                                    }
                                    let s = [...n];
                                    return s.length ? s : s[0] ? ? "Injected"
                                }
                                return r(e) ? ? "Injected"
                            }(l);
                            n.name ? this.name = n.name(c) : "string" == typeof c ? this.name = c : this.name = c[0]
                        } else this.name = "Injected";
                        this.id = "injected", this.ready = !!l
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let r = await this.getProvider();
                            if (!r) throw new s.Nu;
                            r.on && (r.on("accountsChanged", this.onAccountsChanged), r.on("chainChanged", this.onChainChanged), r.on("disconnect", this.onDisconnect)), this.emit("message", {
                                type: "connecting"
                            });
                            let n = await r.request({
                                    method: "eth_requestAccounts"
                                }),
                                i = (0, u.getAddress)(n[0]),
                                o = await this.getChainId(),
                                a = this.isChainUnsupported(o);
                            if (e && o !== e) {
                                let l = await this.switchChain(e);
                                o = l.id, a = this.isChainUnsupported(o)
                            }
                            return this.options.shimDisconnect && s.s3().storage ? .setItem(this.shimDisconnectKey, !0), {
                                account: i,
                                chain: {
                                    id: o,
                                    unsupported: a
                                },
                                provider: r
                            }
                        } catch (c) {
                            if (this.isUserRejectedRequestError(c)) throw new s.ab(c);
                            if (-32002 === c.code) throw new s.TA(c);
                            throw c
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        e ? .removeListener && (e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), this.options.shimDisconnect && s.s3().storage ? .removeItem(this.shimDisconnectKey))
                    }
                    async getAccount() {
                        let e = await this.getProvider();
                        if (!e) throw new s.Nu;
                        let r = await e.request({
                            method: "eth_accounts"
                        });
                        return (0, u.getAddress)(r[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider();
                        if (!e) throw new s.Nu;
                        return e.request({
                            method: "eth_chainId"
                        }).then(s.Jk)
                    }
                    async getProvider() {
                        let e = this.options.getProvider();
                        return e && (0, a.qx)(this, i, e), (0, a.ac)(this, i)
                    }
                    async getSigner({
                        chainId: e
                    } = {}) {
                        let [r, n] = await Promise.all([this.getProvider(), this.getAccount()]);
                        return new l.Q(r, e).getSigner(n)
                    }
                    async isAuthorized() {
                        try {
                            if (this.options.shimDisconnect && !s.s3().storage ? .getItem(this.shimDisconnectKey)) return !1;
                            let e = await this.getProvider();
                            if (!e) throw new s.Nu;
                            let r = await this.getAccount();
                            return !!r
                        } catch {
                            return !1
                        }
                    }
                    async switchChain(e) {
                        this.options.shimChainChangedDisconnect && (0, a.qx)(this, o, !0);
                        let r = await this.getProvider();
                        if (!r) throw new s.Nu;
                        let n = (0, u.hexValue)(e);
                        try {
                            return await r.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: n
                                }]
                            }), this.chains.find(r => r.id === e) ? ? {
                                id: e,
                                name: `Chain ${n}`,
                                network: `${n}`,
                                nativeCurrency: {
                                    name: "Ether",
                                    decimals: 18,
                                    symbol: "ETH"
                                },
                                rpcUrls: {
                                    default: {
                                        http: [""]
                                    }
                                }
                            }
                        } catch (c) {
                            let i = this.chains.find(r => r.id === e);
                            if (!i) throw new s.X4({
                                chainId: e,
                                connectorId: this.id
                            });
                            if (4902 === c.code || c ? .data ? .originalError ? .code === 4902) try {
                                return await r.request({
                                    method: "wallet_addEthereumChain",
                                    params: [{
                                        chainId: n,
                                        chainName: i.name,
                                        nativeCurrency: i.nativeCurrency,
                                        rpcUrls: [i.rpcUrls.public ? .http[0] ? ? i.rpcUrls.default.http[0] ? ? ""],
                                        blockExplorerUrls: this.getBlockExplorerUrls(i)
                                    }]
                                }), i
                            } catch (l) {
                                if (this.isUserRejectedRequestError(l)) throw new s.ab(c);
                                throw new s.iA
                            }
                            if (this.isUserRejectedRequestError(c)) throw new s.ab(c);
                            throw new s.x3(c)
                        }
                    }
                    async watchAsset({
                        address: e,
                        decimals: r = 18,
                        image: n,
                        symbol: i
                    }) {
                        let o = await this.getProvider();
                        if (!o) throw new s.Nu;
                        return o.request({
                            method: "wallet_watchAsset",
                            params: {
                                type: "ERC20",
                                options: {
                                    address: e,
                                    decimals: r,
                                    image: n,
                                    symbol: i
                                }
                            }
                        })
                    }
                    isUserRejectedRequestError(e) {
                        return 4001 === e.code
                    }
                };
            i = new WeakMap, o = new WeakMap
        },
        51613: function(e, r, n) {
            "use strict";
            n.d(r, {
                iA: function() {
                    return eL
                },
                X4: function() {
                    return ez
                },
                Nu: function() {
                    return e$
                },
                TA: function() {
                    return eK
                },
                x3: function() {
                    return eQ
                },
                ab: function() {
                    return eY
                },
                QB: function() {
                    return Q
                },
                $j: function() {
                    return ed
                },
                eI: function() {
                    return eu
                },
                o6: function() {
                    return ea
                },
                Ds: function() {
                    return J
                },
                vZ: function() {
                    return function e(r, n) {
                        if (r === n) return !0;
                        if (r && n && "object" == typeof r && "object" == typeof n) {
                            let i, o;
                            if (r.constructor !== n.constructor) return !1;
                            if (Array.isArray(r) && Array.isArray(n)) {
                                if ((i = r.length) != n.length) return !1;
                                for (o = i; 0 != o--;)
                                    if (!e(r[o], n[o])) return !1;
                                return !0
                            }
                            if (r.valueOf !== Object.prototype.valueOf) return r.valueOf() === n.valueOf();
                            if (r.toString !== Object.prototype.toString) return r.toString() === n.toString();
                            let a = Object.keys(r);
                            if ((i = a.length) !== Object.keys(n).length) return !1;
                            for (o = i; 0 != o--;)
                                if (!Object.prototype.hasOwnProperty.call(n, a[o])) return !1;
                            for (o = i; 0 != o--;) {
                                let s = a[o];
                                if (s && !e(r[s], n[s])) return !1
                            }
                            return !0
                        }
                        return r != r && n != n
                    }
                },
                zP: function() {
                    return eh
                },
                EG: function() {
                    return e_
                },
                RQ: function() {
                    return eA
                },
                w6: function() {
                    return ek
                },
                Lk: function() {
                    return eS
                },
                DG: function() {
                    return eP
                },
                D0: function() {
                    return ej
                },
                s3: function() {
                    return ec
                },
                Hy: function() {
                    return eT
                },
                VH: function() {
                    return ev
                },
                lG: function() {
                    return ey
                },
                wp: function() {
                    return eo
                },
                Jk: function() {
                    return et
                },
                l: function() {
                    return eR
                },
                If: function() {
                    return eB
                },
                uH: function() {
                    return eO
                },
                QC: function() {
                    return eM
                },
                b0: function() {
                    return eb
                },
                rn: function() {
                    return eI
                },
                Fx: function() {
                    return ew
                }
            });
            var i, o, a, s, l, u = n(23326),
                c = (e, r, n) => {
                    if (!r.has(e)) throw TypeError("Cannot " + n)
                },
                d = (e, r, n) => (c(e, r, "read from private field"), n ? n.call(e) : r.get(e)),
                h = (e, r, n) => {
                    if (r.has(e)) throw TypeError("Cannot add the same private member more than once");
                    r instanceof WeakSet ? r.add(e) : r.set(e, n)
                },
                f = (e, r, n, i) => (c(e, r, "write to private field"), i ? i.call(e, n) : r.set(e, n), n),
                p = (e, r, n) => (c(e, r, "access private method"), n),
                m = n(81556),
                g = n(2593),
                v = n(16441),
                y = n(6881),
                b = n(52472),
                w = n(37707),
                x = n(57408),
                E = n(30032),
                C = n(1581),
                A = n(34216),
                k = function(e, r, n, i) {
                    return new(n || (n = Promise))(function(o, a) {
                        function s(e) {
                            try {
                                u(i.next(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function l(e) {
                            try {
                                u(i.throw(e))
                            } catch (r) {
                                a(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? o(e.value) : ((r = e.value) instanceof n ? r : new n(function(e) {
                                e(r)
                            })).then(s, l)
                        }
                        u((i = i.apply(e, r || [])).next())
                    })
                };
            let S = new C.Logger(A.i);

            function _() {
                return new Date().getTime()
            }

            function P(e) {
                let r = null;
                for (let n = 0; n < e.length; n++) {
                    let i = e[n];
                    if (null == i) return null;
                    r ? r.name === i.name && r.chainId === i.chainId && (r.ensAddress === i.ensAddress || null == r.ensAddress && null == i.ensAddress) || S.throwArgumentError("provider mismatch", "networks", e) : r = i
                }
                return r
            }

            function j(e, r) {
                e = e.slice().sort();
                let n = Math.floor(e.length / 2);
                if (e.length % 2) return e[n];
                let i = e[n - 1],
                    o = e[n];
                return null != r && Math.abs(i - o) > r ? null : (i + o) / 2
            }

            function T(e) {
                if (null === e) return "null";
                if ("number" == typeof e || "boolean" == typeof e) return JSON.stringify(e);
                if ("string" == typeof e) return e;
                if (g.O$.isBigNumber(e)) return e.toString();
                if (Array.isArray(e)) return JSON.stringify(e.map(e => T(e)));
                if ("object" == typeof e) {
                    let r = Object.keys(e);
                    return r.sort(), "{" + r.map(r => {
                        let n = e[r];
                        return n = "function" == typeof n ? "[function]" : T(n), JSON.stringify(r) + ":" + n
                    }).join(",") + "}"
                }
                throw Error("unknown value type: " + typeof e)
            }
            let R = 1;

            function B(e) {
                let r = null,
                    n = null,
                    i = new Promise(i => {
                        n = setTimeout(r = function() {
                            n && (clearTimeout(n), n = null), i()
                        }, e)
                    }),
                    o = e => i = i.then(e);
                return {
                    cancel: r,
                    getPromise: function() {
                        return i
                    },
                    wait: o
                }
            }
            let O = [C.Logger.errors.CALL_EXCEPTION, C.Logger.errors.INSUFFICIENT_FUNDS, C.Logger.errors.NONCE_EXPIRED, C.Logger.errors.REPLACEMENT_UNDERPRICED, C.Logger.errors.UNPREDICTABLE_GAS_LIMIT],
                M = ["address", "args", "errorArgs", "errorSignature", "method", "transaction"];

            function I(e, r) {
                let n = {
                    weight: e.weight
                };
                return Object.defineProperty(n, "provider", {
                    get: () => e.provider
                }), e.start && (n.start = e.start), r && (n.duration = r - e.start), e.done && (e.error ? n.error = e.error : n.result = e.result || null), n
            }

            function N(e, r) {
                return k(this, void 0, void 0, function*() {
                    let n = e.provider;
                    return null != n.blockNumber && n.blockNumber >= r || -1 === r ? n : (0, w.poll)(() => new Promise((i, o) => {
                        setTimeout(function() {
                            return n.blockNumber >= r ? i(n) : e.cancelled ? i(null) : i(void 0)
                        }, 0)
                    }), {
                        oncePoll: n
                    })
                })
            }
            class F extends x.Zk {
                constructor(e, r) {
                    0 === e.length && S.throwArgumentError("missing providers", "providers", e);
                    let n = e.map((e, r) => {
                            if (m.zt.isProvider(e)) {
                                let n = (0, E.Gp)(e) ? 2e3 : 750;
                                return Object.freeze({
                                    provider: e,
                                    weight: 1,
                                    stallTimeout: n,
                                    priority: 1
                                })
                            }
                            let i = (0, y.shallowCopy)(e);
                            null == i.priority && (i.priority = 1), null == i.stallTimeout && (i.stallTimeout = (0, E.Gp)(e) ? 2e3 : 750), null == i.weight && (i.weight = 1);
                            let o = i.weight;
                            return (o % 1 || o > 512 || o < 1) && S.throwArgumentError("invalid weight; must be integer in [1, 512]", `providers[${r}].weight`, o), Object.freeze(i)
                        }),
                        i = n.reduce((e, r) => e + r.weight, 0);
                    null == r ? r = i / 2 : r > i && S.throwArgumentError("quorum will always fail; larger than total weight", "quorum", r);
                    let o = P(n.map(e => e.provider.network));
                    null == o && (o = new Promise((e, r) => {
                        setTimeout(() => {
                            this.detectNetwork().then(e, r)
                        }, 0)
                    })), super(o), (0, y.defineReadOnly)(this, "providerConfigs", Object.freeze(n)), (0, y.defineReadOnly)(this, "quorum", r), this._highestBlockNumber = -1
                }
                detectNetwork() {
                    return k(this, void 0, void 0, function*() {
                        let e = yield Promise.all(this.providerConfigs.map(e => e.provider.getNetwork()));
                        return P(e)
                    })
                }
                perform(e, r) {
                    return k(this, void 0, void 0, function*() {
                        if ("sendTransaction" === e) {
                            let n = yield Promise.all(this.providerConfigs.map(e => e.provider.sendTransaction(r.signedTransaction).then(e => e.hash, e => e)));
                            for (let i = 0; i < n.length; i++) {
                                let o = n[i];
                                if ("string" == typeof o) return o
                            }
                            throw n[0]
                        } - 1 === this._highestBlockNumber && "getBlockNumber" !== e && (yield this.getBlockNumber());
                        let a = function(e, r, n) {
                                var i, o;
                                let a = T;
                                switch (r) {
                                    case "getBlockNumber":
                                        return function(r) {
                                            let n = r.map(e => e.result),
                                                i = j(r.map(e => e.result), 2);
                                            if (null != i) return i = Math.ceil(i), n.indexOf(i + 1) >= 0 && i++, i >= e._highestBlockNumber && (e._highestBlockNumber = i), e._highestBlockNumber
                                        };
                                    case "getGasPrice":
                                        return function(e) {
                                            let r = e.map(e => e.result);
                                            return r.sort(), r[Math.floor(r.length / 2)]
                                        };
                                    case "getEtherPrice":
                                        return function(e) {
                                            return j(e.map(e => e.result))
                                        };
                                    case "getBalance":
                                    case "getTransactionCount":
                                    case "getCode":
                                    case "getStorageAt":
                                    case "call":
                                    case "estimateGas":
                                    case "getLogs":
                                        break;
                                    case "getTransaction":
                                    case "getTransactionReceipt":
                                        a = function(e) {
                                            return null == e ? null : ((e = (0, y.shallowCopy)(e)).confirmations = -1, T(e))
                                        };
                                        break;
                                    case "getBlock":
                                        a = n.includeTransactions ? function(e) {
                                            return null == e ? null : ((e = (0, y.shallowCopy)(e)).transactions = e.transactions.map(e => ((e = (0, y.shallowCopy)(e)).confirmations = -1, e)), T(e))
                                        } : function(e) {
                                            return null == e ? null : T(e)
                                        };
                                        break;
                                    default:
                                        throw Error("unknown method: " + r)
                                }
                                return i = a, o = e.quorum,
                                    function(e) {
                                        let r = {};
                                        e.forEach(e => {
                                            let n = i(e.result);
                                            r[n] || (r[n] = {
                                                count: 0,
                                                result: e.result
                                            }), r[n].count++
                                        });
                                        let n = Object.keys(r);
                                        for (let a = 0; a < n.length; a++) {
                                            let s = r[n[a]];
                                            if (s.count >= o) return s.result
                                        }
                                    }
                            }(this, e, r),
                            s = (0, b.y)(this.providerConfigs.map(y.shallowCopy));
                        s.sort((e, r) => e.priority - r.priority);
                        let l = this._highestBlockNumber,
                            u = 0,
                            c = !0;
                        for (;;) {
                            let d = _(),
                                h = s.filter(e => e.runner && d - e.start < e.stallTimeout).reduce((e, r) => e + r.weight, 0);
                            for (; h < this.quorum && u < s.length;) {
                                let f = s[u++],
                                    p = R++;
                                f.start = _(), f.staller = B(f.stallTimeout), f.staller.wait(() => {
                                    f.staller = null
                                }), f.runner = (function(e, r, n, i) {
                                    return k(this, void 0, void 0, function*() {
                                        let o = e.provider;
                                        switch (n) {
                                            case "getBlockNumber":
                                            case "getGasPrice":
                                                return o[n]();
                                            case "getEtherPrice":
                                                if (o.getEtherPrice) return o.getEtherPrice();
                                                break;
                                            case "getBalance":
                                            case "getTransactionCount":
                                            case "getCode":
                                                return i.blockTag && (0, v.isHexString)(i.blockTag) && (o = yield N(e, r)), o[n](i.address, i.blockTag || "latest");
                                            case "getStorageAt":
                                                return i.blockTag && (0, v.isHexString)(i.blockTag) && (o = yield N(e, r)), o.getStorageAt(i.address, i.position, i.blockTag || "latest");
                                            case "getBlock":
                                                return i.blockTag && (0, v.isHexString)(i.blockTag) && (o = yield N(e, r)), o[i.includeTransactions ? "getBlockWithTransactions" : "getBlock"](i.blockTag || i.blockHash);
                                            case "call":
                                            case "estimateGas":
                                                if (i.blockTag && (0, v.isHexString)(i.blockTag) && (o = yield N(e, r)), "call" === n && i.blockTag) return o[n](i.transaction, i.blockTag);
                                                return o[n](i.transaction);
                                            case "getTransaction":
                                            case "getTransactionReceipt":
                                                return o[n](i.transactionHash);
                                            case "getLogs":
                                                {
                                                    let a = i.filter;
                                                    return (a.fromBlock && (0, v.isHexString)(a.fromBlock) || a.toBlock && (0, v.isHexString)(a.toBlock)) && (o = yield N(e, r)),
                                                    o.getLogs(a)
                                                }
                                        }
                                        return S.throwError("unknown method error", C.Logger.errors.UNKNOWN_ERROR, {
                                            method: n,
                                            params: i
                                        })
                                    })
                                })(f, l, e, r).then(n => {
                                    f.done = !0, f.result = n, this.listenerCount("debug") && this.emit("debug", {
                                        action: "request",
                                        rid: p,
                                        backend: I(f, _()),
                                        request: {
                                            method: e,
                                            params: (0, y.deepCopy)(r)
                                        },
                                        provider: this
                                    })
                                }, n => {
                                    f.done = !0, f.error = n, this.listenerCount("debug") && this.emit("debug", {
                                        action: "request",
                                        rid: p,
                                        backend: I(f, _()),
                                        request: {
                                            method: e,
                                            params: (0, y.deepCopy)(r)
                                        },
                                        provider: this
                                    })
                                }), this.listenerCount("debug") && this.emit("debug", {
                                    action: "request",
                                    rid: p,
                                    backend: I(f, null),
                                    request: {
                                        method: e,
                                        params: (0, y.deepCopy)(r)
                                    },
                                    provider: this
                                }), h += f.weight
                            }
                            let m = [];
                            s.forEach(e => {
                                !e.done && e.runner && (m.push(e.runner), e.staller && m.push(e.staller.getPromise()))
                            }), m.length && (yield Promise.race(m));
                            let g = s.filter(e => e.done && null == e.error);
                            if (g.length >= this.quorum) {
                                let w = a(g);
                                if (void 0 !== w) return s.forEach(e => {
                                    e.staller && e.staller.cancel(), e.cancelled = !0
                                }), w;
                                c || (yield B(100).getPromise()), c = !1
                            }
                            let x = s.reduce((e, r) => {
                                if (!r.done || null == r.error) return e;
                                let n = r.error.code;
                                return O.indexOf(n) >= 0 && (e[n] || (e[n] = {
                                    error: r.error,
                                    weight: 0
                                }), e[n].weight += r.weight), e
                            }, {});
                            if (Object.keys(x).forEach(e => {
                                    let r = x[e];
                                    if (r.weight < this.quorum) return;
                                    s.forEach(e => {
                                        e.staller && e.staller.cancel(), e.cancelled = !0
                                    });
                                    let n = r.error,
                                        i = {};
                                    M.forEach(e => {
                                        null != n[e] && (i[e] = n[e])
                                    }), S.throwError(n.reason || n.message, e, i)
                                }), 0 === s.filter(e => !e.done).length) break
                        }
                        return s.forEach(e => {
                            e.staller && e.staller.cancel(), e.cancelled = !0
                        }), S.throwError("failed to meet quorum", C.Logger.errors.SERVER_ERROR, {
                            method: e,
                            params: r,
                            results: s.map(e => I(e)),
                            provider: this
                        })
                    })
                }
            }
            let L = e => (r, n, i) => {
                    let o = i.subscribe;
                    i.subscribe = (e, r, n) => {
                        let a = e;
                        if (r) {
                            let s = (null == n ? void 0 : n.equalityFn) || Object.is,
                                l = e(i.getState());
                            a = n => {
                                let i = e(n);
                                if (!s(l, i)) {
                                    let o = l;
                                    r(l = i, o)
                                }
                            }, (null == n ? void 0 : n.fireImmediately) && r(l, l)
                        }
                        return o(a)
                    };
                    let a = e(r, n, i);
                    return a
                },
                D = e => r => {
                    try {
                        let n = e(r);
                        if (n instanceof Promise) return n;
                        return {
                            then: e => D(e)(n),
                            catch (e) {
                                return this
                            }
                        }
                    } catch (i) {
                        return {
                            then(e) {
                                return this
                            },
                            catch: e => D(e)(i)
                        }
                    }
                },
                z = (e, r) => (n, i, o) => {
                    let a, s, l = {
                            getStorage: () => localStorage,
                            serialize: JSON.stringify,
                            deserialize: JSON.parse,
                            partialize: e => e,
                            version: 0,
                            merge: (e, r) => ({ ...r,
                                ...e
                            }),
                            ...r
                        },
                        u = !1,
                        c = new Set,
                        d = new Set;
                    try {
                        a = l.getStorage()
                    } catch (h) {}
                    if (!a) return e((...e) => {
                        console.warn(`[zustand persist middleware] Unable to update item '${l.name}', the given storage is currently unavailable.`), n(...e)
                    }, i, o);
                    let f = D(l.serialize),
                        p = () => {
                            let e;
                            let r = l.partialize({ ...i()
                                }),
                                n = f({
                                    state: r,
                                    version: l.version
                                }).then(e => a.setItem(l.name, e)).catch(r => {
                                    e = r
                                });
                            if (e) throw e;
                            return n
                        },
                        m = o.setState;
                    o.setState = (e, r) => {
                        m(e, r), p()
                    };
                    let g = e((...e) => {
                            n(...e), p()
                        }, i, o),
                        v = () => {
                            var e;
                            if (!a) return;
                            u = !1, c.forEach(e => e(i()));
                            let r = (null == (e = l.onRehydrateStorage) ? void 0 : e.call(l, i())) || void 0;
                            return D(a.getItem.bind(a))(l.name).then(e => {
                                if (e) return l.deserialize(e)
                            }).then(e => {
                                if (e) {
                                    if ("number" != typeof e.version || e.version === l.version) return e.state;
                                    if (l.migrate) return l.migrate(e.state, e.version);
                                    console.error("State loaded from storage couldn't be migrated since no migrate function was provided")
                                }
                            }).then(e => {
                                var r;
                                return n(s = l.merge(e, null != (r = i()) ? r : g), !0), p()
                            }).then(() => {
                                null == r || r(s, void 0), u = !0, d.forEach(e => e(s))
                            }).catch(e => {
                                null == r || r(void 0, e)
                            })
                        };
                    return o.persist = {
                        setOptions: e => {
                            l = { ...l,
                                ...e
                            }, e.getStorage && (a = e.getStorage())
                        },
                        clearStorage: () => {
                            null == a || a.removeItem(l.name)
                        },
                        getOptions: () => l,
                        rehydrate: () => v(),
                        hasHydrated: () => u,
                        onHydrate: e => (c.add(e), () => {
                            c.delete(e)
                        }),
                        onFinishHydration: e => (d.add(e), () => {
                            d.delete(e)
                        })
                    }, v(), s || g
                },
                U = (e, r) => (n, i, o) => {
                    let a, s = {
                            storage: function(e, r) {
                                let n;
                                try {
                                    n = e()
                                } catch (i) {
                                    return
                                }
                                return {
                                    getItem: e => {
                                        var i;
                                        let o = e => null === e ? null : JSON.parse(e, null == r ? void 0 : r.reviver),
                                            a = null != (i = n.getItem(e)) ? i : null;
                                        return a instanceof Promise ? a.then(o) : o(a)
                                    },
                                    setItem: (e, i) => n.setItem(e, JSON.stringify(i, null == r ? void 0 : r.replacer)),
                                    removeItem: e => n.removeItem(e)
                                }
                            }(() => localStorage),
                            partialize: e => e,
                            version: 0,
                            merge: (e, r) => ({ ...r,
                                ...e
                            }),
                            ...r
                        },
                        l = !1,
                        u = new Set,
                        c = new Set,
                        d = s.storage;
                    if (!d) return e((...e) => {
                        console.warn(`[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`), n(...e)
                    }, i, o);
                    let h = () => {
                            let e = s.partialize({ ...i()
                            });
                            return d.setItem(s.name, {
                                state: e,
                                version: s.version
                            })
                        },
                        f = o.setState;
                    o.setState = (e, r) => {
                        f(e, r), h()
                    };
                    let p = e((...e) => {
                            n(...e), h()
                        }, i, o),
                        m = () => {
                            var e, r;
                            if (!d) return;
                            l = !1, u.forEach(e => {
                                var r;
                                return e(null != (r = i()) ? r : p)
                            });
                            let o = (null == (r = s.onRehydrateStorage) ? void 0 : r.call(s, null != (e = i()) ? e : p)) || void 0;
                            return D(d.getItem.bind(d))(s.name).then(e => {
                                if (e) {
                                    if ("number" != typeof e.version || e.version === s.version) return e.state;
                                    if (s.migrate) return s.migrate(e.state, e.version);
                                    console.error("State loaded from storage couldn't be migrated since no migrate function was provided")
                                }
                            }).then(e => {
                                var r;
                                return n(a = s.merge(e, null != (r = i()) ? r : p), !0), h()
                            }).then(() => {
                                null == o || o(a, void 0), a = i(), l = !0, c.forEach(e => e(a))
                            }).catch(e => {
                                null == o || o(void 0, e)
                            })
                        };
                    return o.persist = {
                        setOptions: e => {
                            s = { ...s,
                                ...e
                            }, e.storage && (d = e.storage)
                        },
                        clearStorage: () => {
                            null == d || d.removeItem(s.name)
                        },
                        getOptions: () => s,
                        rehydrate: () => m(),
                        hasHydrated: () => l,
                        onHydrate: e => (u.add(e), () => {
                            u.delete(e)
                        }),
                        onFinishHydration: e => (c.add(e), () => {
                            c.delete(e)
                        })
                    }, s.skipHydration || m(), a || p
                },
                $ = (e, r) => "getStorage" in r || "serialize" in r || "deserialize" in r ? (console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."), z(e, r)) : U(e, r),
                q = e => {
                    let r;
                    let n = new Set,
                        i = (e, i) => {
                            let o = "function" == typeof e ? e(r) : e;
                            if (!Object.is(o, r)) {
                                let a = r;
                                r = (null != i ? i : "object" != typeof o) ? o : Object.assign({}, r, o), n.forEach(e => e(r, a))
                            }
                        },
                        o = () => r,
                        a = e => (n.add(e), () => n.delete(e)),
                        s = () => {
                            console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."), n.clear()
                        },
                        l = {
                            setState: i,
                            getState: o,
                            subscribe: a,
                            destroy: s
                        };
                    return r = e(i, o, l), l
                },
                W = e => e ? q(e) : q;
            var V = e => (console.warn("[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'."), W(e)),
                H = n(56371),
                G = n(64146),
                K = (e, r) => (console.warn("[DEPRECATED] Default export is deprecated. Instead use `import { shallow } from 'zustand/shallow'`."), function(e, r) {
                    if (Object.is(e, r)) return !0;
                    if ("object" != typeof e || null === e || "object" != typeof r || null === r) return !1;
                    if (e instanceof Map && r instanceof Map) {
                        if (e.size !== r.size) return !1;
                        for (let [n, i] of e)
                            if (!Object.is(i, r.get(n))) return !1;
                        return !0
                    }
                    if (e instanceof Set && r instanceof Set) {
                        if (e.size !== r.size) return !1;
                        for (let o of e)
                            if (!r.has(o)) return !1;
                        return !0
                    }
                    let a = Object.keys(e);
                    if (a.length !== Object.keys(r).length) return !1;
                    for (let s = 0; s < a.length; s++)
                        if (!Object.prototype.hasOwnProperty.call(r, a[s]) || !Object.is(e[a[s]], r[a[s]])) return !1;
                    return !0
                }(e, r));

            function Q(e, r, {
                minQuorum: n = 1,
                pollingInterval: i = 4e3,
                targetQuorum: o = 1,
                stallTimeout: a
            } = {}) {
                if (!e.length) throw Error("must have at least one chain");
                if (o < n) throw Error("quorum cannot be lower than minQuorum");
                let s = [],
                    l = {},
                    u = {};
                for (let c of e) {
                    let d = !1;
                    for (let h of r) {
                        let f = h(c);
                        f && (d = !0, s.some(({
                            id: e
                        }) => e === c.id) || (s = [...s, f.chain]), l[c.id] = [...l[c.id] || [], f.provider], f.webSocketProvider && (u[c.id] = [...u[c.id] || [], f.webSocketProvider]))
                    }
                    if (!d) throw Error(`Could not find valid provider configuration for chain "${c.name}".

You may need to add \`jsonRpcProvider\` to \`configureChains\` with the chain's RPC URLs.
Read more: https://wagmi.sh/react/providers/jsonRpc`)
                }
                return {
                    chains: s,
                    provider: ({
                        chainId: r
                    }) => {
                        let u;
                        let c = s.find(e => e.id === r) ? ? e[0],
                            d = l[c.id];
                        if (!d || !d[0]) throw Error(`No providers configured for chain "${c.id}"`);
                        return u = 1 === d.length ? d[0]() : function e(r, n, i, {
                            stallTimeout: o
                        }) {
                            try {
                                return new F(i.map((e, r) => {
                                    let n = e();
                                    return {
                                        provider: n,
                                        priority: n.priority ? ? r,
                                        stallTimeout: n.stallTimeout ? ? o,
                                        weight: n.weight
                                    }
                                }), r)
                            } catch (a) {
                                if (a ? .message ? .includes("quorum will always fail; larger than total weight")) {
                                    if (r === n) throw a;
                                    return e(r - 1, n, i, {
                                        stallTimeout: o
                                    })
                                }
                                throw a
                            }
                        }(o, n, d, {
                            stallTimeout: a
                        }), 42220 === c.id && (u.formatter.formats.block = { ...u.formatter.formats.block,
                            difficulty: () => 0,
                            gasLimit: () => 0
                        }), Object.assign(u, {
                            chains: s,
                            pollingInterval: i
                        })
                    },
                    webSocketProvider: ({
                        chainId: r
                    }) => {
                        let n = s.find(e => e.id === r) ? ? e[0],
                            i = u[n.id];
                        if (!i) return;
                        let o = i[0] ? .();
                        return o && 42220 === n.id && (o.formatter.formats.block = { ...o.formatter.formats.block,
                            difficulty: () => 0,
                            gasLimit: () => 0
                        }), Object.assign(o || {}, {
                            chains: s
                        })
                    }
                }
            }

            function J(e, r = 0) {
                let n;
                return function(...i) {
                    if (!r) return e(...i);
                    n && clearTimeout(n), n = setTimeout(function() {
                        n = null, e(...i)
                    }, r)
                }
            }
            var Y = (e, {
                find: r,
                replace: n
            }) => e && r(e) ? n(e) : "object" != typeof e ? e : Array.isArray(e) ? e.map(e => Y(e, {
                find: r,
                replace: n
            })) : e instanceof Object ? Object.entries(e).reduce((e, [i, o]) => ({ ...e,
                [i]: Y(o, {
                    find: r,
                    replace: n
                })
            }), {}) : e;

            function X(e) {
                let r = JSON.parse(e),
                    n = Y(r, {
                        find: e => "BigNumber" === e.type,
                        replace: e => g.O$.from(e.hex)
                    });
                return n
            }

            function Z({
                contract: e,
                functionName: r,
                args: n = []
            }) {
                if (r in e.functions) return r;
                let i = n ? .length ? ? 0,
                    o = Object.keys(e.functions).filter(e => e.startsWith(`${r}(`)).map(e => ({
                        name: e,
                        fragment: H.FunctionFragment.fromString(e)
                    })).filter(e => i === e.fragment.inputs.length);
                for (let a of o) {
                    let s = n.every((e, r) => {
                        let n = a.fragment.inputs[r];
                        return function e(r, n) {
                            let i = typeof r,
                                o = n.type;
                            switch (o) {
                                case "address":
                                    return (0, H.isAddress)(r);
                                case "bool":
                                    return "boolean" === i;
                                case "function":
                                case "string":
                                    return "string" === i;
                                default:
                                    if ("tuple" === o && "components" in n) return Object.values(n.components).every((n, i) => e(Object.values(r)[i], n));
                                    if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(o)) return "number" === i || "bigint" === i || g.O$.isBigNumber(r);
                                    if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(o)) return "string" === i || r instanceof Uint8Array;
                                    if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(o)) return Array.isArray(r) && r.every(r => e(r, { ...n,
                                        type: o.replace(/(\[[0-9]{0,}\])$/, "")
                                    }));
                                    return !1
                            }
                        }(e, n)
                    });
                    if (s) return a.name
                }
                return r
            }

            function ee(e) {
                ec() ? .config.logger ? .warn ? .(e)
            }

            function et(e) {
                return "string" == typeof e ? Number.parseInt(e, "0x" === e.trim().substring(0, 2) ? 16 : 10) : "bigint" == typeof e ? Number(e) : e
            }

            function er(e, r) {
                return e.slice(0, r).join(".") || "."
            }

            function en(e, r) {
                let {
                    length: n
                } = e;
                for (let i = 0; i < n; ++i)
                    if (e[i] === r) return i + 1;
                return 0
            }

            function ei(e, r, n, i) {
                return JSON.stringify(e, function(e, r) {
                    let n = "function" == typeof e,
                        i = "function" == typeof r,
                        o = [],
                        a = [];
                    return function(s, l) {
                        if ("object" == typeof l) {
                            if (o.length) {
                                let u = en(o, this);
                                0 === u ? o[o.length] = this : (o.splice(u), a.splice(u)), a[a.length] = s;
                                let c = en(o, l);
                                if (0 !== c) return i ? r.call(this, s, l, er(a, c)) : `[ref=${er(a,c)}]`
                            } else o[0] = l, a[0] = s
                        }
                        return n ? e.call(this, s, l) : l
                    }
                }(r, i), n ? ? void 0)
            }
            var eo = {
                getItem: e => "",
                setItem: (e, r) => null,
                removeItem: e => null
            };

            function ea({
                deserialize: e = X,
                key: r = "wagmi",
                serialize: n = ei,
                storage: i
            }) {
                return { ...i,
                    getItem: (n, o = null) => {
                        let a = i.getItem(`${r}.${n}`);
                        try {
                            return a ? e(a) : o
                        } catch (s) {
                            return console.warn(s), o
                        }
                    },
                    setItem: (e, o) => {
                        if (null === o) i.removeItem(`${r}.${e}`);
                        else try {
                            i.setItem(`${r}.${e}`, n(o))
                        } catch (a) {
                            console.error(a)
                        }
                    },
                    removeItem: e => i.removeItem(`${r}.${e}`)
                }
            }
            var es = "store",
                el = class {
                    constructor({
                        autoConnect: e = !1,
                        connectors: r = [new u._],
                        provider: n,
                        storage: l = ea({
                            storage: "undefined" != typeof window ? window.localStorage : eo
                        }),
                        logger: c = {
                            warn: console.warn
                        },
                        webSocketProvider: d
                    }) {
                        let m;
                        h(this, a), this.providers = new Map, this.webSocketProviders = new Map, h(this, i, void 0), h(this, o, void 0), this.config = {
                            autoConnect: e,
                            connectors: r,
                            logger: c,
                            provider: n,
                            storage: l,
                            webSocketProvider: d
                        };
                        let g = "disconnected";
                        if (e) try {
                            let v = l.getItem(es),
                                y = v ? .state ? .data;
                            g = y ? .account ? "reconnecting" : "connecting", m = y ? .chain ? .id
                        } catch (b) {}
                        this.store = V(L($(() => ({
                            connectors: "function" == typeof r ? r() : r,
                            provider: this.getProvider({
                                chainId: m
                            }),
                            status: g,
                            webSocketProvider: this.getWebSocketProvider({
                                chainId: m
                            })
                        }), {
                            deserialize: e => e,
                            name: es,
                            getStorage: () => l,
                            partialize: r => ({ ...e && {
                                    data: {
                                        account: r ? .data ? .account,
                                        chain: r ? .data ? .chain
                                    }
                                },
                                chains: r ? .chains
                            }),
                            serialize: e => e,
                            version: 2
                        }))), this.storage = l, f(this, o, l ? .getItem("wallet")), p(this, a, s).call(this), e && "undefined" != typeof window && setTimeout(async () => await this.autoConnect(), 0)
                    }
                    get chains() {
                        return this.store.getState().chains
                    }
                    get connectors() {
                        return this.store.getState().connectors
                    }
                    get connector() {
                        return this.store.getState().connector
                    }
                    get data() {
                        return this.store.getState().data
                    }
                    get error() {
                        return this.store.getState().error
                    }
                    get lastUsedChainId() {
                        return this.data ? .chain ? .id
                    }
                    get provider() {
                        return this.store.getState().provider
                    }
                    get status() {
                        return this.store.getState().status
                    }
                    get subscribe() {
                        return this.store.subscribe
                    }
                    get webSocketProvider() {
                        return this.store.getState().webSocketProvider
                    }
                    setState(e) {
                        let r = "function" == typeof e ? e(this.store.getState()) : e;
                        this.store.setState(r, !0)
                    }
                    clearState() {
                        this.setState(e => ({ ...e,
                            chains: void 0,
                            connector: void 0,
                            data: void 0,
                            error: void 0,
                            status: "disconnected"
                        }))
                    }
                    async destroy() {
                        this.connector && await this.connector.disconnect ? .(), f(this, i, !1), this.clearState(), this.store.destroy()
                    }
                    async autoConnect() {
                        if (d(this, i)) return;
                        f(this, i, !0), this.setState(e => ({ ...e,
                            status: e.data ? .account ? "reconnecting" : "connecting"
                        }));
                        let e = d(this, o) ? [...this.connectors].sort(e => e.id === d(this, o) ? -1 : 1) : this.connectors,
                            r = !1;
                        for (let n of e) {
                            if (!n.ready || !n.isAuthorized) continue;
                            let a = await n.isAuthorized();
                            if (!a) continue;
                            let s = await n.connect();
                            this.setState(e => ({ ...e,
                                connector: n,
                                chains: n ? .chains,
                                data: s,
                                status: "connected"
                            })), r = !0;
                            break
                        }
                        return r || this.setState(e => ({ ...e,
                            data: void 0,
                            status: "disconnected"
                        })), f(this, i, !1), this.data
                    }
                    getProvider({
                        bust: e,
                        chainId: r
                    } = {}) {
                        let n = this.providers.get(r ? ? -1);
                        if (n && !e) return n;
                        let {
                            provider: i
                        } = this.config;
                        return n = "function" == typeof i ? i({
                            chainId: r
                        }) : i, this.providers.set(r ? ? -1, n), n
                    }
                    getWebSocketProvider({
                        bust: e,
                        chainId: r
                    } = {}) {
                        let n = this.webSocketProviders.get(r ? ? -1);
                        if (n && !e) return n;
                        let {
                            webSocketProvider: i
                        } = this.config;
                        return (n = "function" == typeof i ? i({
                            chainId: r
                        }) : i) && this.webSocketProviders.set(r ? ? -1, n), n
                    }
                    setLastUsedConnector(e = null) {
                        this.storage ? .setItem("wallet", e)
                    }
                };

            function eu(e) {
                let r = new el(e);
                return l = r, r
            }

            function ec() {
                if (!l) throw Error("No wagmi client found. Ensure you have set up a client: https://wagmi.sh/react/client");
                return l
            }
            async function ed({
                chainId: e,
                connector: r
            }) {
                let n = ec(),
                    i = n.connector;
                if (i && r.id === i.id) throw new eU;
                try {
                    n.setState(e => ({ ...e,
                        status: "connecting"
                    }));
                    let o = await r.connect({
                        chainId: e
                    });
                    return n.setLastUsedConnector(r.id), n.setState(e => ({ ...e,
                        connector: r,
                        chains: r ? .chains,
                        data: o,
                        status: "connected"
                    })), n.storage.setItem("connected", !0), { ...o,
                        connector: r
                    }
                } catch (a) {
                    throw n.setState(e => ({ ...e,
                        status: e.connector ? "connected" : "disconnected"
                    })), a
                }
            }
            async function eh() {
                let e = ec();
                e.connector && await e.connector.disconnect(), e.clearState(), e.storage.removeItem("connected")
            }
            i = new WeakMap, o = new WeakMap, a = new WeakSet, s = function() {
                let e = e => {
                        this.setState(r => ({ ...r,
                            data: { ...r.data,
                                ...e
                            }
                        }))
                    },
                    r = () => {
                        this.clearState()
                    },
                    n = e => {
                        this.setState(r => ({ ...r,
                            error: e
                        }))
                    };
                this.store.subscribe(({
                    connector: e
                }) => e, (i, o) => {
                    o ? .off ? .("change", e), o ? .off ? .("disconnect", r), o ? .off ? .("error", n), i && (i.on ? .("change", e), i.on ? .("disconnect", r), i.on ? .("error", n))
                });
                let {
                    provider: i,
                    webSocketProvider: o
                } = this.config;
                ("function" == typeof i || "function" == typeof o) && this.store.subscribe(({
                    data: e
                }) => e ? .chain ? .id, e => {
                    this.setState(r => ({ ...r,
                        provider: this.getProvider({
                            bust: !0,
                            chainId: e
                        }),
                        webSocketProvider: this.getWebSocketProvider({
                            bust: !0,
                            chainId: e
                        })
                    }))
                })
            };
            var ef = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "allowance",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "decimals",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint8"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transfer",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }],
                ep = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "allowance",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "decimals",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint8"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "bytes32"
                    }]
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "bytes32"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transfer",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }],
                em = [{
                    inputs: [{
                        components: [{
                            name: "target",
                            type: "address"
                        }, {
                            name: "allowFailure",
                            type: "bool"
                        }, {
                            name: "callData",
                            type: "bytes"
                        }],
                        name: "calls",
                        type: "tuple[]"
                    }],
                    name: "aggregate3",
                    outputs: [{
                        components: [{
                            name: "success",
                            type: "bool"
                        }, {
                            name: "returnData",
                            type: "bytes"
                        }],
                        name: "returnData",
                        type: "tuple[]"
                    }],
                    stateMutability: "view",
                    type: "function"
                }];

            function eg({
                address: e,
                abi: r,
                signerOrProvider: n
            }) {
                return new G.CH(e, r, n)
            }

            function ev({
                chainId: e
            } = {}) {
                let r = ec();
                return e && r.getProvider({
                    chainId: e
                }) || r.provider
            }

            function ey({
                chainId: e
            } = {}) {
                let r = ec();
                return e && r.getWebSocketProvider({
                    chainId: e
                }) || r.webSocketProvider
            }

            function eb(e, r) {
                let n = ec(),
                    i = async () => r(ev(e)),
                    o = n.subscribe(({
                        provider: e
                    }) => e, i);
                return o
            }

            function ew(e, r) {
                let n = ec(),
                    i = async () => r(ey(e)),
                    o = n.subscribe(({
                        webSocketProvider: e
                    }) => e, i);
                return o
            }
            async function ex({
                allowFailure: e = !0,
                chainId: r,
                contracts: n,
                overrides: i
            }) {
                let o = ev({
                    chainId: r
                });
                if (!o.chains) throw new eG;
                let a = o.chains.find(e => e.id === r) || o.chains[0];
                if (!a) throw new eG;
                if (!a ? .contracts ? .multicall3) throw new eD({
                    chain: a
                });
                if ("number" == typeof i ? .blockTag && i ? .blockTag < (a.contracts.multicall3.blockCreated ? ? 0)) throw new eD({
                    blockNumber: i ? .blockTag,
                    chain: a
                });
                let s = eg({
                        address: a.contracts.multicall3.address,
                        abi: em,
                        signerOrProvider: o
                    }),
                    l = n.map(({
                        address: r,
                        abi: n,
                        functionName: i,
                        ...o
                    }) => {
                        let {
                            args: a
                        } = o || {}, s = eg({
                            address: r,
                            abi: n
                        }), l = Z({
                            contract: s,
                            functionName: i,
                            args: a
                        });
                        try {
                            let u = s[l];
                            u || ee(`"${l}" is not in the interface for contract "${r}"`);
                            let c = s.interface.encodeFunctionData(l, a ? ? []);
                            return {
                                target: r,
                                allowFailure: e,
                                callData: c
                            }
                        } catch (d) {
                            if (!e) throw d;
                            return {
                                target: r,
                                allowFailure: e,
                                callData: "0x"
                            }
                        }
                    }),
                    u = [l, ...i ? [i] : []],
                    c = await s.aggregate3(...u);
                return c.map(({
                    returnData: r,
                    success: i
                }, o) => {
                    let {
                        address: s,
                        abi: l,
                        args: u,
                        functionName: c
                    } = n[o], d = eg({
                        address: s,
                        abi: l
                    }), h = Z({
                        contract: d,
                        functionName: c,
                        args: u
                    });
                    if (!i) {
                        let f;
                        try {
                            d.interface.decodeFunctionResult(h, r)
                        } catch (p) {
                            if (f = new eV({
                                    address: s,
                                    args: u,
                                    chainId: a.id,
                                    functionName: h,
                                    errorMessage: p.message
                                }), !e) throw f;
                            ee(f.message)
                        }
                        return null
                    }
                    if ("0x" === r) {
                        let m = new eW({
                            address: s,
                            args: u,
                            chainId: a.id,
                            functionName: h
                        });
                        if (!e) throw m;
                        return ee(m.message), null
                    }
                    try {
                        let g = d.interface.decodeFunctionResult(h, r);
                        return Array.isArray(g) && 1 === g.length ? g[0] : g
                    } catch (y) {
                        let v = new eH({
                            address: s,
                            args: u,
                            chainId: a.id,
                            functionName: h,
                            errorMessage: y.message
                        });
                        if (!e) throw v;
                        return ee(v.message), null
                    }
                })
            }
            async function eE({
                address: e,
                args: r,
                chainId: n,
                abi: i,
                functionName: o,
                overrides: a
            }) {
                let s = ev({
                        chainId: n
                    }),
                    l = eg({
                        address: e,
                        abi: i,
                        signerOrProvider: s
                    }),
                    u = Z({
                        contract: l,
                        functionName: o,
                        args: r
                    }),
                    c = l[u];
                if (!c) throw new eq({
                    address: e,
                    functionName: u
                });
                let d = [...r ? ? [], ...a ? [a] : []];
                return c ? .(...d)
            }
            async function eC({
                allowFailure: e = !0,
                contracts: r,
                overrides: n
            }) {
                try {
                    let i;
                    let o = ev(),
                        a = r.reduce((e, r, n) => {
                            let i = r.chainId ? ? o.network.chainId;
                            return { ...e,
                                [i]: [...e[i] || [], {
                                    contract: r,
                                    index: n
                                }]
                            }
                        }, {}),
                        s = () => Object.entries(a).map(([r, i]) => ex({
                            allowFailure: e,
                            chainId: parseInt(r),
                            contracts: i.map(({
                                contract: e
                            }) => e),
                            overrides: n
                        }));
                    i = e ? (await Promise.allSettled(s())).map(e => {
                        if ("fulfilled" === e.status) return e.value;
                        if (e.reason instanceof eD) throw ee(e.reason.message), e.reason;
                        return null
                    }).flat() : (await Promise.all(s())).flat();
                    let l = Object.values(a).map(e => e.map(({
                        index: e
                    }) => e)).flat();
                    return i.reduce((e, r, n) => (e && (e[l[n]] = r), e), [])
                } catch (c) {
                    if (c instanceof eH || c instanceof eW || c instanceof eV) throw c;
                    let u = () => r.map(e => eE({ ...e,
                        overrides: n
                    }));
                    if (e) return (await Promise.allSettled(u())).map((e, n) => {
                        if ("fulfilled" === e.status) return e.value;
                        let {
                            address: i,
                            args: o,
                            chainId: a,
                            functionName: s
                        } = r[n], l = new eV({
                            address: i,
                            functionName: s,
                            chainId: a ? ? 1,
                            args: o,
                            errorMessage: e.reason
                        });
                        return ee(l.message), null
                    });
                    return await Promise.all(u())
                }
            }
            async function eA({
                chainId: e
            } = {}) {
                let r = ev({
                        chainId: e
                    }),
                    n = await r.getBlockNumber();
                return n
            }
            async function ek({
                address: e,
                chainId: r
            }) {
                let n = ev({
                        chainId: r
                    }),
                    i = await n.getAvatar(e);
                return i
            }
            async function eS({
                address: e,
                chainId: r
            }) {
                let n = ev({
                    chainId: r
                });
                return n.lookupAddress((0, H.getAddress)(e))
            }
            async function e_({
                address: e,
                chainId: r,
                formatUnits: n,
                token: i
            }) {
                let o = ec(),
                    a = ev({
                        chainId: r
                    });
                if (i) {
                    let s = async ({
                        abi: o
                    }) => {
                        let a = {
                                abi: o,
                                address: i,
                                chainId: r
                            },
                            [s, l, u] = await eC({
                                allowFailure: !1,
                                contracts: [{ ...a,
                                    functionName: "balanceOf",
                                    args: [e]
                                }, { ...a,
                                    functionName: "decimals"
                                }, { ...a,
                                    functionName: "symbol"
                                }]
                            });
                        return {
                            decimals: l,
                            formatted: (0, H.formatUnits)(s ? ? "0", n ? ? l),
                            symbol: u,
                            value: s
                        }
                    };
                    try {
                        return await s({
                            abi: ef
                        })
                    } catch (c) {
                        if (c instanceof eH) {
                            let {
                                symbol: l,
                                ...u
                            } = await s({
                                abi: ep
                            });
                            return {
                                symbol: (0, H.parseBytes32String)(l),
                                ...u
                            }
                        }
                        throw c
                    }
                }
                let d = [...o.provider.chains || [], ...o.chains ? ? []],
                    h = await a.getBalance(e),
                    f = d.find(e => e.id === a.network.chainId);
                return {
                    decimals: f ? .nativeCurrency.decimals ? ? 18,
                    formatted: (0, H.formatUnits)(h ? ? "0", n ? ? "ether"),
                    symbol: f ? .nativeCurrency.symbol ? ? "ETH",
                    value: h
                }
            }
            async function eP({
                chainId: e
            } = {}) {
                let r = ec(),
                    n = await r.connector ? .getSigner ? .({
                        chainId: e
                    }) || null;
                return n
            }

            function ej() {
                let {
                    data: e,
                    connector: r,
                    status: n
                } = ec();
                switch (n) {
                    case "connected":
                        return {
                            address: e ? .account,
                            connector: r,
                            isConnected: !0,
                            isConnecting: !1,
                            isDisconnected: !1,
                            isReconnecting: !1,
                            status: n
                        };
                    case "reconnecting":
                        return {
                            address: e ? .account,
                            connector: r,
                            isConnected: !!e ? .account,
                            isConnecting: !1,
                            isDisconnected: !1,
                            isReconnecting: !0,
                            status: n
                        };
                    case "connecting":
                        return {
                            address: void 0,
                            connector: void 0,
                            isConnected: !1,
                            isConnecting: !0,
                            isDisconnected: !1,
                            isReconnecting: !1,
                            status: n
                        };
                    case "disconnected":
                        return {
                            address: void 0,
                            connector: void 0,
                            isConnected: !1,
                            isConnecting: !1,
                            isDisconnected: !0,
                            isReconnecting: !1,
                            status: n
                        }
                }
            }

            function eT() {
                let e = ec(),
                    r = e.data ? .chain ? .id,
                    n = e.chains ? ? [],
                    i = [...e.provider.chains || [], ...n].find(e => e.id === r) ? ? {
                        id: r,
                        name: `Chain ${r}`,
                        network: `${r}`,
                        nativeCurrency: {
                            name: "Ether",
                            decimals: 18,
                            symbol: "ETH"
                        },
                        rpcUrls: {
                            default: {
                                http: [""]
                            }
                        }
                    };
                return {
                    chain: r ? { ...i,
                        ...e.data ? .chain,
                        id : r
                    } : void 0,
                    chains: n
                }
            }
            async function eR(e) {
                try {
                    let r = await eP();
                    if (!r) throw new e$;
                    return await r.signMessage(e.message)
                } catch (n) {
                    if (4001 === n.code || "ACTION_REJECTED" === n.code) throw new eY(n);
                    throw n
                }
            }
            async function eB({
                chainId: e
            }) {
                let {
                    connector: r
                } = ec();
                if (!r) throw new e$;
                if (!r.switchChain) throw new eJ({
                    connector: r
                });
                return r.switchChain(e)
            }

            function eO(e, {
                selector: r = e => e
            } = {}) {
                let n = ec(),
                    i = () => e(ej()),
                    o = n.subscribe(({
                        data: e,
                        connector: n,
                        status: i
                    }) => r({
                        address: e ? .account,
                        connector: n,
                        status: i
                    }), i, {
                        equalityFn: K
                    });
                return o
            }

            function eM(e, {
                selector: r = e => e
            } = {}) {
                let n = ec(),
                    i = () => e(eT()),
                    o = n.subscribe(({
                        data: e,
                        chains: n
                    }) => r({
                        chainId: e ? .chain ? .id,
                        chains: n
                    }), i, {
                        equalityFn: K
                    });
                return o
            }

            function eI({
                chainId: e
            }, r) {
                let n = ec(),
                    i = async () => {
                        let n = await eP({
                            chainId: e
                        });
                        return ec().connector ? r(n) : r(null)
                    },
                    o = n.subscribe(({
                        data: e,
                        connector: r
                    }) => ({
                        account: e ? .account,
                        chainId: e ? .chain ? .id,
                        connector: r
                    }), i, {
                        equalityFn: K
                    });
                return o
            }
            var eN = class extends Error {
                    constructor(e, r) {
                        let {
                            cause: n,
                            code: i,
                            data: o
                        } = r;
                        if (!Number.isInteger(i)) throw Error('"code" must be an integer.');
                        if (!e || "string" != typeof e) throw Error('"message" must be a nonempty string.');
                        super(e), this.cause = n, this.code = i, this.data = o
                    }
                },
                eF = class extends eN {
                    constructor(e, r) {
                        let {
                            cause: n,
                            code: i,
                            data: o
                        } = r;
                        if (!(Number.isInteger(i) && i >= 1e3 && i <= 4999)) throw Error('"code" must be an integer such that: 1000 <= code <= 4999');
                        super(e, {
                            cause: n,
                            code: i,
                            data: o
                        })
                    }
                },
                eL = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "AddChainError", this.message = "Error adding chain"
                    }
                },
                eD = class extends Error {
                    constructor({
                        blockNumber: e,
                        chain: r
                    }) {
                        super(`Chain "${r.name}" does not support multicall${e?` on block ${e}`:""}.`), this.name = "ChainDoesNotSupportMulticall"
                    }
                },
                ez = class extends Error {
                    constructor({
                        chainId: e,
                        connectorId: r
                    }) {
                        super(`Chain "${e}" not configured for connector "${r}".`), this.name = "ChainNotConfigured"
                    }
                },
                eU = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConnectorAlreadyConnectedError", this.message = "Connector already connected"
                    }
                },
                e$ = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConnectorNotFoundError", this.message = "Connector not found"
                    }
                },
                eq = class extends Error {
                    constructor({
                        address: e,
                        chainId: r,
                        functionName: n
                    }) {
                        let {
                            chains: i,
                            network: o
                        } = ev(), a = i ? .find(({
                            id: e
                        }) => e === (r || o.chainId)), s = a ? .blockExplorers ? .default;
                        super([`Function "${n}" on contract "${e}" does not exist.`, ...s ? ["", `${s?.name}: ${s?.url}/address/${e}#readContract`] : []].join("\n")), this.name = "ContractMethodDoesNotExistError"
                    }
                },
                eW = class extends Error {
                    constructor({
                        address: e,
                        args: r,
                        chainId: n,
                        functionName: i
                    }) {
                        super(["Contract read returned an empty response. This could be due to any of the following:", `- The contract does not have the function "${i}",`, "- The parameters passed to the contract function may be invalid, or", "- The address is not a contract.", "", "Config:", JSON.stringify({
                            address: e,
                            abi: "...",
                            functionName: i,
                            chainId: n,
                            args: r
                        }, null, 2)].join("\n")), this.name = "ContractMethodNoResultError"
                    }
                },
                eV = class extends Error {
                    constructor({
                        address: e,
                        args: r,
                        chainId: n,
                        functionName: i,
                        errorMessage: o
                    }) {
                        super(["Contract method reverted with an error.", "", "Config:", JSON.stringify({
                            address: e,
                            abi: "...",
                            functionName: i,
                            chainId: n,
                            args: r
                        }, null, 2), "", `Details: ${o}`].join("\n")), this.name = "ContractMethodRevertedError"
                    }
                },
                eH = class extends Error {
                    constructor({
                        address: e,
                        args: r,
                        chainId: n,
                        functionName: i,
                        errorMessage: o
                    }) {
                        super(["Failed to decode contract function result.", "", "Config:", JSON.stringify({
                            address: e,
                            abi: "...",
                            functionName: i,
                            chainId: n,
                            args: r
                        }, null, 2), "", `Details: ${o}`].join("\n")), this.name = "ContractResultDecodeError"
                    }
                },
                eG = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ProviderChainsNotFound", this.message = "No chains were found on the wagmi provider. Some functions that require a chain may not work.\n\nIt is recommended to add a list of chains to the provider in `createClient`.\n\nExample:\n\n```\nimport { getDefaultProvider } from 'ethers'\nimport { chain, createClient } from 'wagmi'\n\ncreateClient({\n  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })\n})\n```"
                    }
                },
                eK = class extends eN {
                    constructor(e) {
                        super("Resource unavailable", {
                            cause: e,
                            code: -32002
                        }), this.name = "ResourceUnavailable"
                    }
                },
                eQ = class extends eF {
                    constructor(e) {
                        super("Error switching chain", {
                            cause: e,
                            code: 4902
                        }), this.name = "SwitchChainError"
                    }
                },
                eJ = class extends Error {
                    constructor({
                        connector: e
                    }) {
                        super(`"${e.name}" does not support programmatic chain switching.`), this.name = "SwitchChainNotSupportedError"
                    }
                },
                eY = class extends eF {
                    constructor(e) {
                        super("User rejected request", {
                            cause: e,
                            code: 4001
                        }), this.name = "UserRejectedRequestError"
                    }
                }
        },
        86501: function(e, r, n) {
            "use strict";
            let i, o;
            n.d(r, {
                x7: function() {
                    return eo
                },
                Am: function() {
                    return D
                }
            });
            var a, s = n(67294);
            let l = {
                    data: ""
                },
                u = e => "object" == typeof window ? ((e ? e.querySelector("#_goober") : window._goober) || Object.assign((e || document.head).appendChild(document.createElement("style")), {
                    innerHTML: " ",
                    id: "_goober"
                })).firstChild : e || l,
                c = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,
                d = /\/\*[^]*?\*\/|  +/g,
                h = /\n+/g,
                f = (e, r) => {
                    let n = "",
                        i = "",
                        o = "";
                    for (let a in e) {
                        let s = e[a];
                        "@" == a[0] ? "i" == a[1] ? n = a + " " + s + ";" : i += "f" == a[1] ? f(s, a) : a + "{" + f(s, "k" == a[1] ? "" : r) + "}" : "object" == typeof s ? i += f(s, r ? r.replace(/([^,])+/g, e => a.replace(/(^:.*)|([^,])+/g, r => /&/.test(r) ? r.replace(/&/g, e) : e ? e + " " + r : r)) : a) : null != s && (a = /^--/.test(a) ? a : a.replace(/[A-Z]/g, "-$&").toLowerCase(), o += f.p ? f.p(a, s) : a + ":" + s + ";")
                    }
                    return n + (r && o ? r + "{" + o + "}" : o) + i
                },
                p = {},
                m = e => {
                    if ("object" == typeof e) {
                        let r = "";
                        for (let n in e) r += n + m(e[n]);
                        return r
                    }
                    return e
                },
                g = (e, r, n, i, o) => {
                    var a, s;
                    let l = m(e),
                        u = p[l] || (p[l] = (e => {
                            let r = 0,
                                n = 11;
                            for (; r < e.length;) n = 101 * n + e.charCodeAt(r++) >>> 0;
                            return "go" + n
                        })(l));
                    if (!p[u]) {
                        let g = l !== e ? e : (e => {
                            let r, n, i = [{}];
                            for (; r = c.exec(e.replace(d, ""));) r[4] ? i.shift() : r[3] ? (n = r[3].replace(h, " ").trim(), i.unshift(i[0][n] = i[0][n] || {})) : i[0][r[1]] = r[2].replace(h, " ").trim();
                            return i[0]
                        })(e);
                        p[u] = f(o ? {
                            ["@keyframes " + u]: g
                        } : g, n ? "" : "." + u)
                    }
                    let v = n && p.g ? p.g : null;
                    return n && (p.g = p[u]), a = p[u], s = r, v ? s.data = s.data.replace(v, a) : -1 === s.data.indexOf(a) && (s.data = i ? a + s.data : s.data + a), u
                },
                v = (e, r, n) => e.reduce((e, i, o) => {
                    let a = r[o];
                    if (a && a.call) {
                        let s = a(n),
                            l = s && s.props && s.props.className || /^go/.test(s) && s;
                        a = l ? "." + l : s && "object" == typeof s ? s.props ? "" : f(s, "") : !1 === s ? "" : s
                    }
                    return e + i + (null == a ? "" : a)
                }, "");

            function y(e) {
                let r = this || {},
                    n = e.call ? e(r.p) : e;
                return g(n.unshift ? n.raw ? v(n, [].slice.call(arguments, 1), r.p) : n.reduce((e, n) => Object.assign(e, n && n.call ? n(r.p) : n), {}) : n, u(r.target), r.g, r.o, r.k)
            }
            y.bind({
                g: 1
            });
            let b, w, x, E = y.bind({
                k: 1
            });

            function C(e, r) {
                let n = this || {};
                return function() {
                    let i = arguments;

                    function o(a, s) {
                        let l = Object.assign({}, a),
                            u = l.className || o.className;
                        n.p = Object.assign({
                            theme: w && w()
                        }, l), n.o = / *go\d+/.test(u), l.className = y.apply(n, i) + (u ? " " + u : ""), r && (l.ref = s);
                        let c = e;
                        return e[0] && (c = l.as || e, delete l.as), x && c[0] && x(l), b(c, l)
                    }
                    return r ? r(o) : o
                }
            }
            var A = e => "function" == typeof e,
                k = (e, r) => A(e) ? e(r) : e,
                S = (i = 0, () => (++i).toString()),
                _ = () => {
                    if (void 0 === o && "u" > typeof window) {
                        let e = matchMedia("(prefers-reduced-motion: reduce)");
                        o = !e || e.matches
                    }
                    return o
                },
                P = new Map,
                j = e => {
                    if (P.has(e)) return;
                    let r = setTimeout(() => {
                        P.delete(e), M({
                            type: 4,
                            toastId: e
                        })
                    }, 1e3);
                    P.set(e, r)
                },
                T = e => {
                    let r = P.get(e);
                    r && clearTimeout(r)
                },
                R = (e, r) => {
                    switch (r.type) {
                        case 0:
                            return { ...e,
                                toasts: [r.toast, ...e.toasts].slice(0, 20)
                            };
                        case 1:
                            return r.toast.id && T(r.toast.id), { ...e,
                                toasts: e.toasts.map(e => e.id === r.toast.id ? { ...e,
                                    ...r.toast
                                } : e)
                            };
                        case 2:
                            let {
                                toast: n
                            } = r;
                            return e.toasts.find(e => e.id === n.id) ? R(e, {
                                type: 1,
                                toast: n
                            }) : R(e, {
                                type: 0,
                                toast: n
                            });
                        case 3:
                            let {
                                toastId: i
                            } = r;
                            return i ? j(i) : e.toasts.forEach(e => {
                                j(e.id)
                            }), { ...e,
                                toasts: e.toasts.map(e => e.id === i || void 0 === i ? { ...e,
                                    visible: !1
                                } : e)
                            };
                        case 4:
                            return void 0 === r.toastId ? { ...e,
                                toasts: []
                            } : { ...e,
                                toasts: e.toasts.filter(e => e.id !== r.toastId)
                            };
                        case 5:
                            return { ...e,
                                pausedAt: r.time
                            };
                        case 6:
                            let o = r.time - (e.pausedAt || 0);
                            return { ...e,
                                pausedAt: void 0,
                                toasts: e.toasts.map(e => ({ ...e,
                                    pauseDuration: e.pauseDuration + o
                                }))
                            }
                    }
                },
                B = [],
                O = {
                    toasts: [],
                    pausedAt: void 0
                },
                M = e => {
                    O = R(O, e), B.forEach(e => {
                        e(O)
                    })
                },
                I = {
                    blank: 4e3,
                    error: 4e3,
                    success: 2e3,
                    loading: 1 / 0,
                    custom: 4e3
                },
                N = (e = {}) => {
                    let [r, n] = (0, s.useState)(O);
                    (0, s.useEffect)(() => (B.push(n), () => {
                        let e = B.indexOf(n);
                        e > -1 && B.splice(e, 1)
                    }), [r]);
                    let i = r.toasts.map(r => {
                        var n, i;
                        return { ...e,
                            ...e[r.type],
                            ...r,
                            duration: r.duration || (null == (n = e[r.type]) ? void 0 : n.duration) || (null == e ? void 0 : e.duration) || I[r.type],
                            style: { ...e.style,
                                ...null == (i = e[r.type]) ? void 0 : i.style,
                                ...r.style
                            }
                        }
                    });
                    return { ...r,
                        toasts: i
                    }
                },
                F = (e, r = "blank", n) => ({
                    createdAt: Date.now(),
                    visible: !0,
                    type: r,
                    ariaProps: {
                        role: "status",
                        "aria-live": "polite"
                    },
                    message: e,
                    pauseDuration: 0,
                    ...n,
                    id: (null == n ? void 0 : n.id) || S()
                }),
                L = e => (r, n) => {
                    let i = F(r, e, n);
                    return M({
                        type: 2,
                        toast: i
                    }), i.id
                },
                D = (e, r) => L("blank")(e, r);
            D.error = L("error"), D.success = L("success"), D.loading = L("loading"), D.custom = L("custom"), D.dismiss = e => {
                M({
                    type: 3,
                    toastId: e
                })
            }, D.remove = e => M({
                type: 4,
                toastId: e
            }), D.promise = (e, r, n) => {
                let i = D.loading(r.loading, { ...n,
                    ...null == n ? void 0 : n.loading
                });
                return e.then(e => (D.success(k(r.success, e), {
                    id: i,
                    ...n,
                    ...null == n ? void 0 : n.success
                }), e)).catch(e => {
                    D.error(k(r.error, e), {
                        id: i,
                        ...n,
                        ...null == n ? void 0 : n.error
                    })
                }), e
            };
            var z = (e, r) => {
                    M({
                        type: 1,
                        toast: {
                            id: e,
                            height: r
                        }
                    })
                },
                U = () => {
                    M({
                        type: 5,
                        time: Date.now()
                    })
                },
                $ = e => {
                    let {
                        toasts: r,
                        pausedAt: n
                    } = N(e);
                    (0, s.useEffect)(() => {
                        if (n) return;
                        let e = Date.now(),
                            i = r.map(r => {
                                if (r.duration === 1 / 0) return;
                                let n = (r.duration || 0) + r.pauseDuration - (e - r.createdAt);
                                if (n < 0) {
                                    r.visible && D.dismiss(r.id);
                                    return
                                }
                                return setTimeout(() => D.dismiss(r.id), n)
                            });
                        return () => {
                            i.forEach(e => e && clearTimeout(e))
                        }
                    }, [r, n]);
                    let i = (0, s.useCallback)(() => {
                            n && M({
                                type: 6,
                                time: Date.now()
                            })
                        }, [n]),
                        o = (0, s.useCallback)((e, n) => {
                            let {
                                reverseOrder: i = !1,
                                gutter: o = 8,
                                defaultPosition: a
                            } = n || {}, s = r.filter(r => (r.position || a) === (e.position || a) && r.height), l = s.findIndex(r => r.id === e.id), u = s.filter((e, r) => r < l && e.visible).length;
                            return s.filter(e => e.visible).slice(...i ? [u + 1] : [0, u]).reduce((e, r) => e + (r.height || 0) + o, 0)
                        }, [r]);
                    return {
                        toasts: r,
                        handlers: {
                            updateHeight: z,
                            startPause: U,
                            endPause: i,
                            calculateOffset: o
                        }
                    }
                },
                q = C("div")
            `
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${e=>e.primary||"#ff4b4b"};
  position: relative;
  transform: rotate(45deg);

  animation: ${E`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
 transform: scale(1) rotate(45deg);
  opacity: 1;
}`} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;

  &:after,
  &:before {
    content: '';
    animation: ${E`
from {
  transform: scale(0);
  opacity: 0;
}
to {
  transform: scale(1);
  opacity: 1;
}`} 0.15s ease-out forwards;
    animation-delay: 150ms;
    position: absolute;
    border-radius: 3px;
    opacity: 0;
    background: ${e=>e.secondary||"#fff"};
    bottom: 9px;
    left: 4px;
    height: 2px;
    width: 12px;
  }

  &:before {
    animation: ${E`
from {
  transform: scale(0) rotate(90deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(90deg);
	opacity: 1;
}`} 0.15s ease-out forwards;
    animation-delay: 180ms;
    transform: rotate(90deg);
  }
`, W = C("div")
            `
  width: 12px;
  height: 12px;
  box-sizing: border-box;
  border: 2px solid;
  border-radius: 100%;
  border-color: ${e=>e.secondary||"#e0e0e0"};
  border-right-color: ${e=>e.primary||"#616161"};
  animation: ${E`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`} 1s linear infinite;
`, V = C("div")
            `
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${e=>e.primary||"#61d345"};
  position: relative;
  transform: rotate(45deg);

  animation: ${E`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(45deg);
	opacity: 1;
}`} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;
  &:after {
    content: '';
    box-sizing: border-box;
    animation: ${E`
0% {
	height: 0;
	width: 0;
	opacity: 0;
}
40% {
  height: 0;
	width: 6px;
	opacity: 1;
}
100% {
  opacity: 1;
  height: 10px;
}`} 0.2s ease-out forwards;
    opacity: 0;
    animation-delay: 200ms;
    position: absolute;
    border-right: 2px solid;
    border-bottom: 2px solid;
    border-color: ${e=>e.secondary||"#fff"};
    bottom: 6px;
    left: 6px;
    height: 10px;
    width: 6px;
  }
`, H = C("div")
            `
  position: absolute;
`, G = C("div")
            `
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 20px;
  min-height: 20px;
`, K = C("div")
            `
  position: relative;
  transform: scale(0.6);
  opacity: 0.4;
  min-width: 20px;
  animation: ${E`
from {
  transform: scale(0.6);
  opacity: 0.4;
}
to {
  transform: scale(1);
  opacity: 1;
}`} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
`, Q = ({
                toast: e
            }) => {
                let {
                    icon: r,
                    type: n,
                    iconTheme: i
                } = e;
                return void 0 !== r ? "string" == typeof r ? s.createElement(K, null, r) : r : "blank" === n ? null : s.createElement(G, null, s.createElement(W, { ...i
                }), "loading" !== n && s.createElement(H, null, "error" === n ? s.createElement(q, { ...i
                }) : s.createElement(V, { ...i
                })))
            }, J = e => `
0% {transform: translate3d(0,${-200*e}%,0) scale(.6); opacity:.5;}
100% {transform: translate3d(0,0,0) scale(1); opacity:1;}
`, Y = e => `
0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}
100% {transform: translate3d(0,${-150*e}%,-1px) scale(.6); opacity:0;}
`, X = C("div")
            `
  display: flex;
  align-items: center;
  background: #fff;
  color: #363636;
  line-height: 1.3;
  will-change: transform;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);
  max-width: 350px;
  pointer-events: auto;
  padding: 8px 10px;
  border-radius: 8px;
`, Z = C("div")
            `
  display: flex;
  justify-content: center;
  margin: 4px 10px;
  color: inherit;
  flex: 1 1 auto;
  white-space: pre-line;
`, ee = (e, r) => {
                let n = e.includes("top") ? 1 : -1,
                    [i, o] = _() ? ["0%{opacity:0;} 100%{opacity:1;}", "0%{opacity:1;} 100%{opacity:0;}"] : [J(n), Y(n)];
                return {
                    animation: r ? `${E(i)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards` : `${E(o)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`
                }
            }, et = s.memo(({
                toast: e,
                position: r,
                style: n,
                children: i
            }) => {
                let o = e.height ? ee(e.position || r || "top-center", e.visible) : {
                        opacity: 0
                    },
                    a = s.createElement(Q, {
                        toast: e
                    }),
                    l = s.createElement(Z, { ...e.ariaProps
                    }, k(e.message, e));
                return s.createElement(X, {
                    className: e.className,
                    style: { ...o,
                        ...n,
                        ...e.style
                    }
                }, "function" == typeof i ? i({
                    icon: a,
                    message: l
                }) : s.createElement(s.Fragment, null, a, l))
            });
            a = s.createElement, f.p = void 0, b = a, w = void 0, x = void 0;
            var er = ({
                    id: e,
                    className: r,
                    style: n,
                    onHeightUpdate: i,
                    children: o
                }) => {
                    let a = s.useCallback(r => {
                        if (r) {
                            let n = () => {
                                i(e, r.getBoundingClientRect().height)
                            };
                            n(), new MutationObserver(n).observe(r, {
                                subtree: !0,
                                childList: !0,
                                characterData: !0
                            })
                        }
                    }, [e, i]);
                    return s.createElement("div", {
                        ref: a,
                        className: r,
                        style: n
                    }, o)
                },
                en = (e, r) => {
                    let n = e.includes("top"),
                        i = e.includes("center") ? {
                            justifyContent: "center"
                        } : e.includes("right") ? {
                            justifyContent: "flex-end"
                        } : {};
                    return {
                        left: 0,
                        right: 0,
                        display: "flex",
                        position: "absolute",
                        transition: _() ? void 0 : "all 230ms cubic-bezier(.21,1.02,.73,1)",
                        transform: `translateY(${r*(n?1:-1)}px)`,
                        ...n ? {
                            top: 0
                        } : {
                            bottom: 0
                        },
                        ...i
                    }
                },
                ei = y `
  z-index: 9999;
  > * {
    pointer-events: auto;
  }
`,
                eo = ({
                    reverseOrder: e,
                    position: r = "top-center",
                    toastOptions: n,
                    gutter: i,
                    children: o,
                    containerStyle: a,
                    containerClassName: l
                }) => {
                    let {
                        toasts: u,
                        handlers: c
                    } = $(n);
                    return s.createElement("div", {
                        style: {
                            position: "fixed",
                            zIndex: 9999,
                            top: 16,
                            left: 16,
                            right: 16,
                            bottom: 16,
                            pointerEvents: "none",
                            ...a
                        },
                        className: l,
                        onMouseEnter: c.startPause,
                        onMouseLeave: c.endPause
                    }, u.map(n => {
                        let a = n.position || r,
                            l = en(a, c.calculateOffset(n, {
                                reverseOrder: e,
                                gutter: i,
                                defaultPosition: r
                            }));
                        return s.createElement(er, {
                            id: n.id,
                            key: n.id,
                            onHeightUpdate: c.updateHeight,
                            className: n.visible ? ei : "",
                            style: l
                        }, "custom" === n.type ? k(n.message, n) : o ? o(n) : s.createElement(et, {
                            toast: n,
                            position: a
                        }))
                    }))
                }
        },
        97582: function(e, r, n) {
            "use strict";
            n.r(r), n.d(r, {
                __addDisposableResource: function() {
                    return I
                },
                __assign: function() {
                    return a
                },
                __asyncDelegator: function() {
                    return S
                },
                __asyncGenerator: function() {
                    return k
                },
                __asyncValues: function() {
                    return _
                },
                __await: function() {
                    return A
                },
                __awaiter: function() {
                    return m
                },
                __classPrivateFieldGet: function() {
                    return B
                },
                __classPrivateFieldIn: function() {
                    return M
                },
                __classPrivateFieldSet: function() {
                    return O
                },
                __createBinding: function() {
                    return v
                },
                __decorate: function() {
                    return l
                },
                __disposeResources: function() {
                    return F
                },
                __esDecorate: function() {
                    return c
                },
                __exportStar: function() {
                    return y
                },
                __extends: function() {
                    return o
                },
                __generator: function() {
                    return g
                },
                __importDefault: function() {
                    return R
                },
                __importStar: function() {
                    return T
                },
                __makeTemplateObject: function() {
                    return P
                },
                __metadata: function() {
                    return p
                },
                __param: function() {
                    return u
                },
                __propKey: function() {
                    return h
                },
                __read: function() {
                    return w
                },
                __rest: function() {
                    return s
                },
                __runInitializers: function() {
                    return d
                },
                __setFunctionName: function() {
                    return f
                },
                __spread: function() {
                    return x
                },
                __spreadArray: function() {
                    return C
                },
                __spreadArrays: function() {
                    return E
                },
                __values: function() {
                    return b
                }
            });
            var i = function(e, r) {
                return (i = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, r) {
                    e.__proto__ = r
                } || function(e, r) {
                    for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n])
                })(e, r)
            };

            function o(e, r) {
                if ("function" != typeof r && null !== r) throw TypeError("Class extends value " + String(r) + " is not a constructor or null");

                function n() {
                    this.constructor = e
                }
                i(e, r), e.prototype = null === r ? Object.create(r) : (n.prototype = r.prototype, new n)
            }
            var a = function() {
                return (a = Object.assign || function(e) {
                    for (var r, n = 1, i = arguments.length; n < i; n++)
                        for (var o in r = arguments[n]) Object.prototype.hasOwnProperty.call(r, o) && (e[o] = r[o]);
                    return e
                }).apply(this, arguments)
            };

            function s(e, r) {
                var n = {};
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && 0 > r.indexOf(i) && (n[i] = e[i]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                    for (var o = 0, i = Object.getOwnPropertySymbols(e); o < i.length; o++) 0 > r.indexOf(i[o]) && Object.prototype.propertyIsEnumerable.call(e, i[o]) && (n[i[o]] = e[i[o]]);
                return n
            }

            function l(e, r, n, i) {
                var o, a = arguments.length,
                    s = a < 3 ? r : null === i ? i = Object.getOwnPropertyDescriptor(r, n) : i;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, r, n, i);
                else
                    for (var l = e.length - 1; l >= 0; l--)(o = e[l]) && (s = (a < 3 ? o(s) : a > 3 ? o(r, n, s) : o(r, n)) || s);
                return a > 3 && s && Object.defineProperty(r, n, s), s
            }

            function u(e, r) {
                return function(n, i) {
                    r(n, i, e)
                }
            }

            function c(e, r, n, i, o, a) {
                function s(e) {
                    if (void 0 !== e && "function" != typeof e) throw TypeError("Function expected");
                    return e
                }
                for (var l, u = i.kind, c = "getter" === u ? "get" : "setter" === u ? "set" : "value", d = !r && e ? i.static ? e : e.prototype : null, h = r || (d ? Object.getOwnPropertyDescriptor(d, i.name) : {}), f = !1, p = n.length - 1; p >= 0; p--) {
                    var m = {};
                    for (var g in i) m[g] = "access" === g ? {} : i[g];
                    for (var g in i.access) m.access[g] = i.access[g];
                    m.addInitializer = function(e) {
                        if (f) throw TypeError("Cannot add initializers after decoration has completed");
                        a.push(s(e || null))
                    };
                    var v = (0, n[p])("accessor" === u ? {
                        get: h.get,
                        set: h.set
                    } : h[c], m);
                    if ("accessor" === u) {
                        if (void 0 === v) continue;
                        if (null === v || "object" != typeof v) throw TypeError("Object expected");
                        (l = s(v.get)) && (h.get = l), (l = s(v.set)) && (h.set = l), (l = s(v.init)) && o.unshift(l)
                    } else(l = s(v)) && ("field" === u ? o.unshift(l) : h[c] = l)
                }
                d && Object.defineProperty(d, i.name, h), f = !0
            }

            function d(e, r, n) {
                for (var i = arguments.length > 2, o = 0; o < r.length; o++) n = i ? r[o].call(e, n) : r[o].call(e);
                return i ? n : void 0
            }

            function h(e) {
                return "symbol" == typeof e ? e : "".concat(e)
            }

            function f(e, r, n) {
                return "symbol" == typeof r && (r = r.description ? "[".concat(r.description, "]") : ""), Object.defineProperty(e, "name", {
                    configurable: !0,
                    value: n ? "".concat(n, " ", r) : r
                })
            }

            function p(e, r) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, r)
            }

            function m(e, r, n, i) {
                return new(n || (n = Promise))(function(o, a) {
                    function s(e) {
                        try {
                            u(i.next(e))
                        } catch (r) {
                            a(r)
                        }
                    }

                    function l(e) {
                        try {
                            u(i.throw(e))
                        } catch (r) {
                            a(r)
                        }
                    }

                    function u(e) {
                        var r;
                        e.done ? o(e.value) : ((r = e.value) instanceof n ? r : new n(function(e) {
                            e(r)
                        })).then(s, l)
                    }
                    u((i = i.apply(e, r || [])).next())
                })
            }

            function g(e, r) {
                var n, i, o, a, s = {
                    label: 0,
                    sent: function() {
                        if (1 & o[0]) throw o[1];
                        return o[1]
                    },
                    trys: [],
                    ops: []
                };
                return a = {
                    next: l(0),
                    throw: l(1),
                    return: l(2)
                }, "function" == typeof Symbol && (a[Symbol.iterator] = function() {
                    return this
                }), a;

                function l(l) {
                    return function(u) {
                        return function(l) {
                            if (n) throw TypeError("Generator is already executing.");
                            for (; a && (a = 0, l[0] && (s = 0)), s;) try {
                                if (n = 1, i && (o = 2 & l[0] ? i.return : l[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, l[1])).done) return o;
                                switch (i = 0, o && (l = [2 & l[0], o.value]), l[0]) {
                                    case 0:
                                    case 1:
                                        o = l;
                                        break;
                                    case 4:
                                        return s.label++, {
                                            value: l[1],
                                            done: !1
                                        };
                                    case 5:
                                        s.label++, i = l[1], l = [0];
                                        continue;
                                    case 7:
                                        l = s.ops.pop(), s.trys.pop();
                                        continue;
                                    default:
                                        if (!(o = (o = s.trys).length > 0 && o[o.length - 1]) && (6 === l[0] || 2 === l[0])) {
                                            s = 0;
                                            continue
                                        }
                                        if (3 === l[0] && (!o || l[1] > o[0] && l[1] < o[3])) {
                                            s.label = l[1];
                                            break
                                        }
                                        if (6 === l[0] && s.label < o[1]) {
                                            s.label = o[1], o = l;
                                            break
                                        }
                                        if (o && s.label < o[2]) {
                                            s.label = o[2], s.ops.push(l);
                                            break
                                        }
                                        o[2] && s.ops.pop(), s.trys.pop();
                                        continue
                                }
                                l = r.call(e, s)
                            } catch (u) {
                                l = [6, u], i = 0
                            } finally {
                                n = o = 0
                            }
                            if (5 & l[0]) throw l[1];
                            return {
                                value: l[0] ? l[1] : void 0,
                                done: !0
                            }
                        }([l, u])
                    }
                }
            }
            var v = Object.create ? function(e, r, n, i) {
                void 0 === i && (i = n);
                var o = Object.getOwnPropertyDescriptor(r, n);
                (!o || ("get" in o ? !r.__esModule : o.writable || o.configurable)) && (o = {
                    enumerable: !0,
                    get: function() {
                        return r[n]
                    }
                }), Object.defineProperty(e, i, o)
            } : function(e, r, n, i) {
                void 0 === i && (i = n), e[i] = r[n]
            };

            function y(e, r) {
                for (var n in e) "default" === n || Object.prototype.hasOwnProperty.call(r, n) || v(r, e, n)
            }

            function b(e) {
                var r = "function" == typeof Symbol && Symbol.iterator,
                    n = r && e[r],
                    i = 0;
                if (n) return n.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && i >= e.length && (e = void 0), {
                            value: e && e[i++],
                            done: !e
                        }
                    }
                };
                throw TypeError(r ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function w(e, r) {
                var n = "function" == typeof Symbol && e[Symbol.iterator];
                if (!n) return e;
                var i, o, a = n.call(e),
                    s = [];
                try {
                    for (;
                        (void 0 === r || r-- > 0) && !(i = a.next()).done;) s.push(i.value)
                } catch (l) {
                    o = {
                        error: l
                    }
                } finally {
                    try {
                        i && !i.done && (n = a.return) && n.call(a)
                    } finally {
                        if (o) throw o.error
                    }
                }
                return s
            }

            function x() {
                for (var e = [], r = 0; r < arguments.length; r++) e = e.concat(w(arguments[r]));
                return e
            }

            function E() {
                for (var e = 0, r = 0, n = arguments.length; r < n; r++) e += arguments[r].length;
                for (var i = Array(e), o = 0, r = 0; r < n; r++)
                    for (var a = arguments[r], s = 0, l = a.length; s < l; s++, o++) i[o] = a[s];
                return i
            }

            function C(e, r, n) {
                if (n || 2 == arguments.length)
                    for (var i, o = 0, a = r.length; o < a; o++) !i && o in r || (i || (i = Array.prototype.slice.call(r, 0, o)), i[o] = r[o]);
                return e.concat(i || Array.prototype.slice.call(r))
            }

            function A(e) {
                return this instanceof A ? (this.v = e, this) : new A(e)
            }

            function k(e, r, n) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var i, o = n.apply(e, r || []),
                    a = [];
                return i = {}, s("next"), s("throw"), s("return"), i[Symbol.asyncIterator] = function() {
                    return this
                }, i;

                function s(e) {
                    o[e] && (i[e] = function(r) {
                        return new Promise(function(n, i) {
                            a.push([e, r, n, i]) > 1 || l(e, r)
                        })
                    })
                }

                function l(e, r) {
                    try {
                        var n;
                        (n = o[e](r)).value instanceof A ? Promise.resolve(n.value.v).then(u, c) : d(a[0][2], n)
                    } catch (i) {
                        d(a[0][3], i)
                    }
                }

                function u(e) {
                    l("next", e)
                }

                function c(e) {
                    l("throw", e)
                }

                function d(e, r) {
                    e(r), a.shift(), a.length && l(a[0][0], a[0][1])
                }
            }

            function S(e) {
                var r, n;
                return r = {}, i("next"), i("throw", function(e) {
                    throw e
                }), i("return"), r[Symbol.iterator] = function() {
                    return this
                }, r;

                function i(i, o) {
                    r[i] = e[i] ? function(r) {
                        return (n = !n) ? {
                            value: A(e[i](r)),
                            done: !1
                        } : o ? o(r) : r
                    } : o
                }
            }

            function _(e) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var r, n = e[Symbol.asyncIterator];
                return n ? n.call(e) : (e = b(e), r = {}, i("next"), i("throw"), i("return"), r[Symbol.asyncIterator] = function() {
                    return this
                }, r);

                function i(n) {
                    r[n] = e[n] && function(r) {
                        return new Promise(function(i, o) {
                            ! function(e, r, n, i) {
                                Promise.resolve(i).then(function(r) {
                                    e({
                                        value: r,
                                        done: n
                                    })
                                }, r)
                            }(i, o, (r = e[n](r)).done, r.value)
                        })
                    }
                }
            }

            function P(e, r) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: r
                }) : e.raw = r, e
            }
            var j = Object.create ? function(e, r) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: r
                })
            } : function(e, r) {
                e.default = r
            };

            function T(e) {
                if (e && e.__esModule) return e;
                var r = {};
                if (null != e)
                    for (var n in e) "default" !== n && Object.prototype.hasOwnProperty.call(e, n) && v(r, e, n);
                return j(r, e), r
            }

            function R(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function B(e, r, n, i) {
                if ("a" === n && !i) throw TypeError("Private accessor was defined without a getter");
                if ("function" == typeof r ? e !== r || !i : !r.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it");
                return "m" === n ? i : "a" === n ? i.call(e) : i ? i.value : r.get(e)
            }

            function O(e, r, n, i, o) {
                if ("m" === i) throw TypeError("Private method is not writable");
                if ("a" === i && !o) throw TypeError("Private accessor was defined without a setter");
                if ("function" == typeof r ? e !== r || !o : !r.has(e)) throw TypeError("Cannot write private member to an object whose class did not declare it");
                return "a" === i ? o.call(e, n) : o ? o.value = n : r.set(e, n), n
            }

            function M(e, r) {
                if (null === r || "object" != typeof r && "function" != typeof r) throw TypeError("Cannot use 'in' operator on non-object");
                return "function" == typeof e ? r === e : e.has(r)
            }

            function I(e, r, n) {
                if (null != r) {
                    var i;
                    if ("object" != typeof r && "function" != typeof r) throw TypeError("Object expected.");
                    if (n) {
                        if (!Symbol.asyncDispose) throw TypeError("Symbol.asyncDispose is not defined.");
                        i = r[Symbol.asyncDispose]
                    }
                    if (void 0 === i) {
                        if (!Symbol.dispose) throw TypeError("Symbol.dispose is not defined.");
                        i = r[Symbol.dispose]
                    }
                    if ("function" != typeof i) throw TypeError("Object not disposable.");
                    e.stack.push({
                        value: r,
                        dispose: i,
                        async: n
                    })
                } else n && e.stack.push({
                    async: !0
                });
                return r
            }
            var N = "function" == typeof SuppressedError ? SuppressedError : function(e, r, n) {
                var i = Error(n);
                return i.name = "SuppressedError", i.error = e, i.suppressed = r, i
            };

            function F(e) {
                function r(r) {
                    e.error = e.hasError ? new N(r, e.error, "An error was suppressed during disposal.") : r, e.hasError = !0
                }
                return function n() {
                    for (; e.stack.length;) {
                        var i = e.stack.pop();
                        try {
                            var o = i.dispose && i.dispose.call(i.value);
                            if (i.async) return Promise.resolve(o).then(n, function(e) {
                                return r(e), n()
                            })
                        } catch (a) {
                            r(a)
                        }
                    }
                    if (e.hasError) throw e.error
                }()
            }
            r.default = {
                __extends: o,
                __assign: a,
                __rest: s,
                __decorate: l,
                __param: u,
                __metadata: p,
                __awaiter: m,
                __generator: g,
                __createBinding: v,
                __exportStar: y,
                __values: b,
                __read: w,
                __spread: x,
                __spreadArrays: E,
                __spreadArray: C,
                __await: A,
                __asyncGenerator: k,
                __asyncDelegator: S,
                __asyncValues: _,
                __makeTemplateObject: P,
                __importStar: T,
                __importDefault: R,
                __classPrivateFieldGet: B,
                __classPrivateFieldSet: O,
                __classPrivateFieldIn: M,
                __addDisposableResource: I,
                __disposeResources: F
            }
        },
        69077: function(e, r, n) {
            "use strict";
            let i;

            function o() {}
            n.d(r, {
                eM: function() {
                    return ex
                },
                eI: function() {
                    return ey
                },
                mA: function() {
                    return eO
                },
                KQ: function() {
                    return eI
                },
                $4: function() {
                    return eL
                },
                qL: function() {
                    return eU
                },
                c9: function() {
                    return eZ
                },
                F6: function() {
                    return e1
                },
                LN: function() {
                    return e$
                },
                yL: function() {
                    return e_
                },
                QW: function() {
                    return eK
                },
                mx: function() {
                    return eV
                },
                g0: function() {
                    return eY
                }
            });
            let a = "undefined" == typeof window || "Deno" in window;

            function s() {}

            function l(e) {
                return "number" == typeof e && e >= 0 && e !== 1 / 0
            }

            function u(e, r) {
                return Math.max(e + (r || 0) - Date.now(), 0)
            }

            function c(e, r, n) {
                return E(e) ? "function" == typeof r ? { ...n,
                    queryKey: e,
                    queryFn: r
                } : { ...r,
                    queryKey: e
                } : e
            }

            function d(e, r, n) {
                return E(e) ? "function" == typeof r ? { ...n,
                    mutationKey: e,
                    mutationFn: r
                } : { ...r,
                    mutationKey: e
                } : "function" == typeof e ? { ...r,
                    mutationFn: e
                } : { ...e
                }
            }

            function h(e, r, n) {
                return E(e) ? [{ ...r,
                    queryKey: e
                }, n] : [e || {}, r]
            }

            function f(e, r) {
                let {
                    type: n = "all",
                    exact: i,
                    fetchStatus: o,
                    predicate: a,
                    queryKey: s,
                    stale: l
                } = e;
                if (E(s)) {
                    if (i) {
                        if (r.queryHash !== m(s, r.options)) return !1
                    } else {
                        if (!v(r.queryKey, s)) return !1
                    }
                }
                if ("all" !== n) {
                    let u = r.isActive();
                    if ("active" === n && !u || "inactive" === n && u) return !1
                }
                return ("boolean" != typeof l || r.isStale() === l) && (void 0 === o || o === r.state.fetchStatus) && (!a || !!a(r))
            }

            function p(e, r) {
                let {
                    exact: n,
                    fetching: i,
                    predicate: o,
                    mutationKey: a
                } = e;
                if (E(a)) {
                    if (!r.options.mutationKey) return !1;
                    if (n) {
                        if (g(r.options.mutationKey) !== g(a)) return !1
                    } else {
                        if (!v(r.options.mutationKey, a)) return !1
                    }
                }
                return ("boolean" != typeof i || "loading" === r.state.status === i) && (!o || !!o(r))
            }

            function m(e, r) {
                let n = (null == r ? void 0 : r.queryKeyHashFn) || g;
                return n(e)
            }

            function g(e) {
                return JSON.stringify(e, (e, r) => w(r) ? Object.keys(r).sort().reduce((e, n) => (e[n] = r[n], e), {}) : r)
            }

            function v(e, r) {
                return e === r || typeof e == typeof r && !!e && !!r && "object" == typeof e && "object" == typeof r && !Object.keys(r).some(n => !v(e[n], r[n]))
            }

            function y(e, r) {
                if (e && !r || r && !e) return !1;
                for (let n in e)
                    if (e[n] !== r[n]) return !1;
                return !0
            }

            function b(e) {
                return Array.isArray(e) && e.length === Object.keys(e).length
            }

            function w(e) {
                if (!x(e)) return !1;
                let r = e.constructor;
                if (void 0 === r) return !0;
                let n = r.prototype;
                return !!(x(n) && n.hasOwnProperty("isPrototypeOf"))
            }

            function x(e) {
                return "[object Object]" === Object.prototype.toString.call(e)
            }

            function E(e) {
                return Array.isArray(e)
            }

            function C(e) {
                return new Promise(r => {
                    setTimeout(r, e)
                })
            }

            function A(e) {
                C(0).then(e)
            }

            function k(e, r, n) {
                return null != n.isDataEqual && n.isDataEqual(e, r) ? e : "function" == typeof n.structuralSharing ? n.structuralSharing(e, r) : !1 !== n.structuralSharing ? function e(r, n) {
                    if (r === n) return r;
                    let i = b(r) && b(n);
                    if (i || w(r) && w(n)) {
                        let o = i ? r.length : Object.keys(r).length,
                            a = i ? n : Object.keys(n),
                            s = a.length,
                            l = i ? [] : {},
                            u = 0;
                        for (let c = 0; c < s; c++) {
                            let d = i ? c : a[c];
                            l[d] = e(r[d], n[d]), l[d] === r[d] && u++
                        }
                        return o === s && u === o ? r : l
                    }
                    return n
                }(e, r) : r
            }
            let S = console,
                _ = function() {
                    let e = [],
                        r = 0,
                        n = e => {
                            e()
                        },
                        i = e => {
                            e()
                        },
                        o = e => {
                            let n;
                            r++;
                            try {
                                n = e()
                            } finally {
                                --r || l()
                            }
                            return n
                        },
                        a = i => {
                            r ? e.push(i) : A(() => {
                                n(i)
                            })
                        },
                        s = e => (...r) => {
                            a(() => {
                                e(...r)
                            })
                        },
                        l = () => {
                            let r = e;
                            e = [], r.length && A(() => {
                                i(() => {
                                    r.forEach(e => {
                                        n(e)
                                    })
                                })
                            })
                        },
                        u = e => {
                            n = e
                        },
                        c = e => {
                            i = e
                        };
                    return {
                        batch: o,
                        batchCalls: s,
                        schedule: a,
                        setNotifyFunction: u,
                        setBatchNotifyFunction: c
                    }
                }();
            class P {
                constructor() {
                    this.listeners = new Set, this.subscribe = this.subscribe.bind(this)
                }
                subscribe(e) {
                    let r = {
                        listener: e
                    };
                    return this.listeners.add(r), this.onSubscribe(), () => {
                        this.listeners.delete(r), this.onUnsubscribe()
                    }
                }
                hasListeners() {
                    return this.listeners.size > 0
                }
                onSubscribe() {}
                onUnsubscribe() {}
            }
            let j = new class extends P {
                    constructor() {
                        super(), this.setup = e => {
                            if (!a && window.addEventListener) {
                                let r = () => e();
                                return window.addEventListener("visibilitychange", r, !1), window.addEventListener("focus", r, !1), () => {
                                    window.removeEventListener("visibilitychange", r), window.removeEventListener("focus", r)
                                }
                            }
                        }
                    }
                    onSubscribe() {
                        this.cleanup || this.setEventListener(this.setup)
                    }
                    onUnsubscribe() {
                        if (!this.hasListeners()) {
                            var e;
                            null == (e = this.cleanup) || e.call(this), this.cleanup = void 0
                        }
                    }
                    setEventListener(e) {
                        var r;
                        this.setup = e, null == (r = this.cleanup) || r.call(this), this.cleanup = e(e => {
                            "boolean" == typeof e ? this.setFocused(e) : this.onFocus()
                        })
                    }
                    setFocused(e) {
                        let r = this.focused !== e;
                        r && (this.focused = e, this.onFocus())
                    }
                    onFocus() {
                        this.listeners.forEach(({
                            listener: e
                        }) => {
                            e()
                        })
                    }
                    isFocused() {
                        return "boolean" == typeof this.focused ? this.focused : "undefined" == typeof document || [void 0, "visible", "prerender"].includes(document.visibilityState)
                    }
                },
                T = ["online", "offline"],
                R = new class extends P {
                    constructor() {
                        super(), this.setup = e => {
                            if (!a && window.addEventListener) {
                                let r = () => e();
                                return T.forEach(e => {
                                    window.addEventListener(e, r, !1)
                                }), () => {
                                    T.forEach(e => {
                                        window.removeEventListener(e, r)
                                    })
                                }
                            }
                        }
                    }
                    onSubscribe() {
                        this.cleanup || this.setEventListener(this.setup)
                    }
                    onUnsubscribe() {
                        if (!this.hasListeners()) {
                            var e;
                            null == (e = this.cleanup) || e.call(this), this.cleanup = void 0
                        }
                    }
                    setEventListener(e) {
                        var r;
                        this.setup = e, null == (r = this.cleanup) || r.call(this), this.cleanup = e(e => {
                            "boolean" == typeof e ? this.setOnline(e) : this.onOnline()
                        })
                    }
                    setOnline(e) {
                        let r = this.online !== e;
                        r && (this.online = e, this.onOnline())
                    }
                    onOnline() {
                        this.listeners.forEach(({
                            listener: e
                        }) => {
                            e()
                        })
                    }
                    isOnline() {
                        return "boolean" == typeof this.online ? this.online : "undefined" == typeof navigator || void 0 === navigator.onLine || navigator.onLine
                    }
                };

            function B(e) {
                return Math.min(1e3 * 2 ** e, 3e4)
            }

            function O(e) {
                return (null != e ? e : "online") !== "online" || R.isOnline()
            }
            class M {
                constructor(e) {
                    this.revert = null == e ? void 0 : e.revert, this.silent = null == e ? void 0 : e.silent
                }
            }

            function I(e) {
                return e instanceof M
            }

            function N(e) {
                let r, n, i, o = !1,
                    a = 0,
                    s = !1,
                    l = new Promise((e, r) => {
                        n = e, i = r
                    }),
                    u = r => {
                        s || (p(new M(r)), null == e.abort || e.abort())
                    },
                    c = () => {
                        o = !0
                    },
                    d = () => {
                        o = !1
                    },
                    h = () => !j.isFocused() || "always" !== e.networkMode && !R.isOnline(),
                    f = i => {
                        s || (s = !0, null == e.onSuccess || e.onSuccess(i), null == r || r(), n(i))
                    },
                    p = n => {
                        s || (s = !0, null == e.onError || e.onError(n), null == r || r(), i(n))
                    },
                    m = () => new Promise(n => {
                        r = e => {
                            let r = s || !h();
                            return r && n(e), r
                        }, null == e.onPause || e.onPause()
                    }).then(() => {
                        r = void 0, s || null == e.onContinue || e.onContinue()
                    }),
                    g = () => {
                        let r;
                        if (!s) {
                            try {
                                r = e.fn()
                            } catch (n) {
                                r = Promise.reject(n)
                            }
                            Promise.resolve(r).then(f).catch(r => {
                                var n, i;
                                if (s) return;
                                let l = null != (n = e.retry) ? n : 3,
                                    u = null != (i = e.retryDelay) ? i : B,
                                    c = "function" == typeof u ? u(a, r) : u,
                                    d = !0 === l || "number" == typeof l && a < l || "function" == typeof l && l(a, r);
                                if (o || !d) {
                                    p(r);
                                    return
                                }
                                a++, null == e.onFail || e.onFail(a, r), C(c).then(() => {
                                    if (h()) return m()
                                }).then(() => {
                                    o ? p(r) : g()
                                })
                            })
                        }
                    };
                return O(e.networkMode) ? g() : m().then(g), {
                    promise: l,
                    cancel: u,
                    continue: () => {
                        let e = null == r ? void 0 : r();
                        return e ? l : Promise.resolve()
                    },
                    cancelRetry: c,
                    continueRetry: d
                }
            }
            class F {
                destroy() {
                    this.clearGcTimeout()
                }
                scheduleGc() {
                    this.clearGcTimeout(), l(this.cacheTime) && (this.gcTimeout = setTimeout(() => {
                        this.optionalRemove()
                    }, this.cacheTime))
                }
                updateCacheTime(e) {
                    this.cacheTime = Math.max(this.cacheTime || 0, null != e ? e : a ? 1 / 0 : 3e5)
                }
                clearGcTimeout() {
                    this.gcTimeout && (clearTimeout(this.gcTimeout), this.gcTimeout = void 0)
                }
            }
            class L extends F {
                constructor(e) {
                    super(), this.abortSignalConsumed = !1, this.defaultOptions = e.defaultOptions, this.setOptions(e.options), this.observers = [], this.cache = e.cache, this.logger = e.logger || S, this.queryKey = e.queryKey, this.queryHash = e.queryHash, this.initialState = e.state || function(e) {
                        let r = "function" == typeof e.initialData ? e.initialData() : e.initialData,
                            n = void 0 !== r,
                            i = n ? "function" == typeof e.initialDataUpdatedAt ? e.initialDataUpdatedAt() : e.initialDataUpdatedAt : 0;
                        return {
                            data: r,
                            dataUpdateCount: 0,
                            dataUpdatedAt: n ? null != i ? i : Date.now() : 0,
                            error: null,
                            errorUpdateCount: 0,
                            errorUpdatedAt: 0,
                            fetchFailureCount: 0,
                            fetchFailureReason: null,
                            fetchMeta: null,
                            isInvalidated: !1,
                            status: n ? "success" : "loading",
                            fetchStatus: "idle"
                        }
                    }(this.options), this.state = this.initialState, this.scheduleGc()
                }
                get meta() {
                    return this.options.meta
                }
                setOptions(e) {
                    this.options = { ...this.defaultOptions,
                        ...e
                    }, this.updateCacheTime(this.options.cacheTime)
                }
                optionalRemove() {
                    this.observers.length || "idle" !== this.state.fetchStatus || this.cache.remove(this)
                }
                setData(e, r) {
                    let n = k(this.state.data, e, this.options);
                    return this.dispatch({
                        data: n,
                        type: "success",
                        dataUpdatedAt: null == r ? void 0 : r.updatedAt,
                        manual: null == r ? void 0 : r.manual
                    }), n
                }
                setState(e, r) {
                    this.dispatch({
                        type: "setState",
                        state: e,
                        setStateOptions: r
                    })
                }
                cancel(e) {
                    var r;
                    let n = this.promise;
                    return null == (r = this.retryer) || r.cancel(e), n ? n.then(s).catch(s) : Promise.resolve()
                }
                destroy() {
                    super.destroy(), this.cancel({
                        silent: !0
                    })
                }
                reset() {
                    this.destroy(), this.setState(this.initialState)
                }
                isActive() {
                    return this.observers.some(e => !1 !== e.options.enabled)
                }
                isDisabled() {
                    return this.getObserversCount() > 0 && !this.isActive()
                }
                isStale() {
                    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(e => e.getCurrentResult().isStale)
                }
                isStaleByTime(e = 0) {
                    return this.state.isInvalidated || !this.state.dataUpdatedAt || !u(this.state.dataUpdatedAt, e)
                }
                onFocus() {
                    var e;
                    let r = this.observers.find(e => e.shouldFetchOnWindowFocus());
                    r && r.refetch({
                        cancelRefetch: !1
                    }), null == (e = this.retryer) || e.continue()
                }
                onOnline() {
                    var e;
                    let r = this.observers.find(e => e.shouldFetchOnReconnect());
                    r && r.refetch({
                        cancelRefetch: !1
                    }), null == (e = this.retryer) || e.continue()
                }
                addObserver(e) {
                    this.observers.includes(e) || (this.observers.push(e), this.clearGcTimeout(), this.cache.notify({
                        type: "observerAdded",
                        query: this,
                        observer: e
                    }))
                }
                removeObserver(e) {
                    this.observers.includes(e) && (this.observers = this.observers.filter(r => r !== e), this.observers.length || (this.retryer && (this.abortSignalConsumed ? this.retryer.cancel({
                        revert: !0
                    }) : this.retryer.cancelRetry()), this.scheduleGc()), this.cache.notify({
                        type: "observerRemoved",
                        query: this,
                        observer: e
                    }))
                }
                getObserversCount() {
                    return this.observers.length
                }
                invalidate() {
                    this.state.isInvalidated || this.dispatch({
                        type: "invalidate"
                    })
                }
                fetch(e, r) {
                    var n, i, o, a;
                    if ("idle" !== this.state.fetchStatus) {
                        if (this.state.dataUpdatedAt && null != r && r.cancelRefetch) this.cancel({
                            silent: !0
                        });
                        else if (this.promise) return null == (o = this.retryer) || o.continueRetry(), this.promise
                    }
                    if (e && this.setOptions(e), !this.options.queryFn) {
                        let s = this.observers.find(e => e.options.queryFn);
                        s && this.setOptions(s.options)
                    }
                    Array.isArray(this.options.queryKey);
                    let l = function() {
                            if ("function" == typeof AbortController) return new AbortController
                        }(),
                        u = {
                            queryKey: this.queryKey,
                            pageParam: void 0,
                            meta: this.meta
                        },
                        c = e => {
                            Object.defineProperty(e, "signal", {
                                enumerable: !0,
                                get: () => {
                                    if (l) return this.abortSignalConsumed = !0, l.signal
                                }
                            })
                        };
                    c(u);
                    let d = () => this.options.queryFn ? (this.abortSignalConsumed = !1, this.options.queryFn(u)) : Promise.reject("Missing queryFn for queryKey '" + this.options.queryHash + "'"),
                        h = {
                            fetchOptions: r,
                            options: this.options,
                            queryKey: this.queryKey,
                            state: this.state,
                            fetchFn: d
                        };
                    c(h), null == (n = this.options.behavior) || n.onFetch(h), this.revertState = this.state, ("idle" === this.state.fetchStatus || this.state.fetchMeta !== (null == (i = h.fetchOptions) ? void 0 : i.meta)) && this.dispatch({
                        type: "fetch",
                        meta: null == (a = h.fetchOptions) ? void 0 : a.meta
                    });
                    let f = e => {
                        if (I(e) && e.silent || this.dispatch({
                                type: "error",
                                error: e
                            }), !I(e)) {
                            var r, n, i, o;
                            null == (r = (n = this.cache.config).onError) || r.call(n, e, this), null == (i = (o = this.cache.config).onSettled) || i.call(o, this.state.data, e, this)
                        }
                        this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1
                    };
                    return this.retryer = N({
                        fn: h.fetchFn,
                        abort: null == l ? void 0 : l.abort.bind(l),
                        onSuccess: e => {
                            var r, n, i, o;
                            if (void 0 === e) {
                                f(Error(this.queryHash + " data is undefined"));
                                return
                            }
                            this.setData(e), null == (r = (n = this.cache.config).onSuccess) || r.call(n, e, this), null == (i = (o = this.cache.config).onSettled) || i.call(o, e, this.state.error, this), this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1
                        },
                        onError: f,
                        onFail: (e, r) => {
                            this.dispatch({
                                type: "failed",
                                failureCount: e,
                                error: r
                            })
                        },
                        onPause: () => {
                            this.dispatch({
                                type: "pause"
                            })
                        },
                        onContinue: () => {
                            this.dispatch({
                                type: "continue"
                            })
                        },
                        retry: h.options.retry,
                        retryDelay: h.options.retryDelay,
                        networkMode: h.options.networkMode
                    }), this.promise = this.retryer.promise, this.promise
                }
                dispatch(e) {
                    this.state = (r => {
                        var n, i;
                        switch (e.type) {
                            case "failed":
                                return { ...r,
                                    fetchFailureCount: e.failureCount,
                                    fetchFailureReason: e.error
                                };
                            case "pause":
                                return { ...r,
                                    fetchStatus: "paused"
                                };
                            case "continue":
                                return { ...r,
                                    fetchStatus: "fetching"
                                };
                            case "fetch":
                                return { ...r,
                                    fetchFailureCount: 0,
                                    fetchFailureReason: null,
                                    fetchMeta: null != (n = e.meta) ? n : null,
                                    fetchStatus: O(this.options.networkMode) ? "fetching" : "paused",
                                    ...!r.dataUpdatedAt && {
                                        error: null,
                                        status: "loading"
                                    }
                                };
                            case "success":
                                return { ...r,
                                    data: e.data,
                                    dataUpdateCount: r.dataUpdateCount + 1,
                                    dataUpdatedAt: null != (i = e.dataUpdatedAt) ? i : Date.now(),
                                    error: null,
                                    isInvalidated: !1,
                                    status: "success",
                                    ...!e.manual && {
                                        fetchStatus: "idle",
                                        fetchFailureCount: 0,
                                        fetchFailureReason: null
                                    }
                                };
                            case "error":
                                let o = e.error;
                                if (I(o) && o.revert && this.revertState) return { ...this.revertState
                                };
                                return { ...r,
                                    error: o,
                                    errorUpdateCount: r.errorUpdateCount + 1,
                                    errorUpdatedAt: Date.now(),
                                    fetchFailureCount: r.fetchFailureCount + 1,
                                    fetchFailureReason: o,
                                    fetchStatus: "idle",
                                    status: "error"
                                };
                            case "invalidate":
                                return { ...r,
                                    isInvalidated: !0
                                };
                            case "setState":
                                return { ...r,
                                    ...e.state
                                }
                        }
                    })(this.state), _.batch(() => {
                        this.observers.forEach(r => {
                            r.onQueryUpdate(e)
                        }), this.cache.notify({
                            query: this,
                            type: "updated",
                            action: e
                        })
                    })
                }
            }
            class D extends P {
                constructor(e) {
                    super(), this.config = e || {}, this.queries = [], this.queriesMap = {}
                }
                build(e, r, n) {
                    var i;
                    let o = r.queryKey,
                        a = null != (i = r.queryHash) ? i : m(o, r),
                        s = this.get(a);
                    return s || (s = new L({
                        cache: this,
                        logger: e.getLogger(),
                        queryKey: o,
                        queryHash: a,
                        options: e.defaultQueryOptions(r),
                        state: n,
                        defaultOptions: e.getQueryDefaults(o)
                    }), this.add(s)), s
                }
                add(e) {
                    this.queriesMap[e.queryHash] || (this.queriesMap[e.queryHash] = e, this.queries.push(e), this.notify({
                        type: "added",
                        query: e
                    }))
                }
                remove(e) {
                    let r = this.queriesMap[e.queryHash];
                    r && (e.destroy(), this.queries = this.queries.filter(r => r !== e), r === e && delete this.queriesMap[e.queryHash], this.notify({
                        type: "removed",
                        query: e
                    }))
                }
                clear() {
                    _.batch(() => {
                        this.queries.forEach(e => {
                            this.remove(e)
                        })
                    })
                }
                get(e) {
                    return this.queriesMap[e]
                }
                getAll() {
                    return this.queries
                }
                find(e, r) {
                    let [n] = h(e, r);
                    return void 0 === n.exact && (n.exact = !0), this.queries.find(e => f(n, e))
                }
                findAll(e, r) {
                    let [n] = h(e, r);
                    return Object.keys(n).length > 0 ? this.queries.filter(e => f(n, e)) : this.queries
                }
                notify(e) {
                    _.batch(() => {
                        this.listeners.forEach(({
                            listener: r
                        }) => {
                            r(e)
                        })
                    })
                }
                onFocus() {
                    _.batch(() => {
                        this.queries.forEach(e => {
                            e.onFocus()
                        })
                    })
                }
                onOnline() {
                    _.batch(() => {
                        this.queries.forEach(e => {
                            e.onOnline()
                        })
                    })
                }
            }
            class z extends F {
                constructor(e) {
                    super(), this.defaultOptions = e.defaultOptions, this.mutationId = e.mutationId, this.mutationCache = e.mutationCache, this.logger = e.logger || S, this.observers = [], this.state = e.state || U(), this.setOptions(e.options), this.scheduleGc()
                }
                setOptions(e) {
                    this.options = { ...this.defaultOptions,
                        ...e
                    }, this.updateCacheTime(this.options.cacheTime)
                }
                get meta() {
                    return this.options.meta
                }
                setState(e) {
                    this.dispatch({
                        type: "setState",
                        state: e
                    })
                }
                addObserver(e) {
                    this.observers.includes(e) || (this.observers.push(e), this.clearGcTimeout(), this.mutationCache.notify({
                        type: "observerAdded",
                        mutation: this,
                        observer: e
                    }))
                }
                removeObserver(e) {
                    this.observers = this.observers.filter(r => r !== e), this.scheduleGc(), this.mutationCache.notify({
                        type: "observerRemoved",
                        mutation: this,
                        observer: e
                    })
                }
                optionalRemove() {
                    this.observers.length || ("loading" === this.state.status ? this.scheduleGc() : this.mutationCache.remove(this))
                }
                continue () {
                    var e, r;
                    return null != (e = null == (r = this.retryer) ? void 0 : r.continue()) ? e : this.execute()
                }
                async execute() {
                    var e, r, n, i, o, a, s, l, u, c, d, h, f, p, m, g, v, y, b, w;
                    let x = "loading" === this.state.status;
                    try {
                        if (!x) {
                            this.dispatch({
                                type: "loading",
                                variables: this.options.variables
                            }), await (null == (u = (c = this.mutationCache.config).onMutate) ? void 0 : u.call(c, this.state.variables, this));
                            let E = await (null == (d = (h = this.options).onMutate) ? void 0 : d.call(h, this.state.variables));
                            E !== this.state.context && this.dispatch({
                                type: "loading",
                                context: E,
                                variables: this.state.variables
                            })
                        }
                        let C = await (() => {
                            var e;
                            return this.retryer = N({
                                fn: () => this.options.mutationFn ? this.options.mutationFn(this.state.variables) : Promise.reject("No mutationFn found"),
                                onFail: (e, r) => {
                                    this.dispatch({
                                        type: "failed",
                                        failureCount: e,
                                        error: r
                                    })
                                },
                                onPause: () => {
                                    this.dispatch({
                                        type: "pause"
                                    })
                                },
                                onContinue: () => {
                                    this.dispatch({
                                        type: "continue"
                                    })
                                },
                                retry: null != (e = this.options.retry) ? e : 0,
                                retryDelay: this.options.retryDelay,
                                networkMode: this.options.networkMode
                            }), this.retryer.promise
                        })();
                        return await (null == (e = (r = this.mutationCache.config).onSuccess) ? void 0 : e.call(r, C, this.state.variables, this.state.context, this)), await (null == (n = (i = this.options).onSuccess) ? void 0 : n.call(i, C, this.state.variables, this.state.context)), await (null == (o = (a = this.mutationCache.config).onSettled) ? void 0 : o.call(a, C, null, this.state.variables, this.state.context, this)), await (null == (s = (l = this.options).onSettled) ? void 0 : s.call(l, C, null, this.state.variables, this.state.context)), this.dispatch({
                            type: "success",
                            data: C
                        }), C
                    } catch (A) {
                        try {
                            throw await (null == (f = (p = this.mutationCache.config).onError) ? void 0 : f.call(p, A, this.state.variables, this.state.context, this)), await (null == (m = (g = this.options).onError) ? void 0 : m.call(g, A, this.state.variables, this.state.context)), await (null == (v = (y = this.mutationCache.config).onSettled) ? void 0 : v.call(y, void 0, A, this.state.variables, this.state.context, this)), await (null == (b = (w = this.options).onSettled) ? void 0 : b.call(w, void 0, A, this.state.variables, this.state.context)), A
                        } finally {
                            this.dispatch({
                                type: "error",
                                error: A
                            })
                        }
                    }
                }
                dispatch(e) {
                    this.state = (r => {
                        switch (e.type) {
                            case "failed":
                                return { ...r,
                                    failureCount: e.failureCount,
                                    failureReason: e.error
                                };
                            case "pause":
                                return { ...r,
                                    isPaused: !0
                                };
                            case "continue":
                                return { ...r,
                                    isPaused: !1
                                };
                            case "loading":
                                return { ...r,
                                    context: e.context,
                                    data: void 0,
                                    failureCount: 0,
                                    failureReason: null,
                                    error: null,
                                    isPaused: !O(this.options.networkMode),
                                    status: "loading",
                                    variables: e.variables
                                };
                            case "success":
                                return { ...r,
                                    data: e.data,
                                    failureCount: 0,
                                    failureReason: null,
                                    error: null,
                                    status: "success",
                                    isPaused: !1
                                };
                            case "error":
                                return { ...r,
                                    data: void 0,
                                    error: e.error,
                                    failureCount: r.failureCount + 1,
                                    failureReason: e.error,
                                    isPaused: !1,
                                    status: "error"
                                };
                            case "setState":
                                return { ...r,
                                    ...e.state
                                }
                        }
                    })(this.state), _.batch(() => {
                        this.observers.forEach(r => {
                            r.onMutationUpdate(e)
                        }), this.mutationCache.notify({
                            mutation: this,
                            type: "updated",
                            action: e
                        })
                    })
                }
            }

            function U() {
                return {
                    context: void 0,
                    data: void 0,
                    error: null,
                    failureCount: 0,
                    failureReason: null,
                    isPaused: !1,
                    status: "idle",
                    variables: void 0
                }
            }
            class $ extends P {
                constructor(e) {
                    super(), this.config = e || {}, this.mutations = [], this.mutationId = 0
                }
                build(e, r, n) {
                    let i = new z({
                        mutationCache: this,
                        logger: e.getLogger(),
                        mutationId: ++this.mutationId,
                        options: e.defaultMutationOptions(r),
                        state: n,
                        defaultOptions: r.mutationKey ? e.getMutationDefaults(r.mutationKey) : void 0
                    });
                    return this.add(i), i
                }
                add(e) {
                    this.mutations.push(e), this.notify({
                        type: "added",
                        mutation: e
                    })
                }
                remove(e) {
                    this.mutations = this.mutations.filter(r => r !== e), this.notify({
                        type: "removed",
                        mutation: e
                    })
                }
                clear() {
                    _.batch(() => {
                        this.mutations.forEach(e => {
                            this.remove(e)
                        })
                    })
                }
                getAll() {
                    return this.mutations
                }
                find(e) {
                    return void 0 === e.exact && (e.exact = !0), this.mutations.find(r => p(e, r))
                }
                findAll(e) {
                    return this.mutations.filter(r => p(e, r))
                }
                notify(e) {
                    _.batch(() => {
                        this.listeners.forEach(({
                            listener: r
                        }) => {
                            r(e)
                        })
                    })
                }
                resumePausedMutations() {
                    var e;
                    return this.resuming = (null != (e = this.resuming) ? e : Promise.resolve()).then(() => {
                        let e = this.mutations.filter(e => e.state.isPaused);
                        return _.batch(() => e.reduce((e, r) => e.then(() => r.continue().catch(s)), Promise.resolve()))
                    }).then(() => {
                        this.resuming = void 0
                    }), this.resuming
                }
            }

            function q(e, r) {
                return null == e.getNextPageParam ? void 0 : e.getNextPageParam(r[r.length - 1], r)
            }
            class W {
                constructor(e = {}) {
                    this.queryCache = e.queryCache || new D, this.mutationCache = e.mutationCache || new $, this.logger = e.logger || S, this.defaultOptions = e.defaultOptions || {}, this.queryDefaults = [], this.mutationDefaults = [], this.mountCount = 0
                }
                mount() {
                    this.mountCount++, 1 === this.mountCount && (this.unsubscribeFocus = j.subscribe(() => {
                        j.isFocused() && (this.resumePausedMutations(), this.queryCache.onFocus())
                    }), this.unsubscribeOnline = R.subscribe(() => {
                        R.isOnline() && (this.resumePausedMutations(), this.queryCache.onOnline())
                    }))
                }
                unmount() {
                    var e, r;
                    this.mountCount--, 0 === this.mountCount && (null == (e = this.unsubscribeFocus) || e.call(this), this.unsubscribeFocus = void 0, null == (r = this.unsubscribeOnline) || r.call(this), this.unsubscribeOnline = void 0)
                }
                isFetching(e, r) {
                    let [n] = h(e, r);
                    return n.fetchStatus = "fetching", this.queryCache.findAll(n).length
                }
                isMutating(e) {
                    return this.mutationCache.findAll({ ...e,
                        fetching: !0
                    }).length
                }
                getQueryData(e, r) {
                    var n;
                    return null == (n = this.queryCache.find(e, r)) ? void 0 : n.state.data
                }
                ensureQueryData(e, r, n) {
                    let i = c(e, r, n),
                        o = this.getQueryData(i.queryKey);
                    return o ? Promise.resolve(o) : this.fetchQuery(i)
                }
                getQueriesData(e) {
                    return this.getQueryCache().findAll(e).map(({
                        queryKey: e,
                        state: r
                    }) => {
                        let n = r.data;
                        return [e, n]
                    })
                }
                setQueryData(e, r, n) {
                    let i = this.queryCache.find(e),
                        o = null == i ? void 0 : i.state.data,
                        a = "function" == typeof r ? r(o) : r;
                    if (void 0 === a) return;
                    let s = c(e),
                        l = this.defaultQueryOptions(s);
                    return this.queryCache.build(this, l).setData(a, { ...n,
                        manual: !0
                    })
                }
                setQueriesData(e, r, n) {
                    return _.batch(() => this.getQueryCache().findAll(e).map(({
                        queryKey: e
                    }) => [e, this.setQueryData(e, r, n)]))
                }
                getQueryState(e, r) {
                    var n;
                    return null == (n = this.queryCache.find(e, r)) ? void 0 : n.state
                }
                removeQueries(e, r) {
                    let [n] = h(e, r), i = this.queryCache;
                    _.batch(() => {
                        i.findAll(n).forEach(e => {
                            i.remove(e)
                        })
                    })
                }
                resetQueries(e, r, n) {
                    let [i, o] = h(e, r, n), a = this.queryCache, s = {
                        type: "active",
                        ...i
                    };
                    return _.batch(() => (a.findAll(i).forEach(e => {
                        e.reset()
                    }), this.refetchQueries(s, o)))
                }
                cancelQueries(e, r, n) {
                    let [i, o = {}] = h(e, r, n);
                    void 0 === o.revert && (o.revert = !0);
                    let a = _.batch(() => this.queryCache.findAll(i).map(e => e.cancel(o)));
                    return Promise.all(a).then(s).catch(s)
                }
                invalidateQueries(e, r, n) {
                    let [i, o] = h(e, r, n);
                    return _.batch(() => {
                        var e, r;
                        if (this.queryCache.findAll(i).forEach(e => {
                                e.invalidate()
                            }), "none" === i.refetchType) return Promise.resolve();
                        let n = { ...i,
                            type: null != (e = null != (r = i.refetchType) ? r : i.type) ? e : "active"
                        };
                        return this.refetchQueries(n, o)
                    })
                }
                refetchQueries(e, r, n) {
                    let [i, o] = h(e, r, n), a = _.batch(() => this.queryCache.findAll(i).filter(e => !e.isDisabled()).map(e => {
                        var r;
                        return e.fetch(void 0, { ...o,
                            cancelRefetch: null == (r = null == o ? void 0 : o.cancelRefetch) || r,
                            meta: {
                                refetchPage: i.refetchPage
                            }
                        })
                    })), l = Promise.all(a).then(s);
                    return null != o && o.throwOnError || (l = l.catch(s)), l
                }
                fetchQuery(e, r, n) {
                    let i = c(e, r, n),
                        o = this.defaultQueryOptions(i);
                    void 0 === o.retry && (o.retry = !1);
                    let a = this.queryCache.build(this, o);
                    return a.isStaleByTime(o.staleTime) ? a.fetch(o) : Promise.resolve(a.state.data)
                }
                prefetchQuery(e, r, n) {
                    return this.fetchQuery(e, r, n).then(s).catch(s)
                }
                fetchInfiniteQuery(e, r, n) {
                    let i = c(e, r, n);
                    return i.behavior = {
                        onFetch: e => {
                            e.fetchFn = () => {
                                var r, n, i, o, a, s, l;
                                let u;
                                let c = null == (r = e.fetchOptions) ? void 0 : null == (n = r.meta) ? void 0 : n.refetchPage,
                                    d = null == (i = e.fetchOptions) ? void 0 : null == (o = i.meta) ? void 0 : o.fetchMore,
                                    h = null == d ? void 0 : d.pageParam,
                                    f = (null == d ? void 0 : d.direction) === "forward",
                                    p = (null == d ? void 0 : d.direction) === "backward",
                                    m = (null == (a = e.state.data) ? void 0 : a.pages) || [],
                                    g = (null == (s = e.state.data) ? void 0 : s.pageParams) || [],
                                    v = g,
                                    y = !1,
                                    b = r => {
                                        Object.defineProperty(r, "signal", {
                                            enumerable: !0,
                                            get: () => {
                                                var r, n;
                                                return null != (r = e.signal) && r.aborted ? y = !0 : null == (n = e.signal) || n.addEventListener("abort", () => {
                                                    y = !0
                                                }), e.signal
                                            }
                                        })
                                    },
                                    w = e.options.queryFn || (() => Promise.reject("Missing queryFn for queryKey '" + e.options.queryHash + "'")),
                                    x = (e, r, n, i) => (v = i ? [r, ...v] : [...v, r], i ? [n, ...e] : [...e, n]),
                                    E = (r, n, i, o) => {
                                        if (y) return Promise.reject("Cancelled");
                                        if (void 0 === i && !n && r.length) return Promise.resolve(r);
                                        let a = {
                                            queryKey: e.queryKey,
                                            pageParam: i,
                                            meta: e.options.meta
                                        };
                                        b(a);
                                        let s = w(a),
                                            l = Promise.resolve(s).then(e => x(r, i, e, o));
                                        return l
                                    };
                                if (m.length) {
                                    if (f) {
                                        let C = void 0 !== h,
                                            A = C ? h : q(e.options, m);
                                        u = E(m, C, A)
                                    } else if (p) {
                                        let k = void 0 !== h,
                                            S = k ? h : null == (l = e.options).getPreviousPageParam ? void 0 : l.getPreviousPageParam(m[0], m);
                                        u = E(m, k, S, !0)
                                    } else {
                                        v = [];
                                        let _ = void 0 === e.options.getNextPageParam,
                                            P = !c || !m[0] || c(m[0], 0, m);
                                        u = P ? E([], _, g[0]) : Promise.resolve(x([], g[0], m[0]));
                                        for (let j = 1; j < m.length; j++) u = u.then(r => {
                                            let n = !c || !m[j] || c(m[j], j, m);
                                            if (n) {
                                                let i = _ ? g[j] : q(e.options, r);
                                                return E(r, _, i)
                                            }
                                            return Promise.resolve(x(r, g[j], m[j]))
                                        })
                                    }
                                } else u = E([]);
                                let T = u.then(e => ({
                                    pages: e,
                                    pageParams: v
                                }));
                                return T
                            }
                        }
                    }, this.fetchQuery(i)
                }
                prefetchInfiniteQuery(e, r, n) {
                    return this.fetchInfiniteQuery(e, r, n).then(s).catch(s)
                }
                resumePausedMutations() {
                    return this.mutationCache.resumePausedMutations()
                }
                getQueryCache() {
                    return this.queryCache
                }
                getMutationCache() {
                    return this.mutationCache
                }
                getLogger() {
                    return this.logger
                }
                getDefaultOptions() {
                    return this.defaultOptions
                }
                setDefaultOptions(e) {
                    this.defaultOptions = e
                }
                setQueryDefaults(e, r) {
                    let n = this.queryDefaults.find(r => g(e) === g(r.queryKey));
                    n ? n.defaultOptions = r : this.queryDefaults.push({
                        queryKey: e,
                        defaultOptions: r
                    })
                }
                getQueryDefaults(e) {
                    if (!e) return;
                    let r = this.queryDefaults.find(r => v(e, r.queryKey));
                    return null == r ? void 0 : r.defaultOptions
                }
                setMutationDefaults(e, r) {
                    let n = this.mutationDefaults.find(r => g(e) === g(r.mutationKey));
                    n ? n.defaultOptions = r : this.mutationDefaults.push({
                        mutationKey: e,
                        defaultOptions: r
                    })
                }
                getMutationDefaults(e) {
                    if (!e) return;
                    let r = this.mutationDefaults.find(r => v(e, r.mutationKey));
                    return null == r ? void 0 : r.defaultOptions
                }
                defaultQueryOptions(e) {
                    if (null != e && e._defaulted) return e;
                    let r = { ...this.defaultOptions.queries,
                        ...this.getQueryDefaults(null == e ? void 0 : e.queryKey),
                        ...e,
                        _defaulted: !0
                    };
                    return !r.queryHash && r.queryKey && (r.queryHash = m(r.queryKey, r)), void 0 === r.refetchOnReconnect && (r.refetchOnReconnect = "always" !== r.networkMode), void 0 === r.useErrorBoundary && (r.useErrorBoundary = !!r.suspense), r
                }
                defaultMutationOptions(e) {
                    return null != e && e._defaulted ? e : { ...this.defaultOptions.mutations,
                        ...this.getMutationDefaults(null == e ? void 0 : e.mutationKey),
                        ...e,
                        _defaulted: !0
                    }
                }
                clear() {
                    this.queryCache.clear(), this.mutationCache.clear()
                }
            }

            function V(e) {
                return e.state.isPaused
            }

            function H(e) {
                return "success" === e.state.status
            }
            let G = ["added", "removed", "updated"];

            function K(e) {
                return G.includes(e)
            }
            async function Q({
                queryClient: e,
                persister: r,
                maxAge: n = 864e5,
                buster: i = "",
                hydrateOptions: o
            }) {
                try {
                    let a = await r.restoreClient();
                    if (a) {
                        if (a.timestamp) {
                            let s = Date.now() - a.timestamp > n,
                                l = a.buster !== i;
                            s || l ? r.removeClient() : function(e, r, n) {
                                if ("object" != typeof r || null === r) return;
                                let i = e.getMutationCache(),
                                    o = e.getQueryCache(),
                                    a = r.mutations || [],
                                    s = r.queries || [];
                                a.forEach(r => {
                                    var o;
                                    i.build(e, { ...null == n ? void 0 : null == (o = n.defaultOptions) ? void 0 : o.mutations,
                                        mutationKey: r.mutationKey
                                    }, r.state)
                                }), s.forEach(r => {
                                    var i;
                                    let a = o.get(r.queryHash),
                                        s = { ...r.state,
                                            fetchStatus: "idle"
                                        };
                                    if (a) {
                                        a.state.dataUpdatedAt < s.dataUpdatedAt && a.setState(s);
                                        return
                                    }
                                    o.build(e, { ...null == n ? void 0 : null == (i = n.defaultOptions) ? void 0 : i.queries,
                                        queryKey: r.queryKey,
                                        queryHash: r.queryHash
                                    }, s)
                                })
                            }(e, a.clientState, o)
                        } else r.removeClient()
                    }
                } catch (u) {
                    r.removeClient()
                }
            }
            async function J({
                queryClient: e,
                persister: r,
                buster: n = "",
                dehydrateOptions: i
            }) {
                let o = {
                    buster: n,
                    timestamp: Date.now(),
                    clientState: function(e, r = {}) {
                        let n = [],
                            i = [];
                        if (!1 !== r.dehydrateMutations) {
                            let o = r.shouldDehydrateMutation || V;
                            e.getMutationCache().getAll().forEach(e => {
                                o(e) && n.push({
                                    mutationKey: e.options.mutationKey,
                                    state: e.state
                                })
                            })
                        }
                        if (!1 !== r.dehydrateQueries) {
                            let a = r.shouldDehydrateQuery || H;
                            e.getQueryCache().getAll().forEach(e => {
                                a(e) && i.push({
                                    state: e.state,
                                    queryKey: e.queryKey,
                                    queryHash: e.queryHash
                                })
                            })
                        }
                        return {
                            mutations: n,
                            queries: i
                        }
                    }(e, i)
                };
                await r.persistClient(o)
            }
            var Y = n(51613),
                X = n(67294);
            let Z = X.createContext(void 0),
                ee = X.createContext(!1);

            function et(e, r) {
                return e || (r && "undefined" != typeof window ? (window.ReactQueryClientContext || (window.ReactQueryClientContext = Z), window.ReactQueryClientContext) : Z)
            }
            let er = ({
                    context: e
                } = {}) => {
                    let r = X.useContext(et(e, X.useContext(ee)));
                    if (!r) throw Error("No QueryClient set, use QueryClientProvider to set one");
                    return r
                },
                en = ({
                    client: e,
                    children: r,
                    context: n,
                    contextSharing: i = !1
                }) => {
                    X.useEffect(() => (e.mount(), () => {
                        e.unmount()
                    }), [e]);
                    let o = et(n, i);
                    return X.createElement(ee.Provider, {
                        value: !n && i
                    }, X.createElement(o.Provider, {
                        value: e
                    }, r))
                },
                ei = X.createContext(!1),
                eo = () => X.useContext(ei);
            ei.Provider;
            let ea = X.createContext((i = !1, {
                    clearReset: () => {
                        i = !1
                    },
                    reset: () => {
                        i = !0
                    },
                    isReset: () => i
                })),
                es = () => X.useContext(ea);
            var el = n(61688);
            class eu extends P {
                constructor(e, r) {
                    super(), this.client = e, this.setOptions(r), this.bindMethods(), this.updateResult()
                }
                bindMethods() {
                    this.mutate = this.mutate.bind(this), this.reset = this.reset.bind(this)
                }
                setOptions(e) {
                    var r;
                    let n = this.options;
                    this.options = this.client.defaultMutationOptions(e), y(n, this.options) || this.client.getMutationCache().notify({
                        type: "observerOptionsUpdated",
                        mutation: this.currentMutation,
                        observer: this
                    }), null == (r = this.currentMutation) || r.setOptions(this.options)
                }
                onUnsubscribe() {
                    if (!this.hasListeners()) {
                        var e;
                        null == (e = this.currentMutation) || e.removeObserver(this)
                    }
                }
                onMutationUpdate(e) {
                    this.updateResult();
                    let r = {
                        listeners: !0
                    };
                    "success" === e.type ? r.onSuccess = !0 : "error" === e.type && (r.onError = !0), this.notify(r)
                }
                getCurrentResult() {
                    return this.currentResult
                }
                reset() {
                    this.currentMutation = void 0, this.updateResult(), this.notify({
                        listeners: !0
                    })
                }
                mutate(e, r) {
                    return this.mutateOptions = r, this.currentMutation && this.currentMutation.removeObserver(this), this.currentMutation = this.client.getMutationCache().build(this.client, { ...this.options,
                        variables: void 0 !== e ? e : this.options.variables
                    }), this.currentMutation.addObserver(this), this.currentMutation.execute()
                }
                updateResult() {
                    let e = this.currentMutation ? this.currentMutation.state : U(),
                        r = { ...e,
                            isLoading: "loading" === e.status,
                            isSuccess: "success" === e.status,
                            isError: "error" === e.status,
                            isIdle: "idle" === e.status,
                            mutate: this.mutate,
                            reset: this.reset
                        };
                    this.currentResult = r
                }
                notify(e) {
                    _.batch(() => {
                        if (this.mutateOptions && this.hasListeners()) {
                            var r, n, i, o, a, s, l, u;
                            e.onSuccess ? (null == (r = (n = this.mutateOptions).onSuccess) || r.call(n, this.currentResult.data, this.currentResult.variables, this.currentResult.context), null == (i = (o = this.mutateOptions).onSettled) || i.call(o, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context)) : e.onError && (null == (a = (s = this.mutateOptions).onError) || a.call(s, this.currentResult.error, this.currentResult.variables, this.currentResult.context), null == (l = (u = this.mutateOptions).onSettled) || l.call(u, void 0, this.currentResult.error, this.currentResult.variables, this.currentResult.context))
                        }
                        e.listeners && this.listeners.forEach(({
                            listener: e
                        }) => {
                            e(this.currentResult)
                        })
                    })
                }
            }
            let ec = el.useSyncExternalStore;

            function ed() {}
            class eh extends P {
                constructor(e, r) {
                    super(), this.client = e, this.options = r, this.trackedProps = new Set, this.selectError = null, this.bindMethods(), this.setOptions(r)
                }
                bindMethods() {
                    this.remove = this.remove.bind(this), this.refetch = this.refetch.bind(this)
                }
                onSubscribe() {
                    1 === this.listeners.size && (this.currentQuery.addObserver(this), ef(this.currentQuery, this.options) && this.executeFetch(), this.updateTimers())
                }
                onUnsubscribe() {
                    this.hasListeners() || this.destroy()
                }
                shouldFetchOnReconnect() {
                    return ep(this.currentQuery, this.options, this.options.refetchOnReconnect)
                }
                shouldFetchOnWindowFocus() {
                    return ep(this.currentQuery, this.options, this.options.refetchOnWindowFocus)
                }
                destroy() {
                    this.listeners = new Set, this.clearStaleTimeout(), this.clearRefetchInterval(), this.currentQuery.removeObserver(this)
                }
                setOptions(e, r) {
                    let n = this.options,
                        i = this.currentQuery;
                    if (this.options = this.client.defaultQueryOptions(e), y(n, this.options) || this.client.getQueryCache().notify({
                            type: "observerOptionsUpdated",
                            query: this.currentQuery,
                            observer: this
                        }), void 0 !== this.options.enabled && "boolean" != typeof this.options.enabled) throw Error("Expected enabled to be a boolean");
                    this.options.queryKey || (this.options.queryKey = n.queryKey), this.updateQuery();
                    let o = this.hasListeners();
                    o && em(this.currentQuery, i, this.options, n) && this.executeFetch(), this.updateResult(r), o && (this.currentQuery !== i || this.options.enabled !== n.enabled || this.options.staleTime !== n.staleTime) && this.updateStaleTimeout();
                    let a = this.computeRefetchInterval();
                    o && (this.currentQuery !== i || this.options.enabled !== n.enabled || a !== this.currentRefetchInterval) && this.updateRefetchInterval(a)
                }
                getOptimisticResult(e) {
                    let r = this.client.getQueryCache().build(this.client, e),
                        n = this.createResult(r, e);
                    return !e.keepPreviousData && (void 0 !== e.placeholderData ? n.isPlaceholderData : this.getCurrentResult() !== n) && (this.currentResult = n, this.currentResultOptions = this.options, this.currentResultState = this.currentQuery.state), n
                }
                getCurrentResult() {
                    return this.currentResult
                }
                trackResult(e) {
                    let r = {};
                    return Object.keys(e).forEach(n => {
                        Object.defineProperty(r, n, {
                            configurable: !1,
                            enumerable: !0,
                            get: () => (this.trackedProps.add(n), e[n])
                        })
                    }), r
                }
                getCurrentQuery() {
                    return this.currentQuery
                }
                remove() {
                    this.client.getQueryCache().remove(this.currentQuery)
                }
                refetch({
                    refetchPage: e,
                    ...r
                } = {}) {
                    return this.fetch({ ...r,
                        meta: {
                            refetchPage: e
                        }
                    })
                }
                fetchOptimistic(e) {
                    let r = this.client.defaultQueryOptions(e),
                        n = this.client.getQueryCache().build(this.client, r);
                    return n.isFetchingOptimistic = !0, n.fetch().then(() => this.createResult(n, r))
                }
                fetch(e) {
                    var r;
                    return this.executeFetch({ ...e,
                        cancelRefetch: null == (r = e.cancelRefetch) || r
                    }).then(() => (this.updateResult(), this.currentResult))
                }
                executeFetch(e) {
                    this.updateQuery();
                    let r = this.currentQuery.fetch(this.options, e);
                    return null != e && e.throwOnError || (r = r.catch(s)), r
                }
                updateStaleTimeout() {
                    if (this.clearStaleTimeout(), a || this.currentResult.isStale || !l(this.options.staleTime)) return;
                    let e = u(this.currentResult.dataUpdatedAt, this.options.staleTime);
                    this.staleTimeoutId = setTimeout(() => {
                        this.currentResult.isStale || this.updateResult()
                    }, e + 1)
                }
                computeRefetchInterval() {
                    var e;
                    return "function" == typeof this.options.refetchInterval ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : null != (e = this.options.refetchInterval) && e
                }
                updateRefetchInterval(e) {
                    this.clearRefetchInterval(), this.currentRefetchInterval = e, !a && !1 !== this.options.enabled && l(this.currentRefetchInterval) && 0 !== this.currentRefetchInterval && (this.refetchIntervalId = setInterval(() => {
                        (this.options.refetchIntervalInBackground || j.isFocused()) && this.executeFetch()
                    }, this.currentRefetchInterval))
                }
                updateTimers() {
                    this.updateStaleTimeout(), this.updateRefetchInterval(this.computeRefetchInterval())
                }
                clearStaleTimeout() {
                    this.staleTimeoutId && (clearTimeout(this.staleTimeoutId), this.staleTimeoutId = void 0)
                }
                clearRefetchInterval() {
                    this.refetchIntervalId && (clearInterval(this.refetchIntervalId), this.refetchIntervalId = void 0)
                }
                createResult(e, r) {
                    let n;
                    let i = this.currentQuery,
                        o = this.options,
                        a = this.currentResult,
                        s = this.currentResultState,
                        l = this.currentResultOptions,
                        u = e !== i,
                        c = u ? e.state : this.currentQueryInitialState,
                        d = u ? this.currentResult : this.previousQueryResult,
                        {
                            state: h
                        } = e,
                        {
                            dataUpdatedAt: f,
                            error: p,
                            errorUpdatedAt: m,
                            fetchStatus: g,
                            status: v
                        } = h,
                        y = !1,
                        b = !1;
                    if (r._optimisticResults) {
                        let w = this.hasListeners(),
                            x = !w && ef(e, r),
                            E = w && em(e, i, r, o);
                        (x || E) && (g = O(e.options.networkMode) ? "fetching" : "paused", f || (v = "loading")), "isRestoring" === r._optimisticResults && (g = "idle")
                    }
                    if (r.keepPreviousData && !h.dataUpdatedAt && null != d && d.isSuccess && "error" !== v) n = d.data, f = d.dataUpdatedAt, v = d.status, y = !0;
                    else if (r.select && void 0 !== h.data) {
                        if (a && h.data === (null == s ? void 0 : s.data) && r.select === this.selectFn) n = this.selectResult;
                        else try {
                            this.selectFn = r.select, n = r.select(h.data), n = k(null == a ? void 0 : a.data, n, r), this.selectResult = n, this.selectError = null
                        } catch (C) {
                            this.selectError = C
                        }
                    } else n = h.data;
                    if (void 0 !== r.placeholderData && void 0 === n && "loading" === v) {
                        let A;
                        if (null != a && a.isPlaceholderData && r.placeholderData === (null == l ? void 0 : l.placeholderData)) A = a.data;
                        else if (A = "function" == typeof r.placeholderData ? r.placeholderData() : r.placeholderData, r.select && void 0 !== A) try {
                            A = r.select(A), this.selectError = null
                        } catch (S) {
                            this.selectError = S
                        }
                        void 0 !== A && (v = "success", n = k(null == a ? void 0 : a.data, A, r), b = !0)
                    }
                    this.selectError && (p = this.selectError, n = this.selectResult, m = Date.now(), v = "error");
                    let _ = "fetching" === g,
                        P = "loading" === v,
                        j = "error" === v,
                        T = {
                            status: v,
                            fetchStatus: g,
                            isLoading: P,
                            isSuccess: "success" === v,
                            isError: j,
                            isInitialLoading: P && _,
                            data: n,
                            dataUpdatedAt: f,
                            error: p,
                            errorUpdatedAt: m,
                            failureCount: h.fetchFailureCount,
                            failureReason: h.fetchFailureReason,
                            errorUpdateCount: h.errorUpdateCount,
                            isFetched: h.dataUpdateCount > 0 || h.errorUpdateCount > 0,
                            isFetchedAfterMount: h.dataUpdateCount > c.dataUpdateCount || h.errorUpdateCount > c.errorUpdateCount,
                            isFetching: _,
                            isRefetching: _ && !P,
                            isLoadingError: j && 0 === h.dataUpdatedAt,
                            isPaused: "paused" === g,
                            isPlaceholderData: b,
                            isPreviousData: y,
                            isRefetchError: j && 0 !== h.dataUpdatedAt,
                            isStale: eg(e, r),
                            refetch: this.refetch,
                            remove: this.remove
                        };
                    return T
                }
                updateResult(e) {
                    let r = this.currentResult,
                        n = this.createResult(this.currentQuery, this.options);
                    if (this.currentResultState = this.currentQuery.state, this.currentResultOptions = this.options, y(n, r)) return;
                    this.currentResult = n;
                    let i = {
                        cache: !0
                    };
                    (null == e ? void 0 : e.listeners) !== !1 && (() => {
                        if (!r) return !0;
                        let {
                            notifyOnChangeProps: e
                        } = this.options, n = "function" == typeof e ? e() : e;
                        if ("all" === n || !n && !this.trackedProps.size) return !0;
                        let i = new Set(null != n ? n : this.trackedProps);
                        return this.options.useErrorBoundary && i.add("error"), Object.keys(this.currentResult).some(e => {
                            let n = this.currentResult[e] !== r[e];
                            return n && i.has(e)
                        })
                    })() && (i.listeners = !0), this.notify({ ...i,
                        ...e
                    })
                }
                updateQuery() {
                    let e = this.client.getQueryCache().build(this.client, this.options);
                    if (e === this.currentQuery) return;
                    let r = this.currentQuery;
                    this.currentQuery = e, this.currentQueryInitialState = e.state, this.previousQueryResult = this.currentResult, this.hasListeners() && (null == r || r.removeObserver(this), e.addObserver(this))
                }
                onQueryUpdate(e) {
                    let r = {};
                    "success" === e.type ? r.onSuccess = !e.manual : "error" !== e.type || I(e.error) || (r.onError = !0), this.updateResult(r), this.hasListeners() && this.updateTimers()
                }
                notify(e) {
                    _.batch(() => {
                        var r, n, i, o, a, s, l, u;
                        e.onSuccess ? (null == (r = (n = this.options).onSuccess) || r.call(n, this.currentResult.data), null == (i = (o = this.options).onSettled) || i.call(o, this.currentResult.data, null)) : e.onError && (null == (a = (s = this.options).onError) || a.call(s, this.currentResult.error), null == (l = (u = this.options).onSettled) || l.call(u, void 0, this.currentResult.error)), e.listeners && this.listeners.forEach(({
                            listener: e
                        }) => {
                            e(this.currentResult)
                        }), e.cache && this.client.getQueryCache().notify({
                            query: this.currentQuery,
                            type: "observerResultsUpdated"
                        })
                    })
                }
            }

            function ef(e, r) {
                return !1 !== r.enabled && !e.state.dataUpdatedAt && !("error" === e.state.status && !1 === r.retryOnMount) || e.state.dataUpdatedAt > 0 && ep(e, r, r.refetchOnMount)
            }

            function ep(e, r, n) {
                if (!1 !== r.enabled) {
                    let i = "function" == typeof n ? n(e) : n;
                    return "always" === i || !1 !== i && eg(e, r)
                }
                return !1
            }

            function em(e, r, n, i) {
                return !1 !== n.enabled && (e !== r || !1 === i.enabled) && (!n.suspense || "error" !== e.state.status) && eg(e, n)
            }

            function eg(e, r) {
                return e.isStaleByTime(r.staleTime)
            }
            var ev = n(52798);

            function ey({
                queryClient: e = new W({
                    defaultOptions: {
                        queries: {
                            cacheTime: 864e5,
                            networkMode: "offlineFirst",
                            refetchOnWindowFocus: !1,
                            retry: 0
                        },
                        mutations: {
                            networkMode: "offlineFirst"
                        }
                    }
                }),
                storage: r = (0, Y.o6)({
                    storage: "undefined" != typeof window && window.localStorage ? window.localStorage : Y.wp
                }),
                persister: n = "undefined" != typeof window ? function({
                    storage: e,
                    key: r = "REACT_QUERY_OFFLINE_CACHE",
                    throttleTime: n = 1e3,
                    serialize: i = JSON.stringify,
                    deserialize: a = JSON.parse,
                    retry: s
                }) {
                    if (e) {
                        let l = n => {
                            try {
                                e.setItem(r, i(n));
                                return
                            } catch (o) {
                                return o
                            }
                        };
                        return {
                            persistClient: function(e, r = 100) {
                                let n = null;
                                return function(...i) {
                                    null === n && (n = setTimeout(() => {
                                        e(...i), n = null
                                    }, r))
                                }
                            }(e => {
                                let r = e,
                                    n = l(r),
                                    i = 0;
                                for (; n && r;) i++, (r = null == s ? void 0 : s({
                                    persistedClient: r,
                                    error: n,
                                    errorCount: i
                                })) && (n = l(r))
                            }, n),
                            restoreClient: () => {
                                let n = e.getItem(r);
                                if (n) return a(n)
                            },
                            removeClient: () => {
                                e.removeItem(r)
                            }
                        }
                    }
                    return {
                        persistClient: o,
                        restoreClient: () => void 0,
                        removeClient: o
                    }
                }({
                    key: "cache",
                    storage: r,
                    serialize: e => e,
                    deserialize: e => e
                }) : void 0,
                ...i
            }) {
                let a = (0, Y.eI)({ ...i,
                    storage: r
                });
                return n && function(e) {
                    let r;
                    Q(e).then(() => {
                        (function(e) {
                            let r = e.queryClient.getQueryCache().subscribe(r => {
                                    K(r.type) && J(e)
                                }),
                                n = e.queryClient.getMutationCache().subscribe(r => {
                                    K(r.type) && J(e)
                                });
                            () => {
                                r(), n()
                            }
                        })(e)
                    })
                }({
                    queryClient: e,
                    persister: n,
                    dehydrateOptions: {
                        shouldDehydrateQuery: e => 0 !== e.cacheTime && !1 !== e.queryKey[0].persist
                    }
                }), Object.assign(a, {
                    queryClient: e
                })
            }
            var eb = X.createContext(void 0),
                ew = X.createContext(void 0);

            function ex({
                children: e,
                client: r
            }) {
                return X.createElement(eb.Provider, {
                    children: X.createElement(en, {
                        children: e,
                        client: r.queryClient,
                        context: ew
                    }),
                    value: r
                })
            }

            function eE() {
                let e = X.useContext(eb);
                if (!e) throw Error("`useClient` must be used within `WagmiConfig`.\n\nRead more: https://wagmi.sh/react/WagmiConfig");
                return e
            }
            var eC = el.useSyncExternalStore;

            function eA(e, r, n) {
                let i = d(e, r, n);
                return function(e, r, n) {
                    var i, o;
                    let a = d(e, void 0, void 0),
                        s = er({
                            context: a.context
                        }),
                        [l] = X.useState(() => new eu(s, a));
                    X.useEffect(() => {
                        l.setOptions(a)
                    }, [l, a]);
                    let u = ec(X.useCallback(e => l.subscribe(_.batchCalls(e)), [l]), () => l.getCurrentResult(), () => l.getCurrentResult()),
                        c = X.useCallback((e, r) => {
                            l.mutate(e, r).catch(ed)
                        }, [l]);
                    if (u.error && (i = l.options.useErrorBoundary, o = [u.error], "function" == typeof i ? i(...o) : !!i)) throw u.error;
                    return { ...u,
                        mutate: c,
                        mutateAsync: u.mutate
                    }
                }({
                    context: ew,
                    ...i
                })
            }

            function ek(e, r, n) {
                let i = Array.isArray(e) ? "function" == typeof r ? { ...n,
                        queryKey: e,
                        queryFn: r
                    } : { ...r,
                        queryKey: e
                    } : e,
                    o = function(e, r) {
                        var n, i;
                        let o = er({
                                context: e.context
                            }),
                            a = eo(),
                            s = es(),
                            l = o.defaultQueryOptions(e);
                        l._optimisticResults = a ? "isRestoring" : "optimistic", l.onError && (l.onError = _.batchCalls(l.onError)), l.onSuccess && (l.onSuccess = _.batchCalls(l.onSuccess)), l.onSettled && (l.onSettled = _.batchCalls(l.onSettled)), l.suspense && "number" != typeof l.staleTime && (l.staleTime = 1e3), (l.suspense || l.useErrorBoundary) && !s.isReset() && (l.retryOnMount = !1);
                        let [u] = X.useState(() => new r(o, l)), c = u.getOptimisticResult(l);
                        if (eC(X.useCallback(e => a ? () => void 0 : u.subscribe(_.batchCalls(e)), [u, a]), () => u.getCurrentResult(), () => u.getCurrentResult()), X.useEffect(() => {
                                s.clearReset()
                            }, [s]), X.useEffect(() => {
                                u.setOptions(l, {
                                    listeners: !1
                                })
                            }, [l, u]), l.suspense && c.isLoading && c.isFetching && !a) throw u.fetchOptimistic(l).then(({
                            data: e
                        }) => {
                            l.onSuccess ? .(e), l.onSettled ? .(e, null)
                        }).catch(e => {
                            s.clearReset(), l.onError ? .(e), l.onSettled ? .(void 0, e)
                        });
                        if (c.isError && !s.isReset() && !c.isFetching && (n = l.useErrorBoundary, i = [c.error, u.getCurrentQuery()], "function" == typeof n ? n(...i) : !!n)) throw c.error;
                        let d = "loading" === c.status && "idle" === c.fetchStatus ? "idle" : c.status,
                            h = "loading" === d && "fetching" === c.fetchStatus;
                        return { ...c,
                            defaultedOptions: l,
                            isIdle: "idle" === d,
                            isLoading: h,
                            observer: u,
                            status: d
                        }
                    }({
                        context: ew,
                        ...i
                    }, eh),
                    a = {
                        data: o.data,
                        error: o.error,
                        fetchStatus: o.fetchStatus,
                        isError: o.isError,
                        isFetched: o.isFetched,
                        isFetchedAfterMount: o.isFetchedAfterMount,
                        isFetching: o.isFetching,
                        isIdle: o.isIdle,
                        isLoading: o.isLoading,
                        isRefetching: o.isRefetching,
                        isSuccess: o.isSuccess,
                        refetch: o.refetch,
                        status: o.status,
                        internal: {
                            dataUpdatedAt: o.dataUpdatedAt,
                            errorUpdatedAt: o.errorUpdatedAt,
                            failureCount: o.failureCount,
                            isFetchedAfterMount: o.isFetchedAfterMount,
                            isLoadingError: o.isLoadingError,
                            isPaused: o.isPaused,
                            isPlaceholderData: o.isPlaceholderData,
                            isPreviousData: o.isPreviousData,
                            isRefetchError: o.isRefetchError,
                            isStale: o.isStale,
                            remove: o.remove
                        }
                    };
                return o.defaultedOptions.notifyOnChangeProps ? a : function(e, r) {
                    let n = {};
                    return Object.keys(e).forEach(i => {
                        Object.defineProperty(n, i, {
                            configurable: !1,
                            enumerable: !0,
                            get: () => (r.trackedProps.add(i), e[i])
                        })
                    }), n
                }(a, o.observer)
            }
            var eS = () => er({
                context: ew
            });

            function e_({
                chainId: e
            } = {}) {
                return (0, ev.useSyncExternalStoreWithSelector)(r => (0, Y.b0)({
                    chainId: e
                }, r), () => (0, Y.VH)({
                    chainId: e
                }), () => (0, Y.VH)({
                    chainId: e
                }), e => e, (e, r) => e.network.chainId === r.network.chainId)
            }

            function eP({
                chainId: e
            } = {}) {
                let r = e_({
                    chainId: e
                });
                return r.network.chainId
            }

            function ej({
                chainId: e,
                scopeKey: r
            }) {
                return [{
                    entity: "blockNumber",
                    chainId: e,
                    scopeKey: r
                }]
            }

            function eT({
                queryKey: [{
                    chainId: e
                }]
            }) {
                return (0, Y.RQ)({
                    chainId: e
                })
            }
            var eR = e => "object" == typeof e && !Array.isArray(e);

            function eB(e, r, n = r, i = Y.vZ) {
                let o = X.useRef([]),
                    a = (0, ev.useSyncExternalStoreWithSelector)(e, r, n, e => e, (e, r) => {
                        if (eR(e) && eR(r) && o.current.length) {
                            for (let n of o.current) {
                                let a = i(e[n], r[n]);
                                if (!a) return !1
                            }
                            return !0
                        }
                        return i(e, r)
                    });
                if (eR(a)) {
                    let s = { ...a
                    };
                    return Object.defineProperties(s, Object.entries(s).reduce((e, [r, n]) => ({ ...e,
                        [r]: {
                            configurable: !1,
                            enumerable: !0,
                            get: () => (o.current.includes(r) || o.current.push(r), n)
                        }
                    }), {})), s
                }
                return a
            }

            function eO({
                onConnect: e,
                onDisconnect: r
            } = {}) {
                let n = eB(Y.uH, Y.D0),
                    i = X.useRef(),
                    o = i.current ? ? {};
                return e && ("connected" !== o.status || void 0 === o.status) && "connected" === n.status && e({
                    address: n.address,
                    connector: n.connector,
                    isReconnected: "reconnecting" === o.status || void 0 === o.status
                }), r && "connected" === o.status && "disconnected" === n.status && r(), i.current = n, n
            }

            function eM({
                queryKey: [{
                    address: e,
                    chainId: r,
                    formatUnits: n,
                    token: i
                }]
            }) {
                if (!e) throw Error("address is required");
                return (0, Y.EG)({
                    address: e,
                    chainId: r,
                    formatUnits: n,
                    token: i
                })
            }

            function eI({
                address: e,
                cacheTime: r,
                chainId: n,
                enabled: i = !0,
                formatUnits: o,
                scopeKey: a,
                staleTime: s,
                suspense: l,
                token: u,
                watch: c,
                onError: d,
                onSettled: h,
                onSuccess: f
            } = {}) {
                let p = eP({
                        chainId: n
                    }),
                    m = X.useMemo(() => (function({
                        address: e,
                        chainId: r,
                        formatUnits: n,
                        scopeKey: i,
                        token: o
                    }) {
                        return [{
                            entity: "balance",
                            address: e,
                            chainId: r,
                            formatUnits: n,
                            scopeKey: i,
                            token: o
                        }]
                    })({
                        address: e,
                        chainId: p,
                        formatUnits: o,
                        scopeKey: a,
                        token: u
                    }), [e, p, o, a, u]),
                    g = ek(m, eM, {
                        cacheTime: r,
                        enabled: Boolean(i && e),
                        staleTime: s,
                        suspense: l,
                        onError: d,
                        onSettled: h,
                        onSuccess: f
                    });
                return ! function({
                    chainId: e,
                    enabled: r,
                    queryKey: n
                }) {
                    let i = eS();
                    ! function({
                        cacheTime: e = 0,
                        chainId: r,
                        enabled: n = !0,
                        scopeKey: i,
                        staleTime: o,
                        suspense: a,
                        watch: s = !1,
                        onBlock: l,
                        onError: u,
                        onSettled: c,
                        onSuccess: d
                    } = {}) {
                        let h = eP({
                                chainId: r
                            }),
                            f = e_({
                                chainId: h
                            }),
                            p = function({
                                chainId: e
                            } = {}) {
                                return (0, ev.useSyncExternalStoreWithSelector)(r => (0, Y.Fx)({
                                    chainId: e
                                }, r), () => (0, Y.lG)({
                                    chainId: e
                                }), () => (0, Y.lG)({
                                    chainId: e
                                }), e => e, (e, r) => e ? .network.chainId === r ? .network.chainId)
                            }({
                                chainId: h
                            }),
                            m = eS();
                        X.useEffect(() => {
                            if (!n || !s && !l) return;
                            let e = (0, Y.Ds)(e => {
                                    s && m.setQueryData(ej({
                                        chainId: h,
                                        scopeKey: i
                                    }), e), l && l(e)
                                }, 1),
                                r = p ? ? f;
                            return r.on("block", e), () => {
                                r.off("block", e)
                            }
                        }, [h, i, l, f, m, s, p, n]), ek(ej({
                            scopeKey: i,
                            chainId: h
                        }), eT, {
                            cacheTime: e,
                            enabled: n,
                            staleTime: o,
                            suspense: a,
                            onError: u,
                            onSettled: c,
                            onSuccess: d
                        })
                    }({
                        chainId: e,
                        enabled: r,
                        onBlock: r ? () => i.invalidateQueries(n) : void 0,
                        scopeKey: r ? void 0 : "idle"
                    })
                }({
                    chainId: p,
                    enabled: Boolean(i && c && e),
                    queryKey: m
                }), g
            }
            var eN = e => [{
                    entity: "connect",
                    ...e
                }],
                eF = e => {
                    let {
                        connector: r,
                        chainId: n
                    } = e;
                    if (!r) throw Error("connector is required");
                    return (0, Y.$j)({
                        connector: r,
                        chainId: n
                    })
                };

            function eL({
                chainId: e,
                connector: r,
                onError: n,
                onMutate: i,
                onSettled: o,
                onSuccess: a
            } = {}) {
                let s = eE(),
                    {
                        data: l,
                        error: u,
                        isError: c,
                        isIdle: d,
                        isLoading: h,
                        isSuccess: f,
                        mutate: p,
                        mutateAsync: m,
                        reset: g,
                        status: v,
                        variables: y
                    } = eA(eN({
                        connector: r,
                        chainId: e
                    }), eF, {
                        onError: n,
                        onMutate: i,
                        onSettled: o,
                        onSuccess: a
                    }),
                    b = X.useCallback(n => p({
                        chainId: n ? .chainId ? ? e,
                        connector: n ? .connector ? ? r
                    }), [e, r, p]),
                    w = X.useCallback(n => m({
                        chainId: n ? .chainId ? ? e,
                        connector: n ? .connector ? ? r
                    }), [e, r, m]);
                return {
                    connect: b,
                    connectAsync: w,
                    connectors: s.connectors,
                    data: l,
                    error: u,
                    isError: c,
                    isIdle: d,
                    isLoading: h,
                    isSuccess: f,
                    pendingConnector: y ? .connector,
                    reset: g,
                    status: v,
                    variables: y
                }
            }
            var eD = [{
                    entity: "disconnect"
                }],
                ez = () => (0, Y.zP)();

            function eU({
                onError: e,
                onMutate: r,
                onSettled: n,
                onSuccess: i
            } = {}) {
                let {
                    error: o,
                    isError: a,
                    isIdle: s,
                    isLoading: l,
                    isSuccess: u,
                    mutate: c,
                    mutateAsync: d,
                    reset: h,
                    status: f
                } = eA(eD, ez, { ...e ? {
                        onError(r, n, i) {
                            e(r, i)
                        }
                    } : {},
                    onMutate: r,
                    ...n ? {
                        onSettled(e, r, i, o) {
                            n(r, o)
                        }
                    } : {},
                    ...i ? {
                        onSuccess(e, r, n) {
                            i(n)
                        }
                    } : {}
                });
                return {
                    disconnect: c,
                    disconnectAsync: d,
                    error: o,
                    isError: a,
                    isIdle: s,
                    isLoading: l,
                    isSuccess: u,
                    reset: h,
                    status: f
                }
            }

            function e$() {
                return eB(Y.QC, Y.Hy)
            }

            function eq({
                chainId: e
            }) {
                return [{
                    entity: "signer",
                    chainId: e,
                    persist: !1
                }]
            }

            function eW({
                queryKey: [{
                    chainId: e
                }]
            }) {
                return (0, Y.DG)({
                    chainId: e
                })
            }

            function eV({
                chainId: e,
                suspense: r,
                onError: n,
                onSettled: i,
                onSuccess: o
            } = {}) {
                let a = eP({
                        chainId: e
                    }),
                    s = ek(eq({
                        chainId: a
                    }), eW, {
                        cacheTime: 0,
                        staleTime: 1 / 0,
                        suspense: r,
                        onError: n,
                        onSettled: i,
                        onSuccess: o
                    }),
                    l = eS();
                return X.useEffect(() => {
                    let e = (0, Y.rn)({
                        chainId: a
                    }, e => l.setQueryData(eq({
                        chainId: a
                    }), e));
                    return e
                }, [l, a]), s
            }
            var eH = e => [{
                    entity: "signMessage",
                    ...e
                }],
                eG = e => {
                    let {
                        message: r
                    } = e;
                    if (!r) throw Error("message is required");
                    return (0, Y.l)({
                        message: r
                    })
                };

            function eK({
                message: e,
                onError: r,
                onMutate: n,
                onSettled: i,
                onSuccess: o
            } = {}) {
                let {
                    data: a,
                    error: s,
                    isError: l,
                    isIdle: u,
                    isLoading: c,
                    isSuccess: d,
                    mutate: h,
                    mutateAsync: f,
                    reset: p,
                    status: m,
                    variables: g
                } = eA(eH({
                    message: e
                }), eG, {
                    onError: r,
                    onMutate: n,
                    onSettled: i,
                    onSuccess: o
                }), v = X.useCallback(r => h(r || {
                    message: e
                }), [e, h]), y = X.useCallback(r => f(r || {
                    message: e
                }), [e, f]);
                return {
                    data: a,
                    error: s,
                    isError: l,
                    isIdle: u,
                    isLoading: c,
                    isSuccess: d,
                    reset: p,
                    signMessage: v,
                    signMessageAsync: y,
                    status: m,
                    variables: g
                }
            }
            var eQ = e => [{
                    entity: "switchNetwork",
                    ...e
                }],
                eJ = e => {
                    let {
                        chainId: r
                    } = e;
                    if (!r) throw Error("chainId is required");
                    return (0, Y.If)({
                        chainId: r
                    })
                };

            function eY({
                chainId: e,
                throwForSwitchChainNotSupported: r,
                onError: n,
                onMutate: i,
                onSettled: o,
                onSuccess: a
            } = {}) {
                let s, l;
                let u = eE(),
                    c = function() {
                        let [, e] = X.useReducer(e => e + 1, 0);
                        return e
                    }(),
                    {
                        data: d,
                        error: h,
                        isError: f,
                        isIdle: p,
                        isLoading: m,
                        isSuccess: g,
                        mutate: v,
                        mutateAsync: y,
                        reset: b,
                        status: w,
                        variables: x
                    } = eA(eQ({
                        chainId: e
                    }), eJ, {
                        onError: n,
                        onMutate: i,
                        onSettled: o,
                        onSuccess: a
                    }),
                    E = X.useCallback(r => v({
                        chainId: r ? ? e
                    }), [e, v]),
                    C = X.useCallback(r => y({
                        chainId: r ? ? e
                    }), [e, y]);
                X.useEffect(() => {
                    let e = u.subscribe(({
                        chains: e,
                        connector: r
                    }) => ({
                        chains: e,
                        connector: r
                    }), c);
                    return e
                }, [u, c]);
                let A = !!u.connector ? .switchChain;
                return (r || A) && (s = E, l = C), {
                    chains: u.chains ? ? [],
                    data: d,
                    error: h,
                    isError: f,
                    isIdle: p,
                    isLoading: m,
                    isSuccess: g,
                    pendingChainId: x ? .chainId,
                    reset: b,
                    status: w,
                    switchNetwork: s,
                    switchNetworkAsync: l,
                    variables: x
                }
            }

            function eX({
                queryKey: [{
                    address: e,
                    chainId: r
                }]
            }) {
                if (!e) throw Error("address is required");
                return (0, Y.w6)({
                    address: e,
                    chainId: r
                })
            }

            function eZ({
                address: e,
                cacheTime: r,
                chainId: n,
                enabled: i = !0,
                scopeKey: o,
                staleTime: a = 864e5,
                suspense: s,
                onError: l,
                onSettled: u,
                onSuccess: c
            } = {}) {
                let d = eP({
                    chainId: n
                });
                return ek(function({
                    address: e,
                    chainId: r,
                    scopeKey: n
                }) {
                    return [{
                        entity: "ensAvatar",
                        address: e,
                        chainId: r,
                        scopeKey: n
                    }]
                }({
                    address: e,
                    chainId: d,
                    scopeKey: o
                }), eX, {
                    cacheTime: r,
                    enabled: Boolean(i && e && d),
                    staleTime: a,
                    suspense: s,
                    onError: l,
                    onSettled: u,
                    onSuccess: c
                })
            }

            function e0({
                queryKey: [{
                    address: e,
                    chainId: r
                }]
            }) {
                if (!e) throw Error("address is required");
                return (0, Y.Lk)({
                    address: e,
                    chainId: r
                })
            }

            function e1({
                address: e,
                cacheTime: r,
                chainId: n,
                enabled: i = !0,
                scopeKey: o,
                staleTime: a = 864e5,
                suspense: s,
                onError: l,
                onSettled: u,
                onSuccess: c
            } = {}) {
                let d = eP({
                    chainId: n
                });
                return ek(function({
                    address: e,
                    chainId: r,
                    scopeKey: n
                }) {
                    return [{
                        entity: "ensName",
                        address: e,
                        chainId: r,
                        scopeKey: n
                    }]
                }({
                    address: e,
                    chainId: d,
                    scopeKey: o
                }), e0, {
                    cacheTime: r,
                    enabled: Boolean(i && e && d),
                    staleTime: a,
                    suspense: s,
                    onError: l,
                    onSettled: u,
                    onSuccess: c
                })
            }
        }
    },
    function(e) {
        var r = function(r) {
            return e(e.s = r)
        };
        e.O(0, [774, 179], function() {
            return r(6840), r(80880)
        }), _N_E = e.O()
    }
]);